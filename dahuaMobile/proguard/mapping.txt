android.annotation.SuppressLint -> android.annotation.SuppressLint:
    java.lang.String[] value() -> value
android.annotation.TargetApi -> android.annotation.TargetApi:
    int value() -> value
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT -> CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
    int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION -> CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
    int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int CAPABILITY_CAN_FILTER_KEY_EVENTS -> CAPABILITY_CAN_FILTER_KEY_EVENTS
    int FEEDBACK_BRAILLE -> FEEDBACK_BRAILLE
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    int DEFAULT -> DEFAULT
    int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS -> FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
    int FLAG_REQUEST_TOUCH_EXPLORATION_MODE -> FLAG_REQUEST_TOUCH_EXPLORATION_MODE
    int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int FLAG_REPORT_VIEW_IDS -> FLAG_REPORT_VIEW_IDS
    int FLAG_REQUEST_FILTER_KEY_EVENTS -> FLAG_REQUEST_FILTER_KEY_EVENTS
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    java.lang.String capabilityToString(int) -> capabilityToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> IMPL
    float TOGGLE_DRAWABLE_OFFSET -> TOGGLE_DRAWABLE_OFFSET
    int ID_HOME -> ID_HOME
    android.app.Activity mActivity -> mActivity
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> mActivityImpl
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    android.graphics.drawable.Drawable mThemeImage -> mThemeImage
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    int mDrawerImageResource -> mDrawerImageResource
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    java.lang.Object mSetIndicatorInfo -> mSetIndicatorInfo
    void syncState() -> syncState
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    android.app.Activity access$400(android.support.v4.app.ActionBarDrawerToggle) -> access$400
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.ActionBarDrawerToggle$1:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    boolean mHasMirroring -> mHasMirroring
    android.graphics.Rect mTmpRect -> mTmpRect
    float mPosition -> mPosition
    float mOffset -> mOffset
    android.support.v4.app.ActionBarDrawerToggle this$0 -> this$0
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
    void setOffset(float) -> setOffset
    void draw(android.graphics.Canvas) -> draw
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    android.widget.ImageView upIndicatorView -> upIndicatorView
android.support.v4.app.ActionBarDrawerToggleJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggleJellybeanMR2:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    android.support.v4.util.SimpleArrayMap children -> children
    java.util.ArrayList fragments -> fragments
    android.support.v4.util.SimpleArrayMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void ensureHierarchy(android.content.Context) -> ensureHierarchy
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> access$000
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.util.ArrayList mActions -> mActions
    android.app.Notification mNotification -> mNotification
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread -> android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatGingerbread -> android.support.v4.app.NotificationCompatGingerbread:
    android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> add
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    android.app.Notification$Builder b -> b
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.app.Notification build() -> build
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.app.Watson -> android.support.v4.app.Watson:
    java.lang.String TAG -> TAG
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
android.support.v4.app.Watson$OnCreateOptionsMenuListener -> android.support.v4.app.Watson$OnCreateOptionsMenuListener:
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
android.support.v4.app.Watson$OnOptionsItemSelectedListener -> android.support.v4.app.Watson$OnOptionsItemSelectedListener:
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
android.support.v4.app.Watson$OnPrepareOptionsMenuListener -> android.support.v4.app.Watson$OnPrepareOptionsMenuListener:
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> executePendingTask
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.lang.Object result -> result
    boolean waiting -> waiting
    java.util.concurrent.CountDownLatch done -> done
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled() -> onCancelled
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> access$000
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    java.lang.String DIR_ANDROID -> DIR_ANDROID
    java.lang.String DIR_DATA -> DIR_DATA
    java.lang.String DIR_OBB -> DIR_OBB
    java.lang.String DIR_FILES -> DIR_FILES
    java.lang.String DIR_CACHE -> DIR_CACHE
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
android.support.v4.content.ContextCompatFroyo -> android.support.v4.content.ContextCompatFroyo:
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    java.io.File getExternalFilesDir(android.content.Context,java.lang.String) -> getExternalFilesDir
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    void startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    java.io.File getObbDir(android.content.Context) -> getObbDir
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatKitKat -> android.support.v4.content.ContextCompatKitKat:
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    android.net.Uri mUri -> mUri
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.database.Cursor mCursor -> mCursor
    android.database.Cursor loadInBackground() -> loadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> COLUMNS
    java.lang.String META_DATA_FILE_PROVIDER_PATHS -> META_DATA_FILE_PROVIDER_PATHS
    java.lang.String TAG_ROOT_PATH -> TAG_ROOT_PATH
    java.lang.String TAG_FILES_PATH -> TAG_FILES_PATH
    java.lang.String TAG_CACHE_PATH -> TAG_CACHE_PATH
    java.lang.String TAG_EXTERNAL -> TAG_EXTERNAL
    java.lang.String ATTR_NAME -> ATTR_NAME
    java.lang.String ATTR_PATH -> ATTR_PATH
    java.io.File DEVICE_ROOT -> DEVICE_ROOT
    java.util.HashMap sCache -> sCache
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> mStrategy
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    int modeToMode(java.lang.String) -> modeToMode
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.FileProvider$PathStrategy:
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$SimplePathStrategy:
    java.lang.String mAuthority -> mAuthority
    java.util.HashMap mRoots -> mRoots
    void addRoot(java.lang.String,java.io.File) -> addRoot
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> IMPL
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    boolean mProcessingChange -> mProcessingChange
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void commitContentChanged() -> commitContentChanged
    void rollbackContentChanged() -> rollbackContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> executePendingBroadcasts
    void access$000(android.support.v4.content.LocalBroadcastManager) -> access$000
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    boolean broadcasting -> broadcasting
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> access$200
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$300
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$400
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$500
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    java.lang.String EXTRA_WAKE_LOCK_ID -> EXTRA_WAKE_LOCK_ID
    android.util.SparseArray mActiveWakeLocks -> mActiveWakeLocks
    int mNextId -> mNextId
    android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
    boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.graphics.drawable.DrawableCompat:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> IMPL
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompatHoneycomb -> android.support.v4.graphics.drawable.DrawableCompatHoneycomb:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompatKitKat -> android.support.v4.graphics.drawable.DrawableCompatKitKat:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.hardware.display.DisplayManagerCompat -> android.support.v4.hardware.display.DisplayManagerCompat:
    java.util.WeakHashMap sInstances -> sInstances
    java.lang.String DISPLAY_CATEGORY_PRESENTATION -> DISPLAY_CATEGORY_PRESENTATION
    android.support.v4.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl -> android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl:
    java.lang.Object mDisplayManagerObj -> mDisplayManagerObj
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl -> android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl:
    android.view.WindowManager mWindowManager -> mWindowManager
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerJellybeanMr1 -> android.support.v4.hardware.display.DisplayManagerJellybeanMr1:
    java.lang.Object getDisplayManager(android.content.Context) -> getDisplayManager
    android.view.Display getDisplay(java.lang.Object,int) -> getDisplay
    android.view.Display[] getDisplays(java.lang.Object) -> getDisplays
    android.view.Display[] getDisplays(java.lang.Object,java.lang.String) -> getDisplays
android.support.v4.internal.view.SupportMenu -> android.support.v4.internal.view.SupportMenu:
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.internal.view.SupportMenuItem:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.internal.view.SupportSubMenu:
android.support.v4.media.TransportController -> android.support.v4.media.TransportController:
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
android.support.v4.media.TransportMediator -> android.support.v4.media.TransportMediator:
    android.content.Context mContext -> mContext
    android.support.v4.media.TransportPerformer mCallbacks -> mCallbacks
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mView -> mView
    java.lang.Object mDispatcherState -> mDispatcherState
    android.support.v4.media.TransportMediatorJellybeanMR2 mController -> mController
    java.util.ArrayList mListeners -> mListeners
    android.support.v4.media.TransportMediatorCallback mTransportKeyCallback -> mTransportKeyCallback
    int KEYCODE_MEDIA_PLAY -> KEYCODE_MEDIA_PLAY
    int KEYCODE_MEDIA_PAUSE -> KEYCODE_MEDIA_PAUSE
    int KEYCODE_MEDIA_RECORD -> KEYCODE_MEDIA_RECORD
    int FLAG_KEY_MEDIA_PREVIOUS -> FLAG_KEY_MEDIA_PREVIOUS
    int FLAG_KEY_MEDIA_REWIND -> FLAG_KEY_MEDIA_REWIND
    int FLAG_KEY_MEDIA_PLAY -> FLAG_KEY_MEDIA_PLAY
    int FLAG_KEY_MEDIA_PLAY_PAUSE -> FLAG_KEY_MEDIA_PLAY_PAUSE
    int FLAG_KEY_MEDIA_PAUSE -> FLAG_KEY_MEDIA_PAUSE
    int FLAG_KEY_MEDIA_STOP -> FLAG_KEY_MEDIA_STOP
    int FLAG_KEY_MEDIA_FAST_FORWARD -> FLAG_KEY_MEDIA_FAST_FORWARD
    int FLAG_KEY_MEDIA_NEXT -> FLAG_KEY_MEDIA_NEXT
    android.view.KeyEvent$Callback mKeyEventCallback -> mKeyEventCallback
    boolean isMediaKey(int) -> isMediaKey
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    android.support.v4.media.TransportStateListener[] getListeners() -> getListeners
    void reportPlayingChanged() -> reportPlayingChanged
    void reportTransportControlsChanged() -> reportTransportControlsChanged
    void pushControllerState() -> pushControllerState
    void refreshState() -> refreshState
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
    void destroy() -> destroy
android.support.v4.media.TransportMediator$1 -> android.support.v4.media.TransportMediator$1:
    android.support.v4.media.TransportMediator this$0 -> this$0
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediator$2 -> android.support.v4.media.TransportMediator$2:
    android.support.v4.media.TransportMediator this$0 -> this$0
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
android.support.v4.media.TransportMediatorCallback -> android.support.v4.media.TransportMediatorCallback:
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediatorJellybeanMR2 -> android.support.v4.media.TransportMediatorJellybeanMR2:
    android.content.Context mContext -> mContext
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mTargetView -> mTargetView
    android.support.v4.media.TransportMediatorCallback mTransportCallback -> mTransportCallback
    java.lang.String mReceiverAction -> mReceiverAction
    android.content.IntentFilter mReceiverFilter -> mReceiverFilter
    android.content.Intent mIntent -> mIntent
    android.view.ViewTreeObserver$OnWindowAttachListener mWindowAttachListener -> mWindowAttachListener
    android.view.ViewTreeObserver$OnWindowFocusChangeListener mWindowFocusListener -> mWindowFocusListener
    android.content.BroadcastReceiver mMediaButtonReceiver -> mMediaButtonReceiver
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusChangeListener -> mAudioFocusChangeListener
    android.app.PendingIntent mPendingIntent -> mPendingIntent
    android.media.RemoteControlClient mRemoteControl -> mRemoteControl
    boolean mFocused -> mFocused
    int mPlayState -> mPlayState
    boolean mAudioFocused -> mAudioFocused
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    void destroy() -> destroy
    void windowAttached() -> windowAttached
    void gainFocus() -> gainFocus
    void takeAudioFocus() -> takeAudioFocus
    void startPlaying() -> startPlaying
    long onGetPlaybackPosition() -> onGetPlaybackPosition
    void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
    void refreshState(boolean,long,int) -> refreshState
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    void dropAudioFocus() -> dropAudioFocus
    void loseFocus() -> loseFocus
    void windowDetached() -> windowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$1 -> android.support.v4.media.TransportMediatorJellybeanMR2$1:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowAttached() -> onWindowAttached
    void onWindowDetached() -> onWindowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$2 -> android.support.v4.media.TransportMediatorJellybeanMR2$2:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
android.support.v4.media.TransportMediatorJellybeanMR2$3 -> android.support.v4.media.TransportMediatorJellybeanMR2$3:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.media.TransportMediatorJellybeanMR2$4 -> android.support.v4.media.TransportMediatorJellybeanMR2$4:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportPerformer -> android.support.v4.media.TransportPerformer:
    int AUDIOFOCUS_GAIN -> AUDIOFOCUS_GAIN
    int AUDIOFOCUS_GAIN_TRANSIENT -> AUDIOFOCUS_GAIN_TRANSIENT
    int AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK -> AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK
    int AUDIOFOCUS_LOSS -> AUDIOFOCUS_LOSS
    int AUDIOFOCUS_LOSS_TRANSIENT -> AUDIOFOCUS_LOSS_TRANSIENT
    int AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK -> AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK
    void onStart() -> onStart
    void onPause() -> onPause
    void onStop() -> onStop
    long onGetDuration() -> onGetDuration
    long onGetCurrentPosition() -> onGetCurrentPosition
    void onSeekTo(long) -> onSeekTo
    boolean onIsPlaying() -> onIsPlaying
    int onGetBufferPercentage() -> onGetBufferPercentage
    int onGetTransportControlFlags() -> onGetTransportControlFlags
    boolean onMediaButtonDown(int,android.view.KeyEvent) -> onMediaButtonDown
    boolean onMediaButtonUp(int,android.view.KeyEvent) -> onMediaButtonUp
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportStateListener -> android.support.v4.media.TransportStateListener:
    void onPlayingChanged(android.support.v4.media.TransportController) -> onPlayingChanged
    void onTransportControlsChanged(android.support.v4.media.TransportController) -> onTransportControlsChanged
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> IMPL
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.TrafficStatsCompat$1:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> mThreadSocketTags
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> this$0
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> statsTag
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.EnvironmentCompat -> android.support.v4.os.EnvironmentCompat:
    java.lang.String TAG -> TAG
    java.lang.String MEDIA_UNKNOWN -> MEDIA_UNKNOWN
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.EnvironmentCompatKitKat -> android.support.v4.os.EnvironmentCompatKitKat:
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> instantiate
android.support.v4.print.PrintHelper -> android.support.v4.print.PrintHelper:
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    android.support.v4.print.PrintHelper$PrintHelperVersionImpl mImpl -> mImpl
    boolean systemSupportsPrint() -> systemSupportsPrint
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$1 -> android.support.v4.print.PrintHelper$1:
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl:
    android.support.v4.print.PrintHelperKitkat mPrintHelper -> mPrintHelper
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperStubImpl -> android.support.v4.print.PrintHelper$PrintHelperStubImpl:
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getColorMode() -> getColorMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getScaleMode() -> getScaleMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperVersionImpl -> android.support.v4.print.PrintHelper$PrintHelperVersionImpl:
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelperKitkat -> android.support.v4.print.PrintHelperKitkat:
    java.lang.String LOG_TAG -> LOG_TAG
    int MAX_PRINT_SIZE -> MAX_PRINT_SIZE
    android.content.Context mContext -> mContext
    android.graphics.BitmapFactory$Options mDecodeOptions -> mDecodeOptions
    java.lang.Object mLock -> mLock
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getColorMode() -> getColorMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    android.graphics.Matrix getMatrix(int,int,android.graphics.RectF,int) -> getMatrix
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
    android.graphics.Bitmap loadConstrainedBitmap(android.net.Uri,int) -> loadConstrainedBitmap
    android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options) -> loadBitmap
    android.graphics.Matrix access$000(android.support.v4.print.PrintHelperKitkat,int,int,android.graphics.RectF,int) -> access$000
    android.graphics.Bitmap access$200(android.support.v4.print.PrintHelperKitkat,android.net.Uri,int) -> access$200
    java.lang.Object access$300(android.support.v4.print.PrintHelperKitkat) -> access$300
android.support.v4.print.PrintHelperKitkat$1 -> android.support.v4.print.PrintHelperKitkat$1:
    android.print.PrintAttributes mAttributes -> mAttributes
    java.lang.String val$jobName -> val$jobName
    android.graphics.Bitmap val$bitmap -> val$bitmap
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
android.support.v4.print.PrintHelperKitkat$2 -> android.support.v4.print.PrintHelperKitkat$2:
    android.print.PrintAttributes mAttributes -> mAttributes
    android.os.AsyncTask loadBitmap -> loadBitmap
    android.graphics.Bitmap mBitmap -> mBitmap
    java.lang.String val$jobName -> val$jobName
    android.net.Uri val$imageFile -> val$imageFile
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void cancelLoad() -> cancelLoad
    void onFinish() -> onFinish
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
    void access$100(android.support.v4.print.PrintHelperKitkat$2) -> access$100
android.support.v4.print.PrintHelperKitkat$2$1 -> android.support.v4.print.PrintHelperKitkat$2$1:
    android.os.CancellationSignal val$cancellationSignal -> val$cancellationSignal
    android.print.PrintAttributes val$newPrintAttributes -> val$newPrintAttributes
    android.print.PrintAttributes val$oldPrintAttributes -> val$oldPrintAttributes
    android.print.PrintDocumentAdapter$LayoutResultCallback val$layoutResultCallback -> val$layoutResultCallback
    android.support.v4.print.PrintHelperKitkat$2 this$1 -> this$1
    void onPreExecute() -> onPreExecute
    android.graphics.Bitmap doInBackground(android.net.Uri[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onCancelled(android.graphics.Bitmap) -> onCancelled
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v4.print.PrintHelperKitkat$2$1$1 -> android.support.v4.print.PrintHelperKitkat$2$1$1:
    android.support.v4.print.PrintHelperKitkat$2$1 this$2 -> this$2
    void onCancel() -> onCancel
android.support.v4.text.BidiFormatter -> android.support.v4.text.BidiFormatter:
    android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC -> DEFAULT_TEXT_DIRECTION_HEURISTIC
    char LRE -> LRE
    char RLE -> RLE
    char PDF -> PDF
    char LRM -> LRM
    char RLM -> RLM
    java.lang.String LRM_STRING -> LRM_STRING
    java.lang.String RLM_STRING -> RLM_STRING
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    int FLAG_STEREO_RESET -> FLAG_STEREO_RESET
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    android.support.v4.text.BidiFormatter DEFAULT_LTR_INSTANCE -> DEFAULT_LTR_INSTANCE
    android.support.v4.text.BidiFormatter DEFAULT_RTL_INSTANCE -> DEFAULT_RTL_INSTANCE
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat -> mDefaultTextDirectionHeuristicCompat
    int DIR_LTR -> DIR_LTR
    int DIR_UNKNOWN -> DIR_UNKNOWN
    int DIR_RTL -> DIR_RTL
    android.support.v4.text.BidiFormatter getInstance() -> getInstance
    android.support.v4.text.BidiFormatter getInstance(boolean) -> getInstance
    android.support.v4.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    boolean isRtlContext() -> isRtlContext
    boolean getStereoReset() -> getStereoReset
    java.lang.String markAfter(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markAfter
    java.lang.String markBefore(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markBefore
    boolean isRtl(java.lang.String) -> isRtl
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    int getExitDir(java.lang.String) -> getExitDir
    int getEntryDir(java.lang.String) -> getEntryDir
    boolean access$000(java.util.Locale) -> access$000
    android.support.v4.text.TextDirectionHeuristicCompat access$100() -> access$100
    android.support.v4.text.BidiFormatter access$200() -> access$200
    android.support.v4.text.BidiFormatter access$300() -> access$300
android.support.v4.text.BidiFormatter$1 -> android.support.v4.text.BidiFormatter$1:
android.support.v4.text.BidiFormatter$Builder -> android.support.v4.text.BidiFormatter$Builder:
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat -> mTextDirectionHeuristicCompat
    void initialize(boolean) -> initialize
    android.support.v4.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
    android.support.v4.text.BidiFormatter$Builder setTextDirectionHeuristic(android.support.v4.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    android.support.v4.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    android.support.v4.text.BidiFormatter build() -> build
android.support.v4.text.BidiFormatter$DirectionalityEstimator -> android.support.v4.text.BidiFormatter$DirectionalityEstimator:
    int DIR_TYPE_CACHE_SIZE -> DIR_TYPE_CACHE_SIZE
    byte[] DIR_TYPE_CACHE -> DIR_TYPE_CACHE
    java.lang.String text -> text
    boolean isHtml -> isHtml
    int length -> length
    int charIndex -> charIndex
    char lastChar -> lastChar
    int getEntryDir() -> getEntryDir
    int getExitDir() -> getExitDir
    byte getCachedDirectionality(char) -> getCachedDirectionality
    byte dirTypeForward() -> dirTypeForward
    byte dirTypeBackward() -> dirTypeBackward
    byte skipTagForward() -> skipTagForward
    byte skipTagBackward() -> skipTagBackward
    byte skipEntityForward() -> skipEntityForward
    byte skipEntityBackward() -> skipEntityBackward
android.support.v4.text.ICUCompat -> android.support.v4.text.ICUCompat:
    android.support.v4.text.ICUCompat$ICUCompatImpl IMPL -> IMPL
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImpl -> android.support.v4.text.ICUCompat$ICUCompatImpl:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplBase -> android.support.v4.text.ICUCompat$ICUCompatImplBase:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplIcs -> android.support.v4.text.ICUCompat$ICUCompatImplIcs:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompatIcs -> android.support.v4.text.ICUCompatIcs:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sGetScriptMethod -> sGetScriptMethod
    java.lang.reflect.Method sAddLikelySubtagsMethod -> sAddLikelySubtagsMethod
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.TextDirectionHeuristicCompat -> android.support.v4.text.TextDirectionHeuristicCompat:
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
android.support.v4.text.TextDirectionHeuristicsCompat -> android.support.v4.text.TextDirectionHeuristicsCompat:
    android.support.v4.text.TextDirectionHeuristicCompat LTR -> LTR
    android.support.v4.text.TextDirectionHeuristicCompat RTL -> RTL
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR -> FIRSTSTRONG_LTR
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL -> FIRSTSTRONG_RTL
    android.support.v4.text.TextDirectionHeuristicCompat ANYRTL_LTR -> ANYRTL_LTR
    android.support.v4.text.TextDirectionHeuristicCompat LOCALE -> LOCALE
    int STATE_TRUE -> STATE_TRUE
    int STATE_FALSE -> STATE_FALSE
    int STATE_UNKNOWN -> STATE_UNKNOWN
    int isRtlText(int) -> isRtlText
    int isRtlTextOrFormat(int) -> isRtlTextOrFormat
    int access$100(int) -> access$100
    int access$200(int) -> access$200
android.support.v4.text.TextDirectionHeuristicsCompat$1 -> android.support.v4.text.TextDirectionHeuristicsCompat$1:
android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong:
    boolean mLookForRtl -> mLookForRtl
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> INSTANCE_RTL
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR -> INSTANCE_LTR
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong:
    android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> INSTANCE
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm:
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> mAlgorithm
    boolean defaultIsRtl() -> defaultIsRtl
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
    boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    boolean mDefaultIsRtl -> mDefaultIsRtl
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> INSTANCE
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextUtilsCompat -> android.support.v4.text.TextUtilsCompat:
    java.util.Locale ROOT -> ROOT
    java.lang.String ARAB_SCRIPT_SUBTAG -> ARAB_SCRIPT_SUBTAG
    java.lang.String HEBR_SCRIPT_SUBTAG -> HEBR_SCRIPT_SUBTAG
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
android.support.v4.util.ArrayMap -> android.support.v4.util.ArrayMap:
    android.support.v4.util.MapCollections mCollections -> mCollections
    android.support.v4.util.MapCollections getCollection() -> getCollection
    boolean containsAll(java.util.Collection) -> containsAll
    void putAll(java.util.Map) -> putAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.util.ArrayMap$1:
    android.support.v4.util.ArrayMap this$0 -> this$0
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> mBaseName
    java.io.File mBackupName -> mBackupName
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> sync
android.support.v4.util.ContainerHelpers -> android.support.v4.util.ContainerHelpers:
    int[] EMPTY_INTS -> EMPTY_INTS
    long[] EMPTY_LONGS -> EMPTY_LONGS
    java.lang.Object[] EMPTY_OBJECTS -> EMPTY_OBJECTS
    int idealIntArraySize(int) -> idealIntArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    int idealByteArraySize(int) -> idealByteArraySize
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int binarySearch(int[],int,int) -> binarySearch
    int binarySearch(long[],int,long) -> binarySearch
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.util.MapCollections:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> mEntrySet
    android.support.v4.util.MapCollections$KeySet mKeySet -> mKeySet
    android.support.v4.util.MapCollections$ValuesCollection mValues -> mValues
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    java.util.Set getEntrySet() -> getEntrySet
    java.util.Set getKeySet() -> getKeySet
    java.util.Collection getValues() -> getValues
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.util.MapCollections$ArrayIterator:
    int mOffset -> mOffset
    int mSize -> mSize
    int mIndex -> mIndex
    boolean mCanRemove -> mCanRemove
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.util.MapCollections$EntrySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.util.Map$Entry) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.util.MapCollections$KeySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.util.MapCollections$MapIterator:
    int mEnd -> mEnd
    int mIndex -> mIndex
    boolean mEntryValid -> mEntryValid
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.util.MapCollections$ValuesCollection:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.util.SimpleArrayMap:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    int BASE_SIZE -> BASE_SIZE
    int CACHE_SIZE -> CACHE_SIZE
    java.lang.Object[] mBaseCache -> mBaseCache
    int mBaseCacheSize -> mBaseCacheSize
    java.lang.Object[] mTwiceBaseCache -> mTwiceBaseCache
    int mTwiceBaseCacheSize -> mTwiceBaseCacheSize
    int[] mHashes -> mHashes
    java.lang.Object[] mArray -> mArray
    int mSize -> mSize
    int indexOf(java.lang.Object,int) -> indexOf
    int indexOfNull() -> indexOfNull
    void allocArrays(int) -> allocArrays
    void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    void clear() -> clear
    void ensureCapacity(int) -> ensureCapacity
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(android.support.v4.util.SimpleArrayMap) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> removeAt
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.SparseArrayCompat clone() -> clone
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    int accumField(int,int,boolean,int) -> accumField
    int printField(char[],int,char,int,boolean,int) -> printField
    int formatDurationLocked(long,int) -> formatDurationLocked
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    java.lang.Object mBridge -> mBridge
    java.lang.Object getBridge() -> getBridge
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ActionProvider -> android.support.v4.view.ActionProvider:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> mSubUiVisibilityListener
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> mVisibilityListener
    android.content.Context getContext() -> getContext
    android.view.View onCreateActionView() -> onCreateActionView
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.ActionProvider$VisibilityListener:
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> mTouchSlopSquare
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int TAP_TIMEOUT -> TAP_TIMEOUT
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int SHOW_PRESS -> SHOW_PRESS
    int LONG_PRESS -> LONG_PRESS
    int TAP -> TAP
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    boolean mStillDown -> mStillDown
    boolean mDeferConfirmSingleTap -> mDeferConfirmSingleTap
    boolean mInLongPress -> mInLongPress
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mIsDoubleTapping -> mIsDoubleTapping
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void init(android.content.Context) -> init
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancel() -> cancel
    void cancelTaps() -> cancelTaps
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    void dispatchLongPress() -> dispatchLongPress
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$000
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$100
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$200
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$300
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$400
    boolean access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean) -> access$502
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    android.view.GestureDetector mDetector -> mDetector
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> IMPL
    int RELATIVE_LAYOUT_DIRECTION -> RELATIVE_LAYOUT_DIRECTION
    int START -> START
    int END -> END
    int RELATIVE_HORIZONTAL_GRAVITY_MASK -> RELATIVE_HORIZONTAL_GRAVITY_MASK
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.GravityCompat$GravityCompatImpl:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.GravityCompat$GravityCompatImplBase:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.GravityCompatJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> IMPL
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int META_MODIFIER_MASK -> META_MODIFIER_MASK
    int META_ALL_MASK -> META_ALL_MASK
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> metaStateFilterDirectionalModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl:
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.KeyEventCompatEclair:
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.MarginLayoutParamsCompat:
    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl IMPL -> IMPL
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 -> android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    java.lang.String TAG -> TAG
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> setActionProvider
    android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1 -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1:
    android.support.v4.view.MenuItemCompat$OnActionExpandListener val$listener -> val$listener
    android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl this$0 -> this$0
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.view.MenuItemCompat$OnActionExpandListener:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
android.support.v4.view.MenuItemCompatIcs -> android.support.v4.view.MenuItemCompatIcs:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper -> android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper:
    android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy mWrapped -> mWrapped
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy -> android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> IMPL
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> TAG
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinTextSpacing -> mMinTextSpacing
    int mMinStripHeight -> mMinStripHeight
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTabAlpha -> mTabAlpha
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mTouchSlop -> mTouchSlop
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> updateTextPositions
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    android.widget.TextView mCurrText -> mCurrText
    android.widget.TextView mNextText -> mNextText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    int mGravity -> mGravity
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] ATTRS -> ATTRS
    int[] TEXT_ATTRS -> TEXT_ATTRS
    float SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    int mTextColor -> mTextColor
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> IMPL
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> access$100
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.lang.String TAG -> TAG
    java.util.Locale mLocale -> mLocale
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.ScaleGestureDetectorCompat -> android.support.v4.view.ScaleGestureDetectorCompat:
    android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl IMPL -> IMPL
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$1 -> android.support.v4.view.ScaleGestureDetectorCompat$1:
android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompatKitKat -> android.support.v4.view.ScaleGestureDetectorCompatKitKat:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> IMPL
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    long FAKE_FRAME_TIME -> FAKE_FRAME_TIME
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS -> IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
    int ACCESSIBILITY_LIVE_REGION_NONE -> ACCESSIBILITY_LIVE_REGION_NONE
    int ACCESSIBILITY_LIVE_REGION_POLITE -> ACCESSIBILITY_LIVE_REGION_POLITE
    int ACCESSIBILITY_LIVE_REGION_ASSERTIVE -> ACCESSIBILITY_LIVE_REGION_ASSERTIVE
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int LAYOUT_DIRECTION_LTR -> LAYOUT_DIRECTION_LTR
    int LAYOUT_DIRECTION_RTL -> LAYOUT_DIRECTION_RTL
    int LAYOUT_DIRECTION_INHERIT -> LAYOUT_DIRECTION_INHERIT
    int LAYOUT_DIRECTION_LOCALE -> LAYOUT_DIRECTION_LOCALE
    int MEASURED_SIZE_MASK -> MEASURED_SIZE_MASK
    int MEASURED_STATE_MASK -> MEASURED_STATE_MASK
    int MEASURED_HEIGHT_STATE_SHIFT -> MEASURED_HEIGHT_STATE_SHIFT
    int MEASURED_STATE_TOO_SMALL -> MEASURED_STATE_TOO_SMALL
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> IMPL
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> getFrameTime
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl:
    boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.ViewCompat$KitKatViewCompatImpl:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ViewCompatEclairMr1:
    boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
android.support.v4.view.ViewCompatKitKat -> android.support.v4.view.ViewCompatKitKat:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> IMPL
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    int LAYOUT_MODE_CLIP_BOUNDS -> LAYOUT_MODE_CLIP_BOUNDS
    int LAYOUT_MODE_OPTICAL_BOUNDS -> LAYOUT_MODE_OPTICAL_BOUNDS
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> IMPL
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.ViewGroupCompatHC:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompatJellybeanMR2 -> android.support.v4.view.ViewGroupCompatJellybeanMR2:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mExpectedAdapterCount -> mExpectedAdapterCount
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    boolean mIgnoreGutter -> mIgnoreGutter
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    void initViewPager() -> initViewPager
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    void dataSetChanged() -> dataSetChanged
    void populate() -> populate
    void populate(int) -> populate
    void sortChildDrawingOrder() -> sortChildDrawingOrder
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll(boolean) -> completeScroll
    boolean isGutterDrag(float,float) -> isGutterDrag
    void enableLayers(boolean) -> enableLayers
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    boolean performDrag(float) -> performDrag
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> access$000
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> access$200
    int access$300(android.support.v4.view.ViewPager) -> access$300
    int[] access$400() -> access$400
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    int position -> position
    boolean scrolling -> scrolling
    float widthFactor -> widthFactor
    float offset -> offset
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> widthFactor
    boolean needsMeasure -> needsMeasure
    int position -> position
    int childIndex -> childIndex
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    boolean canScroll() -> canScroll
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ViewParentCompat:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> IMPL
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompatICS -> android.support.v4.view.ViewParentCompatICS:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.WindowCompat -> android.support.v4.view.WindowCompat:
    int FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    int FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    int FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> val$listener
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> this$0
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> mListener
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> val$bridge
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    int ACTION_COPY -> ACTION_COPY
    int ACTION_PASTE -> ACTION_PASTE
    int ACTION_CUT -> ACTION_CUT
    int ACTION_SET_SELECTION -> ACTION_SET_SELECTION
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN -> ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    java.lang.String ACTION_ARGUMENT_SELECTION_START_INT -> ACTION_ARGUMENT_SELECTION_START_INT
    java.lang.String ACTION_ARGUMENT_SELECTION_END_INT -> ACTION_ARGUMENT_SELECTION_END_INT
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName() -> getViewIdResourceName
    int getLiveRegion() -> getLiveRegion
    void setLiveRegion(int) -> setLiveRegion
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl:
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2:
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.AutoScrollHelper:
    float RELATIVE_UNSPECIFIED -> RELATIVE_UNSPECIFIED
    float NO_MAX -> NO_MAX
    float NO_MIN -> NO_MIN
    int EDGE_TYPE_INSIDE -> EDGE_TYPE_INSIDE
    int EDGE_TYPE_INSIDE_EXTEND -> EDGE_TYPE_INSIDE_EXTEND
    int EDGE_TYPE_OUTSIDE -> EDGE_TYPE_OUTSIDE
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    android.support.v4.widget.AutoScrollHelper$ClampedScroller mScroller -> mScroller
    android.view.animation.Interpolator mEdgeInterpolator -> mEdgeInterpolator
    android.view.View mTarget -> mTarget
    java.lang.Runnable mRunnable -> mRunnable
    float[] mRelativeEdges -> mRelativeEdges
    float[] mMaximumEdges -> mMaximumEdges
    int mEdgeType -> mEdgeType
    int mActivationDelay -> mActivationDelay
    float[] mRelativeVelocity -> mRelativeVelocity
    float[] mMinimumVelocity -> mMinimumVelocity
    float[] mMaximumVelocity -> mMaximumVelocity
    boolean mAlreadyDelayed -> mAlreadyDelayed
    boolean mNeedsReset -> mNeedsReset
    boolean mNeedsCancel -> mNeedsCancel
    boolean mAnimating -> mAnimating
    boolean mEnabled -> mEnabled
    boolean mExclusive -> mExclusive
    int DEFAULT_EDGE_TYPE -> DEFAULT_EDGE_TYPE
    int DEFAULT_MINIMUM_VELOCITY_DIPS -> DEFAULT_MINIMUM_VELOCITY_DIPS
    int DEFAULT_MAXIMUM_VELOCITY_DIPS -> DEFAULT_MAXIMUM_VELOCITY_DIPS
    float DEFAULT_MAXIMUM_EDGE -> DEFAULT_MAXIMUM_EDGE
    float DEFAULT_RELATIVE_EDGE -> DEFAULT_RELATIVE_EDGE
    float DEFAULT_RELATIVE_VELOCITY -> DEFAULT_RELATIVE_VELOCITY
    int DEFAULT_ACTIVATION_DELAY -> DEFAULT_ACTIVATION_DELAY
    int DEFAULT_RAMP_UP_DURATION -> DEFAULT_RAMP_UP_DURATION
    int DEFAULT_RAMP_DOWN_DURATION -> DEFAULT_RAMP_DOWN_DURATION
    android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    android.support.v4.widget.AutoScrollHelper setExclusive(boolean) -> setExclusive
    boolean isExclusive() -> isExclusive
    android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean shouldAnimate() -> shouldAnimate
    void startAnimating() -> startAnimating
    void requestStop() -> requestStop
    float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    float getEdgeValue(float,float,float,float) -> getEdgeValue
    float constrainEdgeValue(float,float) -> constrainEdgeValue
    int constrain(int,int,int) -> constrain
    float constrain(float,float,float) -> constrain
    void cancelTargetTouch() -> cancelTargetTouch
    boolean access$100(android.support.v4.widget.AutoScrollHelper) -> access$100
    boolean access$200(android.support.v4.widget.AutoScrollHelper) -> access$200
    boolean access$202(android.support.v4.widget.AutoScrollHelper,boolean) -> access$202
    android.support.v4.widget.AutoScrollHelper$ClampedScroller access$300(android.support.v4.widget.AutoScrollHelper) -> access$300
    boolean access$400(android.support.v4.widget.AutoScrollHelper) -> access$400
    boolean access$102(android.support.v4.widget.AutoScrollHelper,boolean) -> access$102
    boolean access$500(android.support.v4.widget.AutoScrollHelper) -> access$500
    boolean access$502(android.support.v4.widget.AutoScrollHelper,boolean) -> access$502
    void access$600(android.support.v4.widget.AutoScrollHelper) -> access$600
    android.view.View access$700(android.support.v4.widget.AutoScrollHelper) -> access$700
    int access$800(int,int,int) -> access$800
    float access$900(float,float,float) -> access$900
android.support.v4.widget.AutoScrollHelper$1 -> android.support.v4.widget.AutoScrollHelper$1:
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.AutoScrollHelper$ClampedScroller:
    int mRampUpDuration -> mRampUpDuration
    int mRampDownDuration -> mRampDownDuration
    float mTargetVelocityX -> mTargetVelocityX
    float mTargetVelocityY -> mTargetVelocityY
    long mStartTime -> mStartTime
    long mDeltaTime -> mDeltaTime
    int mDeltaX -> mDeltaX
    int mDeltaY -> mDeltaY
    long mStopTime -> mStopTime
    float mStopValue -> mStopValue
    int mEffectiveRampDown -> mEffectiveRampDown
    void setRampUpDuration(int) -> setRampUpDuration
    void setRampDownDuration(int) -> setRampDownDuration
    void start() -> start
    void requestStop() -> requestStop
    boolean isFinished() -> isFinished
    float getValueAt(long) -> getValueAt
    float interpolateValue(float) -> interpolateValue
    void computeScrollDelta() -> computeScrollDelta
    void setTargetVelocity(float,float) -> setTargetVelocity
    int getHorizontalDirection() -> getHorizontalDirection
    int getVerticalDirection() -> getVerticalDirection
    int getDeltaX() -> getDeltaX
    int getDeltaY() -> getDeltaY
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable:
    android.support.v4.widget.AutoScrollHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.BakedBezierInterpolator -> android.support.v4.widget.BakedBezierInterpolator:
    android.support.v4.widget.BakedBezierInterpolator INSTANCE -> INSTANCE
    float[] VALUES -> VALUES
    float STEP_SIZE -> STEP_SIZE
    android.support.v4.widget.BakedBezierInterpolator getInstance() -> getInstance
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    int MIN_SHOW_TIME -> MIN_SHOW_TIME
    int MIN_DELAY -> MIN_DELAY
    long mStartTime -> mStartTime
    boolean mPostedHide -> mPostedHide
    boolean mPostedShow -> mPostedShow
    boolean mDismissed -> mDismissed
    java.lang.Runnable mDelayedHide -> mDelayedHide
    java.lang.Runnable mDelayedShow -> mDelayedShow
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> removeCallbacks
    void hide() -> hide
    void show() -> show
    boolean access$002(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$002
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> access$102
    boolean access$202(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$202
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> access$300
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.ContentLoadingProgressBar$1:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.ContentLoadingProgressBar$2:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    java.lang.String TAG -> TAG
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int LOCK_MODE_UNLOCKED -> LOCK_MODE_UNLOCKED
    int LOCK_MODE_LOCKED_CLOSED -> LOCK_MODE_LOCKED_CLOSED
    int LOCK_MODE_LOCKED_OPEN -> LOCK_MODE_LOCKED_OPEN
    int MIN_DRAWER_MARGIN -> MIN_DRAWER_MARGIN
    int DEFAULT_SCRIM_COLOR -> DEFAULT_SCRIM_COLOR
    int PEEK_DELAY -> PEEK_DELAY
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    boolean ALLOW_EDGE_LOCK -> ALLOW_EDGE_LOCK
    boolean CHILDREN_DISALLOW_INTERCEPT -> CHILDREN_DISALLOW_INTERCEPT
    float TOUCH_SLOP_SENSITIVITY -> TOUCH_SLOP_SENSITIVITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mMinDrawerMargin -> mMinDrawerMargin
    int mScrimColor -> mScrimColor
    float mScrimOpacity -> mScrimOpacity
    android.graphics.Paint mScrimPaint -> mScrimPaint
    android.support.v4.widget.ViewDragHelper mLeftDragger -> mLeftDragger
    android.support.v4.widget.ViewDragHelper mRightDragger -> mRightDragger
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> mLeftCallback
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> mRightCallback
    int mDrawerState -> mDrawerState
    boolean mInLayout -> mInLayout
    boolean mFirstLayout -> mFirstLayout
    int mLockModeLeft -> mLockModeLeft
    int mLockModeRight -> mLockModeRight
    boolean mDisallowInterceptRequested -> mDisallowInterceptRequested
    boolean mChildrenCanceledTouch -> mChildrenCanceledTouch
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> mListener
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.graphics.drawable.Drawable mShadowLeft -> mShadowLeft
    android.graphics.drawable.Drawable mShadowRight -> mShadowRight
    java.lang.CharSequence mTitleLeft -> mTitleLeft
    java.lang.CharSequence mTitleRight -> mTitleRight
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(int) -> getDrawerLockMode
    int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    void updateDrawerState(int,int,android.view.View) -> updateDrawerState
    void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    android.view.View findOpenDrawer() -> findOpenDrawer
    void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    java.lang.String gravityToString(int) -> gravityToString
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> isContentView
    boolean isDrawerView(android.view.View) -> isDrawerView
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> closeDrawers
    void closeDrawers(boolean) -> closeDrawers
    void openDrawer(android.view.View) -> openDrawer
    void openDrawer(int) -> openDrawer
    void closeDrawer(android.view.View) -> closeDrawer
    void closeDrawer(int) -> closeDrawer
    boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    boolean isDrawerOpen(int) -> isDrawerOpen
    boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    boolean isDrawerVisible(int) -> isDrawerVisible
    boolean hasPeekingDrawer() -> hasPeekingDrawer
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> hasVisibleDrawer
    android.view.View findVisibleDrawer() -> findVisibleDrawer
    void cancelChildViewTouch() -> cancelChildViewTouch
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> access$100
    android.view.View access$200(android.support.v4.widget.DrawerLayout) -> access$200
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.DrawerLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> gravity
    float onScreen -> onScreen
    boolean isPeeking -> isPeeking
    boolean knownOpen -> knownOpen
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> openDrawerGravity
    int lockModeLeft -> lockModeLeft
    int lockModeRight -> lockModeRight
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.DrawerLayout$SimpleDrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$ViewDragCallback:
    int mAbsGravity -> mAbsGravity
    android.support.v4.widget.ViewDragHelper mDragger -> mDragger
    java.lang.Runnable mPeekRunnable -> mPeekRunnable
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void setDragger(android.support.v4.widget.ViewDragHelper) -> setDragger
    void removeCallbacks() -> removeCallbacks
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void closeOtherDrawer() -> closeOtherDrawer
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    void peekDrawer() -> peekDrawer
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> access$000
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.DrawerLayout$ViewDragCallback$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> this$1
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.ExploreByTouchHelper -> android.support.v4.widget.ExploreByTouchHelper:
    int INVALID_ID -> INVALID_ID
    java.lang.String DEFAULT_CLASS_NAME -> DEFAULT_CLASS_NAME
    android.graphics.Rect mTempScreenRect -> mTempScreenRect
    android.graphics.Rect mTempParentRect -> mTempParentRect
    android.graphics.Rect mTempVisibleRect -> mTempVisibleRect
    int[] mTempGlobalRect -> mTempGlobalRect
    android.view.accessibility.AccessibilityManager mManager -> mManager
    android.view.View mView -> mView
    android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider mNodeProvider -> mNodeProvider
    int mFocusedVirtualViewId -> mFocusedVirtualViewId
    int mHoveredVirtualViewId -> mHoveredVirtualViewId
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    void invalidateRoot() -> invalidateRoot
    void invalidateVirtualView(int) -> invalidateVirtualView
    int getFocusedVirtualView() -> getFocusedVirtualView
    void updateHoveredVirtualView(int) -> updateHoveredVirtualView
    android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNode(int) -> createNode
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    boolean performAction(int,int,android.os.Bundle) -> performAction
    boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    boolean manageFocusForChild(int,int,android.os.Bundle) -> manageFocusForChild
    boolean intersectVisibleToUser(android.graphics.Rect) -> intersectVisibleToUser
    boolean isAccessibilityFocused(int) -> isAccessibilityFocused
    boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    int getVirtualViewAt(float,float) -> getVirtualViewAt
    void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    void onPopulateNodeForVirtualView(int,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat access$100(android.support.v4.widget.ExploreByTouchHelper,int) -> access$100
    boolean access$200(android.support.v4.widget.ExploreByTouchHelper,int,int,android.os.Bundle) -> access$200
android.support.v4.widget.ExploreByTouchHelper$1 -> android.support.v4.widget.ExploreByTouchHelper$1:
android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider -> android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider:
    android.support.v4.widget.ExploreByTouchHelper this$0 -> this$0
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.widget.ListPopupWindowCompat -> android.support.v4.widget.ListPopupWindowCompat:
    android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl IMPL -> IMPL
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompatKitKat -> android.support.v4.widget.ListPopupWindowCompatKitKat:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.ListViewAutoScrollHelper:
    android.widget.ListView mTarget -> mTarget
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
android.support.v4.widget.PopupMenuCompat -> android.support.v4.widget.PopupMenuCompat:
    android.support.v4.widget.PopupMenuCompat$PopupMenuImpl IMPL -> IMPL
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$PopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$PopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompatKitKat -> android.support.v4.widget.PopupMenuCompatKitKat:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    java.lang.Object mScroller -> mScroller
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> IMPL
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> create
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
    void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled() -> isOverScrolled
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.ScrollerCompatGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> access$000
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> val$listener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.SearchViewCompatHoneycomb$2:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> val$listener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge:
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    java.lang.String TAG -> TAG
    int DEFAULT_OVERHANG_SIZE -> DEFAULT_OVERHANG_SIZE
    int DEFAULT_FADE_COLOR -> DEFAULT_FADE_COLOR
    int mSliderFadeColor -> mSliderFadeColor
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int mCoveredFadeColor -> mCoveredFadeColor
    android.graphics.drawable.Drawable mShadowDrawable -> mShadowDrawable
    int mOverhangSize -> mOverhangSize
    boolean mCanSlide -> mCanSlide
    android.view.View mSlideableView -> mSlideableView
    float mSlideOffset -> mSlideOffset
    float mParallaxOffset -> mParallaxOffset
    int mSlideRange -> mSlideRange
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mParallaxBy -> mParallaxBy
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> mPanelSlideListener
    android.support.v4.widget.ViewDragHelper mDragHelper -> mDragHelper
    boolean mPreservedOpenState -> mPreservedOpenState
    boolean mFirstLayout -> mFirstLayout
    android.graphics.Rect mTmpRect -> mTmpRect
    java.util.ArrayList mPostedRunnables -> mPostedRunnables
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> IMPL
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    void dispatchOnPanelOpened(android.view.View) -> dispatchOnPanelOpened
    void dispatchOnPanelClosed(android.view.View) -> dispatchOnPanelClosed
    void updateObscuredViewsVisibility(android.view.View) -> updateObscuredViewsVisibility
    void setAllChildrenVisible() -> setAllChildrenVisible
    boolean viewIsOpaque(android.view.View) -> viewIsOpaque
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> closePane
    boolean openPane(android.view.View,int) -> openPane
    void smoothSlideOpen() -> smoothSlideOpen
    boolean openPane() -> openPane
    void smoothSlideClosed() -> smoothSlideClosed
    boolean closePane() -> closePane
    boolean isOpen() -> isOpen
    boolean canSlide() -> canSlide
    boolean isSlideable() -> isSlideable
    void onPanelDragged(int) -> onPanelDragged
    void dimChildView(android.view.View,float,int) -> dimChildView
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> invalidateChildRegion
    boolean smoothSlideTo(float,int) -> smoothSlideTo
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> parallaxOtherViews
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean isDimmed(android.view.View) -> isDimmed
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> access$100
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> access$200
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> access$300
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> access$400
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> access$502
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> access$600
    int access$700(android.support.v4.widget.SlidingPaneLayout) -> access$700
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> access$900
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> access$1000
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.SlidingPaneLayout$1:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable:
    android.view.View mChildView -> mChildView
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.SlidingPaneLayout$DragHelperCallback:
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> ATTRS
    float weight -> weight
    boolean slideable -> slideable
    boolean dimWhenOffset -> dimWhenOffset
    android.graphics.Paint dimPaint -> dimPaint
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> isOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB:
    java.lang.reflect.Method mGetDisplayList -> mGetDisplayList
    java.lang.reflect.Field mRecreateDisplayList -> mRecreateDisplayList
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SwipeProgressBar -> android.support.v4.widget.SwipeProgressBar:
    int COLOR1 -> COLOR1
    int COLOR2 -> COLOR2
    int COLOR3 -> COLOR3
    int COLOR4 -> COLOR4
    int ANIMATION_DURATION_MS -> ANIMATION_DURATION_MS
    int FINISH_ANIMATION_DURATION_MS -> FINISH_ANIMATION_DURATION_MS
    android.view.animation.Interpolator INTERPOLATOR -> INTERPOLATOR
    android.graphics.Paint mPaint -> mPaint
    android.graphics.RectF mClipRect -> mClipRect
    float mTriggerPercentage -> mTriggerPercentage
    long mStartTime -> mStartTime
    long mFinishTime -> mFinishTime
    boolean mRunning -> mRunning
    int mColor1 -> mColor1
    int mColor2 -> mColor2
    int mColor3 -> mColor3
    int mColor4 -> mColor4
    android.view.View mParent -> mParent
    android.graphics.Rect mBounds -> mBounds
    void setColorScheme(int,int,int,int) -> setColorScheme
    void setTriggerPercentage(float) -> setTriggerPercentage
    void start() -> start
    void stop() -> stop
    boolean isRunning() -> isRunning
    void draw(android.graphics.Canvas) -> draw
    void drawTrigger(android.graphics.Canvas,int,int) -> drawTrigger
    void drawCircle(android.graphics.Canvas,float,float,int,float) -> drawCircle
    void setBounds(int,int,int,int) -> setBounds
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.SwipeRefreshLayout:
    long RETURN_TO_ORIGINAL_POSITION_TIMEOUT -> RETURN_TO_ORIGINAL_POSITION_TIMEOUT
    float ACCELERATE_INTERPOLATION_FACTOR -> ACCELERATE_INTERPOLATION_FACTOR
    float DECELERATE_INTERPOLATION_FACTOR -> DECELERATE_INTERPOLATION_FACTOR
    float PROGRESS_BAR_HEIGHT -> PROGRESS_BAR_HEIGHT
    float MAX_SWIPE_DISTANCE_FACTOR -> MAX_SWIPE_DISTANCE_FACTOR
    int REFRESH_TRIGGER_DISTANCE -> REFRESH_TRIGGER_DISTANCE
    android.support.v4.widget.SwipeProgressBar mProgressBar -> mProgressBar
    android.view.View mTarget -> mTarget
    int mOriginalOffsetTop -> mOriginalOffsetTop
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener -> mListener
    android.view.MotionEvent mDownEvent -> mDownEvent
    int mFrom -> mFrom
    boolean mRefreshing -> mRefreshing
    int mTouchSlop -> mTouchSlop
    float mDistanceToTriggerSync -> mDistanceToTriggerSync
    float mPrevY -> mPrevY
    int mMediumAnimationDuration -> mMediumAnimationDuration
    float mFromPercentage -> mFromPercentage
    float mCurrPercentage -> mCurrPercentage
    int mProgressBarHeight -> mProgressBarHeight
    int mCurrentTargetOffsetTop -> mCurrentTargetOffsetTop
    boolean mReturningToStart -> mReturningToStart
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> mDecelerateInterpolator
    android.view.animation.AccelerateInterpolator mAccelerateInterpolator -> mAccelerateInterpolator
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    android.view.animation.Animation mAnimateToStartPosition -> mAnimateToStartPosition
    android.view.animation.Animation mShrinkTrigger -> mShrinkTrigger
    android.view.animation.Animation$AnimationListener mReturnToStartPositionListener -> mReturnToStartPositionListener
    android.view.animation.Animation$AnimationListener mShrinkAnimationListener -> mShrinkAnimationListener
    java.lang.Runnable mReturnToStartPosition -> mReturnToStartPosition
    java.lang.Runnable mCancel -> mCancel
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    void setTriggerPercentage(float) -> setTriggerPercentage
    void setRefreshing(boolean) -> setRefreshing
    void setColorScheme(int,int,int,int) -> setColorScheme
    boolean isRefreshing() -> isRefreshing
    void ensureTarget() -> ensureTarget
    void draw(android.graphics.Canvas) -> draw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean canChildScrollUp() -> canChildScrollUp
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void startRefresh() -> startRefresh
    void updateContentOffsetTop(int) -> updateContentOffsetTop
    void setTargetOffsetTopAndBottom(int) -> setTargetOffsetTopAndBottom
    void updatePositionTimeout() -> updatePositionTimeout
    int access$000(android.support.v4.widget.SwipeRefreshLayout) -> access$000
    int access$100(android.support.v4.widget.SwipeRefreshLayout) -> access$100
    android.view.View access$200(android.support.v4.widget.SwipeRefreshLayout) -> access$200
    void access$300(android.support.v4.widget.SwipeRefreshLayout,int) -> access$300
    float access$400(android.support.v4.widget.SwipeRefreshLayout) -> access$400
    android.support.v4.widget.SwipeProgressBar access$500(android.support.v4.widget.SwipeRefreshLayout) -> access$500
    int access$702(android.support.v4.widget.SwipeRefreshLayout,int) -> access$702
    float access$802(android.support.v4.widget.SwipeRefreshLayout,float) -> access$802
    boolean access$902(android.support.v4.widget.SwipeRefreshLayout,boolean) -> access$902
    int access$700(android.support.v4.widget.SwipeRefreshLayout) -> access$700
    android.view.animation.Animation$AnimationListener access$1000(android.support.v4.widget.SwipeRefreshLayout) -> access$1000
    void access$1100(android.support.v4.widget.SwipeRefreshLayout,int,android.view.animation.Animation$AnimationListener) -> access$1100
    float access$402(android.support.v4.widget.SwipeRefreshLayout,float) -> access$402
    float access$800(android.support.v4.widget.SwipeRefreshLayout) -> access$800
    int access$1200(android.support.v4.widget.SwipeRefreshLayout) -> access$1200
    android.view.animation.Animation access$1300(android.support.v4.widget.SwipeRefreshLayout) -> access$1300
    android.view.animation.Animation$AnimationListener access$1400(android.support.v4.widget.SwipeRefreshLayout) -> access$1400
    android.view.animation.DecelerateInterpolator access$1500(android.support.v4.widget.SwipeRefreshLayout) -> access$1500
android.support.v4.widget.SwipeRefreshLayout$1 -> android.support.v4.widget.SwipeRefreshLayout$1:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$2 -> android.support.v4.widget.SwipeRefreshLayout$2:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$3 -> android.support.v4.widget.SwipeRefreshLayout$3:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$4 -> android.support.v4.widget.SwipeRefreshLayout$4:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$5 -> android.support.v4.widget.SwipeRefreshLayout$5:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$6 -> android.support.v4.widget.SwipeRefreshLayout$6:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$BaseAnimationListener -> android.support.v4.widget.SwipeRefreshLayout$BaseAnimationListener:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener -> android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener:
    void onRefresh() -> onRefresh
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    java.lang.String TAG -> TAG
    int INVALID_POINTER -> INVALID_POINTER
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_TOP -> EDGE_TOP
    int EDGE_BOTTOM -> EDGE_BOTTOM
    int EDGE_ALL -> EDGE_ALL
    int DIRECTION_HORIZONTAL -> DIRECTION_HORIZONTAL
    int DIRECTION_VERTICAL -> DIRECTION_VERTICAL
    int DIRECTION_ALL -> DIRECTION_ALL
    int EDGE_SIZE -> EDGE_SIZE
    int BASE_SETTLE_DURATION -> BASE_SETTLE_DURATION
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int mDragState -> mDragState
    int mTouchSlop -> mTouchSlop
    int mActivePointerId -> mActivePointerId
    float[] mInitialMotionX -> mInitialMotionX
    float[] mInitialMotionY -> mInitialMotionY
    float[] mLastMotionX -> mLastMotionX
    float[] mLastMotionY -> mLastMotionY
    int[] mInitialEdgesTouched -> mInitialEdgesTouched
    int[] mEdgeDragsInProgress -> mEdgeDragsInProgress
    int[] mEdgeDragsLocked -> mEdgeDragsLocked
    int mPointersDown -> mPointersDown
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float mMaxVelocity -> mMaxVelocity
    float mMinVelocity -> mMinVelocity
    int mEdgeSize -> mEdgeSize
    int mTrackingEdges -> mTrackingEdges
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> mCallback
    android.view.View mCapturedView -> mCapturedView
    boolean mReleaseInProgress -> mReleaseInProgress
    android.view.ViewGroup mParentView -> mParentView
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.lang.Runnable mSetIdleRunnable -> mSetIdleRunnable
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void setMinVelocity(float) -> setMinVelocity
    float getMinVelocity() -> getMinVelocity
    int getViewDragState() -> getViewDragState
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    int getEdgeSize() -> getEdgeSize
    void captureChildView(android.view.View,int) -> captureChildView
    android.view.View getCapturedView() -> getCapturedView
    int getActivePointerId() -> getActivePointerId
    int getTouchSlop() -> getTouchSlop
    void cancel() -> cancel
    void abort() -> abort
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    int computeAxisDuration(int,int,int) -> computeAxisDuration
    int clampMag(int,int,int) -> clampMag
    float clampMag(float,float,float) -> clampMag
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void flingCapturedView(int,int,int,int) -> flingCapturedView
    boolean continueSettling(boolean) -> continueSettling
    void dispatchViewReleased(float,float) -> dispatchViewReleased
    void clearMotionHistory() -> clearMotionHistory
    void clearMotionHistory(int) -> clearMotionHistory
    void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    void saveInitialMotion(float,float,int) -> saveInitialMotion
    void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    boolean isPointerDown(int) -> isPointerDown
    void setDragState(int) -> setDragState
    boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
    boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    boolean checkTouchSlop(int) -> checkTouchSlop
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    boolean isEdgeTouched(int) -> isEdgeTouched
    boolean isEdgeTouched(int,int) -> isEdgeTouched
    void releaseViewForPointerUp() -> releaseViewForPointerUp
    void dragTo(int,int,int,int) -> dragTo
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    int getEdgesTouched(int,int) -> getEdgesTouched
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ViewDragHelper$1:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ViewDragHelper$2:
    android.support.v4.widget.ViewDragHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
com.actionbarsherlock.ActionBarSherlock -> com.actionbarsherlock.ActionBarSherlock:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    java.lang.Class[] CONSTRUCTOR_ARGS -> a
    java.util.HashMap IMPLEMENTATIONS -> b
    int FLAG_DELEGATE -> FLAG_DELEGATE
    android.app.Activity mActivity -> mActivity
    boolean mIsDelegate -> mIsDelegate
    com.actionbarsherlock.view.MenuInflater mMenuInflater -> mMenuInflater
    void registerImplementation(java.lang.Class) -> registerImplementation
    boolean unregisterImplementation(java.lang.Class) -> unregisterImplementation
    com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity) -> wrap
    com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int) -> wrap
    com.actionbarsherlock.app.ActionBar getActionBar() -> getActionBar
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchPostResume() -> dispatchPostResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchInvalidateOptionsMenu() -> dispatchInvalidateOptionsMenu
    boolean dispatchOpenOptionsMenu() -> dispatchOpenOptionsMenu
    boolean dispatchCloseOptionsMenu() -> dispatchCloseOptionsMenu
    void dispatchPostCreate(android.os.Bundle) -> dispatchPostCreate
    void dispatchTitleChanged(java.lang.CharSequence,int) -> dispatchTitleChanged
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchMenuOpened(int,android.view.Menu) -> dispatchMenuOpened
    void dispatchPanelClosed(int,android.view.Menu) -> dispatchPanelClosed
    void dispatchDestroy() -> dispatchDestroy
    void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    boolean callbackCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> callbackCreateOptionsMenu
    boolean callbackPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> callbackPrepareOptionsMenu
    boolean callbackOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> callbackOptionsItemSelected
    boolean hasFeature(int) -> hasFeature
    boolean requestFeature(int) -> requestFeature
    void setUiOptions(int) -> setUiOptions
    void setUiOptions(int,int) -> setUiOptions
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setProgressBarVisibility(boolean) -> setProgressBarVisibility
    void setProgressBarIndeterminateVisibility(boolean) -> setProgressBarIndeterminateVisibility
    void setProgressBarIndeterminate(boolean) -> setProgressBarIndeterminate
    void setProgress(int) -> setProgress
    void setSecondaryProgress(int) -> setSecondaryProgress
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    android.content.Context getThemedContext() -> getThemedContext
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void ensureActionBar() -> ensureActionBar
com.actionbarsherlock.ActionBarSherlock$Implementation -> com.actionbarsherlock.ActionBarSherlock$Implementation:
    int DEFAULT_API -> DEFAULT_API
    int DEFAULT_DPI -> DEFAULT_DPI
    int api() -> api
    int dpi() -> dpi
com.actionbarsherlock.ActionBarSherlock$OnActionModeFinishedListener -> com.actionbarsherlock.ActionBarSherlock$OnActionModeFinishedListener:
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
com.actionbarsherlock.ActionBarSherlock$OnActionModeStartedListener -> com.actionbarsherlock.ActionBarSherlock$OnActionModeStartedListener:
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
com.actionbarsherlock.ActionBarSherlock$OnCreateOptionsMenuListener -> com.actionbarsherlock.ActionBarSherlock$OnCreateOptionsMenuListener:
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
com.actionbarsherlock.ActionBarSherlock$OnCreatePanelMenuListener -> com.actionbarsherlock.ActionBarSherlock$OnCreatePanelMenuListener:
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
com.actionbarsherlock.ActionBarSherlock$OnMenuItemSelectedListener -> com.actionbarsherlock.ActionBarSherlock$OnMenuItemSelectedListener:
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
com.actionbarsherlock.ActionBarSherlock$OnOptionsItemSelectedListener -> com.actionbarsherlock.ActionBarSherlock$OnOptionsItemSelectedListener:
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
com.actionbarsherlock.ActionBarSherlock$OnPrepareOptionsMenuListener -> com.actionbarsherlock.ActionBarSherlock$OnPrepareOptionsMenuListener:
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
com.actionbarsherlock.ActionBarSherlock$OnPreparePanelListener -> com.actionbarsherlock.ActionBarSherlock$OnPreparePanelListener:
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
com.actionbarsherlock.R -> com.actionbarsherlock.R:
com.actionbarsherlock.R$attr -> com.actionbarsherlock.R$attr:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionSpinnerItemStyle -> actionSpinnerItemStyle
    int activatedBackgroundIndicator -> activatedBackgroundIndicator
    int activityChooserViewStyle -> activityChooserViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int buttonStyleSmall -> buttonStyleSmall
    int customNavigationLayout -> customNavigationLayout
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerVertical -> dividerVertical
    int dropDownHintAppearance -> dropDownHintAppearance
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int headerBackground -> headerBackground
    int height -> height
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int horizontalDivider -> horizontalDivider
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int itemBackground -> itemBackground
    int itemIconDisabledAlpha -> itemIconDisabledAlpha
    int itemPadding -> itemPadding
    int itemTextAppearance -> itemTextAppearance
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int navigationMode -> navigationMode
    int popupMenuStyle -> popupMenuStyle
    int preserveIconSpacing -> preserveIconSpacing
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int queryHint -> queryHint
    int searchAutoCompleteTextView -> searchAutoCompleteTextView
    int searchDropdownBackground -> searchDropdownBackground
    int searchResultListItemHeight -> searchResultListItemHeight
    int searchViewCloseIcon -> searchViewCloseIcon
    int searchViewEditQuery -> searchViewEditQuery
    int searchViewEditQueryBackground -> searchViewEditQueryBackground
    int searchViewGoIcon -> searchViewGoIcon
    int searchViewSearchIcon -> searchViewSearchIcon
    int searchViewTextField -> searchViewTextField
    int searchViewTextFieldRight -> searchViewTextFieldRight
    int searchViewVoiceIcon -> searchViewVoiceIcon
    int selectableItemBackground -> selectableItemBackground
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerItemStyle -> spinnerItemStyle
    int subtitle -> subtitle
    int subtitleTextStyle -> subtitleTextStyle
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmall -> textAppearanceSmall
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorPrimary -> textColorPrimary
    int textColorPrimaryDisableOnly -> textColorPrimaryDisableOnly
    int textColorPrimaryInverse -> textColorPrimaryInverse
    int textColorSearchUrl -> textColorSearchUrl
    int title -> title
    int titleTextStyle -> titleTextStyle
    int verticalDivider -> verticalDivider
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowAnimationStyle -> windowAnimationStyle
    int windowContentOverlay -> windowContentOverlay
    int windowMinWidthMajor -> windowMinWidthMajor
    int windowMinWidthMinor -> windowMinWidthMinor
    int windowNoTitle -> windowNoTitle
    int windowSplitActionBar -> windowSplitActionBar
com.actionbarsherlock.R$bool -> com.actionbarsherlock.R$bool:
    int abs__action_bar_embed_tabs -> abs__action_bar_embed_tabs
    int abs__action_bar_expanded_action_views_exclusive -> abs__action_bar_expanded_action_views_exclusive
    int abs__config_actionMenuItemAllCaps -> abs__config_actionMenuItemAllCaps
    int abs__config_allowActionMenuItemTextWithIcon -> abs__config_allowActionMenuItemTextWithIcon
    int abs__config_showMenuShortcutsWhenKeyboardPresent -> abs__config_showMenuShortcutsWhenKeyboardPresent
    int abs__split_action_bar_is_narrow -> abs__split_action_bar_is_narrow
com.actionbarsherlock.R$color -> com.actionbarsherlock.R$color:
    int abs__background_holo_dark -> abs__background_holo_dark
    int abs__background_holo_light -> abs__background_holo_light
    int abs__bright_foreground_disabled_holo_dark -> abs__bright_foreground_disabled_holo_dark
    int abs__bright_foreground_disabled_holo_light -> abs__bright_foreground_disabled_holo_light
    int abs__bright_foreground_holo_dark -> abs__bright_foreground_holo_dark
    int abs__bright_foreground_holo_light -> abs__bright_foreground_holo_light
    int abs__primary_text_disable_only_holo_dark -> abs__primary_text_disable_only_holo_dark
    int abs__primary_text_disable_only_holo_light -> abs__primary_text_disable_only_holo_light
    int abs__primary_text_holo_dark -> abs__primary_text_holo_dark
    int abs__primary_text_holo_light -> abs__primary_text_holo_light
com.actionbarsherlock.R$dimen -> com.actionbarsherlock.R$dimen:
    int abs__action_bar_default_height -> abs__action_bar_default_height
    int abs__action_bar_icon_vertical_padding -> abs__action_bar_icon_vertical_padding
    int abs__action_bar_subtitle_bottom_margin -> abs__action_bar_subtitle_bottom_margin
    int abs__action_bar_subtitle_text_size -> abs__action_bar_subtitle_text_size
    int abs__action_bar_subtitle_top_margin -> abs__action_bar_subtitle_top_margin
    int abs__action_bar_title_text_size -> abs__action_bar_title_text_size
    int abs__action_button_min_width -> abs__action_button_min_width
    int abs__config_prefDialogWidth -> abs__config_prefDialogWidth
    int abs__dialog_min_width_major -> abs__dialog_min_width_major
    int abs__dialog_min_width_minor -> abs__dialog_min_width_minor
    int abs__dropdownitem_icon_width -> abs__dropdownitem_icon_width
    int abs__dropdownitem_text_padding_left -> abs__dropdownitem_text_padding_left
    int abs__dropdownitem_text_padding_right -> abs__dropdownitem_text_padding_right
    int abs__search_view_preferred_width -> abs__search_view_preferred_width
    int abs__search_view_text_min_width -> abs__search_view_text_min_width
com.actionbarsherlock.R$drawable -> com.actionbarsherlock.R$drawable:
    int abs__ab_bottom_solid_dark_holo -> abs__ab_bottom_solid_dark_holo
    int abs__ab_bottom_solid_inverse_holo -> abs__ab_bottom_solid_inverse_holo
    int abs__ab_bottom_solid_light_holo -> abs__ab_bottom_solid_light_holo
    int abs__ab_bottom_transparent_dark_holo -> abs__ab_bottom_transparent_dark_holo
    int abs__ab_bottom_transparent_light_holo -> abs__ab_bottom_transparent_light_holo
    int abs__ab_share_pack_holo_dark -> abs__ab_share_pack_holo_dark
    int abs__ab_share_pack_holo_light -> abs__ab_share_pack_holo_light
    int abs__ab_solid_dark_holo -> abs__ab_solid_dark_holo
    int abs__ab_solid_light_holo -> abs__ab_solid_light_holo
    int abs__ab_solid_shadow_holo -> abs__ab_solid_shadow_holo
    int abs__ab_stacked_solid_dark_holo -> abs__ab_stacked_solid_dark_holo
    int abs__ab_stacked_solid_light_holo -> abs__ab_stacked_solid_light_holo
    int abs__ab_stacked_transparent_dark_holo -> abs__ab_stacked_transparent_dark_holo
    int abs__ab_stacked_transparent_light_holo -> abs__ab_stacked_transparent_light_holo
    int abs__ab_transparent_dark_holo -> abs__ab_transparent_dark_holo
    int abs__ab_transparent_light_holo -> abs__ab_transparent_light_holo
    int abs__activated_background_holo_dark -> abs__activated_background_holo_dark
    int abs__activated_background_holo_light -> abs__activated_background_holo_light
    int abs__btn_cab_done_default_holo_dark -> abs__btn_cab_done_default_holo_dark
    int abs__btn_cab_done_default_holo_light -> abs__btn_cab_done_default_holo_light
    int abs__btn_cab_done_focused_holo_dark -> abs__btn_cab_done_focused_holo_dark
    int abs__btn_cab_done_focused_holo_light -> abs__btn_cab_done_focused_holo_light
    int abs__btn_cab_done_holo_dark -> abs__btn_cab_done_holo_dark
    int abs__btn_cab_done_holo_light -> abs__btn_cab_done_holo_light
    int abs__btn_cab_done_pressed_holo_dark -> abs__btn_cab_done_pressed_holo_dark
    int abs__btn_cab_done_pressed_holo_light -> abs__btn_cab_done_pressed_holo_light
    int abs__cab_background_bottom_holo_dark -> abs__cab_background_bottom_holo_dark
    int abs__cab_background_bottom_holo_light -> abs__cab_background_bottom_holo_light
    int abs__cab_background_top_holo_dark -> abs__cab_background_top_holo_dark
    int abs__cab_background_top_holo_light -> abs__cab_background_top_holo_light
    int abs__ic_ab_back_holo_dark -> abs__ic_ab_back_holo_dark
    int abs__ic_ab_back_holo_light -> abs__ic_ab_back_holo_light
    int abs__ic_cab_done_holo_dark -> abs__ic_cab_done_holo_dark
    int abs__ic_cab_done_holo_light -> abs__ic_cab_done_holo_light
    int abs__ic_clear -> abs__ic_clear
    int abs__ic_clear_disabled -> abs__ic_clear_disabled
    int abs__ic_clear_holo_light -> abs__ic_clear_holo_light
    int abs__ic_clear_normal -> abs__ic_clear_normal
    int abs__ic_clear_search_api_disabled_holo_light -> abs__ic_clear_search_api_disabled_holo_light
    int abs__ic_clear_search_api_holo_light -> abs__ic_clear_search_api_holo_light
    int abs__ic_commit_search_api_holo_dark -> abs__ic_commit_search_api_holo_dark
    int abs__ic_commit_search_api_holo_light -> abs__ic_commit_search_api_holo_light
    int abs__ic_go -> abs__ic_go
    int abs__ic_go_search_api_holo_light -> abs__ic_go_search_api_holo_light
    int abs__ic_menu_moreoverflow_holo_dark -> abs__ic_menu_moreoverflow_holo_dark
    int abs__ic_menu_moreoverflow_holo_light -> abs__ic_menu_moreoverflow_holo_light
    int abs__ic_menu_moreoverflow_normal_holo_dark -> abs__ic_menu_moreoverflow_normal_holo_dark
    int abs__ic_menu_moreoverflow_normal_holo_light -> abs__ic_menu_moreoverflow_normal_holo_light
    int abs__ic_menu_share_holo_dark -> abs__ic_menu_share_holo_dark
    int abs__ic_menu_share_holo_light -> abs__ic_menu_share_holo_light
    int abs__ic_search -> abs__ic_search
    int abs__ic_search_api_holo_light -> abs__ic_search_api_holo_light
    int abs__ic_voice_search -> abs__ic_voice_search
    int abs__ic_voice_search_api_holo_light -> abs__ic_voice_search_api_holo_light
    int abs__item_background_holo_dark -> abs__item_background_holo_dark
    int abs__item_background_holo_light -> abs__item_background_holo_light
    int abs__list_activated_holo -> abs__list_activated_holo
    int abs__list_divider_holo_dark -> abs__list_divider_holo_dark
    int abs__list_divider_holo_light -> abs__list_divider_holo_light
    int abs__list_focused_holo -> abs__list_focused_holo
    int abs__list_longpressed_holo -> abs__list_longpressed_holo
    int abs__list_pressed_holo_dark -> abs__list_pressed_holo_dark
    int abs__list_pressed_holo_light -> abs__list_pressed_holo_light
    int abs__list_selector_background_transition_holo_dark -> abs__list_selector_background_transition_holo_dark
    int abs__list_selector_background_transition_holo_light -> abs__list_selector_background_transition_holo_light
    int abs__list_selector_disabled_holo_dark -> abs__list_selector_disabled_holo_dark
    int abs__list_selector_disabled_holo_light -> abs__list_selector_disabled_holo_light
    int abs__list_selector_holo_dark -> abs__list_selector_holo_dark
    int abs__list_selector_holo_light -> abs__list_selector_holo_light
    int abs__menu_dropdown_panel_holo_dark -> abs__menu_dropdown_panel_holo_dark
    int abs__menu_dropdown_panel_holo_light -> abs__menu_dropdown_panel_holo_light
    int abs__progress_bg_holo_dark -> abs__progress_bg_holo_dark
    int abs__progress_bg_holo_light -> abs__progress_bg_holo_light
    int abs__progress_horizontal_holo_dark -> abs__progress_horizontal_holo_dark
    int abs__progress_horizontal_holo_light -> abs__progress_horizontal_holo_light
    int abs__progress_medium_holo -> abs__progress_medium_holo
    int abs__progress_primary_holo_dark -> abs__progress_primary_holo_dark
    int abs__progress_primary_holo_light -> abs__progress_primary_holo_light
    int abs__progress_secondary_holo_dark -> abs__progress_secondary_holo_dark
    int abs__progress_secondary_holo_light -> abs__progress_secondary_holo_light
    int abs__search_dropdown_dark -> abs__search_dropdown_dark
    int abs__search_dropdown_light -> abs__search_dropdown_light
    int abs__spinner_48_inner_holo -> abs__spinner_48_inner_holo
    int abs__spinner_48_outer_holo -> abs__spinner_48_outer_holo
    int abs__spinner_ab_default_holo_dark -> abs__spinner_ab_default_holo_dark
    int abs__spinner_ab_default_holo_light -> abs__spinner_ab_default_holo_light
    int abs__spinner_ab_disabled_holo_dark -> abs__spinner_ab_disabled_holo_dark
    int abs__spinner_ab_disabled_holo_light -> abs__spinner_ab_disabled_holo_light
    int abs__spinner_ab_focused_holo_dark -> abs__spinner_ab_focused_holo_dark
    int abs__spinner_ab_focused_holo_light -> abs__spinner_ab_focused_holo_light
    int abs__spinner_ab_holo_dark -> abs__spinner_ab_holo_dark
    int abs__spinner_ab_holo_light -> abs__spinner_ab_holo_light
    int abs__spinner_ab_pressed_holo_dark -> abs__spinner_ab_pressed_holo_dark
    int abs__spinner_ab_pressed_holo_light -> abs__spinner_ab_pressed_holo_light
    int abs__tab_indicator_ab_holo -> abs__tab_indicator_ab_holo
    int abs__tab_selected_focused_holo -> abs__tab_selected_focused_holo
    int abs__tab_selected_holo -> abs__tab_selected_holo
    int abs__tab_selected_pressed_holo -> abs__tab_selected_pressed_holo
    int abs__tab_unselected_pressed_holo -> abs__tab_unselected_pressed_holo
    int abs__textfield_search_default_holo_dark -> abs__textfield_search_default_holo_dark
    int abs__textfield_search_default_holo_light -> abs__textfield_search_default_holo_light
    int abs__textfield_search_right_default_holo_dark -> abs__textfield_search_right_default_holo_dark
    int abs__textfield_search_right_default_holo_light -> abs__textfield_search_right_default_holo_light
    int abs__textfield_search_right_selected_holo_dark -> abs__textfield_search_right_selected_holo_dark
    int abs__textfield_search_right_selected_holo_light -> abs__textfield_search_right_selected_holo_light
    int abs__textfield_search_selected_holo_dark -> abs__textfield_search_selected_holo_dark
    int abs__textfield_search_selected_holo_light -> abs__textfield_search_selected_holo_light
    int abs__textfield_searchview_holo_dark -> abs__textfield_searchview_holo_dark
    int abs__textfield_searchview_holo_light -> abs__textfield_searchview_holo_light
    int abs__textfield_searchview_right_holo_dark -> abs__textfield_searchview_right_holo_dark
    int abs__textfield_searchview_right_holo_light -> abs__textfield_searchview_right_holo_light
    int abs__toast_frame -> abs__toast_frame
com.actionbarsherlock.R$id -> com.actionbarsherlock.R$id:
    int abs__action_bar -> abs__action_bar
    int abs__action_bar_container -> abs__action_bar_container
    int abs__action_bar_subtitle -> abs__action_bar_subtitle
    int abs__action_bar_title -> abs__action_bar_title
    int abs__action_context_bar -> abs__action_context_bar
    int abs__action_menu_divider -> abs__action_menu_divider
    int abs__action_menu_presenter -> abs__action_menu_presenter
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_bar_stub -> abs__action_mode_bar_stub
    int abs__action_mode_close_button -> abs__action_mode_close_button
    int abs__activity_chooser_view_content -> abs__activity_chooser_view_content
    int abs__checkbox -> abs__checkbox
    int abs__content -> abs__content
    int abs__default_activity_button -> abs__default_activity_button
    int abs__expand_activities_button -> abs__expand_activities_button
    int abs__home -> abs__home
    int abs__icon -> abs__icon
    int abs__image -> abs__image
    int abs__imageButton -> abs__imageButton
    int abs__list_item -> abs__list_item
    int abs__progress_circular -> abs__progress_circular
    int abs__progress_horizontal -> abs__progress_horizontal
    int abs__radio -> abs__radio
    int abs__search_badge -> abs__search_badge
    int abs__search_bar -> abs__search_bar
    int abs__search_button -> abs__search_button
    int abs__search_close_btn -> abs__search_close_btn
    int abs__search_edit_frame -> abs__search_edit_frame
    int abs__search_go_btn -> abs__search_go_btn
    int abs__search_mag_icon -> abs__search_mag_icon
    int abs__search_plate -> abs__search_plate
    int abs__search_src_text -> abs__search_src_text
    int abs__search_voice_btn -> abs__search_voice_btn
    int abs__shortcut -> abs__shortcut
    int abs__split_action_bar -> abs__split_action_bar
    int abs__submit_area -> abs__submit_area
    int abs__textButton -> abs__textButton
    int abs__title -> abs__title
    int abs__up -> abs__up
    int disableHome -> disableHome
    int edit_query -> edit_query
    int homeAsUp -> homeAsUp
    int listMode -> listMode
    int normal -> normal
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int tabMode -> tabMode
    int useLogo -> useLogo
    int wrap_content -> wrap_content
com.actionbarsherlock.R$integer -> com.actionbarsherlock.R$integer:
    int abs__max_action_buttons -> abs__max_action_buttons
com.actionbarsherlock.R$layout -> com.actionbarsherlock.R$layout:
    int abs__action_bar_home -> abs__action_bar_home
    int abs__action_bar_tab -> abs__action_bar_tab
    int abs__action_bar_tab_bar_view -> abs__action_bar_tab_bar_view
    int abs__action_bar_title_item -> abs__action_bar_title_item
    int abs__action_menu_item_layout -> abs__action_menu_item_layout
    int abs__action_menu_layout -> abs__action_menu_layout
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_close_item -> abs__action_mode_close_item
    int abs__activity_chooser_view -> abs__activity_chooser_view
    int abs__activity_chooser_view_list_item -> abs__activity_chooser_view_list_item
    int abs__list_menu_item_checkbox -> abs__list_menu_item_checkbox
    int abs__list_menu_item_icon -> abs__list_menu_item_icon
    int abs__list_menu_item_radio -> abs__list_menu_item_radio
    int abs__popup_menu_item_layout -> abs__popup_menu_item_layout
    int abs__screen_action_bar -> abs__screen_action_bar
    int abs__screen_action_bar_overlay -> abs__screen_action_bar_overlay
    int abs__screen_simple -> abs__screen_simple
    int abs__screen_simple_overlay_action_mode -> abs__screen_simple_overlay_action_mode
    int abs__search_dropdown_item_icons_2line -> abs__search_dropdown_item_icons_2line
    int abs__search_view -> abs__search_view
    int abs__simple_dropdown_hint -> abs__simple_dropdown_hint
    int sherlock_spinner_dropdown_item -> sherlock_spinner_dropdown_item
    int sherlock_spinner_item -> sherlock_spinner_item
com.actionbarsherlock.R$string -> com.actionbarsherlock.R$string:
    int abs__action_bar_home_description -> abs__action_bar_home_description
    int abs__action_bar_up_description -> abs__action_bar_up_description
    int abs__action_menu_overflow_description -> abs__action_menu_overflow_description
    int abs__action_mode_done -> abs__action_mode_done
    int abs__activity_chooser_view_see_all -> abs__activity_chooser_view_see_all
    int abs__activitychooserview_choose_application -> abs__activitychooserview_choose_application
    int abs__searchview_description_clear -> abs__searchview_description_clear
    int abs__searchview_description_query -> abs__searchview_description_query
    int abs__searchview_description_search -> abs__searchview_description_search
    int abs__searchview_description_submit -> abs__searchview_description_submit
    int abs__searchview_description_voice -> abs__searchview_description_voice
    int abs__shareactionprovider_share_with -> abs__shareactionprovider_share_with
    int abs__shareactionprovider_share_with_application -> abs__shareactionprovider_share_with_application
com.actionbarsherlock.R$style -> com.actionbarsherlock.R$style:
    int Sherlock___TextAppearance_Small -> Sherlock___TextAppearance_Small
    int Sherlock___Theme -> Sherlock___Theme
    int Sherlock___Theme_DarkActionBar -> Sherlock___Theme_DarkActionBar
    int Sherlock___Theme_Light -> Sherlock___Theme_Light
    int Sherlock___Widget_ActionBar -> Sherlock___Widget_ActionBar
    int Sherlock___Widget_ActionMode -> Sherlock___Widget_ActionMode
    int Sherlock___Widget_ActivityChooserView -> Sherlock___Widget_ActivityChooserView
    int Sherlock___Widget_Holo_DropDownItem -> Sherlock___Widget_Holo_DropDownItem
    int Sherlock___Widget_Holo_ListView -> Sherlock___Widget_Holo_ListView
    int Sherlock___Widget_Holo_Spinner -> Sherlock___Widget_Holo_Spinner
    int Sherlock___Widget_SearchAutoCompleteTextView -> Sherlock___Widget_SearchAutoCompleteTextView
    int TextAppearance_Sherlock -> TextAppearance_Sherlock
    int TextAppearance_Sherlock_Light_SearchResult -> TextAppearance_Sherlock_Light_SearchResult
    int TextAppearance_Sherlock_Light_SearchResult_Subtitle -> TextAppearance_Sherlock_Light_SearchResult_Subtitle
    int TextAppearance_Sherlock_Light_SearchResult_Title -> TextAppearance_Sherlock_Light_SearchResult_Title
    int TextAppearance_Sherlock_Light_Small -> TextAppearance_Sherlock_Light_Small
    int TextAppearance_Sherlock_Light_Widget_PopupMenu_Large -> TextAppearance_Sherlock_Light_Widget_PopupMenu_Large
    int TextAppearance_Sherlock_Light_Widget_PopupMenu_Small -> TextAppearance_Sherlock_Light_Widget_PopupMenu_Small
    int TextAppearance_Sherlock_SearchResult -> TextAppearance_Sherlock_SearchResult
    int TextAppearance_Sherlock_SearchResult_Subtitle -> TextAppearance_Sherlock_SearchResult_Subtitle
    int TextAppearance_Sherlock_SearchResult_Title -> TextAppearance_Sherlock_SearchResult_Title
    int TextAppearance_Sherlock_Small -> TextAppearance_Sherlock_Small
    int TextAppearance_Sherlock_Widget_ActionBar_Menu -> TextAppearance_Sherlock_Widget_ActionBar_Menu
    int TextAppearance_Sherlock_Widget_ActionBar_Subtitle -> TextAppearance_Sherlock_Widget_ActionBar_Subtitle
    int TextAppearance_Sherlock_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_Sherlock_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_Sherlock_Widget_ActionBar_Title -> TextAppearance_Sherlock_Widget_ActionBar_Title
    int TextAppearance_Sherlock_Widget_ActionBar_Title_Inverse -> TextAppearance_Sherlock_Widget_ActionBar_Title_Inverse
    int TextAppearance_Sherlock_Widget_ActionMode_Subtitle -> TextAppearance_Sherlock_Widget_ActionMode_Subtitle
    int TextAppearance_Sherlock_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_Sherlock_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_Sherlock_Widget_ActionMode_Title -> TextAppearance_Sherlock_Widget_ActionMode_Title
    int TextAppearance_Sherlock_Widget_ActionMode_Title_Inverse -> TextAppearance_Sherlock_Widget_ActionMode_Title_Inverse
    int TextAppearance_Sherlock_Widget_DropDownHint -> TextAppearance_Sherlock_Widget_DropDownHint
    int TextAppearance_Sherlock_Widget_DropDownItem -> TextAppearance_Sherlock_Widget_DropDownItem
    int TextAppearance_Sherlock_Widget_PopupMenu -> TextAppearance_Sherlock_Widget_PopupMenu
    int TextAppearance_Sherlock_Widget_PopupMenu_Large -> TextAppearance_Sherlock_Widget_PopupMenu_Large
    int TextAppearance_Sherlock_Widget_PopupMenu_Small -> TextAppearance_Sherlock_Widget_PopupMenu_Small
    int TextAppearance_Sherlock_Widget_TextView_SpinnerItem -> TextAppearance_Sherlock_Widget_TextView_SpinnerItem
    int Theme_Sherlock -> Theme_Sherlock
    int Theme_Sherlock_Light -> Theme_Sherlock_Light
    int Theme_Sherlock_Light_DarkActionBar -> Theme_Sherlock_Light_DarkActionBar
    int Theme_Sherlock_Light_NoActionBar -> Theme_Sherlock_Light_NoActionBar
    int Theme_Sherlock_NoActionBar -> Theme_Sherlock_NoActionBar
    int Widget -> Widget
    int Widget_Sherlock_ActionBar -> Widget_Sherlock_ActionBar
    int Widget_Sherlock_ActionBar_Solid -> Widget_Sherlock_ActionBar_Solid
    int Widget_Sherlock_ActionBar_TabBar -> Widget_Sherlock_ActionBar_TabBar
    int Widget_Sherlock_ActionBar_TabText -> Widget_Sherlock_ActionBar_TabText
    int Widget_Sherlock_ActionBar_TabView -> Widget_Sherlock_ActionBar_TabView
    int Widget_Sherlock_ActionButton -> Widget_Sherlock_ActionButton
    int Widget_Sherlock_ActionButton_CloseMode -> Widget_Sherlock_ActionButton_CloseMode
    int Widget_Sherlock_ActionButton_Overflow -> Widget_Sherlock_ActionButton_Overflow
    int Widget_Sherlock_ActionMode -> Widget_Sherlock_ActionMode
    int Widget_Sherlock_ActivityChooserView -> Widget_Sherlock_ActivityChooserView
    int Widget_Sherlock_Button_Small -> Widget_Sherlock_Button_Small
    int Widget_Sherlock_DropDownItem_Spinner -> Widget_Sherlock_DropDownItem_Spinner
    int Widget_Sherlock_Light_ActionBar -> Widget_Sherlock_Light_ActionBar
    int Widget_Sherlock_Light_ActionBar_Solid -> Widget_Sherlock_Light_ActionBar_Solid
    int Widget_Sherlock_Light_ActionBar_Solid_Inverse -> Widget_Sherlock_Light_ActionBar_Solid_Inverse
    int Widget_Sherlock_Light_ActionBar_TabBar -> Widget_Sherlock_Light_ActionBar_TabBar
    int Widget_Sherlock_Light_ActionBar_TabBar_Inverse -> Widget_Sherlock_Light_ActionBar_TabBar_Inverse
    int Widget_Sherlock_Light_ActionBar_TabText -> Widget_Sherlock_Light_ActionBar_TabText
    int Widget_Sherlock_Light_ActionBar_TabText_Inverse -> Widget_Sherlock_Light_ActionBar_TabText_Inverse
    int Widget_Sherlock_Light_ActionBar_TabView -> Widget_Sherlock_Light_ActionBar_TabView
    int Widget_Sherlock_Light_ActionBar_TabView_Inverse -> Widget_Sherlock_Light_ActionBar_TabView_Inverse
    int Widget_Sherlock_Light_ActionButton -> Widget_Sherlock_Light_ActionButton
    int Widget_Sherlock_Light_ActionButton_CloseMode -> Widget_Sherlock_Light_ActionButton_CloseMode
    int Widget_Sherlock_Light_ActionButton_Overflow -> Widget_Sherlock_Light_ActionButton_Overflow
    int Widget_Sherlock_Light_ActionMode -> Widget_Sherlock_Light_ActionMode
    int Widget_Sherlock_Light_ActionMode_Inverse -> Widget_Sherlock_Light_ActionMode_Inverse
    int Widget_Sherlock_Light_ActivityChooserView -> Widget_Sherlock_Light_ActivityChooserView
    int Widget_Sherlock_Light_Button_Small -> Widget_Sherlock_Light_Button_Small
    int Widget_Sherlock_Light_DropDownItem_Spinner -> Widget_Sherlock_Light_DropDownItem_Spinner
    int Widget_Sherlock_Light_ListPopupWindow -> Widget_Sherlock_Light_ListPopupWindow
    int Widget_Sherlock_Light_ListView_DropDown -> Widget_Sherlock_Light_ListView_DropDown
    int Widget_Sherlock_Light_PopupMenu -> Widget_Sherlock_Light_PopupMenu
    int Widget_Sherlock_Light_PopupWindow_ActionMode -> Widget_Sherlock_Light_PopupWindow_ActionMode
    int Widget_Sherlock_Light_ProgressBar -> Widget_Sherlock_Light_ProgressBar
    int Widget_Sherlock_Light_ProgressBar_Horizontal -> Widget_Sherlock_Light_ProgressBar_Horizontal
    int Widget_Sherlock_Light_SearchAutoCompleteTextView -> Widget_Sherlock_Light_SearchAutoCompleteTextView
    int Widget_Sherlock_Light_Spinner_DropDown_ActionBar -> Widget_Sherlock_Light_Spinner_DropDown_ActionBar
    int Widget_Sherlock_ListPopupWindow -> Widget_Sherlock_ListPopupWindow
    int Widget_Sherlock_ListView_DropDown -> Widget_Sherlock_ListView_DropDown
    int Widget_Sherlock_PopupMenu -> Widget_Sherlock_PopupMenu
    int Widget_Sherlock_PopupWindow_ActionMode -> Widget_Sherlock_PopupWindow_ActionMode
    int Widget_Sherlock_ProgressBar -> Widget_Sherlock_ProgressBar
    int Widget_Sherlock_ProgressBar_Horizontal -> Widget_Sherlock_ProgressBar_Horizontal
    int Widget_Sherlock_SearchAutoCompleteTextView -> Widget_Sherlock_SearchAutoCompleteTextView
    int Widget_Sherlock_Spinner_DropDown_ActionBar -> Widget_Sherlock_Spinner_DropDown_ActionBar
    int Widget_Sherlock_TextView_SpinnerItem -> Widget_Sherlock_TextView_SpinnerItem
com.actionbarsherlock.R$styleable -> com.actionbarsherlock.R$styleable:
    int[] SherlockActionBar -> SherlockActionBar
    int SherlockActionBar_background -> SherlockActionBar_background
    int SherlockActionBar_backgroundSplit -> SherlockActionBar_backgroundSplit
    int SherlockActionBar_backgroundStacked -> SherlockActionBar_backgroundStacked
    int SherlockActionBar_customNavigationLayout -> SherlockActionBar_customNavigationLayout
    int SherlockActionBar_displayOptions -> SherlockActionBar_displayOptions
    int SherlockActionBar_divider -> SherlockActionBar_divider
    int SherlockActionBar_height -> SherlockActionBar_height
    int SherlockActionBar_homeLayout -> SherlockActionBar_homeLayout
    int SherlockActionBar_icon -> SherlockActionBar_icon
    int SherlockActionBar_indeterminateProgressStyle -> SherlockActionBar_indeterminateProgressStyle
    int SherlockActionBar_itemPadding -> SherlockActionBar_itemPadding
    int SherlockActionBar_logo -> SherlockActionBar_logo
    int SherlockActionBar_navigationMode -> SherlockActionBar_navigationMode
    int SherlockActionBar_progressBarPadding -> SherlockActionBar_progressBarPadding
    int SherlockActionBar_progressBarStyle -> SherlockActionBar_progressBarStyle
    int SherlockActionBar_subtitle -> SherlockActionBar_subtitle
    int SherlockActionBar_subtitleTextStyle -> SherlockActionBar_subtitleTextStyle
    int SherlockActionBar_title -> SherlockActionBar_title
    int SherlockActionBar_titleTextStyle -> SherlockActionBar_titleTextStyle
    int[] SherlockActionMenuItemView -> SherlockActionMenuItemView
    int SherlockActionMenuItemView_android_minWidth -> SherlockActionMenuItemView_android_minWidth
    int[] SherlockActionMode -> SherlockActionMode
    int SherlockActionMode_background -> SherlockActionMode_background
    int SherlockActionMode_backgroundSplit -> SherlockActionMode_backgroundSplit
    int SherlockActionMode_height -> SherlockActionMode_height
    int SherlockActionMode_subtitleTextStyle -> SherlockActionMode_subtitleTextStyle
    int SherlockActionMode_titleTextStyle -> SherlockActionMode_titleTextStyle
    int[] SherlockActivityChooserView -> SherlockActivityChooserView
    int SherlockActivityChooserView_android_background -> SherlockActivityChooserView_android_background
    int SherlockActivityChooserView_expandActivityOverflowButtonDrawable -> SherlockActivityChooserView_expandActivityOverflowButtonDrawable
    int SherlockActivityChooserView_initialActivityCount -> SherlockActivityChooserView_initialActivityCount
    int[] SherlockMenuGroup -> SherlockMenuGroup
    int SherlockMenuGroup_android_checkableBehavior -> SherlockMenuGroup_android_checkableBehavior
    int SherlockMenuGroup_android_enabled -> SherlockMenuGroup_android_enabled
    int SherlockMenuGroup_android_id -> SherlockMenuGroup_android_id
    int SherlockMenuGroup_android_menuCategory -> SherlockMenuGroup_android_menuCategory
    int SherlockMenuGroup_android_orderInCategory -> SherlockMenuGroup_android_orderInCategory
    int SherlockMenuGroup_android_visible -> SherlockMenuGroup_android_visible
    int[] SherlockMenuItem -> SherlockMenuItem
    int SherlockMenuItem_android_actionLayout -> SherlockMenuItem_android_actionLayout
    int SherlockMenuItem_android_actionProviderClass -> SherlockMenuItem_android_actionProviderClass
    int SherlockMenuItem_android_actionViewClass -> SherlockMenuItem_android_actionViewClass
    int SherlockMenuItem_android_alphabeticShortcut -> SherlockMenuItem_android_alphabeticShortcut
    int SherlockMenuItem_android_checkable -> SherlockMenuItem_android_checkable
    int SherlockMenuItem_android_checked -> SherlockMenuItem_android_checked
    int SherlockMenuItem_android_enabled -> SherlockMenuItem_android_enabled
    int SherlockMenuItem_android_icon -> SherlockMenuItem_android_icon
    int SherlockMenuItem_android_id -> SherlockMenuItem_android_id
    int SherlockMenuItem_android_menuCategory -> SherlockMenuItem_android_menuCategory
    int SherlockMenuItem_android_numericShortcut -> SherlockMenuItem_android_numericShortcut
    int SherlockMenuItem_android_onClick -> SherlockMenuItem_android_onClick
    int SherlockMenuItem_android_orderInCategory -> SherlockMenuItem_android_orderInCategory
    int SherlockMenuItem_android_showAsAction -> SherlockMenuItem_android_showAsAction
    int SherlockMenuItem_android_title -> SherlockMenuItem_android_title
    int SherlockMenuItem_android_titleCondensed -> SherlockMenuItem_android_titleCondensed
    int SherlockMenuItem_android_visible -> SherlockMenuItem_android_visible
    int[] SherlockMenuView -> SherlockMenuView
    int SherlockMenuView_headerBackground -> SherlockMenuView_headerBackground
    int SherlockMenuView_horizontalDivider -> SherlockMenuView_horizontalDivider
    int SherlockMenuView_itemBackground -> SherlockMenuView_itemBackground
    int SherlockMenuView_itemIconDisabledAlpha -> SherlockMenuView_itemIconDisabledAlpha
    int SherlockMenuView_itemTextAppearance -> SherlockMenuView_itemTextAppearance
    int SherlockMenuView_preserveIconSpacing -> SherlockMenuView_preserveIconSpacing
    int SherlockMenuView_verticalDivider -> SherlockMenuView_verticalDivider
    int SherlockMenuView_windowAnimationStyle -> SherlockMenuView_windowAnimationStyle
    int[] SherlockSearchView -> SherlockSearchView
    int SherlockSearchView_android_imeOptions -> SherlockSearchView_android_imeOptions
    int SherlockSearchView_android_inputType -> SherlockSearchView_android_inputType
    int SherlockSearchView_android_maxWidth -> SherlockSearchView_android_maxWidth
    int SherlockSearchView_iconifiedByDefault -> SherlockSearchView_iconifiedByDefault
    int SherlockSearchView_queryHint -> SherlockSearchView_queryHint
    int[] SherlockSpinner -> SherlockSpinner
    int SherlockSpinner_android_dropDownHorizontalOffset -> SherlockSpinner_android_dropDownHorizontalOffset
    int SherlockSpinner_android_dropDownSelector -> SherlockSpinner_android_dropDownSelector
    int SherlockSpinner_android_dropDownVerticalOffset -> SherlockSpinner_android_dropDownVerticalOffset
    int SherlockSpinner_android_dropDownWidth -> SherlockSpinner_android_dropDownWidth
    int SherlockSpinner_android_gravity -> SherlockSpinner_android_gravity
    int SherlockSpinner_android_popupBackground -> SherlockSpinner_android_popupBackground
    int SherlockSpinner_android_popupPromptView -> SherlockSpinner_android_popupPromptView
    int SherlockSpinner_android_prompt -> SherlockSpinner_android_prompt
    int[] SherlockTheme -> SherlockTheme
    int SherlockTheme_actionBarDivider -> SherlockTheme_actionBarDivider
    int SherlockTheme_actionBarItemBackground -> SherlockTheme_actionBarItemBackground
    int SherlockTheme_actionBarSize -> SherlockTheme_actionBarSize
    int SherlockTheme_actionBarSplitStyle -> SherlockTheme_actionBarSplitStyle
    int SherlockTheme_actionBarStyle -> SherlockTheme_actionBarStyle
    int SherlockTheme_actionBarTabBarStyle -> SherlockTheme_actionBarTabBarStyle
    int SherlockTheme_actionBarTabStyle -> SherlockTheme_actionBarTabStyle
    int SherlockTheme_actionBarTabTextStyle -> SherlockTheme_actionBarTabTextStyle
    int SherlockTheme_actionBarWidgetTheme -> SherlockTheme_actionBarWidgetTheme
    int SherlockTheme_actionButtonStyle -> SherlockTheme_actionButtonStyle
    int SherlockTheme_actionDropDownStyle -> SherlockTheme_actionDropDownStyle
    int SherlockTheme_actionMenuTextAppearance -> SherlockTheme_actionMenuTextAppearance
    int SherlockTheme_actionMenuTextColor -> SherlockTheme_actionMenuTextColor
    int SherlockTheme_actionModeBackground -> SherlockTheme_actionModeBackground
    int SherlockTheme_actionModeCloseButtonStyle -> SherlockTheme_actionModeCloseButtonStyle
    int SherlockTheme_actionModeCloseDrawable -> SherlockTheme_actionModeCloseDrawable
    int SherlockTheme_actionModePopupWindowStyle -> SherlockTheme_actionModePopupWindowStyle
    int SherlockTheme_actionModeShareDrawable -> SherlockTheme_actionModeShareDrawable
    int SherlockTheme_actionModeSplitBackground -> SherlockTheme_actionModeSplitBackground
    int SherlockTheme_actionModeStyle -> SherlockTheme_actionModeStyle
    int SherlockTheme_actionOverflowButtonStyle -> SherlockTheme_actionOverflowButtonStyle
    int SherlockTheme_actionSpinnerItemStyle -> SherlockTheme_actionSpinnerItemStyle
    int SherlockTheme_activatedBackgroundIndicator -> SherlockTheme_activatedBackgroundIndicator
    int SherlockTheme_activityChooserViewStyle -> SherlockTheme_activityChooserViewStyle
    int SherlockTheme_buttonStyleSmall -> SherlockTheme_buttonStyleSmall
    int SherlockTheme_dividerVertical -> SherlockTheme_dividerVertical
    int SherlockTheme_dropDownHintAppearance -> SherlockTheme_dropDownHintAppearance
    int SherlockTheme_dropDownListViewStyle -> SherlockTheme_dropDownListViewStyle
    int SherlockTheme_dropdownListPreferredItemHeight -> SherlockTheme_dropdownListPreferredItemHeight
    int SherlockTheme_homeAsUpIndicator -> SherlockTheme_homeAsUpIndicator
    int SherlockTheme_listPopupWindowStyle -> SherlockTheme_listPopupWindowStyle
    int SherlockTheme_listPreferredItemHeightSmall -> SherlockTheme_listPreferredItemHeightSmall
    int SherlockTheme_listPreferredItemPaddingLeft -> SherlockTheme_listPreferredItemPaddingLeft
    int SherlockTheme_listPreferredItemPaddingRight -> SherlockTheme_listPreferredItemPaddingRight
    int SherlockTheme_popupMenuStyle -> SherlockTheme_popupMenuStyle
    int SherlockTheme_searchAutoCompleteTextView -> SherlockTheme_searchAutoCompleteTextView
    int SherlockTheme_searchDropdownBackground -> SherlockTheme_searchDropdownBackground
    int SherlockTheme_searchResultListItemHeight -> SherlockTheme_searchResultListItemHeight
    int SherlockTheme_searchViewCloseIcon -> SherlockTheme_searchViewCloseIcon
    int SherlockTheme_searchViewEditQuery -> SherlockTheme_searchViewEditQuery
    int SherlockTheme_searchViewEditQueryBackground -> SherlockTheme_searchViewEditQueryBackground
    int SherlockTheme_searchViewGoIcon -> SherlockTheme_searchViewGoIcon
    int SherlockTheme_searchViewSearchIcon -> SherlockTheme_searchViewSearchIcon
    int SherlockTheme_searchViewTextField -> SherlockTheme_searchViewTextField
    int SherlockTheme_searchViewTextFieldRight -> SherlockTheme_searchViewTextFieldRight
    int SherlockTheme_searchViewVoiceIcon -> SherlockTheme_searchViewVoiceIcon
    int SherlockTheme_selectableItemBackground -> SherlockTheme_selectableItemBackground
    int SherlockTheme_spinnerDropDownItemStyle -> SherlockTheme_spinnerDropDownItemStyle
    int SherlockTheme_spinnerItemStyle -> SherlockTheme_spinnerItemStyle
    int SherlockTheme_textAppearanceLargePopupMenu -> SherlockTheme_textAppearanceLargePopupMenu
    int SherlockTheme_textAppearanceListItemSmall -> SherlockTheme_textAppearanceListItemSmall
    int SherlockTheme_textAppearanceSearchResultSubtitle -> SherlockTheme_textAppearanceSearchResultSubtitle
    int SherlockTheme_textAppearanceSearchResultTitle -> SherlockTheme_textAppearanceSearchResultTitle
    int SherlockTheme_textAppearanceSmall -> SherlockTheme_textAppearanceSmall
    int SherlockTheme_textAppearanceSmallPopupMenu -> SherlockTheme_textAppearanceSmallPopupMenu
    int SherlockTheme_textColorPrimary -> SherlockTheme_textColorPrimary
    int SherlockTheme_textColorPrimaryDisableOnly -> SherlockTheme_textColorPrimaryDisableOnly
    int SherlockTheme_textColorPrimaryInverse -> SherlockTheme_textColorPrimaryInverse
    int SherlockTheme_textColorSearchUrl -> SherlockTheme_textColorSearchUrl
    int SherlockTheme_windowActionBar -> SherlockTheme_windowActionBar
    int SherlockTheme_windowActionBarOverlay -> SherlockTheme_windowActionBarOverlay
    int SherlockTheme_windowActionModeOverlay -> SherlockTheme_windowActionModeOverlay
    int SherlockTheme_windowContentOverlay -> SherlockTheme_windowContentOverlay
    int SherlockTheme_windowMinWidthMajor -> SherlockTheme_windowMinWidthMajor
    int SherlockTheme_windowMinWidthMinor -> SherlockTheme_windowMinWidthMinor
    int SherlockTheme_windowNoTitle -> SherlockTheme_windowNoTitle
    int SherlockTheme_windowSplitActionBar -> SherlockTheme_windowSplitActionBar
    int[] SherlockView -> SherlockView
    int SherlockView_android_focusable -> SherlockView_android_focusable
com.actionbarsherlock.app.ActionBar -> com.actionbarsherlock.app.ActionBar:
    int NAVIGATION_MODE_STANDARD -> NAVIGATION_MODE_STANDARD
    int NAVIGATION_MODE_LIST -> NAVIGATION_MODE_LIST
    int NAVIGATION_MODE_TABS -> NAVIGATION_MODE_TABS
    int DISPLAY_USE_LOGO -> DISPLAY_USE_LOGO
    int DISPLAY_SHOW_HOME -> DISPLAY_SHOW_HOME
    int DISPLAY_HOME_AS_UP -> DISPLAY_HOME_AS_UP
    int DISPLAY_SHOW_TITLE -> DISPLAY_SHOW_TITLE
    int DISPLAY_SHOW_CUSTOM -> DISPLAY_SHOW_CUSTOM
    void setCustomView(android.view.View) -> setCustomView
    void setCustomView(android.view.View,com.actionbarsherlock.app.ActionBar$LayoutParams) -> setCustomView
    void setCustomView(int) -> setCustomView
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setListNavigationCallbacks(android.widget.SpinnerAdapter,com.actionbarsherlock.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    int getNavigationItemCount() -> getNavigationItemCount
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setDisplayOptions(int) -> setDisplayOptions
    void setDisplayOptions(int,int) -> setDisplayOptions
    void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    int getNavigationMode() -> getNavigationMode
    void setNavigationMode(int) -> setNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    com.actionbarsherlock.app.ActionBar$Tab newTab() -> newTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean) -> addTab
    void removeTab(com.actionbarsherlock.app.ActionBar$Tab) -> removeTab
    void removeTabAt(int) -> removeTabAt
    void removeAllTabs() -> removeAllTabs
    void selectTab(com.actionbarsherlock.app.ActionBar$Tab) -> selectTab
    com.actionbarsherlock.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    com.actionbarsherlock.app.ActionBar$Tab getTabAt(int) -> getTabAt
    int getTabCount() -> getTabCount
    int getHeight() -> getHeight
    void show() -> show
    void hide() -> hide
    boolean isShowing() -> isShowing
    void addOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    void removeOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    android.content.Context getThemedContext() -> getThemedContext
com.actionbarsherlock.app.ActionBar$LayoutParams -> com.actionbarsherlock.app.ActionBar$LayoutParams:
    int[] ATTRS -> a
    int gravity -> gravity
com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener -> com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener:
    void onMenuVisibilityChanged(boolean) -> onMenuVisibilityChanged
com.actionbarsherlock.app.ActionBar$OnNavigationListener -> com.actionbarsherlock.app.ActionBar$OnNavigationListener:
    boolean onNavigationItemSelected(int,long) -> onNavigationItemSelected
com.actionbarsherlock.app.ActionBar$Tab -> com.actionbarsherlock.app.ActionBar$Tab:
    int INVALID_POSITION -> INVALID_POSITION
    int getPosition() -> getPosition
    android.graphics.drawable.Drawable getIcon() -> getIcon
    java.lang.CharSequence getText() -> getText
    com.actionbarsherlock.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setIcon(int) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setText(java.lang.CharSequence) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setText(int) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(android.view.View) -> setCustomView
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(int) -> setCustomView
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.app.ActionBar$Tab setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    com.actionbarsherlock.app.ActionBar$Tab setTabListener(com.actionbarsherlock.app.ActionBar$TabListener) -> setTabListener
    void select() -> select
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(int) -> setContentDescription
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
com.actionbarsherlock.app.ActionBar$TabListener -> com.actionbarsherlock.app.ActionBar$TabListener:
    void onTabSelected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabSelected
    void onTabUnselected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabUnselected
    void onTabReselected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabReselected
com.actionbarsherlock.app.SherlockActivity -> com.actionbarsherlock.app.SherlockActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> a
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.app.SherlockDialogFragment -> com.actionbarsherlock.app.SherlockDialogFragment:
    com.actionbarsherlock.app.SherlockFragmentActivity mActivity -> a
    com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity() -> getSherlockActivity
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
com.actionbarsherlock.app.SherlockExpandableListActivity -> com.actionbarsherlock.app.SherlockExpandableListActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> a
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.app.SherlockFragment -> com.actionbarsherlock.app.SherlockFragment:
    com.actionbarsherlock.app.SherlockFragmentActivity mActivity -> a
    com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity() -> getSherlockActivity
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
com.actionbarsherlock.app.SherlockFragmentActivity -> com.actionbarsherlock.app.SherlockFragmentActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> a
    boolean mIgnoreNativeCreate -> b
    boolean mIgnoreNativePrepare -> c
    boolean mIgnoreNativeSelected -> d
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.app.SherlockListActivity -> com.actionbarsherlock.app.SherlockListActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> a
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.app.SherlockListFragment -> com.actionbarsherlock.app.SherlockListFragment:
    com.actionbarsherlock.app.SherlockFragmentActivity mActivity -> a
    com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity() -> getSherlockActivity
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
com.actionbarsherlock.app.SherlockPreferenceActivity -> com.actionbarsherlock.app.SherlockPreferenceActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> a
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.internal.ActionBarSherlockCompat -> com.actionbarsherlock.internal.ActionBarSherlockCompat:
    int DEFAULT_FEATURES -> DEFAULT_FEATURES
    boolean mReserveOverflow -> a
    boolean mReserveOverflowSet -> b
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> c
    java.util.HashMap mNativeItemMap -> mNativeItemMap
    android.view.ViewGroup mDecor -> d
    android.view.ViewGroup mContentParent -> e
    boolean mIsTitleReady -> f
    boolean mIsDestroyed -> g
    boolean mClosingActionMenu -> h
    boolean mMenuIsPrepared -> i
    boolean mMenuRefreshContent -> j
    android.os.Bundle mMenuFrozenActionViewState -> k
    com.actionbarsherlock.internal.app.ActionBarImpl aActionBar -> l
    com.actionbarsherlock.internal.widget.ActionBarView wActionBar -> m
    int mFeatures -> n
    int mUiOptions -> o
    com.actionbarsherlock.internal.widget.IcsProgressBar mCircularProgressBar -> p
    com.actionbarsherlock.internal.widget.IcsProgressBar mHorizontalProgressBar -> q
    com.actionbarsherlock.view.ActionMode mActionMode -> r
    com.actionbarsherlock.internal.widget.ActionBarContextView mActionModeView -> s
    com.actionbarsherlock.app.ActionBar getActionBar() -> getActionBar
    void initActionBar() -> a
    android.content.Context getThemedContext() -> getThemedContext
    void setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchPostResume() -> dispatchPostResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchInvalidateOptionsMenu() -> dispatchInvalidateOptionsMenu
    boolean dispatchOpenOptionsMenu() -> dispatchOpenOptionsMenu
    boolean dispatchCloseOptionsMenu() -> dispatchCloseOptionsMenu
    void dispatchPostCreate(android.os.Bundle) -> dispatchPostCreate
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchMenuOpened(int,android.view.Menu) -> dispatchMenuOpened
    void dispatchPanelClosed(int,android.view.Menu) -> dispatchPanelClosed
    void dispatchTitleChanged(java.lang.CharSequence,int) -> dispatchTitleChanged
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void dispatchDestroy() -> dispatchDestroy
    void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    boolean preparePanel() -> b
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onMenuModeChange
    void reopenMenu(boolean) -> a
    boolean initializePanelMenu() -> c
    void checkCloseActionMenu(com.actionbarsherlock.view.Menu) -> a
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onOpenSubMenu
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void setProgressBarVisibility(boolean) -> setProgressBarVisibility
    void setProgressBarIndeterminateVisibility(boolean) -> setProgressBarIndeterminateVisibility
    void setProgressBarIndeterminate(boolean) -> setProgressBarIndeterminate
    void setProgress(int) -> setProgress
    void setSecondaryProgress(int) -> setSecondaryProgress
    void setFeatureInt(int,int) -> a
    void updateInt(int,int,boolean) -> a
    void onIntChanged(int,int) -> b
    void updateProgressBars(int) -> a
    void showProgressBars(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar) -> a
    void hideProgressBars(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar) -> b
    com.actionbarsherlock.internal.widget.IcsProgressBar getCircularProgressBar(boolean) -> b
    com.actionbarsherlock.internal.widget.IcsProgressBar getHorizontalProgressBar(boolean) -> c
    int getFeatures() -> d
    boolean hasFeature(int) -> hasFeature
    boolean requestFeature(int) -> requestFeature
    void setUiOptions(int) -> setUiOptions
    void setUiOptions(int,int) -> setUiOptions
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void installDecor() -> e
    android.view.ViewGroup generateLayout() -> f
    boolean isReservingOverflow() -> g
    int loadUiOptionsFromManifest(android.app.Activity) -> a
    java.lang.String cleanActivityName(java.lang.String,java.lang.String) -> cleanActivityName
    void ensureActionBar() -> ensureActionBar
    com.actionbarsherlock.internal.widget.ActionBarContextView access$0(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> a
    android.app.Activity access$1(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> b
    com.actionbarsherlock.view.ActionMode access$2(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> c
    void access$3(com.actionbarsherlock.internal.ActionBarSherlockCompat,com.actionbarsherlock.view.ActionMode) -> a
    boolean access$4(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> d
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$5(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> e
com.actionbarsherlock.internal.ActionBarSherlockCompat$1 -> a:
    com.actionbarsherlock.internal.ActionBarSherlockCompat this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper -> b:
    com.actionbarsherlock.view.ActionMode$Callback mWrapped -> b
    com.actionbarsherlock.internal.ActionBarSherlockCompat this$0 -> a
    boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(com.actionbarsherlock.view.ActionMode) -> onDestroyActionMode
com.actionbarsherlock.internal.ActionBarSherlockNative -> com.actionbarsherlock.internal.ActionBarSherlockNative:
    com.actionbarsherlock.internal.app.ActionBarWrapper mActionBar -> a
    com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper mActionMode -> b
    com.actionbarsherlock.internal.view.menu.MenuWrapper mMenu -> c
    com.actionbarsherlock.app.ActionBar getActionBar() -> getActionBar
    void initActionBar() -> a
    void dispatchInvalidateOptionsMenu() -> dispatchInvalidateOptionsMenu
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean hasFeature(int) -> hasFeature
    boolean requestFeature(int) -> requestFeature
    void setUiOptions(int) -> setUiOptions
    void setUiOptions(int,int) -> setUiOptions
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setProgressBarVisibility(boolean) -> setProgressBarVisibility
    void setProgressBarIndeterminateVisibility(boolean) -> setProgressBarIndeterminateVisibility
    void setProgressBarIndeterminate(boolean) -> setProgressBarIndeterminate
    void setProgress(int) -> setProgress
    void setSecondaryProgress(int) -> setSecondaryProgress
    android.content.Context getThemedContext() -> getThemedContext
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void access$0(com.actionbarsherlock.internal.ActionBarSherlockNative,com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper) -> a
    com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper access$1(com.actionbarsherlock.internal.ActionBarSherlockNative) -> a
    android.app.Activity access$2(com.actionbarsherlock.internal.ActionBarSherlockNative) -> b
com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper -> c:
    com.actionbarsherlock.view.ActionMode$Callback mCallback -> b
    com.actionbarsherlock.internal.ActionBarSherlockNative this$0 -> a
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper -> d:
    android.view.ActionMode mActionMode -> b
    com.actionbarsherlock.internal.view.menu.MenuWrapper mMenu -> c
    com.actionbarsherlock.internal.ActionBarSherlockNative this$0 -> a
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setCustomView(android.view.View) -> setCustomView
    void invalidate() -> invalidate
    void finish() -> finish
    com.actionbarsherlock.internal.view.menu.MenuWrapper getMenu() -> a
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    void setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    com.actionbarsherlock.view.Menu getMenu() -> getMenu
com.actionbarsherlock.internal.ResourcesCompat -> com.actionbarsherlock.internal.ResourcesCompat:
    boolean getResources_getBoolean(android.content.Context,int) -> getResources_getBoolean
    int getResources_getInteger(android.content.Context,int) -> getResources_getInteger
    int loadLogoFromManifest(android.app.Activity) -> loadLogoFromManifest
com.actionbarsherlock.internal.app.ActionBarImpl -> com.actionbarsherlock.internal.app.ActionBarImpl:
    android.content.Context mContext -> h
    android.content.Context mThemedContext -> i
    android.app.Activity mActivity -> j
    com.actionbarsherlock.internal.widget.ActionBarContainer mContainerView -> k
    com.actionbarsherlock.internal.widget.ActionBarView mActionView -> l
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> m
    com.actionbarsherlock.internal.widget.ActionBarContainer mSplitView -> n
    com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout mContentView -> o
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mTabScrollView -> p
    java.util.ArrayList mTabs -> q
    com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl mSelectedTab -> r
    int mSavedTabPosition -> s
    com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl mActionMode -> a
    com.actionbarsherlock.view.ActionMode mDeferredDestroyActionMode -> b
    com.actionbarsherlock.view.ActionMode$Callback mDeferredModeDestroyCallback -> c
    boolean mLastMenuVisibility -> t
    java.util.ArrayList mMenuVisibilityListeners -> u
    int mContextDisplayMode -> v
    boolean mHasEmbeddedTabs -> w
    android.os.Handler mHandler -> d
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentShowAnim -> x
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentModeAnim -> y
    boolean mShowHideAnimationEnabled -> z
    boolean mWasHiddenBeforeMode -> e
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener mHideListener -> f
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener mShowListener -> g
    void init(android.view.View) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setHasEmbeddedTabs(boolean) -> c
    void ensureTabsExist() -> b
    void completeDeferredDestroyActionMode() -> a
    void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    void addOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    void removeOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    void setCustomView(int) -> setCustomView
    void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    void setTitle(int) -> setTitle
    void setSubtitle(int) -> setSubtitle
    void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    void removeAllTabs() -> removeAllTabs
    void cleanupTabs() -> c
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setDisplayOptions(int) -> setDisplayOptions
    void setDisplayOptions(int,int) -> setDisplayOptions
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    int getNavigationMode() -> getNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void configureTab(com.actionbarsherlock.app.ActionBar$Tab,int) -> a
    void addTab(com.actionbarsherlock.app.ActionBar$Tab) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean) -> addTab
    com.actionbarsherlock.app.ActionBar$Tab newTab() -> newTab
    void removeTab(com.actionbarsherlock.app.ActionBar$Tab) -> removeTab
    void removeTabAt(int) -> removeTabAt
    void selectTab(com.actionbarsherlock.app.ActionBar$Tab) -> selectTab
    com.actionbarsherlock.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    int getHeight() -> getHeight
    void show() -> show
    void show(boolean) -> a
    void hide() -> hide
    boolean isShowing() -> isShowing
    void animateToMode(boolean) -> b
    android.content.Context getThemedContext() -> getThemedContext
    void setCustomView(android.view.View) -> setCustomView
    void setCustomView(android.view.View,com.actionbarsherlock.app.ActionBar$LayoutParams) -> setCustomView
    void setListNavigationCallbacks(android.widget.SpinnerAdapter,com.actionbarsherlock.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    int getNavigationItemCount() -> getNavigationItemCount
    int getTabCount() -> getTabCount
    void setNavigationMode(int) -> setNavigationMode
    com.actionbarsherlock.app.ActionBar$Tab getTabAt(int) -> getTabAt
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout access$0(com.actionbarsherlock.internal.app.ActionBarImpl) -> a
    com.actionbarsherlock.internal.widget.ActionBarContainer access$1(com.actionbarsherlock.internal.app.ActionBarImpl) -> b
    com.actionbarsherlock.internal.widget.ActionBarContainer access$2(com.actionbarsherlock.internal.app.ActionBarImpl) -> c
    int access$3(com.actionbarsherlock.internal.app.ActionBarImpl) -> d
    void access$4(com.actionbarsherlock.internal.app.ActionBarImpl,com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    com.actionbarsherlock.internal.widget.ActionBarContextView access$5(com.actionbarsherlock.internal.app.ActionBarImpl) -> e
    com.actionbarsherlock.internal.widget.ActionBarView access$6(com.actionbarsherlock.internal.app.ActionBarImpl) -> f
    android.content.Context access$7(com.actionbarsherlock.internal.app.ActionBarImpl) -> g
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$8(com.actionbarsherlock.internal.app.ActionBarImpl) -> h
com.actionbarsherlock.internal.app.ActionBarImpl$1 -> e:
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> a
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
com.actionbarsherlock.internal.app.ActionBarImpl$2 -> f:
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> a
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl -> com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl:
    com.actionbarsherlock.view.ActionMode$Callback mCallback -> b
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> c
    java.lang.ref.WeakReference mCustomView -> d
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> a
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    com.actionbarsherlock.view.Menu getMenu() -> getMenu
    void finish() -> finish
    void invalidate() -> invalidate
    boolean dispatchOnCreate() -> dispatchOnCreate
    void setCustomView(android.view.View) -> setCustomView
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(int) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onCloseSubMenu
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onMenuModeChange
com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl -> com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl:
    com.actionbarsherlock.app.ActionBar$TabListener mCallback -> b
    java.lang.Object mTag -> c
    android.graphics.drawable.Drawable mIcon -> d
    java.lang.CharSequence mText -> e
    java.lang.CharSequence mContentDesc -> f
    int mPosition -> g
    android.view.View mCustomView -> h
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> a
    java.lang.Object getTag() -> getTag
    com.actionbarsherlock.app.ActionBar$Tab setTag(java.lang.Object) -> setTag
    com.actionbarsherlock.app.ActionBar$TabListener getCallback() -> getCallback
    com.actionbarsherlock.app.ActionBar$Tab setTabListener(com.actionbarsherlock.app.ActionBar$TabListener) -> setTabListener
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(android.view.View) -> setCustomView
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(int) -> setCustomView
    android.graphics.drawable.Drawable getIcon() -> getIcon
    int getPosition() -> getPosition
    void setPosition(int) -> setPosition
    java.lang.CharSequence getText() -> getText
    com.actionbarsherlock.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setIcon(int) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setText(java.lang.CharSequence) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setText(int) -> setText
    void select() -> select
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(int) -> setContentDescription
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
com.actionbarsherlock.internal.app.ActionBarWrapper -> com.actionbarsherlock.internal.app.ActionBarWrapper:
    android.app.Activity mActivity -> a
    android.app.ActionBar mActionBar -> b
    com.actionbarsherlock.app.ActionBar$OnNavigationListener mNavigationListener -> c
    java.util.Set mMenuVisibilityListeners -> d
    android.support.v4.app.FragmentTransaction mFragmentTransaction -> e
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    android.content.Context getThemedContext() -> getThemedContext
    void setCustomView(android.view.View) -> setCustomView
    void setCustomView(android.view.View,com.actionbarsherlock.app.ActionBar$LayoutParams) -> setCustomView
    void setCustomView(int) -> setCustomView
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setListNavigationCallbacks(android.widget.SpinnerAdapter,com.actionbarsherlock.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    boolean onNavigationItemSelected(int,long) -> onNavigationItemSelected
    void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    int getNavigationItemCount() -> getNavigationItemCount
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setDisplayOptions(int) -> setDisplayOptions
    void setDisplayOptions(int,int) -> setDisplayOptions
    void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    int getNavigationMode() -> getNavigationMode
    void setNavigationMode(int) -> setNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    com.actionbarsherlock.app.ActionBar$Tab newTab() -> newTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean) -> addTab
    void removeTab(com.actionbarsherlock.app.ActionBar$Tab) -> removeTab
    void removeTabAt(int) -> removeTabAt
    void removeAllTabs() -> removeAllTabs
    void selectTab(com.actionbarsherlock.app.ActionBar$Tab) -> selectTab
    com.actionbarsherlock.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    com.actionbarsherlock.app.ActionBar$Tab getTabAt(int) -> getTabAt
    int getTabCount() -> getTabCount
    int getHeight() -> getHeight
    void show() -> show
    void hide() -> hide
    boolean isShowing() -> isShowing
    void addOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    void removeOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    void onMenuVisibilityChanged(boolean) -> onMenuVisibilityChanged
    android.app.Activity access$0(com.actionbarsherlock.internal.app.ActionBarWrapper) -> a
    android.support.v4.app.FragmentTransaction access$1(com.actionbarsherlock.internal.app.ActionBarWrapper) -> b
    void access$2(com.actionbarsherlock.internal.app.ActionBarWrapper,android.support.v4.app.FragmentTransaction) -> a
com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper -> com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper:
    android.app.ActionBar$Tab mNativeTab -> a
    java.lang.Object mTag -> c
    com.actionbarsherlock.app.ActionBar$TabListener mListener -> d
    com.actionbarsherlock.internal.app.ActionBarWrapper this$0 -> b
    int getPosition() -> getPosition
    android.graphics.drawable.Drawable getIcon() -> getIcon
    java.lang.CharSequence getText() -> getText
    com.actionbarsherlock.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setIcon(int) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setText(java.lang.CharSequence) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setText(int) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(android.view.View) -> setCustomView
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(int) -> setCustomView
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.app.ActionBar$Tab setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    com.actionbarsherlock.app.ActionBar$Tab setTabListener(com.actionbarsherlock.app.ActionBar$TabListener) -> setTabListener
    void select() -> select
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(int) -> setContentDescription
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void onTabReselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabReselected
    void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabSelected
    void onTabUnselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabUnselected
com.actionbarsherlock.internal.nineoldandroids.animation.Animator -> com.actionbarsherlock.internal.nineoldandroids.animation.Animator:
    java.util.ArrayList mListeners -> a
    void start() -> start
    void cancel() -> cancel
    void end() -> end
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener) -> addListener
    void removeListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener) -> removeListener
    java.util.ArrayList getListeners() -> getListeners
    void removeAllListeners() -> removeAllListeners
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> clone
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void setTarget(java.lang.Object) -> setTarget
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener -> com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener:
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter:
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet:
    java.util.ArrayList mPlayingSet -> c
    java.util.HashMap mNodeMap -> d
    java.util.ArrayList mNodes -> e
    java.util.ArrayList mSortedNodes -> f
    boolean mNeedsSort -> g
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener mSetListener -> h
    boolean mTerminated -> b
    boolean mStarted -> i
    long mStartDelay -> j
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator mDelayAnim -> k
    long mDuration -> l
    void playTogether(com.actionbarsherlock.internal.nineoldandroids.animation.Animator[]) -> playTogether
    void playTogether(java.util.Collection) -> playTogether
    void playSequentially(com.actionbarsherlock.internal.nineoldandroids.animation.Animator[]) -> playSequentially
    void playSequentially(java.util.List) -> playSequentially
    java.util.ArrayList getChildAnimations() -> getChildAnimations
    void setTarget(java.lang.Object) -> setTarget
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> play
    void cancel() -> cancel
    void end() -> end
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    long getDuration() -> getDuration
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet setDuration(long) -> setDuration
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void start() -> start
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet clone() -> clone
    void sortNodes() -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    java.util.ArrayList access$2(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> a
    java.util.HashMap access$3(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> b
    java.util.ArrayList access$4(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> c
    void access$5(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,boolean) -> a
    java.util.ArrayList access$6(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> d
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$1 -> g:
    boolean canceled -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> b
    java.util.ArrayList val$nodesToStart -> c
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener -> h:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet mAnimatorSet -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> a
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node mCurrentNode -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder with(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> with
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder before(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> before
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder after(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> after
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder after(long) -> after
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency -> i:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node node -> a
    int rule -> b
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener -> j:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet mAnimatorSet -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node mNode -> b
    int mRule -> c
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void startIfReady(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node -> k:
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator animation -> a
    java.util.ArrayList dependencies -> b
    java.util.ArrayList tmpDependencies -> c
    java.util.ArrayList nodeDependencies -> d
    java.util.ArrayList nodeDependents -> e
    boolean done -> f
    void addDependency(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node clone() -> a
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator -> com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator:
    java.lang.Float evaluate(float,java.lang.Number,java.lang.Number) -> evaluate
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet -> l:
    float firstValue -> g
    float lastValue -> h
    float deltaValue -> i
    boolean firstTime -> j
    java.lang.Object getValue(float) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet clone() -> a
    float getFloatValue(float) -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> b
com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator -> com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator:
    java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> evaluate
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet -> m:
    int firstValue -> g
    int lastValue -> h
    int deltaValue -> i
    boolean firstTime -> j
    java.lang.Object getValue(float) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet clone() -> a
    int getIntValue(float) -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> b
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe -> com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe:
    float mFraction -> a
    java.lang.Class mValueType -> b
    android.view.animation.Interpolator mInterpolator -> d
    boolean mHasValue -> c
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofInt(float,int) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofInt(float) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float,float) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofObject(float,java.lang.Object) -> ofObject
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofObject(float) -> ofObject
    boolean hasValue() -> hasValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    float getFraction() -> getFraction
    void setFraction(float) -> setFraction
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    java.lang.Class getType() -> getType
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> clone
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe -> n:
    float mValue -> d
    float getFloatValue() -> a
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe clone() -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe -> o:
    int mValue -> d
    int getIntValue() -> a
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe clone() -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe -> p:
    java.lang.Object mValue -> d
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe clone() -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet -> q:
    int mNumKeyframes -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe mFirstKeyframe -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe mLastKeyframe -> c
    android.view.animation.Interpolator mInterpolator -> d
    java.util.ArrayList mKeyframes -> e
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator mEvaluator -> f
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofInt(int[]) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofFloat(float[]) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofKeyframe(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[]) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofObject(java.lang.Object[]) -> a
    void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> b
    java.lang.Object getValue(float) -> a
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator -> com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator:
    java.lang.Object mTarget -> h
    java.lang.String mPropertyName -> i
    void setPropertyName(java.lang.String) -> setPropertyName
    java.lang.String getPropertyName() -> getPropertyName
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[]) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[]) -> ofPropertyValuesHolder
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    void start() -> start
    void initAnimation() -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator setDuration(long) -> setDuration
    java.lang.Object getTarget() -> getTarget
    void setTarget(java.lang.Object) -> setTarget
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void animateValue(float) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator clone() -> clone
    java.lang.String toString() -> toString
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long) -> setDuration
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder -> com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder:
    java.lang.String mPropertyName -> a
    java.lang.reflect.Method mSetter -> b
    java.lang.reflect.Method mGetter -> g
    java.lang.Class mValueType -> c
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet mKeyframeSet -> d
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> h
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> i
    java.lang.Class[] FLOAT_VARIANTS -> j
    java.lang.Class[] INTEGER_VARIANTS -> k
    java.lang.Class[] DOUBLE_VARIANTS -> l
    java.util.HashMap sSetterPropertyMap -> m
    java.util.HashMap sGetterPropertyMap -> n
    java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock -> e
    java.lang.Object[] mTmpValueArray -> f
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator mEvaluator -> o
    java.lang.Object mAnimatedValue -> p
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofInt(java.lang.String,int[]) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofObject(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[]) -> ofKeyframe
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setKeyframes(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[]) -> setKeyframes
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class) -> a
    java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class) -> a
    void setupSetter(java.lang.Class) -> a
    void setupGetter(java.lang.Class) -> b
    void setupSetterAndGetter(java.lang.Object) -> a
    void setupValue(java.lang.Object,com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe) -> a
    void setupStartValue(java.lang.Object) -> b
    void setupEndValue(java.lang.Object) -> c
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> d
    void init() -> a
    void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    void calculateValue(float) -> a
    void setPropertyName(java.lang.String) -> setPropertyName
    java.lang.String getPropertyName() -> getPropertyName
    java.lang.Object getAnimatedValue() -> b
    java.lang.String toString() -> toString
    java.lang.String getMethodName(java.lang.String,java.lang.String) -> a
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder -> r:
    com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet mFloatKeyframeSet -> g
    float mFloatAnimatedValue -> h
    void setFloatValues(float[]) -> setFloatValues
    void calculateValue(float) -> a
    java.lang.Object getAnimatedValue() -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone() -> c
    void setAnimatedValue(java.lang.Object) -> d
    void setupSetter(java.lang.Class) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder -> s:
    com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet mIntKeyframeSet -> g
    int mIntAnimatedValue -> h
    void setIntValues(int[]) -> setIntValues
    void calculateValue(float) -> a
    java.lang.Object getAnimatedValue() -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder clone() -> c
    void setAnimatedValue(java.lang.Object) -> d
    void setupSetter(java.lang.Class) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator -> com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator:
    long mStartTime -> b
    long mSeekTime -> c
    java.lang.ThreadLocal sAnimationHandler -> h
    java.lang.ThreadLocal sAnimations -> i
    java.lang.ThreadLocal sPendingAnimations -> j
    java.lang.ThreadLocal sDelayedAnims -> k
    java.lang.ThreadLocal sEndingAnims -> l
    java.lang.ThreadLocal sReadyAnims -> m
    android.view.animation.Interpolator sDefaultInterpolator -> n
    boolean mPlayingBackwards -> o
    int mCurrentIteration -> p
    float mCurrentFraction -> q
    boolean mStartedDelay -> r
    long mDelayStartTime -> s
    int mPlayingState -> d
    boolean mRunning -> t
    boolean mStarted -> u
    boolean mInitialized -> e
    long mDuration -> v
    long mStartDelay -> w
    long sFrameDelay -> x
    int mRepeatCount -> y
    int mRepeatMode -> z
    android.view.animation.Interpolator mInterpolator -> A
    java.util.ArrayList mUpdateListeners -> B
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[] mValues -> f
    java.util.HashMap mValuesMap -> g
    int RESTART -> RESTART
    int REVERSE -> REVERSE
    int INFINITE -> INFINITE
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofInt(int[]) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofFloat(float[]) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofPropertyValuesHolder(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[]) -> ofPropertyValuesHolder
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofObject(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[]) -> setValues
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[] getValues() -> getValues
    void initAnimation() -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    void setCurrentPlayTime(long) -> setCurrentPlayTime
    long getCurrentPlayTime() -> getCurrentPlayTime
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    long getFrameDelay() -> getFrameDelay
    void setFrameDelay(long) -> setFrameDelay
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    java.lang.Object getAnimatedValue(java.lang.String) -> getAnimatedValue
    void setRepeatCount(int) -> setRepeatCount
    int getRepeatCount() -> getRepeatCount
    void setRepeatMode(int) -> setRepeatMode
    int getRepeatMode() -> getRepeatMode
    void addUpdateListener(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener) -> addUpdateListener
    void removeAllUpdateListeners() -> removeAllUpdateListeners
    void removeUpdateListener(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener) -> removeUpdateListener
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    void start(boolean) -> a
    void start() -> start
    void cancel() -> cancel
    void end() -> end
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    void reverse() -> reverse
    void endAnimation() -> h
    void startAnimation() -> i
    boolean delayedAnimationFrame(long) -> b
    boolean animationFrame(long) -> a
    float getAnimatedFraction() -> getAnimatedFraction
    void animateValue(float) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone() -> clone
    int getCurrentAnimationsCount() -> getCurrentAnimationsCount
    void clearAllAnimations() -> clearAllAnimations
    java.lang.String toString() -> toString
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    java.lang.ThreadLocal access$2() -> b
    java.lang.ThreadLocal access$3() -> c
    java.lang.ThreadLocal access$4() -> d
    long access$5(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> a
    void access$6(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> b
    java.lang.ThreadLocal access$7() -> e
    java.lang.ThreadLocal access$8() -> f
    boolean access$9(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator,long) -> a
    void access$10(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator,boolean) -> a
    void access$11(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> c
    long access$12() -> g
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$1 -> t:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$2 -> u:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$3 -> v:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$4 -> w:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$5 -> x:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler -> y:
    void handleMessage(android.os.Message) -> handleMessage
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener:
    void onAnimationUpdate(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> onAnimationUpdate
com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup -> com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> a
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy -> com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy:
    boolean NEEDS_PROXY -> NEEDS_PROXY
    java.util.WeakHashMap PROXIES -> a
    java.lang.ref.WeakReference mView -> b
    float mAlpha -> c
    float mScaleX -> d
    float mScaleY -> e
    float mTranslationX -> f
    float mTranslationY -> g
    android.graphics.RectF mBefore -> h
    android.graphics.RectF mAfter -> i
    android.graphics.Matrix mTempMatrix -> j
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View) -> wrap
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getScaleX() -> getScaleX
    void setScaleX(float) -> setScaleX
    float getScaleY() -> getScaleY
    void setScaleY(float) -> setScaleY
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
    void prepareForUpdate() -> a
    void invalidateAfterUpdate() -> b
    void computeRect(android.graphics.RectF,android.view.View) -> a
    void transformMatrix(android.graphics.Matrix,android.view.View) -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    void reset() -> reset
com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout -> com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> a
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView -> com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> a
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout -> com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> a
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
com.actionbarsherlock.internal.view.ActionProviderWrapper -> com.actionbarsherlock.internal.view.ActionProviderWrapper:
    com.actionbarsherlock.view.ActionProvider mProvider -> a
    com.actionbarsherlock.view.ActionProvider unwrap() -> unwrap
    android.view.View onCreateActionView() -> onCreateActionView
    boolean hasSubMenu() -> hasSubMenu
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
com.actionbarsherlock.internal.view.StandaloneActionMode -> com.actionbarsherlock.internal.view.StandaloneActionMode:
    android.content.Context mContext -> a
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> b
    com.actionbarsherlock.view.ActionMode$Callback mCallback -> c
    java.lang.ref.WeakReference mCustomView -> d
    boolean mFinished -> e
    boolean mFocusable -> f
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> g
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setTitle(int) -> setTitle
    void setSubtitle(int) -> setSubtitle
    void setCustomView(android.view.View) -> setCustomView
    void invalidate() -> invalidate
    void finish() -> finish
    com.actionbarsherlock.view.Menu getMenu() -> getMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onCloseSubMenu
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onMenuModeChange
    boolean isUiFocusable() -> isUiFocusable
com.actionbarsherlock.internal.view.View_HasStateListenerSupport -> com.actionbarsherlock.internal.view.View_HasStateListenerSupport:
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> addOnAttachStateChangeListener
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> removeOnAttachStateChangeListener
com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener -> com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener:
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.actionbarsherlock.internal.view.menu.ActionMenu -> com.actionbarsherlock.internal.view.menu.ActionMenu:
    android.content.Context mContext -> a
    boolean mIsQwerty -> b
    java.util.ArrayList mItems -> c
    android.content.Context getContext() -> getContext
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[]) -> addIntentOptions
    com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    void clear() -> clear
    void close() -> close
    int findItemIndex(int) -> a
    com.actionbarsherlock.view.MenuItem findItem(int) -> findItem
    com.actionbarsherlock.view.MenuItem getItem(int) -> getItem
    boolean hasVisibleItems() -> hasVisibleItems
    com.actionbarsherlock.internal.view.menu.ActionMenuItem findItemWithShortcut(int,android.view.KeyEvent) -> a
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void removeGroup(int) -> removeGroup
    void removeItem(int) -> removeItem
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setQwertyMode(boolean) -> setQwertyMode
    int size() -> size
com.actionbarsherlock.internal.view.menu.ActionMenuItem -> com.actionbarsherlock.internal.view.menu.ActionMenuItem:
    int mId -> a
    int mGroup -> b
    int mOrdering -> c
    java.lang.CharSequence mTitle -> d
    java.lang.CharSequence mTitleCondensed -> e
    android.content.Intent mIntent -> f
    char mShortcutNumericChar -> g
    char mShortcutAlphabeticChar -> h
    android.graphics.drawable.Drawable mIconDrawable -> i
    android.content.Context mContext -> j
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mClickListener -> k
    int mFlags -> l
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    int getGroupId() -> getGroupId
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.content.Intent getIntent() -> getIntent
    int getItemId() -> getItemId
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    char getNumericShortcut() -> getNumericShortcut
    int getOrder() -> getOrder
    com.actionbarsherlock.view.SubMenu getSubMenu() -> getSubMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    boolean hasSubMenu() -> hasSubMenu
    boolean isCheckable() -> isCheckable
    boolean isChecked() -> isChecked
    boolean isEnabled() -> isEnabled
    boolean isVisible() -> isVisible
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> setCheckable
    com.actionbarsherlock.internal.view.menu.ActionMenuItem setExclusiveCheckable(boolean) -> setExclusiveCheckable
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> setChecked
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> setEnabled
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem setIcon(int) -> setIcon
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> setIntent
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> setShortcut
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitle(int) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> setVisible
    boolean invoke() -> invoke
    void setShowAsAction(int) -> setShowAsAction
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.View getActionView() -> getActionView
    com.actionbarsherlock.view.MenuItem setActionView(int) -> setActionView
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> getActionProvider
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> setActionProvider
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
com.actionbarsherlock.internal.view.menu.ActionMenuItemView -> com.actionbarsherlock.internal.view.menu.ActionMenuItemView:
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItemData -> a
    java.lang.CharSequence mTitle -> b
    com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> c
    android.widget.ImageButton mImageButton -> d
    com.actionbarsherlock.internal.widget.CapitalizingButton mTextButton -> e
    boolean mAllowTextWithIcon -> f
    boolean mExpandedFormat -> g
    int mMinWidth -> h
    java.util.Set mListeners -> i
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> addOnAttachStateChangeListener
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> removeOnAttachStateChangeListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> initialize
    void setEnabled(boolean) -> setEnabled
    void onClick(android.view.View) -> onClick
    void setItemInvoker(com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setExpandedFormat(boolean) -> setExpandedFormat
    void updateTextButtonVisibility() -> a
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean hasText() -> hasText
    void setShortcut(boolean,char) -> setShortcut
    void setTitle(java.lang.CharSequence) -> setTitle
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean showsIcon() -> showsIcon
    boolean needsDividerBefore() -> needsDividerBefore
    boolean needsDividerAfter() -> needsDividerAfter
    boolean onLongClick(android.view.View) -> onLongClick
    void onMeasure(int,int) -> onMeasure
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter:
    android.view.View mOverflowButton -> c
    boolean mReserveOverflow -> d
    boolean mReserveOverflowSet -> e
    int mWidthLimit -> f
    int mActionItemWidthLimit -> g
    int mMaxItems -> h
    boolean mMaxItemsSet -> i
    boolean mStrictWidthLimit -> j
    boolean mWidthLimitSet -> k
    boolean mExpandedActionViewsExclusive -> l
    int mMinCellSize -> m
    android.util.SparseBooleanArray mActionButtonGroups -> n
    android.view.View mScrapActionButtonView -> o
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup mOverflowPopup -> p
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> q
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> r
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> a
    int mOpenSubMenuId -> b
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    boolean reserveOverflow(android.content.Context) -> reserveOverflow
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setWidthLimit(int,boolean) -> setWidthLimit
    void setReserveOverflow(boolean) -> setReserveOverflow
    void setItemLimit(int) -> setItemLimit
    void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> bindItemView
    boolean shouldIncludeItem(int,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> shouldIncludeItem
    void updateMenuView(boolean) -> updateMenuView
    boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    android.view.View findViewForItem(com.actionbarsherlock.view.MenuItem) -> a
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean dismissPopupMenus() -> dismissPopupMenus
    boolean hideSubMenus() -> hideSubMenus
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowReserved() -> isOverflowReserved
    boolean flagActionItems() -> flagActionItems
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup access$0(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> a
    void access$1(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup) -> a
    android.view.View access$2(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> b
    void access$3(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu) -> a
    void access$4(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable) -> a
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu -> z:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    void onDismiss() -> onDismiss
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$HasPermanentMenuKey -> aa:
    boolean get(android.content.Context) -> a
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable -> ab:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup mPopup -> b
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton -> ac:
    java.util.Set mListeners -> b
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    boolean performClick() -> performClick
    boolean needsDividerBefore() -> needsDividerBefore
    boolean needsDividerAfter() -> needsDividerAfter
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> addOnAttachStateChangeListener
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> removeOnAttachStateChangeListener
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup -> ad:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    void onDismiss() -> onDismiss
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback -> ae:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onOpenSubMenu
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState:
    int openSubMenuId -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1 -> af:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> a
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.view.menu.ActionMenuView -> com.actionbarsherlock.internal.view.menu.ActionMenuView:
    boolean IS_FROYO -> a
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> b
    boolean mReserveOverflow -> c
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter mPresenter -> d
    boolean mFormatItems -> e
    int mFormatItemsWidth -> f
    int mMinCellSize -> g
    int mGeneratedItemPadding -> h
    boolean mFirst -> i
    void setPresenter(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> setPresenter
    boolean isExpandedFormat() -> isExpandedFormat
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onMeasureExactFormat(int,int) -> a
    int measureChildForCells(android.view.View,int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean isOverflowReserved() -> isOverflowReserved
    void setOverflowReserved(boolean) -> setOverflowReserved
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> generateOverflowButtonLayoutParams
    boolean invokeItem(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> invokeItem
    int getWindowAnimations() -> getWindowAnimations
    void initialize(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initialize
    boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
com.actionbarsherlock.internal.view.menu.ActionMenuView$ActionMenuChildView -> com.actionbarsherlock.internal.view.menu.ActionMenuView$ActionMenuChildView:
    boolean needsDividerBefore() -> needsDividerBefore
    boolean needsDividerAfter() -> needsDividerAfter
com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams -> com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams:
    boolean isOverflowButton -> isOverflowButton
    int cellsUsed -> cellsUsed
    int extraPixels -> extraPixels
    boolean expandable -> expandable
    boolean preventEdgeOffset -> preventEdgeOffset
    boolean expanded -> expanded
com.actionbarsherlock.internal.view.menu.BaseMenuPresenter -> com.actionbarsherlock.internal.view.menu.BaseMenuPresenter:
    boolean IS_HONEYCOMB -> a
    android.content.Context mSystemContext -> mSystemContext
    android.content.Context mContext -> mContext
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    android.view.LayoutInflater mSystemInflater -> mSystemInflater
    android.view.LayoutInflater mInflater -> mInflater
    com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback mCallback -> b
    int mMenuLayoutRes -> c
    int mItemLayoutRes -> d
    com.actionbarsherlock.internal.view.menu.MenuView mMenuView -> mMenuView
    int mId -> e
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void addItemView(android.view.View,int) -> addItemView
    boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setCallback
    com.actionbarsherlock.internal.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> createItemView
    android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> bindItemView
    boolean shouldIncludeItem(int,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> shouldIncludeItem
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    void setId(int) -> setId
com.actionbarsherlock.internal.view.menu.ListMenuItemView -> com.actionbarsherlock.internal.view.menu.ListMenuItemView:
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItemData -> b
    android.widget.ImageView mIconView -> c
    android.widget.RadioButton mRadioButton -> d
    android.widget.TextView mTitleView -> e
    android.widget.CheckBox mCheckBox -> f
    android.widget.TextView mShortcutView -> g
    android.graphics.drawable.Drawable mBackground -> h
    int mTextAppearance -> i
    android.content.Context mTextAppearanceContext -> j
    boolean mPreserveIconSpacing -> k
    android.view.LayoutInflater mInflater -> l
    boolean mForceShowIcon -> m
    android.content.Context mContext -> a
    void onFinishInflate() -> onFinishInflate
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> initialize
    void setForceShowIcon(boolean) -> setForceShowIcon
    void setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> setShortcut
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void onMeasure(int,int) -> onMeasure
    void insertIconView() -> a
    void insertRadioButton() -> b
    void insertCheckBox() -> c
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    boolean showsIcon() -> showsIcon
    android.view.LayoutInflater getInflater() -> getInflater
com.actionbarsherlock.internal.view.menu.MenuBuilder -> com.actionbarsherlock.internal.view.menu.MenuBuilder:
    int[] sCategoryToOrder -> d
    android.content.Context mContext -> e
    android.content.res.Resources mResources -> f
    boolean mQwertyMode -> g
    boolean mShortcutsVisible -> h
    com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback mCallback -> i
    java.util.ArrayList mItems -> j
    java.util.ArrayList mVisibleItems -> k
    boolean mIsVisibleItemsStale -> l
    java.util.ArrayList mActionItems -> m
    java.util.ArrayList mNonActionItems -> n
    boolean mIsActionItemsStale -> o
    int mDefaultShowAsAction -> p
    android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo -> q
    java.lang.CharSequence mHeaderTitle -> a
    android.graphics.drawable.Drawable mHeaderIcon -> b
    android.view.View mHeaderView -> c
    boolean mPreventDispatchingItemsChanged -> r
    boolean mItemsChangedWhileDispatchPrevented -> s
    boolean mOptionalIconsVisible -> t
    boolean mIsClosing -> u
    java.util.ArrayList mTempShortcutItemList -> v
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> w
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mExpandedItem -> x
    com.actionbarsherlock.internal.view.menu.MenuBuilder setDefaultShowAsAction(int) -> setDefaultShowAsAction
    void addMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter) -> addMenuPresenter
    void removeMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter) -> removeMenuPresenter
    void dispatchPresenterUpdate(boolean) -> c
    boolean dispatchSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    void dispatchSaveInstanceState(android.os.Bundle) -> a
    void dispatchRestoreInstanceState(android.os.Bundle) -> b
    void savePresenterStates(android.os.Bundle) -> savePresenterStates
    void restorePresenterStates(android.os.Bundle) -> restorePresenterStates
    void saveActionViewStates(android.os.Bundle) -> saveActionViewStates
    void restoreActionViewStates(android.os.Bundle) -> restoreActionViewStates
    java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback) -> setCallback
    com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> a
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,int) -> add
    com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void removeItemAtInt(int,boolean) -> a
    void removeItemAt(int) -> removeItemAt
    void clearAll() -> clearAll
    void clear() -> clear
    void setExclusiveItemChecked(com.actionbarsherlock.view.MenuItem) -> a
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    com.actionbarsherlock.view.MenuItem findItem(int) -> findItem
    int findItemIndex(int) -> findItemIndex
    int findGroupIndex(int) -> findGroupIndex
    int findGroupIndex(int,int) -> findGroupIndex
    int size() -> size
    com.actionbarsherlock.view.MenuItem getItem(int) -> getItem
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    void setQwertyMode(boolean) -> setQwertyMode
    int getOrdering(int) -> a
    boolean isQwertyMode() -> isQwertyMode
    void setShortcutsVisible(boolean) -> setShortcutsVisible
    void setShortcutsVisibleInner(boolean) -> d
    boolean isShortcutsVisible() -> isShortcutsVisible
    android.content.res.Resources getResources() -> a
    android.content.Context getContext() -> getContext
    boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> a
    void changeMenuMode() -> changeMenuMode
    int findInsertIndex(java.util.ArrayList,int) -> a
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> a
    com.actionbarsherlock.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> a
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    boolean performItemAction(com.actionbarsherlock.view.MenuItem,int) -> performItemAction
    void close(boolean) -> a
    void close() -> close
    void onItemsChanged(boolean) -> b
    void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
    void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    void onItemVisibleChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    void onItemActionRequestChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
    java.util.ArrayList getVisibleItems() -> b
    void flagActionItems() -> flagActionItems
    java.util.ArrayList getActionItems() -> c
    java.util.ArrayList getNonActionItems() -> d
    void clearHeader() -> clearHeader
    void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> a
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    android.graphics.drawable.Drawable getHeaderIcon() -> getHeaderIcon
    android.view.View getHeaderView() -> getHeaderView
    com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setCurrentMenuInfo
    boolean getOptionalIconsVisible() -> e
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap) -> bindNativeOverflow
com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback -> com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback:
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onMenuModeChange
com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker -> com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker:
    boolean invokeItem(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> invokeItem
com.actionbarsherlock.internal.view.menu.MenuItemImpl -> com.actionbarsherlock.internal.view.menu.MenuItemImpl:
    int mId -> a
    int mGroup -> b
    int mCategoryOrder -> c
    int mOrdering -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mTitleCondensed -> f
    android.content.Intent mIntent -> g
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> i
    android.graphics.drawable.Drawable mIconDrawable -> j
    int mIconResId -> k
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> l
    com.actionbarsherlock.internal.view.menu.SubMenuBuilder mSubMenu -> m
    java.lang.Runnable mItemCallback -> n
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mClickListener -> o
    int mFlags -> p
    int mShowAsAction -> q
    android.view.View mActionView -> r
    com.actionbarsherlock.view.ActionProvider mActionProvider -> s
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener mOnActionExpandListener -> t
    boolean mIsActionViewExpanded -> u
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> v
    java.lang.String sPrependShortcutLabel -> w
    java.lang.String sEnterShortcutLabel -> x
    java.lang.String sDeleteShortcutLabel -> y
    java.lang.String sSpaceShortcutLabel -> z
    boolean invoke() -> invoke
    boolean isEnabled() -> isEnabled
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> setEnabled
    int getGroupId() -> getGroupId
    int getItemId() -> getItemId
    int getOrder() -> getOrder
    int getOrdering() -> getOrdering
    android.content.Intent getIntent() -> getIntent
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> setIntent
    com.actionbarsherlock.view.MenuItem setCallback(java.lang.Runnable) -> setCallback
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getNumericShortcut() -> getNumericShortcut
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> setShortcut
    char getShortcut() -> a
    java.lang.String getShortcutLabel() -> b
    boolean shouldShowShortcut() -> c
    com.actionbarsherlock.view.SubMenu getSubMenu() -> getSubMenu
    boolean hasSubMenu() -> hasSubMenu
    void setSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleForItemView(com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> a
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.graphics.drawable.Drawable getIcon() -> getIcon
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem setIcon(int) -> setIcon
    boolean isCheckable() -> isCheckable
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> setCheckable
    void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    boolean isExclusiveCheckable() -> isExclusiveCheckable
    boolean isChecked() -> isChecked
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> setChecked
    void setCheckedInt(boolean) -> a
    boolean isVisible() -> isVisible
    boolean setVisibleInt(boolean) -> b
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> setVisible
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    java.lang.String toString() -> toString
    void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> a
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void actionFormatChanged() -> actionFormatChanged
    boolean shouldShowIcon() -> shouldShowIcon
    boolean isActionButton() -> isActionButton
    boolean requestsActionButton() -> requestsActionButton
    boolean requiresActionButton() -> requiresActionButton
    void setIsActionButton(boolean) -> setIsActionButton
    boolean showsTextAsAction() -> showsTextAsAction
    void setShowAsAction(int) -> setShowAsAction
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> setActionView
    com.actionbarsherlock.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> getActionProvider
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> setActionProvider
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    boolean hasCollapsibleActionView() -> hasCollapsibleActionView
    void setActionViewExpanded(boolean) -> setActionViewExpanded
    boolean isActionViewExpanded() -> isActionViewExpanded
com.actionbarsherlock.internal.view.menu.MenuItemWrapper -> com.actionbarsherlock.internal.view.menu.MenuItemWrapper:
    android.view.MenuItem mNativeItem -> a
    com.actionbarsherlock.view.SubMenu mSubMenu -> b
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mMenuItemClickListener -> c
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener mActionExpandListener -> d
    android.view.MenuItem$OnActionExpandListener mNativeActionExpandListener -> e
    int getItemId() -> getItemId
    int getGroupId() -> getGroupId
    int getOrder() -> getOrder
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitle() -> getTitle
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem setIcon(int) -> setIcon
    android.graphics.drawable.Drawable getIcon() -> getIcon
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> setShortcut
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    char getNumericShortcut() -> getNumericShortcut
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> setCheckable
    boolean isCheckable() -> isCheckable
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> setChecked
    boolean isChecked() -> isChecked
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    boolean hasSubMenu() -> hasSubMenu
    com.actionbarsherlock.view.SubMenu getSubMenu() -> getSubMenu
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void setShowAsAction(int) -> setShowAsAction
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> setActionView
    com.actionbarsherlock.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> setActionProvider
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> getActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener access$0(com.actionbarsherlock.internal.view.menu.MenuItemWrapper) -> a
com.actionbarsherlock.internal.view.menu.MenuItemWrapper$1 -> ag:
    com.actionbarsherlock.internal.view.menu.MenuItemWrapper this$0 -> a
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
com.actionbarsherlock.internal.view.menu.MenuPopupHelper -> com.actionbarsherlock.internal.view.menu.MenuPopupHelper:
    int ITEM_LAYOUT -> b
    android.content.Context mContext -> a
    android.view.LayoutInflater mInflater -> d
    com.actionbarsherlock.internal.widget.IcsListPopupWindow mPopup -> e
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> f
    int mPopupMaxWidth -> g
    android.view.View mAnchorView -> h
    boolean mOverflowOnly -> i
    android.view.ViewTreeObserver mTreeObserver -> j
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter mAdapter -> k
    com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> l
    boolean mForceShowIcon -> c
    android.view.ViewGroup mMeasureParent -> m
    void setAnchorView(android.view.View) -> setAnchorView
    void setForceShowIcon(boolean) -> setForceShowIcon
    void show() -> show
    boolean tryShow() -> tryShow
    void dismiss() -> dismiss
    void onDismiss() -> onDismiss
    boolean isShowing() -> isShowing
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    int measureContentWidth(android.widget.ListAdapter) -> a
    void onGlobalLayout() -> onGlobalLayout
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$0(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> a
    android.view.LayoutInflater access$1(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> b
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$2(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> c
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter access$3(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> d
com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver -> ah:
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper this$0 -> a
    void onChanged() -> onChanged
com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter -> ai:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mAdapterMenu -> b
    int mExpandedIndex -> c
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper this$0 -> a
    int getCount() -> getCount
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> a
    java.lang.Object getItem(int) -> getItem
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$1(com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter) -> a
com.actionbarsherlock.internal.view.menu.MenuPresenter -> com.actionbarsherlock.internal.view.menu.MenuPresenter:
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback -> com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback:
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onOpenSubMenu
com.actionbarsherlock.internal.view.menu.MenuView -> com.actionbarsherlock.internal.view.menu.MenuView:
    void initialize(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initialize
    int getWindowAnimations() -> getWindowAnimations
com.actionbarsherlock.internal.view.menu.MenuView$ItemView -> com.actionbarsherlock.internal.view.menu.MenuView$ItemView:
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> initialize
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void setTitle(java.lang.CharSequence) -> setTitle
    void setEnabled(boolean) -> setEnabled
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> setShortcut
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    boolean showsIcon() -> showsIcon
com.actionbarsherlock.internal.view.menu.MenuWrapper -> com.actionbarsherlock.internal.view.menu.MenuWrapper:
    android.view.Menu mNativeMenu -> a
    java.util.WeakHashMap mNativeMap -> b
    android.view.Menu unwrap() -> unwrap
    com.actionbarsherlock.view.MenuItem addInternal(android.view.MenuItem) -> a
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,int) -> add
    com.actionbarsherlock.view.SubMenu addInternal(android.view.SubMenu) -> a
    com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void clear() -> clear
    void invalidate() -> invalidate
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    com.actionbarsherlock.view.MenuItem findItem(int) -> findItem
    com.actionbarsherlock.view.MenuItem findItem(android.view.MenuItem) -> findItem
    int size() -> size
    com.actionbarsherlock.view.MenuItem getItem(int) -> getItem
    void close() -> close
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    void setQwertyMode(boolean) -> setQwertyMode
com.actionbarsherlock.internal.view.menu.SubMenuBuilder -> com.actionbarsherlock.internal.view.menu.SubMenuBuilder:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mParentMenu -> d
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItem -> e
    void setQwertyMode(boolean) -> setQwertyMode
    boolean isQwertyMode() -> isQwertyMode
    void setShortcutsVisible(boolean) -> setShortcutsVisible
    boolean isShortcutsVisible() -> isShortcutsVisible
    com.actionbarsherlock.view.Menu getParentMenu() -> getParentMenu
    com.actionbarsherlock.view.MenuItem getItem() -> getItem
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback) -> setCallback
    com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> a
    com.actionbarsherlock.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.SubMenu setIcon(int) -> setIcon
    com.actionbarsherlock.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
com.actionbarsherlock.internal.view.menu.SubMenuWrapper -> com.actionbarsherlock.internal.view.menu.SubMenuWrapper:
    android.view.SubMenu mNativeSubMenu -> a
    com.actionbarsherlock.view.MenuItem mItem -> b
    com.actionbarsherlock.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
    com.actionbarsherlock.view.SubMenu setIcon(int) -> setIcon
    com.actionbarsherlock.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem getItem() -> getItem
com.actionbarsherlock.internal.widget.AbsActionBarView -> com.actionbarsherlock.internal.widget.AbsActionBarView:
    com.actionbarsherlock.internal.view.menu.ActionMenuView mMenuView -> mMenuView
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter mActionMenuPresenter -> mActionMenuPresenter
    com.actionbarsherlock.internal.widget.ActionBarContainer mSplitView -> mSplitView
    boolean mSplitActionBar -> mSplitActionBar
    boolean mSplitWhenNarrow -> mSplitWhenNarrow
    int mContentHeight -> mContentHeight
    android.content.Context mContext -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mVisibilityAnim -> mVisibilityAnim
    com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener -> mVisAnimListener
    android.view.animation.Interpolator sAlphaInterpolator -> b
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
    void setContentHeight(int) -> setContentHeight
    int getContentHeight() -> getContentHeight
    void setSplitView(com.actionbarsherlock.internal.widget.ActionBarContainer) -> setSplitView
    int getAnimatedVisibility() -> getAnimatedVisibility
    void animateToVisibility(int) -> animateToVisibility
    void setVisibility(int) -> setVisibility
    boolean showOverflowMenu() -> showOverflowMenu
    void postShowOverflowMenu() -> postShowOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowReserved() -> isOverflowReserved
    void dismissPopupMenus() -> dismissPopupMenus
    int measureChildView(android.view.View,int,int,int) -> measureChildView
    int positionChild(android.view.View,int,int,int) -> positionChild
    int positionChildInverse(android.view.View,int,int,int) -> positionChildInverse
com.actionbarsherlock.internal.widget.AbsActionBarView$1 -> aj:
    com.actionbarsherlock.internal.widget.AbsActionBarView this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener -> com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener:
    boolean mCanceled -> c
    int mFinalVisibility -> a
    com.actionbarsherlock.internal.widget.AbsActionBarView this$0 -> b
    com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(int) -> withFinalVisibility
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
com.actionbarsherlock.internal.widget.ActionBarContainer -> com.actionbarsherlock.internal.widget.ActionBarContainer:
    boolean mIsTransitioning -> a
    android.view.View mTabContainer -> b
    com.actionbarsherlock.internal.widget.ActionBarView mActionBarView -> c
    android.graphics.drawable.Drawable mBackground -> d
    android.graphics.drawable.Drawable mStackedBackground -> e
    android.graphics.drawable.Drawable mSplitBackground -> f
    boolean mIsSplit -> g
    boolean mIsStacked -> h
    void onFinishInflate() -> onFinishInflate
    void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    void setTransitioning(boolean) -> setTransitioning
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    void setTabContainer(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> setTabContainer
    android.view.View getTabContainer() -> getTabContainer
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
com.actionbarsherlock.internal.widget.ActionBarContextView -> com.actionbarsherlock.internal.widget.ActionBarContextView:
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mSubtitle -> c
    com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout mClose -> d
    android.view.View mCustomView -> e
    android.widget.LinearLayout mTitleLayout -> f
    android.widget.TextView mTitleView -> g
    android.widget.TextView mSubtitleView -> h
    int mTitleStyleRes -> i
    int mSubtitleStyleRes -> j
    android.graphics.drawable.Drawable mSplitBackground -> k
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentAnimation -> l
    boolean mAnimateInOnLayout -> m
    int mAnimationMode -> n
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setContentHeight(int) -> setContentHeight
    void setCustomView(android.view.View) -> setCustomView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void initTitle() -> a
    void initForMode(com.actionbarsherlock.view.ActionMode) -> initForMode
    void closeMode() -> closeMode
    void finishAnimation() -> b
    void killMode() -> killMode
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void onMeasure(int,int) -> onMeasure
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeInAnimation() -> c
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeOutAnimation() -> d
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
com.actionbarsherlock.internal.widget.ActionBarContextView$1 -> ak:
    com.actionbarsherlock.internal.widget.ActionBarContextView this$0 -> a
    com.actionbarsherlock.view.ActionMode val$mode -> b
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView -> com.actionbarsherlock.internal.widget.ActionBarView:
    int DISPLAY_DEFAULT -> DISPLAY_DEFAULT
    int mNavigationMode -> d
    int mDisplayOptions -> e
    java.lang.CharSequence mTitle -> f
    java.lang.CharSequence mSubtitle -> g
    android.graphics.drawable.Drawable mIcon -> h
    android.graphics.drawable.Drawable mLogo -> i
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView mHomeLayout -> j
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView mExpandedHomeLayout -> k
    android.widget.LinearLayout mTitleLayout -> l
    android.widget.TextView mTitleView -> m
    android.widget.TextView mSubtitleView -> n
    android.view.View mTitleUpView -> o
    com.actionbarsherlock.internal.widget.IcsSpinner mSpinner -> p
    com.actionbarsherlock.internal.widget.IcsLinearLayout mListNavLayout -> q
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mTabScrollView -> r
    android.view.View mCustomNavView -> s
    com.actionbarsherlock.internal.widget.IcsProgressBar mProgressView -> t
    com.actionbarsherlock.internal.widget.IcsProgressBar mIndeterminateProgressView -> u
    int mProgressBarPadding -> v
    int mItemPadding -> w
    int mTitleStyleRes -> x
    int mSubtitleStyleRes -> y
    int mProgressStyle -> z
    int mIndeterminateProgressStyle -> A
    boolean mUserTitle -> B
    boolean mIncludeTabs -> C
    boolean mIsCollapsable -> D
    boolean mIsCollapsed -> E
    com.actionbarsherlock.internal.view.menu.MenuBuilder mOptionsMenu -> F
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> G
    com.actionbarsherlock.internal.view.menu.ActionMenuItem mLogoNavItem -> H
    android.widget.SpinnerAdapter mSpinnerAdapter -> I
    com.actionbarsherlock.app.ActionBar$OnNavigationListener mCallback -> J
    com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> K
    android.view.View mExpandedActionView -> b
    com.actionbarsherlock.view.Window$Callback mWindowCallback -> c
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener mNavItemSelectedListener -> L
    android.view.View$OnClickListener mExpandedActionViewUpListener -> M
    android.view.View$OnClickListener mUpClickListener -> N
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setWindowCallback(com.actionbarsherlock.view.Window$Callback) -> setWindowCallback
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void initProgress() -> initProgress
    void initIndeterminateProgress() -> initIndeterminateProgress
    void setSplitActionBar(boolean) -> setSplitActionBar
    boolean isSplitActionBar() -> isSplitActionBar
    boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    void setEmbeddedTabView(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    void setCallback(com.actionbarsherlock.app.ActionBar$OnNavigationListener) -> setCallback
    void setMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setMenu
    void configPresenters(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    boolean hasExpandedActionView() -> hasExpandedActionView
    void collapseActionView() -> collapseActionView
    void setCustomNavigationView(android.view.View) -> setCustomNavigationView
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(java.lang.CharSequence) -> setTitle
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    void setTitleImpl(java.lang.CharSequence) -> setTitleImpl
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    void setDisplayOptions(int) -> setDisplayOptions
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setIcon(int) -> setIcon
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setLogo(int) -> setLogo
    void setNavigationMode(int) -> setNavigationMode
    void setDropdownAdapter(android.widget.SpinnerAdapter) -> setDropdownAdapter
    android.widget.SpinnerAdapter getDropdownAdapter() -> getDropdownAdapter
    void setDropdownSelectedPosition(int) -> setDropdownSelectedPosition
    int getDropdownSelectedPosition() -> getDropdownSelectedPosition
    android.view.View getCustomNavigationView() -> getCustomNavigationView
    int getNavigationMode() -> getNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void onFinishInflate() -> onFinishInflate
    void initTitle() -> a
    void setContextView(com.actionbarsherlock.internal.widget.ActionBarContextView) -> setContextView
    void setCollapsable(boolean) -> setCollapsable
    boolean isCollapsed() -> isCollapsed
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    com.actionbarsherlock.app.ActionBar$OnNavigationListener access$0(com.actionbarsherlock.internal.widget.ActionBarView) -> a
    com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter access$1(com.actionbarsherlock.internal.widget.ActionBarView) -> b
    com.actionbarsherlock.internal.view.menu.ActionMenuItem access$2(com.actionbarsherlock.internal.widget.ActionBarView) -> c
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$3(com.actionbarsherlock.internal.widget.ActionBarView) -> d
    android.graphics.drawable.Drawable access$4(com.actionbarsherlock.internal.widget.ActionBarView) -> e
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$5(com.actionbarsherlock.internal.widget.ActionBarView) -> f
    android.widget.LinearLayout access$6(com.actionbarsherlock.internal.widget.ActionBarView) -> g
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$7(com.actionbarsherlock.internal.widget.ActionBarView) -> h
    com.actionbarsherlock.internal.widget.IcsSpinner access$8(com.actionbarsherlock.internal.widget.ActionBarView) -> i
    android.view.View access$9(com.actionbarsherlock.internal.widget.ActionBarView) -> j
    int access$10(com.actionbarsherlock.internal.widget.ActionBarView) -> k
    void access$11(com.actionbarsherlock.internal.widget.ActionBarView) -> l
    int access$12(com.actionbarsherlock.internal.widget.ActionBarView) -> m
com.actionbarsherlock.internal.widget.ActionBarView$1 -> al:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> a
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> onNothingSelected
com.actionbarsherlock.internal.widget.ActionBarView$2 -> am:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> a
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView$3 -> an:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> a
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter -> ao:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> a
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mCurrentExpandedItem -> b
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> c
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
com.actionbarsherlock.internal.widget.ActionBarView$HomeView -> com.actionbarsherlock.internal.widget.ActionBarView$HomeView:
    android.view.View mUpView -> a
    android.widget.ImageView mIconView -> b
    int mUpWidth -> c
    void setUp(boolean) -> setUp
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    void onFinishInflate() -> onFinishInflate
    int getLeftOffset() -> getLeftOffset
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
com.actionbarsherlock.internal.widget.ActionBarView$SavedState -> com.actionbarsherlock.internal.widget.ActionBarView$SavedState:
    int expandedMenuItemId -> a
    boolean isOverflowOpen -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1 -> ap:
    com.actionbarsherlock.internal.widget.ActionBarView$SavedState createFromParcel(android.os.Parcel) -> a
    com.actionbarsherlock.internal.widget.ActionBarView$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.widget.CapitalizingButton -> com.actionbarsherlock.internal.widget.CapitalizingButton:
    boolean SANS_ICE_CREAM -> a
    boolean IS_GINGERBREAD -> b
    int[] R_styleable_Button -> c
    int[] R_styleable_TextAppearance -> d
    boolean mAllCaps -> e
    void setTextCompat(java.lang.CharSequence) -> setTextCompat
com.actionbarsherlock.internal.widget.CapitalizingTextView -> com.actionbarsherlock.internal.widget.CapitalizingTextView:
    boolean SANS_ICE_CREAM -> a
    boolean IS_GINGERBREAD -> b
    int[] R_styleable_TextView -> c
    boolean mAllCaps -> d
    void setTextCompat(java.lang.CharSequence) -> setTextCompat
com.actionbarsherlock.internal.widget.CollapsibleActionViewWrapper -> com.actionbarsherlock.internal.widget.CollapsibleActionViewWrapper:
    com.actionbarsherlock.view.CollapsibleActionView child -> a
    void onActionViewExpanded() -> onActionViewExpanded
    void onActionViewCollapsed() -> onActionViewCollapsed
    android.view.View unwrap() -> unwrap
com.actionbarsherlock.internal.widget.IcsAbsSpinner -> com.actionbarsherlock.internal.widget.IcsAbsSpinner:
    boolean IS_HONEYCOMB -> F
    android.widget.SpinnerAdapter mAdapter -> a
    int mHeightMeasureSpec -> b
    int mWidthMeasureSpec -> c
    boolean mBlockLayoutRequests -> d
    int mSelectionLeftPadding -> e
    int mSelectionTopPadding -> f
    int mSelectionRightPadding -> g
    int mSelectionBottomPadding -> h
    android.graphics.Rect mSpinnerPadding -> i
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin mRecycler -> j
    android.database.DataSetObserver mDataSetObserver -> G
    android.graphics.Rect mTouchFrame -> H
    void initAbsSpinner() -> j
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    void resetList() -> a
    void onMeasure(int,int) -> onMeasure
    int getChildHeight(android.view.View) -> a
    int getChildWidth(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void recycleAllViews() -> b
    void setSelection(int,boolean) -> setSelection
    void setSelection(int) -> setSelection
    void setSelectionInt(int,boolean) -> a
    void layout(int,boolean) -> b
    android.view.View getSelectedView() -> getSelectedView
    void requestLayout() -> requestLayout
    android.widget.SpinnerAdapter getAdapter() -> getAdapter
    int getCount() -> getCount
    int pointToPosition(int,int) -> pointToPosition
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.widget.Adapter getAdapter() -> getAdapter
    void access$2(com.actionbarsherlock.internal.widget.IcsAbsSpinner,android.view.View,boolean) -> a
com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin -> aq:
    android.util.SparseArray mScrapHeap -> b
    com.actionbarsherlock.internal.widget.IcsAbsSpinner this$0 -> a
    void put(int,android.view.View) -> a
    android.view.View get(int) -> a
    void clear() -> a
com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState -> com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState:
    long selectedId -> a
    int position -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1 -> ar:
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState createFromParcel(android.os.Parcel) -> a
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.widget.IcsAdapterView -> com.actionbarsherlock.internal.widget.IcsAdapterView:
    int ITEM_VIEW_TYPE_IGNORE -> ITEM_VIEW_TYPE_IGNORE
    int ITEM_VIEW_TYPE_HEADER_OR_FOOTER -> ITEM_VIEW_TYPE_HEADER_OR_FOOTER
    int mFirstPosition -> k
    int mSpecificTop -> l
    int mSyncPosition -> m
    long mSyncRowId -> n
    long mSyncHeight -> o
    boolean mNeedSync -> p
    int mSyncMode -> q
    int mLayoutHeight -> a
    boolean mInLayout -> r
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener mOnItemSelectedListener -> s
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> t
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener mOnItemLongClickListener -> u
    boolean mDataChanged -> v
    int mNextSelectedPosition -> w
    long mNextSelectedRowId -> x
    int mSelectedPosition -> y
    long mSelectedRowId -> z
    android.view.View mEmptyView -> b
    int mItemCount -> A
    int mOldItemCount -> B
    int INVALID_POSITION -> INVALID_POSITION
    long INVALID_ROW_ID -> INVALID_ROW_ID
    int mOldSelectedPosition -> C
    long mOldSelectedRowId -> D
    boolean mDesiredFocusableState -> c
    boolean mDesiredFocusableInTouchModeState -> d
    com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier mSelectionNotifier -> e
    boolean mBlockLayoutRequests -> E
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    android.widget.AdapterView$OnItemClickListener getOnItemClickListener() -> getOnItemClickListener
    boolean performItemClick(android.view.View,int,long) -> performItemClick
    void setOnItemLongClickListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener getOnItemLongClickListener() -> getOnItemLongClickListener
    void setOnItemSelectedListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener getOnItemSelectedListener() -> getOnItemSelectedListener
    android.widget.Adapter getAdapter() -> getAdapter
    void setAdapter(android.widget.Adapter) -> setAdapter
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeAllViews() -> removeAllViews
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.view.View getSelectedView() -> getSelectedView
    java.lang.Object getSelectedItem() -> getSelectedItem
    int getCount() -> getCount
    int getPositionForView(android.view.View) -> getPositionForView
    int getFirstVisiblePosition() -> getFirstVisiblePosition
    int getLastVisiblePosition() -> getLastVisiblePosition
    void setSelection(int) -> setSelection
    void setEmptyView(android.view.View) -> setEmptyView
    android.view.View getEmptyView() -> getEmptyView
    boolean isInFilterMode() -> c
    void setFocusable(boolean) -> setFocusable
    void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    void checkFocus() -> d
    void updateEmptyStatus(boolean) -> a
    java.lang.Object getItemAtPosition(int) -> getItemAtPosition
    long getItemIdAtPosition(int) -> getItemIdAtPosition
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void selectionChanged() -> e
    void fireOnSelected() -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean isScrollableForAccessibility() -> b
    boolean canAnimate() -> canAnimate
    void handleDataChanged() -> f
    void checkSelectionChanged() -> g
    int findSyncPosition() -> h
    int lookForSelectablePosition(int,boolean) -> c
    void setSelectedPositionInt(int) -> setSelectedPositionInt
    void setNextSelectedPositionInt(int) -> setNextSelectedPositionInt
    void rememberSyncState() -> i
    void access$0(com.actionbarsherlock.internal.widget.IcsAdapterView,android.os.Parcelable) -> a
    android.os.Parcelable access$1(com.actionbarsherlock.internal.widget.IcsAdapterView) -> a
    void access$2(com.actionbarsherlock.internal.widget.IcsAdapterView) -> b
com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterContextMenuInfo -> com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterContextMenuInfo:
    android.view.View targetView -> targetView
    int position -> position
    long id -> id
com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterDataSetObserver -> as:
    android.os.Parcelable mInstanceState -> b
    com.actionbarsherlock.internal.widget.IcsAdapterView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener -> com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener:
    boolean onItemLongClick(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> onItemLongClick
com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener -> com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener:
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> onNothingSelected
com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier -> at:
    com.actionbarsherlock.internal.widget.IcsAdapterView this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.IcsColorDrawable -> com.actionbarsherlock.internal.widget.IcsColorDrawable:
    int color -> a
    android.graphics.Paint paint -> b
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
com.actionbarsherlock.internal.widget.IcsLinearLayout -> com.actionbarsherlock.internal.widget.IcsLinearLayout:
    int[] R_styleable_LinearLayout -> a
    int SHOW_DIVIDER_NONE -> SHOW_DIVIDER_NONE
    int SHOW_DIVIDER_BEGINNING -> SHOW_DIVIDER_BEGINNING
    int SHOW_DIVIDER_MIDDLE -> SHOW_DIVIDER_MIDDLE
    int SHOW_DIVIDER_END -> SHOW_DIVIDER_END
    android.graphics.drawable.Drawable mDivider -> b
    int mDividerWidth -> c
    int mDividerHeight -> d
    int mShowDividers -> e
    int mDividerPadding -> f
    void setShowDividers(int) -> setShowDividers
    int getShowDividers() -> getShowDividers
    void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    void setDividerPadding(int) -> setDividerPadding
    int getDividerPadding() -> getDividerPadding
    int getDividerWidth() -> getDividerWidth
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawDividersVertical(android.graphics.Canvas) -> a
    void drawDividersHorizontal(android.graphics.Canvas) -> b
    void drawHorizontalDivider(android.graphics.Canvas,int) -> a
    void drawVerticalDivider(android.graphics.Canvas,int) -> b
    boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
com.actionbarsherlock.internal.widget.IcsListPopupWindow -> com.actionbarsherlock.internal.widget.IcsListPopupWindow:
    android.content.Context mContext -> a
    com.actionbarsherlock.internal.widget.PopupWindowCompat mPopup -> b
    android.widget.ListAdapter mAdapter -> c
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView mDropDownList -> d
    int mDropDownHeight -> e
    int mDropDownWidth -> f
    int mDropDownHorizontalOffset -> g
    int mDropDownVerticalOffset -> h
    boolean mDropDownVerticalOffsetSet -> i
    int mListItemExpandMaximum -> j
    android.view.View mPromptView -> k
    int mPromptPosition -> l
    android.database.DataSetObserver mObserver -> m
    android.view.View mDropDownAnchorView -> n
    android.graphics.drawable.Drawable mDropDownListHighlight -> o
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> p
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> q
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> r
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> s
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener mScrollListener -> t
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider mHideSelector -> u
    android.os.Handler mHandler -> v
    android.graphics.Rect mTempRect -> w
    boolean mModal -> x
    int POSITION_PROMPT_ABOVE -> POSITION_PROMPT_ABOVE
    int POSITION_PROMPT_BELOW -> POSITION_PROMPT_BELOW
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setPromptPosition(int) -> setPromptPosition
    void setModal(boolean) -> setModal
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setAnchorView(android.view.View) -> setAnchorView
    void setHorizontalOffset(int) -> setHorizontalOffset
    void setVerticalOffset(int) -> setVerticalOffset
    void setContentWidth(int) -> setContentWidth
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void show() -> show
    void dismiss() -> dismiss
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    void setInputMethodMode(int) -> setInputMethodMode
    void setSelection(int) -> setSelection
    void clearListSelection() -> clearListSelection
    boolean isShowing() -> isShowing
    boolean isInputMethodNotNeeded() -> a
    android.widget.ListView getListView() -> getListView
    int buildDropDown() -> b
    int getMaxAvailableHeight(android.view.View,int,boolean) -> a
    int measureHeightOfChildren(int,int,int,int,int) -> a
    void measureScrapChild(android.view.View,int,int) -> a
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> a
    int access$1(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> b
    com.actionbarsherlock.internal.widget.PopupWindowCompat access$2(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> c
    android.os.Handler access$3(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> d
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable access$4(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> e
    boolean access$5(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> f
com.actionbarsherlock.internal.widget.IcsListPopupWindow$1 -> au:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView -> av:
    boolean mListSelectionHidden -> a
    boolean mHijackFocus -> b
    boolean isInTouchMode() -> isInTouchMode
    boolean hasWindowFocus() -> hasWindowFocus
    boolean isFocused() -> isFocused
    boolean hasFocus() -> hasFocus
    void access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView,boolean) -> a
com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider -> aw:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver -> ax:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener -> ay:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor -> az:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable -> ba:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.IcsProgressBar -> com.actionbarsherlock.internal.widget.IcsProgressBar:
    boolean IS_HONEYCOMB -> f
    int[] ProgressBar -> g
    int mMinWidth -> a
    int mMaxWidth -> b
    int mMinHeight -> c
    int mMaxHeight -> d
    int mProgress -> h
    int mSecondaryProgress -> i
    int mMax -> j
    int mBehavior -> k
    int mDuration -> l
    boolean mIndeterminate -> m
    boolean mOnlyIndeterminate -> n
    android.view.animation.Transformation mTransformation -> o
    android.view.animation.AlphaAnimation mAnimation -> p
    android.graphics.drawable.Drawable mIndeterminateDrawable -> q
    int mIndeterminateRealLeft -> r
    int mIndeterminateRealTop -> s
    android.graphics.drawable.Drawable mProgressDrawable -> t
    android.graphics.drawable.Drawable mCurrentDrawable -> u
    android.graphics.Bitmap mSampleTile -> e
    boolean mNoInvalidate -> v
    android.view.animation.Interpolator mInterpolator -> w
    com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable mRefreshProgressRunnable -> x
    long mUiThreadId -> y
    boolean mShouldStartAnimationDrawable -> z
    long mLastDrawTime -> A
    boolean mInDrawing -> B
    int mAnimationResolution -> C
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> D
    com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender mAccessibilityEventSender -> E
    android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> a
    android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> a
    void initProgressBar() -> c
    boolean isIndeterminate() -> isIndeterminate
    void setIndeterminate(boolean) -> setIndeterminate
    android.graphics.drawable.Drawable getIndeterminateDrawable() -> getIndeterminateDrawable
    void setIndeterminateDrawable(android.graphics.drawable.Drawable) -> setIndeterminateDrawable
    android.graphics.drawable.Drawable getProgressDrawable() -> getProgressDrawable
    void setProgressDrawable(android.graphics.drawable.Drawable) -> setProgressDrawable
    android.graphics.drawable.Drawable getCurrentDrawable() -> getCurrentDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void postInvalidate() -> postInvalidate
    void doRefreshProgress(int,int,boolean,boolean) -> a
    void onProgressRefresh(float,boolean) -> a
    void refreshProgress(int,int,boolean) -> a
    void setProgress(int) -> setProgress
    void setProgress(int,boolean) -> a
    void setSecondaryProgress(int) -> setSecondaryProgress
    int getProgress() -> getProgress
    int getSecondaryProgress() -> getSecondaryProgress
    int getMax() -> getMax
    void setMax(int) -> setMax
    void incrementProgressBy(int) -> incrementProgressBy
    void incrementSecondaryProgressBy(int) -> incrementSecondaryProgressBy
    void startAnimation() -> a
    void stopAnimation() -> b
    void setInterpolator(android.content.Context,int) -> setInterpolator
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setVisibility(int) -> setVisibility
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void updateDrawableBounds(int,int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void drawableStateChanged() -> drawableStateChanged
    void updateDrawableState() -> d
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void scheduleAccessibilityEventSender() -> e
    void access$0(com.actionbarsherlock.internal.widget.IcsProgressBar,int,int,boolean,boolean) -> a
    void access$1(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable) -> a
com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender -> bb:
    com.actionbarsherlock.internal.widget.IcsProgressBar this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable -> bc:
    int mId -> b
    int mProgress -> c
    boolean mFromUser -> d
    com.actionbarsherlock.internal.widget.IcsProgressBar this$0 -> a
    void run() -> run
    void setup(int,int,boolean) -> a
com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState -> com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState:
    int progress -> a
    int secondaryProgress -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1 -> bd:
    com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState createFromParcel(android.os.Parcel) -> a
    com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.widget.IcsSpinner -> com.actionbarsherlock.internal.widget.IcsSpinner:
    int MODE_DROPDOWN -> MODE_DROPDOWN
    com.actionbarsherlock.internal.widget.IcsSpinner$SpinnerPopup mPopup -> G
    com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter mTempAdapter -> H
    int mDropDownWidth -> F
    int mGravity -> I
    boolean mDisableChildrenWhenDisabled -> J
    android.graphics.Rect mTempRect -> K
    void setEnabled(boolean) -> setEnabled
    void setGravity(int) -> setGravity
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    int getBaseline() -> getBaseline
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layout(int,boolean) -> b
    android.view.View makeAndAddView(int) -> a
    void setUpChild(android.view.View) -> setUpChild
    boolean performClick() -> performClick
    void onClick(android.content.DialogInterface,int) -> onClick
    void setPrompt(java.lang.CharSequence) -> setPrompt
    void setPromptId(int) -> setPromptId
    java.lang.CharSequence getPrompt() -> getPrompt
    int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> a
    android.graphics.Rect access$0(com.actionbarsherlock.internal.widget.IcsSpinner) -> a
com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter -> be:
    android.widget.SpinnerAdapter mAdapter -> a
    android.widget.ListAdapter mListAdapter -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    boolean hasStableIds() -> hasStableIds
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean isEmpty() -> isEmpty
com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup -> bf:
    java.lang.CharSequence mHintText -> b
    android.widget.ListAdapter mAdapter -> c
    com.actionbarsherlock.internal.widget.IcsSpinner this$0 -> a
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    java.lang.CharSequence getHintText() -> a
    void setPromptText(java.lang.CharSequence) -> a
    void show() -> show
    com.actionbarsherlock.internal.widget.IcsSpinner access$0(com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup) -> a
com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup$1 -> bg:
    com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup this$1 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.actionbarsherlock.internal.widget.IcsSpinner$SpinnerPopup -> bh:
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void show() -> show
    void dismiss() -> dismiss
    boolean isShowing() -> isShowing
    void setPromptText(java.lang.CharSequence) -> a
    java.lang.CharSequence getHintText() -> a
com.actionbarsherlock.internal.widget.IcsToast -> com.actionbarsherlock.internal.widget.IcsToast:
    int LENGTH_LONG -> LENGTH_LONG
    int LENGTH_SHORT -> LENGTH_SHORT
    android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int) -> makeText
    android.widget.Toast makeText(android.content.Context,int,int) -> makeText
    void setText(java.lang.CharSequence) -> setText
com.actionbarsherlock.internal.widget.PopupWindowCompat -> com.actionbarsherlock.internal.widget.PopupWindowCompat:
    java.lang.reflect.Field superListenerField -> a
    android.view.ViewTreeObserver$OnScrollChangedListener NOP -> b
    android.view.ViewTreeObserver$OnScrollChangedListener mSuperScrollListener -> c
    android.view.ViewTreeObserver mViewTreeObserver -> d
    void init() -> a
    void unregisterListener() -> b
    void registerListener(android.view.View) -> a
    void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    void update(android.view.View,int,int,int,int) -> update
    void update(android.view.View,int,int) -> update
    void showAtLocation(android.view.View,int,int,int) -> showAtLocation
    void dismiss() -> dismiss
com.actionbarsherlock.internal.widget.PopupWindowCompat$1 -> bi:
    void onScrollChanged() -> onScrollChanged
com.actionbarsherlock.internal.widget.ScrollingTabContainerView -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView:
    java.lang.Runnable mTabSelector -> a
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener mTabClickListener -> c
    com.actionbarsherlock.internal.widget.IcsLinearLayout mTabLayout -> d
    com.actionbarsherlock.internal.widget.IcsSpinner mTabSpinner -> e
    boolean mAllowCollapse -> f
    android.view.LayoutInflater mInflater -> g
    int mMaxTabWidth -> b
    int mContentHeight -> h
    int mSelectedTabIndex -> i
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mVisibilityAnim -> mVisibilityAnim
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener mVisAnimListener -> mVisAnimListener
    android.view.animation.Interpolator sAlphaInterpolator -> j
    void onMeasure(int,int) -> onMeasure
    boolean isCollapsed() -> a
    void setAllowCollapse(boolean) -> setAllowCollapse
    void performCollapse() -> b
    boolean performExpand() -> c
    void setTabSelected(int) -> setTabSelected
    void setContentHeight(int) -> setContentHeight
    com.actionbarsherlock.internal.widget.IcsLinearLayout createTabLayout() -> d
    com.actionbarsherlock.internal.widget.IcsSpinner createSpinner() -> e
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void animateToVisibility(int) -> animateToVisibility
    void animateToTab(int) -> animateToTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView createTabView(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> a
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean) -> addTab
    void updateTab(int) -> updateTab
    void removeTabAt(int) -> removeTabAt
    void removeAllTabs() -> removeAllTabs
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> onNothingSelected
    com.actionbarsherlock.internal.widget.IcsLinearLayout access$0(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> a
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView access$1(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab,boolean) -> a
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$1 -> bj:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> a
    android.view.View val$tabView -> b
    void run() -> run
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter -> bk:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener -> bl:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> a
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mParent -> a
    com.actionbarsherlock.app.ActionBar$Tab mTab -> b
    com.actionbarsherlock.internal.widget.CapitalizingTextView mTextView -> c
    android.widget.ImageView mIconView -> d
    android.view.View mCustomView -> e
    void init(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab,boolean) -> init
    void bindTab(com.actionbarsherlock.app.ActionBar$Tab) -> bindTab
    void onMeasure(int,int) -> onMeasure
    void update() -> update
    com.actionbarsherlock.app.ActionBar$Tab getTab() -> getTab
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener:
    boolean mCanceled -> b
    int mFinalVisibility -> c
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> a
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener withFinalVisibility(int) -> withFinalVisibility
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
com.actionbarsherlock.internal.widget.TabsLinearLayout -> com.actionbarsherlock.internal.widget.TabsLinearLayout:
    int[] R_styleable_LinearLayout -> a
    boolean mUseLargestChild -> b
    boolean isMeasureWithLargestChildEnabled() -> isMeasureWithLargestChildEnabled
    void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    void onMeasure(int,int) -> onMeasure
    void useLargestChildHorizontal() -> a
com.actionbarsherlock.view.ActionMode -> com.actionbarsherlock.view.ActionMode:
    java.lang.Object mTag -> a
    void setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setCustomView(android.view.View) -> setCustomView
    void invalidate() -> invalidate
    void finish() -> finish
    com.actionbarsherlock.view.Menu getMenu() -> getMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    boolean isUiFocusable() -> isUiFocusable
com.actionbarsherlock.view.ActionMode$Callback -> com.actionbarsherlock.view.ActionMode$Callback:
    boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(com.actionbarsherlock.view.ActionMode) -> onDestroyActionMode
com.actionbarsherlock.view.ActionProvider -> com.actionbarsherlock.view.ActionProvider:
    com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> a
    android.view.View onCreateActionView() -> onCreateActionView
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(com.actionbarsherlock.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener -> com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
com.actionbarsherlock.view.CollapsibleActionView -> com.actionbarsherlock.view.CollapsibleActionView:
    void onActionViewExpanded() -> onActionViewExpanded
    void onActionViewCollapsed() -> onActionViewCollapsed
com.actionbarsherlock.view.Menu -> com.actionbarsherlock.view.Menu:
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
    int NONE -> NONE
    int FIRST -> FIRST
    int CATEGORY_CONTAINER -> CATEGORY_CONTAINER
    int CATEGORY_SYSTEM -> CATEGORY_SYSTEM
    int CATEGORY_SECONDARY -> CATEGORY_SECONDARY
    int CATEGORY_ALTERNATIVE -> CATEGORY_ALTERNATIVE
    int FLAG_APPEND_TO_GROUP -> FLAG_APPEND_TO_GROUP
    int FLAG_PERFORM_NO_CLOSE -> FLAG_PERFORM_NO_CLOSE
    int FLAG_ALWAYS_PERFORM_CLOSE -> FLAG_ALWAYS_PERFORM_CLOSE
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,int) -> add
    com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void clear() -> clear
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    com.actionbarsherlock.view.MenuItem findItem(int) -> findItem
    int size() -> size
    com.actionbarsherlock.view.MenuItem getItem(int) -> getItem
    void close() -> close
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    void setQwertyMode(boolean) -> setQwertyMode
com.actionbarsherlock.view.MenuInflater -> com.actionbarsherlock.view.MenuInflater:
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> a
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> b
    java.lang.Object[] mActionViewConstructorArguments -> c
    java.lang.Object[] mActionProviderConstructorArguments -> d
    android.content.Context mContext -> e
    java.lang.Object mRealOwner -> f
    void inflate(int,com.actionbarsherlock.view.Menu) -> inflate
    void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.actionbarsherlock.view.Menu) -> a
    android.content.Context access$0(com.actionbarsherlock.view.MenuInflater) -> a
    java.lang.Class[] access$1() -> a
    java.lang.Object[] access$2(com.actionbarsherlock.view.MenuInflater) -> b
    java.lang.Object access$3(com.actionbarsherlock.view.MenuInflater) -> c
    java.lang.Class[] access$4() -> b
    java.lang.Object[] access$5(com.actionbarsherlock.view.MenuInflater) -> d
com.actionbarsherlock.view.MenuInflater$InflatedOnMenuItemClickListener -> bm:
    java.lang.Class[] PARAM_TYPES -> a
    java.lang.Object mRealOwner -> b
    java.lang.reflect.Method mMethod -> c
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> onMenuItemClick
com.actionbarsherlock.view.MenuInflater$MenuState -> bn:
    com.actionbarsherlock.view.Menu menu -> b
    int groupId -> c
    int groupCategory -> d
    int groupOrder -> e
    int groupCheckable -> f
    boolean groupVisible -> g
    boolean groupEnabled -> h
    boolean itemAdded -> i
    int itemId -> j
    int itemCategoryOrder -> k
    java.lang.CharSequence itemTitle -> l
    java.lang.CharSequence itemTitleCondensed -> m
    int itemIconResId -> n
    char itemAlphabeticShortcut -> o
    char itemNumericShortcut -> p
    int itemCheckable -> q
    boolean itemChecked -> r
    boolean itemVisible -> s
    boolean itemEnabled -> t
    int itemShowAsAction -> u
    int itemActionViewLayout -> v
    java.lang.String itemActionViewClassName -> w
    java.lang.String itemActionProviderClassName -> x
    java.lang.String itemListenerMethodName -> y
    com.actionbarsherlock.view.ActionProvider itemActionProvider -> z
    com.actionbarsherlock.view.MenuInflater this$0 -> a
    void resetGroup() -> a
    void readGroup(android.util.AttributeSet) -> a
    void readItem(android.util.AttributeSet) -> b
    char getShortcut(java.lang.String) -> a
    void setItem(com.actionbarsherlock.view.MenuItem) -> a
    void addItem() -> b
    com.actionbarsherlock.view.SubMenu addSubMenuItem() -> c
    boolean hasAddedItem() -> d
    java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    com.actionbarsherlock.view.ActionProvider access$0(com.actionbarsherlock.view.MenuInflater$MenuState) -> a
com.actionbarsherlock.view.MenuItem -> com.actionbarsherlock.view.MenuItem:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    int getItemId() -> getItemId
    int getGroupId() -> getGroupId
    int getOrder() -> getOrder
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitle() -> getTitle
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem setIcon(int) -> setIcon
    android.graphics.drawable.Drawable getIcon() -> getIcon
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> setShortcut
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    char getNumericShortcut() -> getNumericShortcut
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> setCheckable
    boolean isCheckable() -> isCheckable
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> setChecked
    boolean isChecked() -> isChecked
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    boolean hasSubMenu() -> hasSubMenu
    com.actionbarsherlock.view.SubMenu getSubMenu() -> getSubMenu
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void setShowAsAction(int) -> setShowAsAction
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> setActionView
    com.actionbarsherlock.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> setActionProvider
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> getActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
com.actionbarsherlock.view.MenuItem$OnActionExpandListener -> com.actionbarsherlock.view.MenuItem$OnActionExpandListener:
    boolean onMenuItemActionExpand(com.actionbarsherlock.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(com.actionbarsherlock.view.MenuItem) -> onMenuItemActionCollapse
com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener -> com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener:
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> onMenuItemClick
com.actionbarsherlock.view.SubMenu -> com.actionbarsherlock.view.SubMenu:
    com.actionbarsherlock.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
    com.actionbarsherlock.view.SubMenu setIcon(int) -> setIcon
    com.actionbarsherlock.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem getItem() -> getItem
com.actionbarsherlock.view.Window -> com.actionbarsherlock.view.Window:
    long FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    long FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    long FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
    long FEATURE_NO_TITLE -> FEATURE_NO_TITLE
    long FEATURE_PROGRESS -> FEATURE_PROGRESS
    long FEATURE_INDETERMINATE_PROGRESS -> FEATURE_INDETERMINATE_PROGRESS
com.actionbarsherlock.view.Window$Callback -> com.actionbarsherlock.view.Window$Callback:
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
com.actionbarsherlock.widget.ActivityChooserModel -> com.actionbarsherlock.widget.ActivityChooserModel:
    java.lang.String LOG_TAG -> a
    java.lang.Object sRegistryLock -> b
    java.util.Map sDataModelRegistry -> c
    java.lang.Object mInstanceLock -> d
    java.util.List mActivites -> e
    java.util.List mHistoricalRecords -> f
    android.content.Context mContext -> g
    java.lang.String mHistoryFileName -> h
    android.content.Intent mIntent -> i
    com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter mActivitySorter -> j
    int mHistoryMaxSize -> k
    boolean mCanReadHistoricalData -> l
    boolean mReadShareHistoryCalled -> m
    boolean mHistoricalRecordsChanged -> n
    android.os.Handler mHandler -> o
    com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy -> p
    java.util.concurrent.Executor SERIAL_EXECUTOR -> q
    com.actionbarsherlock.widget.ActivityChooserModel get(android.content.Context,java.lang.String) -> a
    void setIntent(android.content.Intent) -> a
    int getActivityCount() -> a
    android.content.pm.ResolveInfo getActivity(int) -> a
    int getActivityIndex(android.content.pm.ResolveInfo) -> a
    android.content.Intent chooseActivity(int) -> b
    void setOnChooseActivityListener(com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener) -> a
    android.content.pm.ResolveInfo getDefaultActivity() -> b
    void setDefaultActivity(int) -> c
    void readHistoricalData() -> e
    void persistHistoricalData() -> f
    void sortActivities() -> g
    int getHistorySize() -> c
    boolean addHisoricalRecord(com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord) -> a
    void pruneExcessiveHistoricalRecordsLocked() -> h
    void loadActivitiesLocked() -> i
    android.content.Context access$0(com.actionbarsherlock.widget.ActivityChooserModel) -> a
    java.lang.String access$1(com.actionbarsherlock.widget.ActivityChooserModel) -> b
    java.lang.Object access$2(com.actionbarsherlock.widget.ActivityChooserModel) -> c
    java.util.List access$3(com.actionbarsherlock.widget.ActivityChooserModel) -> d
    void access$4(com.actionbarsherlock.widget.ActivityChooserModel,boolean) -> a
    android.os.Handler access$5(com.actionbarsherlock.widget.ActivityChooserModel) -> e
    void access$6(com.actionbarsherlock.widget.ActivityChooserModel) -> f
    void access$7(com.actionbarsherlock.widget.ActivityChooserModel) -> g
    java.lang.String access$8() -> d
com.actionbarsherlock.widget.ActivityChooserModel$ActivityChooserModelClient -> com.actionbarsherlock.widget.ActivityChooserModel$ActivityChooserModelClient:
    void setActivityChooserModel(com.actionbarsherlock.widget.ActivityChooserModel) -> setActivityChooserModel
com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo -> com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo:
    android.content.pm.ResolveInfo resolveInfo -> resolveInfo
    float weight -> weight
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo) -> compareTo
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter -> com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter:
    void sort(android.content.Intent,java.util.List,java.util.List) -> sort
com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter -> bo:
    java.util.Map mPackageNameToActivityMap -> b
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> a
    void sort(android.content.Intent,java.util.List,java.util.List) -> sort
com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord -> com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord:
    android.content.ComponentName activity -> activity
    long time -> time
    float weight -> weight
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader -> bp:
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> a
    void run() -> run
    com.actionbarsherlock.widget.ActivityChooserModel access$1(com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader) -> a
com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader$1 -> bq:
    com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader this$1 -> a
    void run() -> run
com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister -> br:
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> a
    void run() -> run
com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener -> com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener:
    boolean onChooseActivity(com.actionbarsherlock.widget.ActivityChooserModel,android.content.Intent) -> onChooseActivity
com.actionbarsherlock.widget.ActivityChooserView -> bs:
    com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter mAdapter -> b
    com.actionbarsherlock.widget.ActivityChooserView$Callbacks mCallbacks -> c
    com.actionbarsherlock.internal.widget.IcsLinearLayout mActivityChooserContent -> d
    android.graphics.drawable.Drawable mActivityChooserContentBackground -> e
    android.widget.FrameLayout mExpandActivityOverflowButton -> f
    android.widget.ImageView mExpandActivityOverflowButtonImage -> g
    android.widget.FrameLayout mDefaultActivityButton -> h
    android.widget.ImageView mDefaultActivityButtonImage -> i
    int mListPopupMaxWidth -> j
    com.actionbarsherlock.view.ActionProvider mProvider -> a
    android.database.DataSetObserver mModelDataSetOberver -> k
    android.view.ViewTreeObserver$OnGlobalLayoutListener mOnGlobalLayoutListener -> l
    com.actionbarsherlock.internal.widget.IcsListPopupWindow mListPopupWindow -> m
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> n
    boolean mIsSelectingDefaultActivity -> o
    int mInitialActivityCount -> p
    boolean mIsAttachedToWindow -> q
    int mDefaultActionButtonContentDescription -> r
    android.content.Context mContext -> s
    boolean IS_HONEYCOMB -> t
    void setActivityChooserModel(com.actionbarsherlock.widget.ActivityChooserModel) -> setActivityChooserModel
    void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable) -> a
    void setExpandActivityOverflowButtonContentDescription(int) -> a
    void setProvider(com.actionbarsherlock.view.ActionProvider) -> a
    boolean showPopup() -> a
    void showPopupUnchecked(int) -> c
    boolean dismissPopup() -> b
    boolean isShowingPopup() -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setDefaultActionButtonContentDescription(int) -> b
    com.actionbarsherlock.internal.widget.IcsListPopupWindow getListPopupWindow() -> e
    void updateAppearance() -> f
    com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter access$0(com.actionbarsherlock.widget.ActivityChooserView) -> a
    com.actionbarsherlock.internal.widget.IcsListPopupWindow access$1(com.actionbarsherlock.widget.ActivityChooserView) -> b
    void access$2(com.actionbarsherlock.widget.ActivityChooserView,int) -> a
    boolean access$3(com.actionbarsherlock.widget.ActivityChooserView) -> c
    android.content.Context access$4(com.actionbarsherlock.widget.ActivityChooserView) -> d
    android.widget.FrameLayout access$5(com.actionbarsherlock.widget.ActivityChooserView) -> e
    android.widget.FrameLayout access$6(com.actionbarsherlock.widget.ActivityChooserView) -> f
    void access$7(com.actionbarsherlock.widget.ActivityChooserView,boolean) -> a
    int access$8(com.actionbarsherlock.widget.ActivityChooserView) -> g
    android.widget.PopupWindow$OnDismissListener access$9(com.actionbarsherlock.widget.ActivityChooserView) -> h
    android.database.DataSetObserver access$10(com.actionbarsherlock.widget.ActivityChooserView) -> i
    boolean access$11() -> d
    void access$12(com.actionbarsherlock.widget.ActivityChooserView) -> j
com.actionbarsherlock.widget.ActivityChooserView$1 -> bt:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.actionbarsherlock.widget.ActivityChooserView$2 -> bu:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
com.actionbarsherlock.widget.ActivityChooserView$3 -> bv:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> a
    void onChanged() -> onChanged
com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter -> bw:
    com.actionbarsherlock.widget.ActivityChooserModel mDataModel -> b
    int mMaxActivityCount -> c
    boolean mShowDefaultActivity -> d
    boolean mHighlightDefaultActivity -> e
    boolean mShowFooterView -> f
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> a
    void setDataModel(com.actionbarsherlock.widget.ActivityChooserModel) -> a
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int measureContentWidth() -> a
    void setMaxActivityCount(int) -> a
    android.content.pm.ResolveInfo getDefaultActivity() -> b
    void setShowFooterView(boolean) -> a
    int getActivityCount() -> c
    int getHistorySize() -> d
    int getMaxActivityCount() -> e
    com.actionbarsherlock.widget.ActivityChooserModel getDataModel() -> f
    void setShowDefaultActivity(boolean,boolean) -> a
    boolean getShowDefaultActivity() -> g
com.actionbarsherlock.widget.ActivityChooserView$Callbacks -> bx:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
    void onDismiss() -> onDismiss
    void notifyOnDismissListener() -> a
com.actionbarsherlock.widget.ActivityChooserView$SetActivated -> by:
    void invoke(android.view.View,boolean) -> a
com.actionbarsherlock.widget.SearchView -> com.actionbarsherlock.widget.SearchView:
    com.actionbarsherlock.widget.SearchView$OnQueryTextListener mOnQueryChangeListener -> b
    com.actionbarsherlock.widget.SearchView$OnCloseListener mOnCloseListener -> c
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> d
    com.actionbarsherlock.widget.SearchView$OnSuggestionListener mOnSuggestionListener -> e
    android.view.View$OnClickListener mOnSearchClickListener -> f
    boolean mIconifiedByDefault -> g
    boolean mIconified -> h
    android.support.v4.widget.CursorAdapter mSuggestionsAdapter -> i
    android.view.View mSearchButton -> j
    android.view.View mSubmitButton -> k
    android.view.View mSearchPlate -> l
    android.view.View mSubmitArea -> m
    android.widget.ImageView mCloseButton -> n
    android.view.View mSearchEditFrame -> o
    android.view.View mVoiceButton -> p
    com.actionbarsherlock.widget.SearchView$SearchAutoComplete mQueryTextView -> q
    android.view.View mDropDownAnchor -> r
    android.widget.ImageView mSearchHintIcon -> s
    boolean mSubmitButtonEnabled -> t
    java.lang.CharSequence mQueryHint -> u
    boolean mQueryRefinement -> v
    boolean mClearingFocus -> w
    int mMaxWidth -> x
    boolean mVoiceButtonEnabled -> y
    java.lang.CharSequence mOldQueryText -> z
    java.lang.CharSequence mUserQuery -> A
    boolean mExpandedInActionView -> B
    int mCollapsedImeOptions -> C
    android.app.SearchableInfo mSearchable -> D
    android.os.Bundle mAppSearchData -> E
    java.lang.Runnable mShowImeRunnable -> F
    java.lang.Runnable mUpdateDrawableStateRunnable -> G
    java.lang.Runnable mReleaseCursorRunnable -> H
    android.content.Intent mVoiceWebSearchIntent -> I
    android.content.Intent mVoiceAppSearchIntent -> J
    java.util.WeakHashMap mOutsideDrawablesCache -> K
    android.view.View$OnClickListener mOnClickListener -> L
    android.view.View$OnKeyListener mTextKeyListener -> a
    android.widget.TextView$OnEditorActionListener mOnEditorActionListener -> M
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> N
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> O
    android.text.TextWatcher mTextWatcher -> P
    void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    void setAppSearchData(android.os.Bundle) -> setAppSearchData
    void setImeOptions(int) -> setImeOptions
    int getImeOptions() -> getImeOptions
    void setInputType(int) -> setInputType
    int getInputType() -> getInputType
    boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    void clearFocus() -> clearFocus
    void setOnQueryTextListener(com.actionbarsherlock.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    void setOnCloseListener(com.actionbarsherlock.widget.SearchView$OnCloseListener) -> setOnCloseListener
    void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    void setOnSuggestionListener(com.actionbarsherlock.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    java.lang.CharSequence getQuery() -> getQuery
    void setQuery(java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(java.lang.CharSequence) -> setQueryHint
    java.lang.CharSequence getQueryHint() -> getQueryHint
    void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    boolean isIconfiedByDefault() -> isIconfiedByDefault
    void setIconified(boolean) -> setIconified
    boolean isIconified() -> isIconified
    void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled() -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled() -> isQueryRefinementEnabled
    void setSuggestionsAdapter(android.support.v4.widget.CursorAdapter) -> setSuggestionsAdapter
    android.support.v4.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    void setMaxWidth(int) -> setMaxWidth
    int getMaxWidth() -> getMaxWidth
    void onMeasure(int,int) -> onMeasure
    int getPreferredWidth() -> getPreferredWidth
    void updateViewsVisibility(boolean) -> a
    boolean hasVoiceSearch() -> b
    boolean isSubmitAreaEnabled() -> c
    void updateSubmitButton(boolean) -> b
    void updateSubmitArea() -> d
    void updateCloseButton() -> e
    void postUpdateFocusedState() -> f
    void updateFocusedState() -> g
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setImeVisibility(boolean) -> setImeVisibility
    void onQueryRefine(java.lang.CharSequence) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> a
    int getSearchIconId() -> getSearchIconId
    java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> b
    void updateQueryHint() -> h
    void updateSearchAutoComplete() -> i
    void updateVoiceButton(boolean) -> c
    void onTextChanged(java.lang.CharSequence) -> c
    void onSubmitQuery() -> j
    void dismissSuggestions() -> k
    void onCloseClicked() -> l
    void onSearchClicked() -> m
    void onVoiceClicked() -> n
    void onTextFocusChanged() -> a
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onActionViewCollapsed() -> onActionViewCollapsed
    void onActionViewExpanded() -> onActionViewExpanded
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void adjustDropDownSizeAndPosition() -> o
    boolean onItemClicked(int,int,java.lang.String) -> a
    boolean onItemSelected(int) -> a
    void rewriteQueryFromSuggestion(int) -> b
    boolean launchSuggestion(int,int,java.lang.String) -> b
    void launchIntent(android.content.Intent) -> a
    void setQuery(java.lang.CharSequence) -> setQuery
    void launchQuerySearch(int,java.lang.String,java.lang.String) -> a
    android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> a
    android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> a
    android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> b
    android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> a
    void forceSuggestionQuery() -> p
    boolean isLandscapeMode(android.content.Context) -> a
    void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> b
    void showSoftInputUnchecked(android.view.View,android.view.inputmethod.InputMethodManager,int) -> b
    void setText(android.widget.AutoCompleteTextView,java.lang.CharSequence,boolean) -> a
    void access$0(android.view.View,android.view.inputmethod.InputMethodManager,int) -> a
    void access$1(com.actionbarsherlock.widget.SearchView) -> a
    android.support.v4.widget.CursorAdapter access$2(com.actionbarsherlock.widget.SearchView) -> b
    android.view.View access$3(com.actionbarsherlock.widget.SearchView) -> c
    void access$4(com.actionbarsherlock.widget.SearchView) -> d
    android.widget.ImageView access$5(com.actionbarsherlock.widget.SearchView) -> e
    void access$6(com.actionbarsherlock.widget.SearchView) -> f
    android.view.View access$7(com.actionbarsherlock.widget.SearchView) -> g
    void access$8(com.actionbarsherlock.widget.SearchView) -> h
    android.view.View access$9(com.actionbarsherlock.widget.SearchView) -> i
    void access$10(com.actionbarsherlock.widget.SearchView) -> j
    com.actionbarsherlock.widget.SearchView$SearchAutoComplete access$11(com.actionbarsherlock.widget.SearchView) -> k
    void access$12(com.actionbarsherlock.widget.SearchView) -> l
    android.app.SearchableInfo access$13(com.actionbarsherlock.widget.SearchView) -> m
    boolean access$14(com.actionbarsherlock.widget.SearchView,android.view.View,int,android.view.KeyEvent) -> a
    void access$15(com.actionbarsherlock.widget.SearchView,int,java.lang.String,java.lang.String) -> a
    boolean access$16(com.actionbarsherlock.widget.SearchView,int,int,java.lang.String) -> a
    boolean access$17(com.actionbarsherlock.widget.SearchView,int) -> a
    void access$18(com.actionbarsherlock.widget.SearchView,java.lang.CharSequence) -> a
    void access$19(android.widget.AutoCompleteTextView,boolean) -> a
    void access$20(com.actionbarsherlock.widget.SearchView,boolean) -> a
    android.view.View$OnFocusChangeListener access$21(com.actionbarsherlock.widget.SearchView) -> n
    void access$22(com.actionbarsherlock.widget.SearchView) -> o
com.actionbarsherlock.widget.SearchView$1 -> bz:
    com.actionbarsherlock.widget.SearchView this$0 -> a
    void run() -> run
com.actionbarsherlock.widget.SearchView$10 -> ca:
    com.actionbarsherlock.widget.SearchView this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.actionbarsherlock.widget.SearchView$11 -> cb:
    com.actionbarsherlock.widget.SearchView this$0 -> a
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.actionbarsherlock.widget.SearchView$12 -> cc:
    com.actionbarsherlock.widget.SearchView this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
com.actionbarsherlock.widget.SearchView$2 -> cd:
    com.actionbarsherlock.widget.SearchView this$0 -> a
    void run() -> run
com.actionbarsherlock.widget.SearchView$3 -> ce:
    com.actionbarsherlock.widget.SearchView this$0 -> a
    void run() -> run
com.actionbarsherlock.widget.SearchView$4 -> cf:
    com.actionbarsherlock.widget.SearchView this$0 -> a
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.widget.SearchView$5 -> cg:
    com.actionbarsherlock.widget.SearchView this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.actionbarsherlock.widget.SearchView$6 -> ch:
    com.actionbarsherlock.widget.SearchView this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.actionbarsherlock.widget.SearchView$7 -> ci:
    com.actionbarsherlock.widget.SearchView this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.actionbarsherlock.widget.SearchView$8 -> cj:
    com.actionbarsherlock.widget.SearchView this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.actionbarsherlock.widget.SearchView$9 -> ck:
    com.actionbarsherlock.widget.SearchView this$0 -> a
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.actionbarsherlock.widget.SearchView$OnCloseListener -> com.actionbarsherlock.widget.SearchView$OnCloseListener:
    boolean onClose() -> onClose
com.actionbarsherlock.widget.SearchView$OnQueryTextListener -> com.actionbarsherlock.widget.SearchView$OnQueryTextListener:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
com.actionbarsherlock.widget.SearchView$OnSuggestionListener -> com.actionbarsherlock.widget.SearchView$OnSuggestionListener:
    boolean onSuggestionSelect(int) -> onSuggestionSelect
    boolean onSuggestionClick(int) -> onSuggestionClick
com.actionbarsherlock.widget.SearchView$SearchAutoComplete -> com.actionbarsherlock.widget.SearchView$SearchAutoComplete:
    int mThreshold -> a
    com.actionbarsherlock.widget.SearchView mSearchView -> b
    void setSearchView(com.actionbarsherlock.widget.SearchView) -> setSearchView
    void setThreshold(int) -> setThreshold
    boolean isEmpty() -> a
    void replaceText(java.lang.CharSequence) -> replaceText
    void performCompletion() -> performCompletion
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean enoughToFilter() -> enoughToFilter
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    boolean access$0(com.actionbarsherlock.widget.SearchView$SearchAutoComplete) -> a
com.actionbarsherlock.widget.ShareActionProvider -> com.actionbarsherlock.widget.ShareActionProvider:
    int mMaxShownActivityCount -> a
    com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener mOnMenuItemClickListener -> b
    java.lang.String DEFAULT_SHARE_HISTORY_FILE_NAME -> DEFAULT_SHARE_HISTORY_FILE_NAME
    android.content.Context mContext -> c
    java.lang.String mShareHistoryFileName -> d
    com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener mOnShareTargetSelectedListener -> e
    com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener mOnChooseActivityListener -> f
    void setOnShareTargetSelectedListener(com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener) -> setOnShareTargetSelectedListener
    android.view.View onCreateActionView() -> onCreateActionView
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(com.actionbarsherlock.view.SubMenu) -> onPrepareSubMenu
    void setShareHistoryFileName(java.lang.String) -> setShareHistoryFileName
    void setShareIntent(android.content.Intent) -> setShareIntent
    void setActivityChooserPolicyIfNeeded() -> a
    android.content.Context access$0(com.actionbarsherlock.widget.ShareActionProvider) -> a
    java.lang.String access$1(com.actionbarsherlock.widget.ShareActionProvider) -> b
    com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener access$2(com.actionbarsherlock.widget.ShareActionProvider) -> c
com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener -> com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener:
    boolean onShareTargetSelected(com.actionbarsherlock.widget.ShareActionProvider,android.content.Intent) -> onShareTargetSelected
com.actionbarsherlock.widget.ShareActionProvider$ShareAcitivityChooserModelPolicy -> cl:
    com.actionbarsherlock.widget.ShareActionProvider this$0 -> a
    boolean onChooseActivity(com.actionbarsherlock.widget.ActivityChooserModel,android.content.Intent) -> onChooseActivity
com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener -> cm:
    com.actionbarsherlock.widget.ShareActionProvider this$0 -> a
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> onMenuItemClick
com.actionbarsherlock.widget.SuggestionsAdapter -> cn:
    android.app.SearchManager mSearchManager -> a
    android.app.SearchableInfo mSearchable -> b
    com.actionbarsherlock.widget.SearchView mSearchView -> c
    android.content.Context mProviderContext -> d
    java.util.WeakHashMap mOutsideDrawablesCache -> e
    boolean mClosed -> f
    int mQueryRefinement -> g
    android.content.res.ColorStateList mUrlColor -> h
    int mText1Col -> i
    int mText2Col -> j
    int mText2UrlCol -> k
    int mIconName1Col -> l
    int mIconName2Col -> m
    int mFlagsCol -> n
    void setQueryRefinement(int) -> a
    boolean hasStableIds() -> hasStableIds
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getSuggestions(java.lang.String,int) -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    void updateSpinnerState(android.database.Cursor) -> a
    void changeCursor(android.database.Cursor) -> changeCursor
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void onClick(android.view.View) -> onClick
    java.lang.CharSequence formatUrl(java.lang.CharSequence) -> a
    void setViewText(android.widget.TextView,java.lang.CharSequence) -> a
    android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> b
    android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> c
    void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> a
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> a
    android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> b
    android.graphics.drawable.Drawable getTheDrawable(android.net.Uri) -> a
    android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> b
    void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> d
    java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> a
    java.lang.String getStringOrNull(android.database.Cursor,int) -> a
com.actionbarsherlock.widget.SuggestionsAdapter$ChildViewCache -> co:
    android.widget.TextView mText1 -> a
    android.widget.TextView mText2 -> b
    android.widget.ImageView mIcon1 -> c
    android.widget.ImageView mIcon2 -> d
    android.widget.ImageView mIconRefine -> e
com.amap.api.location.AMapLocalDayWeatherForecast -> com.amap.api.location.AMapLocalDayWeatherForecast:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String getCity() -> getCity
    void setCity(java.lang.String) -> setCity
    java.lang.String getProvince() -> getProvince
    void setProvince(java.lang.String) -> setProvince
    java.lang.String getCityCode() -> getCityCode
    void setCityCode(java.lang.String) -> setCityCode
    java.lang.String getDate() -> getDate
    void a(java.lang.String) -> a
    java.lang.String getWeek() -> getWeek
    void b(java.lang.String) -> b
    java.lang.String getDayWeather() -> getDayWeather
    void c(java.lang.String) -> c
    java.lang.String getNightWeather() -> getNightWeather
    void d(java.lang.String) -> d
    java.lang.String getDayTemp() -> getDayTemp
    void e(java.lang.String) -> e
    java.lang.String getNightTemp() -> getNightTemp
    void f(java.lang.String) -> f
    java.lang.String getDayWindDir() -> getDayWindDir
    void g(java.lang.String) -> g
    java.lang.String getNightWindDir() -> getNightWindDir
    void h(java.lang.String) -> h
    java.lang.String getDayWindPower() -> getDayWindPower
    void i(java.lang.String) -> i
    java.lang.String getNightWindPower() -> getNightWindPower
    void j(java.lang.String) -> j
com.amap.api.location.AMapLocalWeatherForecast -> com.amap.api.location.AMapLocalWeatherForecast:
    java.lang.String a -> a
    java.util.List b -> b
    com.amap.api.location.core.AMapLocException c -> c
    com.amap.api.location.core.AMapLocException getAMapException() -> getAMapException
    void a(com.amap.api.location.core.AMapLocException) -> a
    java.lang.String getReportTime() -> getReportTime
    void a(java.lang.String) -> a
    java.util.List getWeatherForecast() -> getWeatherForecast
    void a(java.util.List) -> a
com.amap.api.location.AMapLocalWeatherListener -> com.amap.api.location.AMapLocalWeatherListener:
    void onWeatherLiveSearched(com.amap.api.location.AMapLocalWeatherLive) -> onWeatherLiveSearched
    void onWeatherForecaseSearched(com.amap.api.location.AMapLocalWeatherForecast) -> onWeatherForecaseSearched
com.amap.api.location.AMapLocalWeatherLive -> com.amap.api.location.AMapLocalWeatherLive:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    com.amap.api.location.core.AMapLocException g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String getCity() -> getCity
    void setCity(java.lang.String) -> setCity
    java.lang.String getProvince() -> getProvince
    void setProvince(java.lang.String) -> setProvince
    java.lang.String getCityCode() -> getCityCode
    void setCityCode(java.lang.String) -> setCityCode
    com.amap.api.location.core.AMapLocException getAMapException() -> getAMapException
    void a(com.amap.api.location.core.AMapLocException) -> a
    java.lang.String getWeather() -> getWeather
    void a(java.lang.String) -> a
    java.lang.String getTemperature() -> getTemperature
    void b(java.lang.String) -> b
    java.lang.String getWindDir() -> getWindDir
    void c(java.lang.String) -> c
    java.lang.String getWindPower() -> getWindPower
    void d(java.lang.String) -> d
    java.lang.String getHumidity() -> getHumidity
    void e(java.lang.String) -> e
    java.lang.String getReportTime() -> getReportTime
    void f(java.lang.String) -> f
com.amap.api.location.AMapLocation -> com.amap.api.location.AMapLocation:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    com.amap.api.location.core.AMapLocException j -> j
    com.amap.api.location.core.AMapLocException getAMapException() -> getAMapException
    void setAMapException(com.amap.api.location.core.AMapLocException) -> setAMapException
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    java.lang.String getPoiId() -> getPoiId
    void setPoiId(java.lang.String) -> setPoiId
    java.lang.String getFloor() -> getFloor
    void setFloor(java.lang.String) -> setFloor
    java.lang.String getProvince() -> getProvince
    void setProvince(java.lang.String) -> setProvince
    java.lang.String getCity() -> getCity
    void setCity(java.lang.String) -> setCity
    java.lang.String getDistrict() -> getDistrict
    void setDistrict(java.lang.String) -> setDistrict
    java.lang.String getCityCode() -> getCityCode
    void setCityCode(java.lang.String) -> setCityCode
    java.lang.String getAdCode() -> getAdCode
    void setAdCode(java.lang.String) -> setAdCode
    java.lang.String getAddress() -> getAddress
    java.lang.String getStreet() -> getStreet
com.amap.api.location.AMapLocationListener -> com.amap.api.location.AMapLocationListener:
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
com.amap.api.location.LocationManagerProxy -> com.amap.api.location.LocationManagerProxy:
    java.lang.String GPS_PROVIDER -> GPS_PROVIDER
    java.lang.String NETWORK_PROVIDER -> NETWORK_PROVIDER
    java.lang.String KEY_LOCATION_CHANGED -> KEY_LOCATION_CHANGED
    java.lang.String KEY_PROVIDER_ENABLED -> KEY_PROVIDER_ENABLED
    java.lang.String KEY_PROXIMITY_ENTERING -> KEY_PROXIMITY_ENTERING
    java.lang.String KEY_STATUS_CHANGED -> KEY_STATUS_CHANGED
    int WEATHER_TYPE_LIVE -> WEATHER_TYPE_LIVE
    int WEATHER_TYPE_FORECAST -> WEATHER_TYPE_FORECAST
    android.location.LocationManager a -> a
    com.amap.api.location.LocationManagerProxy b -> b
    com.amap.api.location.a c -> c
    android.content.Context d -> d
    com.amap.api.location.f e -> e
    com.amap.api.location.LocationManagerProxy$b f -> f
    java.util.ArrayList g -> g
    java.util.Hashtable h -> h
    java.util.Vector i -> i
    java.util.Vector j -> j
    com.amap.api.location.LocationManagerProxy$a k -> k
    void a() -> a
    com.amap.api.location.LocationManagerProxy getInstance(android.app.Activity) -> getInstance
    com.amap.api.location.LocationManagerProxy getInstance(android.content.Context) -> getInstance
    void a(android.content.Context) -> a
    void addProximityAlert(double,double,float,long,android.app.PendingIntent) -> addProximityAlert
    void addGeoFenceAlert(double,double,float,long,android.app.PendingIntent) -> addGeoFenceAlert
    void removeGeoFenceAlert(android.app.PendingIntent) -> removeGeoFenceAlert
    void removeProximityAlert(android.app.PendingIntent) -> removeProximityAlert
    com.amap.api.location.AMapLocation getLastKnownLocation(java.lang.String) -> getLastKnownLocation
    void setGpsEnable(boolean) -> setGpsEnable
    void a(java.lang.String,long,float,com.amap.api.location.AMapLocationListener,boolean) -> a
    void requestLocationUpdates(java.lang.String,long,float,com.amap.api.location.AMapLocationListener) -> requestLocationUpdates
    void requestLocationData(java.lang.String,long,float,com.amap.api.location.AMapLocationListener) -> requestLocationData
    void removeUpdates(com.amap.api.location.AMapLocationListener) -> removeUpdates
    void requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent) -> requestLocationUpdates
    void removeUpdates(android.app.PendingIntent) -> removeUpdates
    java.util.List getAllProviders() -> getAllProviders
    java.util.List getProviders(boolean) -> getProviders
    java.util.List getProviders(android.location.Criteria,boolean) -> getProviders
    java.lang.String getBestProvider(android.location.Criteria,boolean) -> getBestProvider
    boolean isProviderEnabled(java.lang.String) -> isProviderEnabled
    com.amap.api.location.LocationProviderProxy getProvider(java.lang.String) -> getProvider
    android.location.GpsStatus getGpsStatus(android.location.GpsStatus) -> getGpsStatus
    void removeGpsStatusListener(android.location.GpsStatus$Listener) -> removeGpsStatusListener
    boolean addGpsStatusListener(android.location.GpsStatus$Listener) -> addGpsStatusListener
    void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int) -> addTestProvider
    void setTestProviderEnabled(java.lang.String,boolean) -> setTestProviderEnabled
    void setTestProviderLocation(java.lang.String,android.location.Location) -> setTestProviderLocation
    void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long) -> setTestProviderStatus
    void clearTestProviderEnabled(java.lang.String) -> clearTestProviderEnabled
    void clearTestProviderLocation(java.lang.String) -> clearTestProviderLocation
    void clearTestProviderStatus(java.lang.String) -> clearTestProviderStatus
    void requestWeatherUpdates(int,com.amap.api.location.AMapLocalWeatherListener) -> requestWeatherUpdates
    void destory() -> destory
    void destroy() -> destroy
    java.lang.String getVersion() -> getVersion
    java.util.ArrayList a(com.amap.api.location.LocationManagerProxy) -> a
    android.content.Context b(com.amap.api.location.LocationManagerProxy) -> b
    java.util.Vector c(com.amap.api.location.LocationManagerProxy) -> c
    java.util.Vector d(com.amap.api.location.LocationManagerProxy) -> d
    android.location.LocationManager e(com.amap.api.location.LocationManagerProxy) -> e
    com.amap.api.location.LocationManagerProxy$a f(com.amap.api.location.LocationManagerProxy) -> f
com.amap.api.location.LocationManagerProxy$a -> com.amap.api.location.LocationManagerProxy$a:
    com.amap.api.location.LocationManagerProxy a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
com.amap.api.location.LocationManagerProxy$b -> com.amap.api.location.LocationManagerProxy$b:
    com.amap.api.location.LocationManagerProxy a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
com.amap.api.location.LocationProviderProxy -> com.amap.api.location.LocationProviderProxy:
    int AVAILABLE -> AVAILABLE
    int OUT_OF_SERVICE -> OUT_OF_SERVICE
    int TEMPORARILY_UNAVAILABLE -> TEMPORARILY_UNAVAILABLE
    java.lang.String AMapNetwork -> AMapNetwork
    android.location.LocationManager a -> a
    java.lang.String b -> b
    com.amap.api.location.LocationProviderProxy a(android.location.LocationManager,java.lang.String) -> a
    android.location.LocationProvider a() -> a
    int getAccuracy() -> getAccuracy
    java.lang.String getName() -> getName
    int getPowerRequirement() -> getPowerRequirement
    boolean hasMonetaryCost() -> hasMonetaryCost
    boolean meetsCriteria(android.location.Criteria) -> meetsCriteria
    boolean requiresCell() -> requiresCell
    boolean requiresNetwork() -> requiresNetwork
    boolean requiresSatellite() -> requiresSatellite
    boolean supportsAltitude() -> supportsAltitude
    boolean supportsBearing() -> supportsBearing
    boolean supportsSpeed() -> supportsSpeed
com.amap.api.location.a -> com.amap.api.location.a:
    android.content.Context h -> h
    java.util.Vector i -> i
    com.amap.api.location.a$a j -> j
    java.util.Vector k -> k
    com.amap.api.location.d a -> a
    com.amap.api.location.c b -> b
    com.amap.api.location.AMapLocation l -> l
    com.amap.api.location.AMapLocation m -> m
    java.lang.Thread n -> n
    boolean c -> c
    long d -> d
    boolean e -> e
    boolean f -> f
    com.amap.api.location.b g -> g
    long o -> o
    float p -> p
    void c() -> c
    void a(double,double,float,long,android.app.PendingIntent) -> a
    void b(double,double,float,long,android.app.PendingIntent) -> b
    void a(android.app.PendingIntent) -> a
    void b(android.app.PendingIntent) -> b
    com.amap.api.location.AMapLocation a() -> a
    void a(long,float,com.amap.api.location.AMapLocationListener,java.lang.String,boolean) -> a
    void c(boolean) -> c
    void a(com.amap.api.location.AMapLocationListener) -> a
    void a(boolean) -> a
    void d(boolean) -> d
    void b() -> b
    void b(boolean) -> b
    void a(int,com.amap.api.location.AMapLocalWeatherListener) -> a
    java.util.Vector a(com.amap.api.location.a) -> a
    com.amap.api.location.AMapLocation a(com.amap.api.location.a,com.amap.api.location.AMapLocation) -> a
    com.amap.api.location.AMapLocation b(com.amap.api.location.a) -> b
    com.amap.api.location.AMapLocation b(com.amap.api.location.a,com.amap.api.location.AMapLocation) -> b
    java.util.Vector c(com.amap.api.location.a) -> c
    android.content.Context d(com.amap.api.location.a) -> d
    com.amap.api.location.AMapLocation e(com.amap.api.location.a) -> e
com.amap.api.location.a$1 -> com.amap.api.location.a$1:
    int a -> a
    com.amap.api.location.AMapLocalWeatherListener b -> b
    com.amap.api.location.a c -> c
    void run() -> run
com.amap.api.location.a$a -> com.amap.api.location.a$a:
    com.amap.api.location.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.location.b -> com.amap.api.location.b:
    android.content.Context d -> d
    com.amap.api.location.b$a a -> a
    com.amap.api.location.AMapLocalWeatherListener b -> b
    com.amap.api.location.a c -> c
    int e -> e
    com.amap.api.location.AMapLocalWeatherListener f -> f
    void a(int,com.amap.api.location.AMapLocalWeatherListener,com.amap.api.location.AMapLocation) -> a
    void a(com.amap.api.location.AMapLocation,java.lang.String,com.amap.api.location.AMapLocalWeatherListener) -> a
    byte[] a(com.amap.api.location.AMapLocation,java.lang.String) -> a
    java.lang.String a() -> a
    com.amap.api.location.AMapLocalWeatherLive a(java.lang.String,com.amap.api.location.AMapLocation) -> a
    com.amap.api.location.AMapLocalWeatherForecast b(java.lang.String,com.amap.api.location.AMapLocation) -> b
    java.lang.String a(org.json.JSONObject,java.lang.String) -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
    int a(com.amap.api.location.b) -> a
    com.amap.api.location.AMapLocalWeatherListener b(com.amap.api.location.b) -> b
com.amap.api.location.b$a -> com.amap.api.location.b$a:
    java.lang.ref.WeakReference a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.location.b$a$1 -> com.amap.api.location.b$a$1:
    com.amap.api.location.b a -> a
    com.amap.api.location.AMapLocation b -> b
    com.amap.api.location.b$a c -> c
    void run() -> run
com.amap.api.location.c -> com.amap.api.location.c:
    com.aps.k a -> a
    boolean c -> c
    java.lang.Thread d -> d
    android.content.Context e -> e
    long f -> f
    com.amap.api.location.a$a g -> g
    com.amap.api.location.a h -> h
    boolean b -> b
    void a() -> a
    void run() -> run
    void a(long) -> a
    com.aps.c b() -> b
    com.aps.c c() -> c
    boolean d() -> d
    com.amap.api.location.AMapLocation a(com.aps.c) -> a
    void a(com.amap.api.location.AMapLocation,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String) -> a
    void a(com.aps.j,android.app.PendingIntent) -> a
    void b(com.aps.j,android.app.PendingIntent) -> b
    void a(android.app.PendingIntent) -> a
    void b(android.app.PendingIntent) -> b
com.amap.api.location.core.AMapLocException -> com.amap.api.location.core.AMapLocException:
    java.lang.String ERROR_IO -> ERROR_IO
    java.lang.String ERROR_SOCKET -> ERROR_SOCKET
    java.lang.String ERROR_SOCKE_TIME_OUT -> ERROR_SOCKE_TIME_OUT
    java.lang.String ERROR_INVALID_PARAMETER -> ERROR_INVALID_PARAMETER
    java.lang.String ERROR_NULL_PARAMETER -> ERROR_NULL_PARAMETER
    java.lang.String ERROR_URL -> ERROR_URL
    java.lang.String ERROR_UNKNOW_HOST -> ERROR_UNKNOW_HOST
    java.lang.String ERROR_UNKNOW_SERVICE -> ERROR_UNKNOW_SERVICE
    java.lang.String ERROR_PROTOCOL -> ERROR_PROTOCOL
    java.lang.String ERROR_CONNECTION -> ERROR_CONNECTION
    java.lang.String ERROR_UNKNOWN -> ERROR_UNKNOWN
    java.lang.String ERROR_FAILURE_AUTH -> ERROR_FAILURE_AUTH
    int ERROR_CODE_IO -> ERROR_CODE_IO
    int ERROR_CODE_SOCKET -> ERROR_CODE_SOCKET
    int ERROR_CODE_SOCKE_TIME_OUT -> ERROR_CODE_SOCKE_TIME_OUT
    int ERROR_CODE_INVALID_PARAMETER -> ERROR_CODE_INVALID_PARAMETER
    int ERROR_CODE_NULL_PARAMETER -> ERROR_CODE_NULL_PARAMETER
    int ERROR_CODE_URL -> ERROR_CODE_URL
    int ERROR_CODE_UNKNOW_HOST -> ERROR_CODE_UNKNOW_HOST
    int ERROR_CODE_UNKNOW_SERVICE -> ERROR_CODE_UNKNOW_SERVICE
    int ERROR_CODE_PROTOCOL -> ERROR_CODE_PROTOCOL
    int ERROR_CODE_CONNECTION -> ERROR_CODE_CONNECTION
    int ERROR_CODE_UNKNOWN -> ERROR_CODE_UNKNOWN
    int ERROR_CODE_FAILURE_AUTH -> ERROR_CODE_FAILURE_AUTH
    java.lang.String a -> a
    int b -> b
    java.lang.String getErrorMessage() -> getErrorMessage
    int getErrorCode() -> getErrorCode
    void a(java.lang.String) -> a
com.amap.api.location.core.CoordinateConvert -> com.amap.api.location.core.CoordinateConvert:
    com.amap.api.location.core.GeoPoint fromGpsToAMap(double,double) -> fromGpsToAMap
    double[] fromSeveralGpsToAMap(java.lang.String) -> fromSeveralGpsToAMap
    double[] fromSeveralGpsToAMap(double[]) -> fromSeveralGpsToAMap
com.amap.api.location.core.GeoPoint -> com.amap.api.location.core.GeoPoint:
    long a -> a
    long b -> b
    double c -> c
    double d -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getLongitudeE6() -> getLongitudeE6
    int getLatitudeE6() -> getLatitudeE6
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.location.core.a -> com.amap.api.location.core.a:
    int b -> b
    java.lang.String a -> a
    int a() -> a
    boolean a(android.content.Context) -> a
    java.lang.String b() -> b
    boolean c(java.lang.String) -> c
    byte[] c() -> c
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
com.amap.api.location.core.b -> com.amap.api.location.core.b:
    char[] a -> a
    byte[] b -> b
    java.lang.String a(byte[]) -> a
com.amap.api.location.core.c -> com.amap.api.location.core.c:
    com.amap.api.location.core.c c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    android.content.Context f -> f
    android.telephony.TelephonyManager g -> g
    android.net.ConnectivityManager h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String a -> a
    java.lang.String n -> n
    java.util.HashMap b -> b
    java.lang.String a() -> a
    com.amap.api.location.core.c a(android.content.Context) -> a
    java.lang.String b() -> b
    java.lang.String k() -> k
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String b(android.content.Context) -> b
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
    java.lang.String c(android.content.Context) -> c
    void l() -> l
    void c(java.lang.String) -> c
    boolean a(double,double) -> a
    java.lang.String j() -> j
com.amap.api.location.core.d -> com.amap.api.location.core.d:
    int a -> a
    android.content.SharedPreferences c -> c
    android.content.SharedPreferences$Editor d -> d
    java.lang.reflect.Method e -> e
    java.lang.String b -> b
    boolean a(android.content.Context) -> a
    com.amap.api.location.AMapLocation b(android.content.Context) -> b
    void a(android.content.Context,com.amap.api.location.AMapLocation) -> a
    void a(android.content.SharedPreferences$Editor) -> a
    java.lang.String a() -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String) -> a
com.amap.api.location.core.e -> com.amap.api.location.core.e:
    char[] a -> a
    byte[] a(byte[],byte[]) -> a
    byte[] a(byte[],java.security.Key) -> a
    java.security.PublicKey a(android.content.Context) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    java.lang.String a(byte[]) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    byte[] b(java.lang.String) -> b
    byte[] a(byte[],java.lang.String) -> a
    javax.crypto.spec.SecretKeySpec c(java.lang.String) -> c
com.amap.api.location.core.f -> com.amap.api.location.core.f:
    com.amap.api.location.core.GeoPoint a(android.os.Parcel) -> a
    com.amap.api.location.core.GeoPoint[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.location.core.g -> com.amap.api.location.core.g:
    java.lang.String[] a -> a
    java.lang.String a(byte[]) -> a
    java.lang.String a(java.lang.String) -> a
com.amap.api.location.d -> com.amap.api.location.d:
    android.location.LocationManager a -> a
    com.amap.api.location.a$a c -> c
    com.amap.api.location.a d -> d
    android.content.Context e -> e
    android.location.LocationListener b -> b
    void a(long,float) -> a
    void a() -> a
    void b() -> b
    com.amap.api.location.a a(com.amap.api.location.d) -> a
    com.amap.api.location.a$a b(com.amap.api.location.d) -> b
com.amap.api.location.e -> com.amap.api.location.e:
    com.amap.api.location.d a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.amap.api.location.f -> com.amap.api.location.f:
    com.amap.api.location.LocationManagerProxy a -> a
    com.amap.api.location.AMapLocationListener b -> b
    boolean a(com.amap.api.location.AMapLocationListener,long,float,java.lang.String) -> a
    void a() -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
com.amap.api.location.g -> com.amap.api.location.g:
    long a -> a
    com.amap.api.location.AMapLocationListener b -> b
    java.lang.Boolean c -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.amap.api.mapcore.AutoTestConfig -> com.amap.api.mapcore.AutoTestConfig:
    int a -> a
    int ZoomControllerViewId -> ZoomControllerViewId
    int ScaleControlsViewId -> ScaleControlsViewId
    int MyLocationViewId -> MyLocationViewId
    int CompassViewId -> CompassViewId
com.amap.api.mapcore.a -> com.amap.api.mapcore.a:
    com.amap.api.mapcore.b f -> f
    float g -> g
    com.autonavi.amap.mapcore.IPoint a -> a
    float b -> b
    float c -> c
    float d -> d
    com.autonavi.amap.mapcore.IPoint e -> e
    int h -> h
    int i -> i
    java.lang.String getMapSvrAddress() -> getMapSvrAddress
    void OnMapSurfaceCreate(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore) -> OnMapSurfaceCreate
    void OnMapSurfaceRenderer(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore,int) -> OnMapSurfaceRenderer
    void OnMapSufaceChanged(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore,int,int) -> OnMapSufaceChanged
    void OnMapProcessEvent(com.autonavi.amap.mapcore.MapCore) -> OnMapProcessEvent
    void a(com.autonavi.amap.mapcore.MapCore) -> a
    void b(com.amap.api.mapcore.m) -> b
    float a(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng,int,int) -> a
    void a(com.amap.api.mapcore.m) -> a
    void a(com.autonavi.amap.mapcore.MapProjection,com.amap.api.mapcore.m) -> a
    void a(com.autonavi.amap.mapcore.MapProjection,float) -> a
    void a(com.autonavi.amap.mapcore.MapProjection,float,int,int) -> a
    void a(com.autonavi.amap.mapcore.MapProjection,com.autonavi.amap.mapcore.IPoint,float,float,float) -> a
    void b(com.autonavi.amap.mapcore.MapProjection,com.amap.api.mapcore.m) -> b
    void c(com.autonavi.amap.mapcore.MapProjection,com.amap.api.mapcore.m) -> c
    void d(com.autonavi.amap.mapcore.MapProjection,com.amap.api.mapcore.m) -> d
    void a(com.autonavi.amap.mapcore.MapProjection,com.autonavi.amap.mapcore.IPoint) -> a
    void a(com.autonavi.amap.mapcore.MapProjection,com.autonavi.amap.mapcore.IPoint,int,int) -> a
    com.autonavi.amap.mapcore.IPoint a(com.autonavi.amap.mapcore.MapProjection) -> a
    com.autonavi.amap.mapcore.IPoint a(com.autonavi.amap.mapcore.MapProjection,int,int) -> a
    void OnMapDestory(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore) -> OnMapDestory
    void OnMapReferencechanged(com.autonavi.amap.mapcore.MapCore,java.lang.String,java.lang.String) -> OnMapReferencechanged
    android.content.Context getContext() -> getContext
    boolean isMapEngineValid() -> isMapEngineValid
    void OnMapLoaderError(int) -> OnMapLoaderError
    void onSetParameter(com.autonavi.amap.mapcore.MapCore) -> onSetParameter
    void a(int,int) -> a
com.amap.api.mapcore.a$1 -> com.amap.api.mapcore.a$1:
    int[] a -> a
com.amap.api.mapcore.aa -> com.amap.api.mapcore.aa:
    boolean b() -> b
    boolean c() -> c
    android.graphics.Rect d() -> d
    com.amap.api.maps.model.LatLng e() -> e
    com.autonavi.amap.mapcore.FPoint f() -> f
    com.amap.api.maps.model.LatLng g() -> g
    java.lang.String h() -> h
    int i() -> i
    void a(com.amap.api.maps.model.LatLng) -> a
    void a(java.lang.String) -> a
    java.lang.String j() -> j
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
    void a(float,float) -> a
    void b(java.lang.String) -> b
    java.lang.String k() -> k
    void a(boolean) -> a
    boolean l() -> l
    void m() -> m
    void n() -> n
    boolean o() -> o
    void b(boolean) -> b
    boolean p() -> p
    void q() -> q
    boolean a(com.amap.api.mapcore.aa) -> a
    int r() -> r
    void a(javax.microedition.khronos.opengles.GL10,com.amap.api.mapcore.v) -> a
    boolean s() -> s
    void a(java.lang.Object) -> a
    java.lang.Object t() -> t
    void c(boolean) -> c
    boolean u() -> u
    void a(float) -> a
    float v() -> v
    void a(int) -> a
    int w() -> w
    void a(java.util.ArrayList) -> a
    java.util.ArrayList x() -> x
    boolean y() -> y
    void z() -> z
    void A() -> A
    void d(boolean) -> d
    boolean B() -> B
    int C() -> C
    int D() -> D
    int E() -> E
    int F() -> F
    void a(int,int) -> a
    boolean G() -> G
com.amap.api.mapcore.ab -> com.amap.api.mapcore.ab:
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    void b(int) -> b
    int i() -> i
    int l() -> l
    void a(java.util.List) -> a
    java.util.List m() -> m
com.amap.api.mapcore.ac -> com.amap.api.mapcore.ac:
    void b() -> b
    java.lang.String c() -> c
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.ac) -> a
    int f() -> f
    void g() -> g
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void j() -> j
    boolean a() -> a
    boolean k() -> k
com.amap.api.mapcore.ad -> com.amap.api.mapcore.ad:
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    int i() -> i
    void b(int) -> b
    void a(java.util.List) -> a
    java.util.List l() -> l
    int m() -> m
    boolean a(com.amap.api.maps.model.LatLng) -> a
com.amap.api.mapcore.ae -> com.amap.api.mapcore.ae:
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    int i() -> i
    void a(java.util.List) -> a
    java.util.List l() -> l
    boolean m() -> m
    void b(boolean) -> b
    void c(boolean) -> c
    boolean n() -> n
    com.amap.api.maps.model.LatLng a(com.amap.api.maps.model.LatLng) -> a
com.amap.api.mapcore.af -> com.amap.api.mapcore.af:
    com.amap.api.maps.model.LatLng a(android.graphics.Point) -> a
    android.graphics.Point a(com.amap.api.maps.model.LatLng) -> a
    android.graphics.PointF b(com.amap.api.maps.model.LatLng) -> b
    com.amap.api.maps.model.VisibleRegion a() -> a
    float a(int) -> a
    com.amap.api.maps.model.TileProjection a(com.amap.api.maps.model.LatLngBounds,int,int) -> a
com.amap.api.mapcore.ag -> com.amap.api.mapcore.ag:
com.amap.api.mapcore.ag$a -> com.amap.api.mapcore.ag$a:
    com.amap.api.mapcore.ag$a a -> a
    com.amap.api.mapcore.ag$a b -> b
    com.amap.api.mapcore.ag$a c -> c
    com.amap.api.mapcore.ag$a[] d -> d
    com.amap.api.mapcore.ag$a[] values() -> values
    com.amap.api.mapcore.ag$a valueOf(java.lang.String) -> valueOf
com.amap.api.mapcore.ah -> com.amap.api.mapcore.ah:
    void a() -> a
    void b() -> b
    java.lang.String c() -> c
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.ah) -> a
    int f() -> f
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void b(boolean) -> b
    void g() -> g
    void h() -> h
    void c(boolean) -> c
com.amap.api.mapcore.ai -> com.amap.api.mapcore.ai:
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void d(boolean) -> d
    void e(boolean) -> e
    void f(boolean) -> f
    void g(boolean) -> g
    void h(boolean) -> h
    void i(boolean) -> i
    void a(int) -> a
    void b(int) -> b
    boolean a() -> a
    boolean b() -> b
    boolean c() -> c
    boolean d() -> d
    boolean e() -> e
    boolean f() -> f
    boolean g() -> g
    boolean h() -> h
    int i() -> i
    int j() -> j
com.amap.api.mapcore.aj -> com.amap.api.mapcore.aj:
    android.graphics.Bitmap a -> a
    android.graphics.Bitmap b -> b
    android.graphics.Bitmap c -> c
    android.graphics.Bitmap d -> d
    android.graphics.Bitmap e -> e
    android.graphics.Bitmap f -> f
    android.widget.ImageView g -> g
    com.amap.api.mapcore.v h -> h
    boolean i -> i
    void a() -> a
    void a(boolean) -> a
com.amap.api.mapcore.aj$1 -> com.amap.api.mapcore.aj$1:
    com.amap.api.mapcore.aj a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.amap.api.mapcore.ak -> com.amap.api.mapcore.ak:
    com.amap.api.mapcore.v b -> b
    android.content.Context a -> a
    com.amap.api.maps.AMapOptions c -> c
    void a(android.content.Context) -> a
    void a(com.amap.api.maps.AMapOptions) -> a
    com.amap.api.mapcore.v a() -> a
    void a(android.app.Activity,com.amap.api.maps.AMapOptions,android.os.Bundle) -> a
    void a(android.os.Bundle) -> a
    android.view.View a(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void b(com.amap.api.maps.AMapOptions) -> b
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void b(android.os.Bundle) -> b
com.amap.api.mapcore.al -> com.amap.api.mapcore.al:
    int a -> a
    boolean b -> b
    boolean a() -> a
    com.amap.api.mapcore.al a(boolean) -> a
com.amap.api.mapcore.am -> com.amap.api.mapcore.am:
    com.amap.api.mapcore.b a -> a
    java.util.concurrent.CopyOnWriteArrayList b -> b
    java.util.concurrent.CopyOnWriteArrayList c -> c
    void a(com.amap.api.mapcore.al) -> a
    com.amap.api.mapcore.al a() -> a
    int b() -> b
    void a(com.amap.api.mapcore.m) -> a
    com.amap.api.mapcore.m c() -> c
    int d() -> d
com.amap.api.mapcore.an -> com.amap.api.mapcore.an:
    com.amap.api.mapcore.v a -> a
    java.util.concurrent.CopyOnWriteArrayList b -> b
    com.autonavi.amap.mapcore.IPoint c -> c
    com.amap.api.mapcore.aa d -> d
    android.graphics.Rect e -> e
    android.os.Handler f -> f
    java.util.concurrent.CopyOnWriteArrayList g -> g
    int a() -> a
    void b() -> b
    void a(com.amap.api.mapcore.aa) -> a
    boolean b(com.amap.api.mapcore.aa) -> b
    void c(com.amap.api.mapcore.aa) -> c
    void d(com.amap.api.mapcore.aa) -> d
    void e(com.amap.api.mapcore.aa) -> e
    boolean f(com.amap.api.mapcore.aa) -> f
    void c() -> c
    void a(java.lang.Integer) -> a
    void a(javax.microedition.khronos.opengles.GL10,boolean) -> a
    void h() -> h
    com.amap.api.mapcore.aa d() -> d
    com.amap.api.mapcore.aa a(android.view.MotionEvent) -> a
    void e() -> e
    boolean b(android.view.MotionEvent) -> b
    boolean a(android.graphics.Rect,int,int) -> a
    java.util.List f() -> f
    void g() -> g
    void a(com.amap.api.mapcore.an) -> a
com.amap.api.mapcore.an$1 -> com.amap.api.mapcore.an$1:
    com.amap.api.mapcore.an a -> a
    void run() -> run
com.amap.api.mapcore.ao -> com.amap.api.mapcore.ao:
    com.amap.api.mapcore.v a -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void a(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void a(android.view.View,com.amap.api.mapcore.ao$a) -> a
    void a() -> a
    void a(android.view.View,int,int,int[]) -> a
    void a(android.view.View,int,int,int,int,int) -> a
com.amap.api.mapcore.ao$a -> com.amap.api.mapcore.ao$a:
    com.autonavi.amap.mapcore.FPoint a -> a
    int b -> b
    int c -> c
    int d -> d
com.amap.api.mapcore.ap -> com.amap.api.mapcore.ap:
    int a -> a
    boolean b -> b
    float c -> c
    float d -> d
    android.graphics.Rect e -> e
    boolean f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    com.autonavi.amap.mapcore.FPoint k -> k
    float l -> l
    float[] m -> m
    boolean n -> n
    java.nio.FloatBuffer o -> o
    java.lang.String p -> p
    com.amap.api.maps.model.LatLng q -> q
    com.amap.api.maps.model.LatLng r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    float u -> u
    float v -> v
    boolean w -> w
    boolean x -> x
    com.amap.api.mapcore.an y -> y
    java.nio.FloatBuffer z -> z
    java.lang.Object A -> A
    boolean B -> B
    java.util.concurrent.CopyOnWriteArrayList C -> C
    int[] D -> D
    boolean E -> E
    boolean F -> F
    boolean G -> G
    int H -> H
    int I -> I
    boolean J -> J
    int K -> K
    int L -> L
    java.lang.String c(java.lang.String) -> c
    void a(float) -> a
    boolean y() -> y
    void z() -> z
    void q() -> q
    void a() -> a
    void b(java.util.ArrayList) -> b
    void b(com.amap.api.maps.model.BitmapDescriptor) -> b
    int H() -> H
    int I() -> I
    android.graphics.Rect d() -> d
    boolean b() -> b
    void K() -> K
    com.amap.api.maps.model.LatLng e() -> e
    java.lang.String h() -> h
    void a(com.amap.api.maps.model.LatLng) -> a
    void a(java.lang.String) -> a
    java.lang.String j() -> j
    void b(java.lang.String) -> b
    java.lang.String k() -> k
    void a(boolean) -> a
    void a(java.util.ArrayList) -> a
    java.util.ArrayList x() -> x
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
    com.amap.api.maps.model.BitmapDescriptor J() -> J
    boolean l() -> l
    void m() -> m
    void n() -> n
    boolean o() -> o
    void b(boolean) -> b
    boolean p() -> p
    void a(float,float) -> a
    boolean a(com.amap.api.mapcore.aa) -> a
    int r() -> r
    boolean s() -> s
    void a(com.amap.api.mapcore.v) -> a
    float[] a(com.amap.api.mapcore.v,int) -> a
    void a(float,float,com.autonavi.amap.mapcore.IPoint) -> a
    void a(int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> a
    void a(javax.microedition.khronos.opengles.GL10,com.amap.api.mapcore.v) -> a
    int a(javax.microedition.khronos.opengles.GL10) -> a
    boolean c() -> c
    void a(int) -> a
    void a(java.lang.Object) -> a
    java.lang.Object t() -> t
    void c(boolean) -> c
    boolean u() -> u
    int i() -> i
    int w() -> w
    com.amap.api.maps.model.LatLng g() -> g
    void A() -> A
    void d(boolean) -> d
    boolean B() -> B
    float v() -> v
    int C() -> C
    int D() -> D
    void a(int,int) -> a
    int E() -> E
    int F() -> F
    com.autonavi.amap.mapcore.FPoint f() -> f
    boolean G() -> G
com.amap.api.mapcore.aq -> com.amap.api.mapcore.aq:
    com.amap.api.mapcore.v a -> a
    com.amap.api.maps.model.Marker b -> b
    com.amap.api.mapcore.x c -> c
    com.amap.api.maps.model.MyLocationStyle d -> d
    com.amap.api.maps.model.LatLng e -> e
    double f -> f
    android.content.Context g -> g
    com.amap.api.mapcore.ay h -> h
    int i -> i
    boolean j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    boolean m -> m
    void a(com.amap.api.maps.model.MyLocationStyle) -> a
    void a(int) -> a
    void a() -> a
    void b() -> b
    void d() -> d
    void e() -> e
    void f() -> f
    void b(float) -> b
    void c(float) -> c
    void a(android.location.Location) -> a
    void b(android.location.Location) -> b
    void g() -> g
    void h() -> h
    void c() -> c
    void i() -> i
    void j() -> j
    void k() -> k
    void a(float) -> a
com.amap.api.mapcore.ar -> com.amap.api.mapcore.ar:
    com.amap.api.mapcore.v j -> j
    float k -> k
    int l -> l
    int m -> m
    float n -> n
    boolean o -> o
    java.lang.String p -> p
    java.util.concurrent.CopyOnWriteArrayList q -> q
    int r -> r
    boolean s -> s
    float a -> a
    float b -> b
    float c -> c
    float d -> d
    float e -> e
    float f -> f
    float g -> g
    float h -> h
    com.amap.api.maps.model.LatLngBounds t -> t
    float[] i -> i
    void b(java.util.List) -> b
    void b() -> b
    java.lang.String c() -> c
    void a(java.util.List) -> a
    java.util.List m() -> m
    java.util.List n() -> n
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    int i() -> i
    void b(int) -> b
    int l() -> l
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.ac) -> a
    int f() -> f
    boolean a() -> a
    void g() -> g
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void j() -> j
    boolean k() -> k
com.amap.api.mapcore.as -> com.amap.api.mapcore.as:
    android.graphics.drawable.Drawable a(android.content.Context,java.lang.String) -> a
    android.graphics.Bitmap a(java.io.InputStream) -> a
    android.graphics.Bitmap b(android.content.Context,java.lang.String) -> b
    void a(byte[],android.graphics.Rect) -> a
    byte[] a(android.graphics.Bitmap) -> a
    void a(android.graphics.Bitmap,byte[]) -> a
    void a(java.io.OutputStream,int) -> a
    void a(byte[],int,int) -> a
    int a(byte[],int) -> a
com.amap.api.mapcore.at -> com.amap.api.mapcore.at:
    com.amap.api.mapcore.v a -> a
    float b -> b
    boolean c -> c
    java.lang.String d -> d
    float e -> e
    int f -> f
    int g -> g
    java.util.List h -> h
    java.util.concurrent.CopyOnWriteArrayList i -> i
    java.nio.FloatBuffer j -> j
    java.nio.FloatBuffer k -> k
    int l -> l
    int m -> m
    com.amap.api.maps.model.LatLngBounds n -> n
    boolean o -> o
    float p -> p
    void b() -> b
    java.lang.String c() -> c
    void a(java.util.List) -> a
    java.util.List l() -> l
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.ac) -> a
    void b(java.util.List) -> b
    void g() -> g
    int f() -> f
    boolean a() -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    int i() -> i
    void b(int) -> b
    int m() -> m
    com.autonavi.amap.mapcore.FPoint[] a(com.autonavi.amap.mapcore.FPoint[]) -> a
    void j() -> j
    boolean a(com.amap.api.maps.model.LatLng) -> a
    boolean k() -> k
com.amap.api.mapcore.au -> com.amap.api.mapcore.au:
    com.amap.api.mapcore.v f -> f
    float g -> g
    int h -> h
    float i -> i
    boolean j -> j
    java.lang.String k -> k
    java.util.ArrayList l -> l
    java.nio.FloatBuffer m -> m
    int n -> n
    boolean o -> o
    boolean p -> p
    java.util.List q -> q
    boolean r -> r
    float s -> s
    java.lang.Object t -> t
    float a -> a
    float b -> b
    float c -> c
    float d -> d
    boolean u -> u
    com.amap.api.maps.model.LatLngBounds v -> v
    boolean w -> w
    float[] e -> e
    int x -> x
    boolean y -> y
    boolean z -> z
    android.graphics.Bitmap A -> A
    boolean B -> B
    void d(boolean) -> d
    void b(boolean) -> b
    boolean m() -> m
    void c(boolean) -> c
    boolean n() -> n
    void b(java.util.List) -> b
    com.autonavi.amap.mapcore.IPoint a(com.autonavi.amap.mapcore.IPoint,com.autonavi.amap.mapcore.IPoint,com.autonavi.amap.mapcore.IPoint,double,int) -> a
    void a(java.util.List,java.util.List,double) -> a
    void a(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng,java.util.List,com.amap.api.maps.model.LatLngBounds$Builder) -> a
    void b() -> b
    java.lang.String c() -> c
    void a(java.util.List) -> a
    java.util.List l() -> l
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    int i() -> i
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.ac) -> a
    int f() -> f
    boolean a() -> a
    void g() -> g
    void a(android.graphics.Bitmap) -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
    boolean o() -> o
    void j() -> j
    boolean k() -> k
    com.amap.api.maps.model.LatLng a(com.amap.api.maps.model.LatLng) -> a
com.amap.api.mapcore.av -> com.amap.api.mapcore.av:
    boolean a -> a
    int b -> b
    int c -> c
    java.nio.FloatBuffer d -> d
    java.lang.String e -> e
    com.autonavi.amap.mapcore.FPoint f -> f
    com.amap.api.maps.model.BitmapDescriptor g -> g
    boolean h -> h
    java.nio.FloatBuffer i -> i
    java.lang.Object j -> j
    int k -> k
    com.amap.api.mapcore.v l -> l
    com.autonavi.amap.mapcore.MapProjection m -> m
    float n -> n
    float o -> o
    boolean p -> p
    boolean q -> q
    boolean r -> r
    int s -> s
    boolean y() -> y
    void z() -> z
    void b(com.amap.api.maps.model.BitmapDescriptor) -> b
    int H() -> H
    int I() -> I
    android.graphics.Rect d() -> d
    boolean b() -> b
    void K() -> K
    com.amap.api.maps.model.LatLng e() -> e
    java.lang.String h() -> h
    void a(com.autonavi.amap.mapcore.FPoint) -> a
    void a(com.amap.api.maps.model.LatLng) -> a
    void a(java.lang.String) -> a
    java.lang.String j() -> j
    void b(java.lang.String) -> b
    java.lang.String k() -> k
    void a(boolean) -> a
    void a(java.util.ArrayList) -> a
    java.util.ArrayList x() -> x
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
    com.amap.api.maps.model.BitmapDescriptor J() -> J
    boolean l() -> l
    void m() -> m
    void n() -> n
    boolean o() -> o
    void b(boolean) -> b
    boolean p() -> p
    void a(float,float) -> a
    boolean a(com.amap.api.mapcore.aa) -> a
    int r() -> r
    boolean s() -> s
    void a(javax.microedition.khronos.opengles.GL10,int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void a() -> a
    int b(javax.microedition.khronos.opengles.GL10) -> b
    boolean c() -> c
    void a(int) -> a
    void a(java.lang.Object) -> a
    java.lang.Object t() -> t
    void c(boolean) -> c
    boolean u() -> u
    int i() -> i
    int w() -> w
    com.amap.api.maps.model.LatLng g() -> g
    void A() -> A
    void d(boolean) -> d
    boolean B() -> B
    void a(float) -> a
    void q() -> q
    void a(javax.microedition.khronos.opengles.GL10,com.amap.api.mapcore.v) -> a
    float v() -> v
    void b(int,int) -> b
    int C() -> C
    int D() -> D
    void a(int,int) -> a
    int E() -> E
    int F() -> F
    com.autonavi.amap.mapcore.FPoint f() -> f
    boolean G() -> G
com.amap.api.mapcore.aw -> com.amap.api.mapcore.aw:
    com.amap.api.mapcore.v a -> a
    com.amap.api.maps.model.LatLng a(android.graphics.Point) -> a
    android.graphics.Point a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.maps.model.VisibleRegion a() -> a
    android.graphics.PointF b(com.amap.api.maps.model.LatLng) -> b
    float a(int) -> a
    com.amap.api.maps.model.TileProjection a(com.amap.api.maps.model.LatLngBounds,int,int) -> a
com.amap.api.mapcore.ax -> com.amap.api.mapcore.ax:
    java.lang.String a -> a
    int b -> b
    com.amap.api.mapcore.b c -> c
    android.graphics.Paint d -> d
    android.graphics.Paint e -> e
    android.graphics.Rect f -> f
    void a() -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void a(java.lang.String) -> a
    void a(int) -> a
com.amap.api.mapcore.ay -> com.amap.api.mapcore.ay:
    android.hardware.SensorManager a -> a
    android.hardware.Sensor b -> b
    long c -> c
    int d -> d
    float e -> e
    android.content.Context f -> f
    com.amap.api.mapcore.v g -> g
    com.amap.api.maps.model.Marker h -> h
    void a() -> a
    void b() -> b
    void a(com.amap.api.maps.model.Marker) -> a
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    int a(android.content.Context) -> a
com.amap.api.mapcore.az -> com.amap.api.mapcore.az:
    com.amap.api.mapcore.ba a -> a
    com.amap.api.maps.model.TileProvider b -> b
    java.lang.Float c -> c
    boolean d -> d
    com.amap.api.mapcore.v e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    com.amap.api.mapcore.util.o j -> j
    java.util.concurrent.CopyOnWriteArrayList k -> k
    boolean l -> l
    com.amap.api.mapcore.az$b m -> m
    java.lang.String n -> n
    java.nio.FloatBuffer o -> o
    java.lang.String a(java.lang.String) -> a
    void a() -> a
    void b() -> b
    java.lang.String c() -> c
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.ah) -> a
    int f() -> f
    boolean a(com.amap.api.mapcore.az$a) -> a
    void a(javax.microedition.khronos.opengles.GL10,int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
    java.util.ArrayList a(int,int,int) -> a
    boolean a(java.util.List,int,boolean) -> a
    void b(boolean) -> b
    void g() -> g
    void h() -> h
    void c(boolean) -> c
    java.util.ArrayList a(com.amap.api.mapcore.az,int,int,int) -> a
    boolean a(com.amap.api.mapcore.az,java.util.List,int,boolean) -> a
    com.amap.api.mapcore.v a(com.amap.api.mapcore.az) -> a
    com.amap.api.mapcore.util.o b(com.amap.api.mapcore.az) -> b
    com.amap.api.mapcore.ba c(com.amap.api.mapcore.az) -> c
com.amap.api.mapcore.az$a -> com.amap.api.mapcore.az$a:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    com.autonavi.amap.mapcore.IPoint e -> e
    int f -> f
    boolean g -> g
    java.nio.FloatBuffer h -> h
    android.graphics.Bitmap i -> i
    com.amap.api.mapcore.util.q$a j -> j
    int k -> k
    com.amap.api.mapcore.az l -> l
    com.amap.api.mapcore.az$a a() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void a(android.graphics.Bitmap) -> a
    void b() -> b
    java.lang.Object clone() -> clone
com.amap.api.mapcore.az$b -> com.amap.api.mapcore.az$b:
    int e -> e
    boolean f -> f
    com.amap.api.mapcore.az a -> a
    java.util.List a(com.amap.api.mapcore.v[]) -> a
    void a(java.util.List) -> a
    void a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object[]) -> a
com.amap.api.mapcore.b -> com.amap.api.mapcore.b:
    int j -> j
    int k -> k
    android.graphics.Bitmap l -> l
    android.graphics.Bitmap m -> m
    boolean n -> n
    java.util.concurrent.CopyOnWriteArrayList o -> o
    java.util.concurrent.CopyOnWriteArrayList p -> p
    int q -> q
    com.autonavi.amap.mapcore.MapCore r -> r
    android.content.Context s -> s
    com.amap.api.mapcore.a t -> t
    com.autonavi.amap.mapcore.MapProjection u -> u
    android.view.GestureDetector v -> v
    android.view.ScaleGestureDetector w -> w
    com.amap.api.mapcore.util.c x -> x
    com.amap.api.mapcore.am a -> a
    android.view.SurfaceHolder y -> y
    com.amap.api.mapcore.ao z -> z
    com.amap.api.mapcore.an b -> b
    com.amap.api.mapcore.bd A -> A
    com.amap.api.mapcore.be c -> c
    com.amap.api.mapcore.aj B -> B
    com.amap.api.mapcore.o C -> C
    com.amap.api.mapcore.ax D -> D
    com.amap.api.mapcore.ba d -> d
    com.amap.api.maps.AMap$OnMyLocationChangeListener E -> E
    com.amap.api.maps.AMap$OnMarkerClickListener F -> F
    com.amap.api.maps.AMap$OnMarkerDragListener G -> G
    com.amap.api.maps.AMap$OnMapLoadedListener H -> H
    com.amap.api.maps.AMap$OnCameraChangeListener I -> I
    com.amap.api.maps.AMap$OnMapClickListener J -> J
    com.amap.api.maps.AMap$OnMapTouchListener K -> K
    com.amap.api.maps.AMap$OnMapLongClickListener L -> L
    com.amap.api.maps.AMap$OnInfoWindowClickListener M -> M
    com.amap.api.maps.AMap$InfoWindowAdapter N -> N
    com.amap.api.maps.AMap$InfoWindowAdapter O -> O
    android.view.View P -> P
    com.amap.api.mapcore.aa Q -> Q
    com.amap.api.mapcore.av R -> R
    boolean S -> S
    com.amap.api.mapcore.af T -> T
    com.amap.api.mapcore.ai U -> U
    com.amap.api.maps.LocationSource V -> V
    android.graphics.Rect W -> W
    boolean X -> X
    boolean Y -> Y
    boolean Z -> Z
    boolean e -> e
    com.amap.api.mapcore.i aa -> aa
    com.amap.api.mapcore.util.b ab -> ab
    com.amap.api.mapcore.aq ac -> ac
    com.amap.api.mapcore.l ad -> ad
    int ae -> ae
    int af -> af
    com.amap.api.maps.AMap$CancelableCallback ag -> ag
    boolean ah -> ah
    int ai -> ai
    boolean aj -> aj
    boolean ak -> ak
    android.graphics.drawable.Drawable al -> al
    android.location.Location am -> am
    java.lang.Boolean an -> an
    int[] ao -> ao
    boolean ap -> ap
    com.amap.api.maps.AMap$onMapPrintScreenListener aq -> aq
    com.amap.api.maps.AMap$OnMapScreenShotListener ar -> ar
    android.os.Handler as -> as
    com.amap.api.mapcore.m at -> at
    java.util.Timer au -> au
    double av -> av
    boolean aw -> aw
    android.os.Handler ax -> ax
    android.os.Handler ay -> ay
    java.lang.Runnable az -> az
    java.lang.Runnable aA -> aA
    com.amap.api.maps.CustomRenderer f -> f
    com.amap.api.mapcore.t g -> g
    com.amap.api.mapcore.q aB -> aB
    boolean aC -> aC
    boolean aD -> aD
    android.os.Handler aE -> aE
    java.lang.Runnable aF -> aF
    java.lang.Runnable h -> h
    boolean aG -> aG
    boolean aH -> aH
    boolean aI -> aI
    boolean aJ -> aJ
    boolean aK -> aK
    com.amap.api.maps.model.Marker aL -> aL
    com.amap.api.mapcore.aa aM -> aM
    boolean aN -> aN
    boolean aO -> aO
    boolean aP -> aP
    int aQ -> aQ
    boolean aR -> aR
    java.lang.Thread aS -> aS
    com.amap.api.maps.model.LatLngBounds aT -> aT
    android.os.Handler i -> i
    boolean aU -> aU
    boolean aV -> aV
    boolean aW -> aW
    int aX -> aX
    int aY -> aY
    void a(com.amap.api.maps.CustomRenderer) -> a
    com.autonavi.amap.mapcore.MapCore a() -> a
    int b() -> b
    com.autonavi.amap.mapcore.MapProjection c() -> c
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void a(com.amap.api.mapcore.s) -> a
    void a(com.amap.api.maps.AMap$OnMyLocationChangeListener) -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void a(com.amap.api.maps.model.MyLocationStyle) -> a
    void a(int) -> a
    void a(float) -> a
    void a(android.location.Location) -> a
    void a(boolean) -> a
    void d() -> d
    void b(boolean) -> b
    void c(boolean) -> c
    void e() -> e
    void d(boolean) -> d
    void f() -> f
    void g() -> g
    boolean a(java.lang.String) -> a
    void e(boolean) -> e
    void R() -> R
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    int h() -> h
    int i() -> i
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void a(int,int,int,int) -> a
    void S() -> S
    void T() -> T
    void U() -> U
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    int j() -> j
    void k() -> k
    void setZOrderOnTop(boolean) -> setZOrderOnTop
    com.amap.api.maps.model.CameraPosition l() -> l
    float m() -> m
    float n() -> n
    void a(com.amap.api.mapcore.m) -> a
    void b(com.amap.api.mapcore.m) -> b
    void a(com.amap.api.mapcore.m,com.amap.api.maps.AMap$CancelableCallback) -> a
    void a(com.amap.api.mapcore.m,long,com.amap.api.maps.AMap$CancelableCallback) -> a
    void o() -> o
    com.amap.api.mapcore.ae a(com.amap.api.maps.model.PolylineOptions) -> a
    com.amap.api.mapcore.ab a(com.amap.api.maps.model.NavigateArrowOptions) -> a
    com.amap.api.mapcore.ad a(com.amap.api.maps.model.PolygonOptions) -> a
    com.amap.api.mapcore.x a(com.amap.api.maps.model.CircleOptions) -> a
    com.amap.api.mapcore.w a(com.amap.api.maps.model.ArcOptions) -> a
    com.amap.api.mapcore.y a(com.amap.api.maps.model.GroundOverlayOptions) -> a
    com.amap.api.maps.model.Marker a(com.amap.api.maps.model.MarkerOptions) -> a
    java.util.ArrayList a(java.util.ArrayList,boolean) -> a
    com.amap.api.maps.model.TileOverlay a(com.amap.api.maps.model.TileOverlayOptions) -> a
    void p() -> p
    int q() -> q
    void b(int) -> b
    boolean r() -> r
    void f(boolean) -> f
    boolean s() -> s
    void g(boolean) -> g
    android.location.Location t() -> t
    void a(com.amap.api.maps.LocationSource) -> a
    com.amap.api.mapcore.ai u() -> u
    com.amap.api.mapcore.af v() -> v
    void a(com.amap.api.maps.AMap$OnCameraChangeListener) -> a
    void a(com.amap.api.maps.model.CameraPosition) -> a
    com.amap.api.maps.AMap$OnCameraChangeListener w() -> w
    void a(com.amap.api.maps.AMap$OnMapClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMapTouchListener) -> a
    void a(com.amap.api.maps.AMap$OnMapLongClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMarkerClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMarkerDragListener) -> a
    void a(com.amap.api.maps.AMap$OnMapLoadedListener) -> a
    void a(com.amap.api.maps.AMap$OnInfoWindowClickListener) -> a
    void a(com.amap.api.maps.AMap$InfoWindowAdapter) -> a
    android.view.View x() -> x
    float b(float) -> b
    float c(int) -> c
    void a(int,int,com.autonavi.amap.mapcore.DPoint) -> a
    void a(int,int,com.autonavi.amap.mapcore.IPoint) -> a
    void a(double,double,com.autonavi.amap.mapcore.FPoint) -> a
    void a(double,double,com.autonavi.amap.mapcore.IPoint) -> a
    void a(int,int,com.autonavi.amap.mapcore.FPoint) -> a
    void b(int,int,com.autonavi.amap.mapcore.FPoint) -> b
    void b(int,int,com.autonavi.amap.mapcore.DPoint) -> b
    void b(double,double,com.autonavi.amap.mapcore.IPoint) -> b
    com.amap.api.maps.model.LatLng V() -> V
    com.amap.api.maps.model.CameraPosition h(boolean) -> h
    void W() -> W
    void a(android.view.MotionEvent) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void a(com.amap.api.mapcore.aa) -> a
    android.graphics.Bitmap a(android.view.View) -> a
    boolean b(com.amap.api.mapcore.aa) -> b
    void y() -> y
    float z() -> z
    void A() -> A
    com.amap.api.maps.model.LatLngBounds B() -> B
    void C() -> C
    android.graphics.Point D() -> D
    android.graphics.Bitmap a(int,int,int,int,javax.microedition.khronos.opengles.GL10) -> a
    void a(com.amap.api.maps.AMap$onMapPrintScreenListener) -> a
    void a(com.amap.api.maps.AMap$OnMapScreenShotListener) -> a
    void d(int) -> d
    void e(int) -> e
    float E() -> E
    void i(boolean) -> i
    void a(boolean,com.amap.api.maps.model.CameraPosition) -> a
    void f(int) -> f
    int F() -> F
    java.util.List G() -> G
    void H() -> H
    void I() -> I
    boolean J() -> J
    void K() -> K
    void a(int,int) -> a
    void g(int) -> g
    int L() -> L
    boolean M() -> M
    void j(boolean) -> j
    com.amap.api.mapcore.l N() -> N
    void k(boolean) -> k
    void O() -> O
    void a(com.amap.api.maps.AMap$OnCacheRemoveListener) -> a
    boolean a(java.io.File) -> a
    void P() -> P
    com.amap.api.maps.AMap$OnMapTouchListener a(com.amap.api.mapcore.b) -> a
    android.view.View b(com.amap.api.mapcore.b) -> b
    boolean a(com.amap.api.mapcore.b,boolean) -> a
    com.amap.api.mapcore.av c(com.amap.api.mapcore.b) -> c
    java.lang.Runnable d(com.amap.api.mapcore.b) -> d
    android.os.Handler e(com.amap.api.mapcore.b) -> e
    java.lang.Runnable f(com.amap.api.mapcore.b) -> f
    boolean g(com.amap.api.mapcore.b) -> g
    boolean b(com.amap.api.mapcore.b,boolean) -> b
    boolean c(com.amap.api.mapcore.b,boolean) -> c
    boolean h(com.amap.api.mapcore.b) -> h
    boolean i(com.amap.api.mapcore.b) -> i
    boolean d(com.amap.api.mapcore.b,boolean) -> d
    double Q() -> Q
    com.amap.api.mapcore.ai j(com.amap.api.mapcore.b) -> j
    int a(com.amap.api.mapcore.b,int) -> a
    boolean k(com.amap.api.mapcore.b) -> k
    int l(com.amap.api.mapcore.b) -> l
    int m(com.amap.api.mapcore.b) -> m
    com.autonavi.amap.mapcore.MapProjection n(com.amap.api.mapcore.b) -> n
    void o(com.amap.api.mapcore.b) -> o
    boolean e(com.amap.api.mapcore.b,boolean) -> e
    boolean p(com.amap.api.mapcore.b) -> p
    boolean f(com.amap.api.mapcore.b,boolean) -> f
    com.amap.api.mapcore.util.b q(com.amap.api.mapcore.b) -> q
    int b(com.amap.api.mapcore.b,int) -> b
    int c(com.amap.api.mapcore.b,int) -> c
    com.amap.api.maps.AMap$CancelableCallback a(com.amap.api.mapcore.b,com.amap.api.maps.AMap$CancelableCallback) -> a
    com.amap.api.mapcore.aa r(com.amap.api.mapcore.b) -> r
    int s(com.amap.api.mapcore.b) -> s
    int t(com.amap.api.mapcore.b) -> t
    com.amap.api.mapcore.l u(com.amap.api.mapcore.b) -> u
    com.amap.api.mapcore.aa a(com.amap.api.mapcore.b,com.amap.api.mapcore.aa) -> a
    com.amap.api.maps.AMap$OnMarkerDragListener v(com.amap.api.mapcore.b) -> v
    com.amap.api.mapcore.aa w(com.amap.api.mapcore.b) -> w
    com.amap.api.maps.model.Marker a(com.amap.api.mapcore.b,com.amap.api.maps.model.Marker) -> a
    com.amap.api.maps.model.Marker x(com.amap.api.mapcore.b) -> x
    boolean g(com.amap.api.mapcore.b,boolean) -> g
    com.amap.api.maps.AMap$OnMapLongClickListener y(com.amap.api.mapcore.b) -> y
    boolean h(com.amap.api.mapcore.b,boolean) -> h
    int z(com.amap.api.mapcore.b) -> z
    boolean A(com.amap.api.mapcore.b) -> A
    com.amap.api.maps.AMap$OnInfoWindowClickListener B(com.amap.api.mapcore.b) -> B
    com.amap.api.maps.AMap$OnMarkerClickListener C(com.amap.api.mapcore.b) -> C
    com.amap.api.maps.AMap$OnMapClickListener D(com.amap.api.mapcore.b) -> D
    boolean E(com.amap.api.mapcore.b) -> E
    boolean i(com.amap.api.mapcore.b,boolean) -> i
    boolean j(com.amap.api.mapcore.b,boolean) -> j
    android.content.Context F(com.amap.api.mapcore.b) -> F
    java.lang.Boolean G(com.amap.api.mapcore.b) -> G
    com.amap.api.maps.AMap$OnCameraChangeListener H(com.amap.api.mapcore.b) -> H
    com.amap.api.mapcore.m I(com.amap.api.mapcore.b) -> I
    com.amap.api.maps.AMap$OnMapLoadedListener J(com.amap.api.mapcore.b) -> J
    com.amap.api.mapcore.o K(com.amap.api.mapcore.b) -> K
    com.amap.api.mapcore.bd L(com.amap.api.mapcore.b) -> L
    com.amap.api.maps.AMap$onMapPrintScreenListener M(com.amap.api.mapcore.b) -> M
    com.amap.api.maps.AMap$OnMapScreenShotListener N(com.amap.api.mapcore.b) -> N
    com.amap.api.maps.AMap$onMapPrintScreenListener a(com.amap.api.mapcore.b,com.amap.api.maps.AMap$onMapPrintScreenListener) -> a
    com.amap.api.maps.AMap$OnMapScreenShotListener a(com.amap.api.mapcore.b,com.amap.api.maps.AMap$OnMapScreenShotListener) -> a
    com.amap.api.maps.AMap$CancelableCallback O(com.amap.api.mapcore.b) -> O
    boolean P(com.amap.api.mapcore.b) -> P
    boolean k(com.amap.api.mapcore.b,boolean) -> k
    boolean Q(com.amap.api.mapcore.b) -> Q
    boolean l(com.amap.api.mapcore.b,boolean) -> l
    com.amap.api.maps.model.LatLngBounds a(com.amap.api.mapcore.b,com.amap.api.maps.model.LatLngBounds) -> a
    com.autonavi.amap.mapcore.MapCore R(com.amap.api.mapcore.b) -> R
    void S(com.amap.api.mapcore.b) -> S
    boolean a(com.amap.api.mapcore.b,java.io.File) -> a
com.amap.api.mapcore.b$1 -> com.amap.api.mapcore.b$1:
    com.amap.api.mapcore.b a -> a
    void a() -> a
com.amap.api.mapcore.b$2 -> com.amap.api.mapcore.b$2:
    com.amap.api.mapcore.b a -> a
    void run() -> run
com.amap.api.mapcore.b$3 -> com.amap.api.mapcore.b$3:
    boolean a -> a
    com.amap.api.mapcore.b b -> b
    void run() -> run
com.amap.api.mapcore.b$4 -> com.amap.api.mapcore.b$4:
    com.amap.api.mapcore.b a -> a
    void a() -> a
com.amap.api.mapcore.b$5 -> com.amap.api.mapcore.b$5:
    com.amap.api.mapcore.b a -> a
    android.view.View getInfoWindow(com.amap.api.maps.model.Marker) -> getInfoWindow
    android.view.View getInfoContents(com.amap.api.maps.model.Marker) -> getInfoContents
com.amap.api.mapcore.b$6 -> com.amap.api.mapcore.b$6:
    com.amap.api.mapcore.b a -> a
    void run() -> run
com.amap.api.mapcore.b$7 -> com.amap.api.mapcore.b$7:
    com.amap.api.maps.model.LatLngBounds a -> a
    int b -> b
    int c -> c
    int d -> d
    long e -> e
    com.amap.api.maps.AMap$CancelableCallback f -> f
    com.amap.api.mapcore.b g -> g
    void onFinish() -> onFinish
    void onCancel() -> onCancel
com.amap.api.mapcore.b$8 -> com.amap.api.mapcore.b$8:
    com.amap.api.mapcore.b a -> a
    void run() -> run
com.amap.api.mapcore.b$a -> com.amap.api.mapcore.b$a:
    float g -> g
    float h -> h
    float i -> i
    float j -> j
    float k -> k
    java.lang.Float a -> a
    java.lang.Float b -> b
    com.autonavi.amap.mapcore.IPoint c -> c
    float d -> d
    com.amap.api.mapcore.m e -> e
    com.amap.api.mapcore.b f -> f
    void a(float,float,float,float,float) -> a
    boolean a(android.view.MotionEvent,float,float,float,float) -> a
    void a() -> a
com.amap.api.mapcore.b$b -> com.amap.api.mapcore.b$b:
    com.amap.api.mapcore.b a -> a
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
com.amap.api.mapcore.b$c -> com.amap.api.mapcore.b$c:
    com.autonavi.amap.mapcore.FPoint a -> a
    com.autonavi.amap.mapcore.IPoint b -> b
    com.autonavi.amap.mapcore.IPoint c -> c
    com.amap.api.mapcore.m d -> d
    com.amap.api.mapcore.b e -> e
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
com.amap.api.mapcore.b$c$1 -> com.amap.api.mapcore.b$c$1:
    com.amap.api.mapcore.aa a -> a
    com.amap.api.mapcore.b$c b -> b
    void run() -> run
com.amap.api.mapcore.b$d -> com.amap.api.mapcore.b$d:
    float a -> a
    float b -> b
    com.autonavi.amap.mapcore.IPoint c -> c
    com.amap.api.mapcore.m d -> d
    com.amap.api.mapcore.b e -> e
    boolean a(com.amap.api.mapcore.util.c) -> a
    boolean b(com.amap.api.mapcore.util.c) -> b
    void c(com.amap.api.mapcore.util.c) -> c
com.amap.api.mapcore.b$e -> com.amap.api.mapcore.b$e:
    float c -> c
    com.autonavi.amap.mapcore.IPoint d -> d
    com.amap.api.mapcore.m a -> a
    com.amap.api.mapcore.b b -> b
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
com.amap.api.mapcore.b$f -> com.amap.api.mapcore.b$f:
    com.amap.api.mapcore.b a -> a
    void run() -> run
com.amap.api.mapcore.b$g -> com.amap.api.mapcore.b$g:
    android.content.Context b -> b
    com.amap.api.maps.AMap$OnCacheRemoveListener c -> c
    com.amap.api.mapcore.b a -> a
    void run() -> run
    boolean equals(java.lang.Object) -> equals
com.amap.api.mapcore.ba -> com.amap.api.mapcore.ba:
    com.amap.api.mapcore.v d -> d
    java.util.concurrent.CopyOnWriteArrayList a -> a
    com.amap.api.mapcore.ba$a b -> b
    java.util.concurrent.CopyOnWriteArrayList c -> c
    com.amap.api.mapcore.v a() -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void b() -> b
    void c() -> c
    void a(com.amap.api.mapcore.ah) -> a
    boolean b(com.amap.api.mapcore.ah) -> b
    void a(boolean) -> a
    void d() -> d
    void e() -> e
    void b(boolean) -> b
com.amap.api.mapcore.ba$a -> com.amap.api.mapcore.ba$a:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.amap.api.mapcore.bb -> com.amap.api.mapcore.bb:
    com.amap.api.mapcore.v b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    boolean j -> j
    int k -> k
    int l -> l
    android.os.Handler a -> a
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void d(boolean) -> d
    void e(boolean) -> e
    void f(boolean) -> f
    void g(boolean) -> g
    void h(boolean) -> h
    void i(boolean) -> i
    void a(int) -> a
    void b(int) -> b
    boolean a() -> a
    boolean b() -> b
    boolean c() -> c
    boolean d() -> d
    boolean e() -> e
    boolean f() -> f
    boolean g() -> g
    boolean h() -> h
    int i() -> i
    int j() -> j
    boolean a(com.amap.api.mapcore.bb) -> a
    com.amap.api.mapcore.v b(com.amap.api.mapcore.bb) -> b
    boolean c(com.amap.api.mapcore.bb) -> c
    boolean d(com.amap.api.mapcore.bb) -> d
    boolean e(com.amap.api.mapcore.bb) -> e
com.amap.api.mapcore.bc -> com.amap.api.mapcore.bc:
    com.amap.api.mapcore.bb a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.mapcore.bd -> com.amap.api.mapcore.bd:
    android.graphics.Bitmap c -> c
    android.graphics.Bitmap d -> d
    android.graphics.Bitmap e -> e
    android.graphics.Bitmap f -> f
    android.graphics.Paint g -> g
    boolean h -> h
    int i -> i
    com.amap.api.mapcore.b j -> j
    int k -> k
    android.graphics.Rect a -> a
    int b -> b
    void a() -> a
    android.graphics.Bitmap b() -> b
    void a(boolean) -> a
    android.graphics.Point c() -> c
    void a(int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
com.amap.api.mapcore.be -> com.amap.api.mapcore.be:
    android.graphics.Bitmap a -> a
    android.graphics.Bitmap b -> b
    android.graphics.Bitmap c -> c
    android.graphics.Bitmap d -> d
    android.graphics.Bitmap e -> e
    android.graphics.Bitmap f -> f
    android.graphics.Bitmap g -> g
    android.graphics.Bitmap h -> h
    android.graphics.Bitmap i -> i
    android.graphics.Bitmap j -> j
    android.graphics.Bitmap k -> k
    android.graphics.Bitmap l -> l
    android.widget.ImageView m -> m
    android.widget.ImageView n -> n
    com.amap.api.mapcore.v o -> o
    void a() -> a
    void a(float) -> a
    com.amap.api.mapcore.v a(com.amap.api.mapcore.be) -> a
    android.graphics.Bitmap b(com.amap.api.mapcore.be) -> b
    android.widget.ImageView c(com.amap.api.mapcore.be) -> c
    android.graphics.Bitmap d(com.amap.api.mapcore.be) -> d
    android.graphics.Bitmap e(com.amap.api.mapcore.be) -> e
    android.widget.ImageView f(com.amap.api.mapcore.be) -> f
    android.graphics.Bitmap g(com.amap.api.mapcore.be) -> g
com.amap.api.mapcore.be$1 -> com.amap.api.mapcore.be$1:
    com.amap.api.mapcore.be a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.amap.api.mapcore.be$2 -> com.amap.api.mapcore.be$2:
    com.amap.api.mapcore.be a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.amap.api.mapcore.c -> com.amap.api.mapcore.c:
    com.amap.api.mapcore.b a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.mapcore.d -> com.amap.api.mapcore.d:
    com.amap.api.mapcore.b a -> a
    void run() -> run
com.amap.api.mapcore.e -> com.amap.api.mapcore.e:
    com.amap.api.mapcore.b a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.mapcore.f -> com.amap.api.mapcore.f:
    com.amap.api.mapcore.b a -> a
    void run() -> run
com.amap.api.mapcore.g -> com.amap.api.mapcore.g:
    com.amap.api.mapcore.b a -> a
    void run() -> run
com.amap.api.mapcore.h -> com.amap.api.mapcore.h:
    com.amap.api.mapcore.b a -> a
    void run() -> run
com.amap.api.mapcore.i -> com.amap.api.mapcore.i:
    com.amap.api.mapcore.v b -> b
    android.location.Location a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
com.amap.api.mapcore.j -> com.amap.api.mapcore.j:
    com.amap.api.maps.model.LatLng e -> e
    com.amap.api.maps.model.LatLng f -> f
    com.amap.api.maps.model.LatLng g -> g
    float h -> h
    int i -> i
    float j -> j
    boolean k -> k
    java.lang.String l -> l
    com.amap.api.mapcore.v m -> m
    float[] n -> n
    int o -> o
    boolean p -> p
    double q -> q
    double r -> r
    double s -> s
    float a -> a
    float b -> b
    float c -> c
    float d -> d
    boolean a() -> a
    void b() -> b
    java.lang.String c() -> c
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.ac) -> a
    int f() -> f
    void g() -> g
    com.autonavi.amap.mapcore.FPoint a(com.autonavi.amap.mapcore.MapProjection,double,double,double) -> a
    boolean l() -> l
    com.autonavi.amap.mapcore.DPoint m() -> m
    double a(double,double,double,double) -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    int i() -> i
    void j() -> j
    boolean k() -> k
    void a(com.amap.api.maps.model.LatLng) -> a
    void b(com.amap.api.maps.model.LatLng) -> b
    void c(com.amap.api.maps.model.LatLng) -> c
com.amap.api.mapcore.k -> com.amap.api.mapcore.k:
    int a -> a
    java.lang.String b -> b
    java.net.HttpURLConnection c -> c
    boolean a(android.content.Context) -> a
    java.lang.String a() -> a
    java.io.InputStream a(java.net.HttpURLConnection) -> a
    boolean a(java.io.InputStream) -> a
    byte[] b() -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
com.amap.api.mapcore.l -> com.amap.api.mapcore.l:
    int a -> a
    int b -> b
    int c -> c
    float d -> d
    float e -> e
    float f -> f
    int g -> g
    int h -> h
    float i -> i
    float j -> j
    float k -> k
    int l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    float r -> r
    float s -> s
    float t -> t
    long u -> u
    long v -> v
    float w -> w
    float x -> x
    float y -> y
    float z -> z
    float A -> A
    float B -> B
    boolean C -> C
    android.view.animation.Interpolator D -> D
    boolean E -> E
    float F -> F
    float G -> G
    int H -> H
    float I -> I
    float J -> J
    float[] K -> K
    float[] L -> L
    float M -> M
    float N -> N
    float O -> O
    boolean P -> P
    float Q -> Q
    float R -> R
    void a(android.view.animation.Interpolator) -> a
    float b(float) -> b
    boolean a() -> a
    void a(boolean) -> a
    int b() -> b
    int c() -> c
    float d() -> d
    float e() -> e
    float f() -> f
    float g() -> g
    boolean h() -> h
    void a(int,int,float,float,float,int,int,float,float,float,long) -> a
    void a(int,int,int,int,int,int,int,int) -> a
    double c(float) -> c
    int d(float) -> d
    double e(float) -> e
    float a(float) -> a
    int i() -> i
    int j() -> j
    void b(boolean) -> b
    boolean k() -> k
com.amap.api.mapcore.m -> com.amap.api.mapcore.m:
    com.amap.api.mapcore.m$a a -> a
    float b -> b
    float c -> c
    float d -> d
    float e -> e
    float f -> f
    float g -> g
    com.amap.api.maps.model.CameraPosition h -> h
    com.amap.api.maps.model.LatLngBounds i -> i
    int j -> j
    int k -> k
    int l -> l
    android.graphics.Point m -> m
    boolean n -> n
    com.autonavi.amap.mapcore.IPoint o -> o
    boolean p -> p
    com.amap.api.mapcore.m a() -> a
    com.amap.api.mapcore.m b() -> b
    com.amap.api.mapcore.m c() -> c
    com.amap.api.mapcore.m a(float,float) -> a
    com.amap.api.mapcore.m a(float) -> a
    com.amap.api.mapcore.m b(float) -> b
    com.amap.api.mapcore.m a(float,android.graphics.Point) -> a
    com.amap.api.mapcore.m a(com.amap.api.maps.model.CameraPosition) -> a
    com.amap.api.mapcore.m a(com.autonavi.amap.mapcore.IPoint) -> a
    com.amap.api.mapcore.m c(float) -> c
    com.amap.api.mapcore.m d(float) -> d
    com.amap.api.mapcore.m a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.mapcore.m a(com.amap.api.maps.model.LatLng,float) -> a
    com.amap.api.mapcore.m a(com.amap.api.maps.model.LatLng,float,float,float) -> a
    com.amap.api.mapcore.m a(com.autonavi.amap.mapcore.IPoint,float,float,float) -> a
    com.amap.api.mapcore.m a(com.amap.api.maps.model.LatLngBounds,int) -> a
    com.amap.api.mapcore.m a(com.amap.api.maps.model.LatLngBounds,int,int,int) -> a
com.amap.api.mapcore.m$a -> com.amap.api.mapcore.m$a:
    com.amap.api.mapcore.m$a a -> a
    com.amap.api.mapcore.m$a b -> b
    com.amap.api.mapcore.m$a c -> c
    com.amap.api.mapcore.m$a d -> d
    com.amap.api.mapcore.m$a e -> e
    com.amap.api.mapcore.m$a f -> f
    com.amap.api.mapcore.m$a g -> g
    com.amap.api.mapcore.m$a h -> h
    com.amap.api.mapcore.m$a i -> i
    com.amap.api.mapcore.m$a j -> j
    com.amap.api.mapcore.m$a k -> k
    com.amap.api.mapcore.m$a l -> l
    com.amap.api.mapcore.m$a m -> m
    com.amap.api.mapcore.m$a n -> n
    com.amap.api.mapcore.m$a o -> o
    com.amap.api.mapcore.m$a[] p -> p
    com.amap.api.mapcore.m$a[] values() -> values
    com.amap.api.mapcore.m$a valueOf(java.lang.String) -> valueOf
com.amap.api.mapcore.n -> com.amap.api.mapcore.n:
    com.amap.api.maps.model.LatLng a -> a
    double b -> b
    float c -> c
    int d -> d
    int e -> e
    float f -> f
    boolean g -> g
    java.lang.String h -> h
    com.amap.api.mapcore.v i -> i
    java.nio.FloatBuffer j -> j
    int k -> k
    boolean l -> l
    float m -> m
    int n -> n
    int o -> o
    boolean a() -> a
    void b() -> b
    java.lang.String c() -> c
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.ac) -> a
    int f() -> f
    void g() -> g
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void h() -> h
    void a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.maps.model.LatLng i() -> i
    void a(double) -> a
    double l() -> l
    void b(float) -> b
    float m() -> m
    void a(int) -> a
    int n() -> n
    void b(int) -> b
    int o() -> o
    float b(double) -> b
    double c(double) -> c
    void j() -> j
    boolean b(com.amap.api.maps.model.LatLng) -> b
    boolean k() -> k
com.amap.api.mapcore.o -> com.amap.api.mapcore.o:
    android.graphics.Bitmap a -> a
    android.graphics.Bitmap b -> b
    android.graphics.Bitmap c -> c
    android.widget.ImageView d -> d
    com.amap.api.mapcore.v e -> e
    void a() -> a
    void b() -> b
com.amap.api.mapcore.o$1 -> com.amap.api.mapcore.o$1:
    com.amap.api.mapcore.o a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.amap.api.mapcore.p -> com.amap.api.mapcore.p:
    float a -> a
    java.lang.String b -> b
    com.amap.api.mapcore.p$a c -> c
com.amap.api.mapcore.p$a -> com.amap.api.mapcore.p$a:
    com.amap.api.mapcore.p$a a -> a
    com.amap.api.mapcore.p$a b -> b
    com.amap.api.mapcore.p$a c -> c
    com.amap.api.mapcore.p$a d -> d
    com.amap.api.mapcore.p$a[] e -> e
    com.amap.api.mapcore.p$a[] values() -> values
    com.amap.api.mapcore.p$a valueOf(java.lang.String) -> valueOf
com.amap.api.mapcore.q -> com.amap.api.mapcore.q:
    java.util.concurrent.CopyOnWriteArrayList b -> b
    com.amap.api.mapcore.q$a a -> a
    boolean a(com.amap.api.mapcore.s) -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
com.amap.api.mapcore.q$a -> com.amap.api.mapcore.q$a:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.amap.api.mapcore.r -> com.amap.api.mapcore.r:
    void c(javax.microedition.khronos.opengles.GL10,int,int,java.nio.FloatBuffer,float,int) -> c
    void a(javax.microedition.khronos.opengles.GL10,int,int,java.nio.FloatBuffer,float,int) -> a
    void a(javax.microedition.khronos.opengles.GL10,int,int,java.nio.FloatBuffer,float,java.nio.FloatBuffer,int,int) -> a
    void b(javax.microedition.khronos.opengles.GL10,int,int,java.nio.FloatBuffer,float,int) -> b
com.amap.api.mapcore.s -> com.amap.api.mapcore.s:
    com.amap.api.mapcore.v a -> a
    int getZIndex() -> getZIndex
    void destroy() -> destroy
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
com.amap.api.mapcore.t -> com.amap.api.mapcore.t:
    int b -> b
    java.util.concurrent.CopyOnWriteArrayList c -> c
    com.amap.api.mapcore.t$a a -> a
    java.lang.String a(java.lang.String) -> a
    void a() -> a
    void b() -> b
    com.amap.api.mapcore.ac c(java.lang.String) -> c
    void a(com.amap.api.mapcore.ac) -> a
    boolean b(java.lang.String) -> b
    void c() -> c
    void a(javax.microedition.khronos.opengles.GL10,boolean,int) -> a
    void d() -> d
    boolean e() -> e
com.amap.api.mapcore.t$a -> com.amap.api.mapcore.t$a:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.amap.api.mapcore.u -> com.amap.api.mapcore.u:
    com.amap.api.mapcore.v a -> a
    com.amap.api.maps.model.BitmapDescriptor b -> b
    com.amap.api.maps.model.LatLng c -> c
    float d -> d
    float e -> e
    com.amap.api.maps.model.LatLngBounds f -> f
    float g -> g
    float h -> h
    boolean i -> i
    float j -> j
    float k -> k
    float l -> l
    java.lang.String m -> m
    java.nio.FloatBuffer n -> n
    java.nio.FloatBuffer o -> o
    int p -> p
    boolean q -> q
    boolean r -> r
    void b() -> b
    java.lang.String c() -> c
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.ac) -> a
    int f() -> f
    void g() -> g
    void p() -> p
    void q() -> q
    void r() -> r
    void a(com.autonavi.amap.mapcore.DPoint,double,double,double,double,com.autonavi.amap.mapcore.FPoint) -> a
    void s() -> s
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void a(javax.microedition.khronos.opengles.GL10,int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> a
    void j() -> j
    boolean a() -> a
    void a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.maps.model.LatLng h() -> h
    void b(float) -> b
    void a(float,float) -> a
    float i() -> i
    float l() -> l
    void a(com.amap.api.maps.model.LatLngBounds) -> a
    com.amap.api.maps.model.LatLngBounds m() -> m
    void c(float) -> c
    float n() -> n
    void d(float) -> d
    float o() -> o
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
    void b(float,float) -> b
    boolean k() -> k
com.amap.api.mapcore.util.a -> com.amap.api.mapcore.util.a:
    android.content.Context a -> a
    boolean b -> b
    android.view.MotionEvent c -> c
    android.view.MotionEvent d -> d
    float e -> e
    float f -> f
    long g -> g
    boolean a(android.view.MotionEvent) -> a
    void a(int,android.view.MotionEvent) -> a
    void b(int,android.view.MotionEvent) -> b
    void b(android.view.MotionEvent) -> b
    int c(android.view.MotionEvent) -> c
    void a() -> a
com.amap.api.mapcore.util.b -> com.amap.api.mapcore.util.b:
    boolean d -> d
    com.amap.api.mapcore.util.b$a e -> e
    java.lang.reflect.Method a -> a
    java.lang.reflect.Method b -> b
    java.lang.reflect.Method c -> c
    long f -> f
    boolean g -> g
    boolean a() -> a
    long b() -> b
    void c() -> c
    boolean a(android.view.MotionEvent) -> a
com.amap.api.mapcore.util.b$a -> com.amap.api.mapcore.util.b$a:
    boolean a(android.view.MotionEvent,float,float,float,float) -> a
    void a(float,float,float,float,float) -> a
    void a() -> a
com.amap.api.mapcore.util.c -> com.amap.api.mapcore.util.c:
    com.amap.api.mapcore.util.c$a l -> l
    boolean m -> m
    void a(int,android.view.MotionEvent) -> a
    void b(int,android.view.MotionEvent) -> b
    void a() -> a
    float b() -> b
com.amap.api.mapcore.util.c$a -> com.amap.api.mapcore.util.c$a:
    boolean a(com.amap.api.mapcore.util.c) -> a
    boolean b(com.amap.api.mapcore.util.c) -> b
    void c(com.amap.api.mapcore.util.c) -> c
com.amap.api.mapcore.util.d -> com.amap.api.mapcore.util.d:
    float l -> l
    float m -> m
    float n -> n
    float h -> h
    float i -> i
    float j -> j
    float k -> k
    float o -> o
    float p -> p
    void b(android.view.MotionEvent) -> b
    float c() -> c
    float a(android.view.MotionEvent,int) -> a
    float b(android.view.MotionEvent,int) -> b
    boolean d(android.view.MotionEvent) -> d
com.amap.api.mapcore.util.e -> com.amap.api.mapcore.util.e:
    java.lang.Object a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object,java.lang.Object) -> a
    void a(boolean,java.lang.Object) -> a
    void b(boolean,java.lang.Object) -> b
    void a(boolean,java.lang.String,java.lang.Object[]) -> a
com.amap.api.mapcore.util.f -> com.amap.api.mapcore.util.f:
    java.util.concurrent.ThreadFactory a -> a
    java.util.concurrent.BlockingQueue e -> e
    java.util.concurrent.Executor b -> b
    java.util.concurrent.Executor c -> c
    java.util.concurrent.Executor d -> d
    com.amap.api.mapcore.util.f$b f -> f
    java.util.concurrent.Executor g -> g
    com.amap.api.mapcore.util.f$e h -> h
    java.util.concurrent.FutureTask i -> i
    com.amap.api.mapcore.util.f$d j -> j
    java.util.concurrent.atomic.AtomicBoolean k -> k
    java.util.concurrent.atomic.AtomicBoolean l -> l
    void c(java.lang.Object) -> c
    java.lang.Object d(java.lang.Object) -> d
    com.amap.api.mapcore.util.f$d a() -> a
    java.lang.Object a(java.lang.Object[]) -> a
    void b() -> b
    void a(java.lang.Object) -> a
    void b(java.lang.Object[]) -> b
    void b(java.lang.Object) -> b
    void c() -> c
    boolean d() -> d
    boolean a(boolean) -> a
    com.amap.api.mapcore.util.f c(java.lang.Object[]) -> c
    com.amap.api.mapcore.util.f a(java.util.concurrent.Executor,java.lang.Object[]) -> a
    void e(java.lang.Object) -> e
    java.util.concurrent.atomic.AtomicBoolean a(com.amap.api.mapcore.util.f) -> a
    java.lang.Object a(com.amap.api.mapcore.util.f,java.lang.Object) -> a
    java.util.concurrent.FutureTask b(com.amap.api.mapcore.util.f) -> b
    void b(com.amap.api.mapcore.util.f,java.lang.Object) -> b
    void c(com.amap.api.mapcore.util.f,java.lang.Object) -> c
com.amap.api.mapcore.util.f$1 -> com.amap.api.mapcore.util.f$1:
    com.amap.api.mapcore.util.f a -> a
    java.lang.Object call() -> call
com.amap.api.mapcore.util.f$2 -> com.amap.api.mapcore.util.f$2:
    com.amap.api.mapcore.util.f a -> a
    void done() -> done
com.amap.api.mapcore.util.f$3 -> com.amap.api.mapcore.util.f$3:
    int[] a -> a
com.amap.api.mapcore.util.f$a -> com.amap.api.mapcore.util.f$a:
    com.amap.api.mapcore.util.f a -> a
    java.lang.Object[] b -> b
com.amap.api.mapcore.util.f$b -> com.amap.api.mapcore.util.f$b:
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.mapcore.util.f$c -> com.amap.api.mapcore.util.f$c:
    java.util.ArrayDeque a -> a
    java.lang.Runnable b -> b
    void execute(java.lang.Runnable) -> execute
    void a() -> a
com.amap.api.mapcore.util.f$c$1 -> com.amap.api.mapcore.util.f$c$1:
    java.lang.Runnable a -> a
    com.amap.api.mapcore.util.f$c b -> b
    void run() -> run
com.amap.api.mapcore.util.f$d -> com.amap.api.mapcore.util.f$d:
    com.amap.api.mapcore.util.f$d a -> a
    com.amap.api.mapcore.util.f$d b -> b
    com.amap.api.mapcore.util.f$d c -> c
    com.amap.api.mapcore.util.f$d[] d -> d
    com.amap.api.mapcore.util.f$d[] values() -> values
    com.amap.api.mapcore.util.f$d valueOf(java.lang.String) -> valueOf
com.amap.api.mapcore.util.f$e -> com.amap.api.mapcore.util.f$e:
    java.lang.Object[] b -> b
com.amap.api.mapcore.util.g -> com.amap.api.mapcore.util.g:
    java.util.concurrent.atomic.AtomicInteger a -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.amap.api.mapcore.util.h -> com.amap.api.mapcore.util.h:
    char[] a -> a
    byte[] b -> b
    java.lang.String a(byte[]) -> a
com.amap.api.mapcore.util.i -> com.amap.api.mapcore.util.i:
    com.amap.api.mapcore.util.i c -> c
    java.lang.String d -> d
    android.content.Context e -> e
    android.telephony.TelephonyManager f -> f
    android.net.ConnectivityManager g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String a -> a
    java.lang.String b -> b
    com.amap.api.mapcore.util.i a(android.content.Context) -> a
    java.lang.String j() -> j
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String b(android.content.Context) -> b
    byte[] a(java.io.InputStream) -> a
    java.net.Proxy c(android.content.Context) -> c
    java.net.Proxy a(android.content.Context,java.net.URI) -> a
    java.net.Proxy e(android.content.Context) -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String i() -> i
    java.lang.String d(android.content.Context) -> d
com.amap.api.mapcore.util.j -> com.amap.api.mapcore.util.j:
    java.nio.charset.Charset a -> a
    java.io.File b -> b
    java.io.File c -> c
    java.io.File d -> d
    int e -> e
    long f -> f
    int g -> g
    long h -> h
    java.io.Writer i -> i
    java.util.LinkedHashMap j -> j
    int k -> k
    long l -> l
    java.util.concurrent.ExecutorService m -> m
    java.util.concurrent.Callable n -> n
    java.lang.Object[] a(java.lang.Object[],int,int) -> a
    java.lang.String a(java.io.InputStream) -> a
    void a(java.io.Closeable) -> a
    void a(java.io.File) -> a
    com.amap.api.mapcore.util.j a(java.io.File,int,int,long) -> a
    void d() -> d
    void d(java.lang.String) -> d
    void e() -> e
    void f() -> f
    void b(java.io.File) -> b
    com.amap.api.mapcore.util.j$c a(java.lang.String) -> a
    com.amap.api.mapcore.util.j$a b(java.lang.String) -> b
    com.amap.api.mapcore.util.j$a a(java.lang.String,long) -> a
    void a(com.amap.api.mapcore.util.j$a,boolean) -> a
    boolean g() -> g
    boolean c(java.lang.String) -> c
    boolean a() -> a
    void h() -> h
    void b() -> b
    void close() -> close
    void i() -> i
    void c() -> c
    void e(java.lang.String) -> e
    java.io.Writer a(com.amap.api.mapcore.util.j) -> a
    void b(com.amap.api.mapcore.util.j) -> b
    boolean c(com.amap.api.mapcore.util.j) -> c
    void d(com.amap.api.mapcore.util.j) -> d
    int a(com.amap.api.mapcore.util.j,int) -> a
    void a(com.amap.api.mapcore.util.j,com.amap.api.mapcore.util.j$a,boolean) -> a
    int e(com.amap.api.mapcore.util.j) -> e
    java.io.File f(com.amap.api.mapcore.util.j) -> f
com.amap.api.mapcore.util.j$a -> com.amap.api.mapcore.util.j$a:
    com.amap.api.mapcore.util.j$b b -> b
    boolean c -> c
    com.amap.api.mapcore.util.j a -> a
    java.io.OutputStream a(int) -> a
    void a() -> a
    void b() -> b
    com.amap.api.mapcore.util.j$b a(com.amap.api.mapcore.util.j$a) -> a
    boolean a(com.amap.api.mapcore.util.j$a,boolean) -> a
com.amap.api.mapcore.util.j$a$a -> com.amap.api.mapcore.util.j$a$a:
    com.amap.api.mapcore.util.j$a a -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.amap.api.mapcore.util.j$b -> com.amap.api.mapcore.util.j$b:
    java.lang.String b -> b
    long[] c -> c
    boolean d -> d
    com.amap.api.mapcore.util.j$a e -> e
    long f -> f
    com.amap.api.mapcore.util.j a -> a
    java.lang.String a() -> a
    void a(java.lang.String[]) -> a
    java.io.IOException b(java.lang.String[]) -> b
    java.io.File a(int) -> a
    java.io.File b(int) -> b
    boolean a(com.amap.api.mapcore.util.j$b,boolean) -> a
    com.amap.api.mapcore.util.j$a a(com.amap.api.mapcore.util.j$b,com.amap.api.mapcore.util.j$a) -> a
    void a(com.amap.api.mapcore.util.j$b,java.lang.String[]) -> a
    com.amap.api.mapcore.util.j$a a(com.amap.api.mapcore.util.j$b) -> a
    long[] b(com.amap.api.mapcore.util.j$b) -> b
    java.lang.String c(com.amap.api.mapcore.util.j$b) -> c
    boolean d(com.amap.api.mapcore.util.j$b) -> d
    long e(com.amap.api.mapcore.util.j$b) -> e
    long a(com.amap.api.mapcore.util.j$b,long) -> a
com.amap.api.mapcore.util.j$c -> com.amap.api.mapcore.util.j$c:
    java.lang.String b -> b
    long c -> c
    java.io.InputStream[] d -> d
    com.amap.api.mapcore.util.j a -> a
    java.io.InputStream a(int) -> a
    void close() -> close
com.amap.api.mapcore.util.k -> com.amap.api.mapcore.util.k:
    com.amap.api.mapcore.util.j a -> a
    java.lang.Void a() -> a
    java.lang.Object call() -> call
com.amap.api.mapcore.util.l -> com.amap.api.mapcore.util.l:
    byte[] a(byte[],byte[]) -> a
    byte[] a(byte[],java.security.Key) -> a
    java.security.PublicKey a(android.content.Context) -> a
    byte[] a(byte[]) -> a
    java.lang.String b(byte[]) -> b
com.amap.api.mapcore.util.m -> com.amap.api.mapcore.util.m:
    java.net.HttpURLConnection a(java.lang.String,java.net.Proxy) -> a
    java.net.HttpURLConnection a(java.lang.String,byte[],java.net.Proxy) -> a
com.amap.api.mapcore.util.n -> com.amap.api.mapcore.util.n:
    android.graphics.Bitmap$CompressFormat a -> a
    com.amap.api.mapcore.util.j b -> b
    com.amap.api.mapcore.util.s c -> c
    com.amap.api.mapcore.util.n$a d -> d
    java.lang.Object e -> e
    boolean f -> f
    java.util.HashMap g -> g
    com.amap.api.mapcore.util.n a(com.amap.api.mapcore.util.n$a) -> a
    void b(com.amap.api.mapcore.util.n$a) -> b
    void a() -> a
    void a(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap a(java.lang.String) -> a
    android.graphics.Bitmap b(java.lang.String) -> b
    void b() -> b
    void c() -> c
    void d() -> d
    java.io.File a(android.content.Context,java.lang.String) -> a
    java.lang.String c(java.lang.String) -> c
    java.lang.String a(byte[]) -> a
    int a(android.graphics.Bitmap) -> a
    boolean e() -> e
    java.io.File a(android.content.Context) -> a
    long a(java.io.File) -> a
    java.util.HashMap a(com.amap.api.mapcore.util.n) -> a
    android.graphics.Bitmap$CompressFormat f() -> f
com.amap.api.mapcore.util.n$1 -> com.amap.api.mapcore.util.n$1:
    com.amap.api.mapcore.util.n a -> a
    void a(boolean,java.lang.String,android.graphics.Bitmap,android.graphics.Bitmap) -> a
    int a(java.lang.String,android.graphics.Bitmap) -> a
    int a(java.lang.Object,java.lang.Object) -> a
    void a(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
com.amap.api.mapcore.util.n$a -> com.amap.api.mapcore.util.n$a:
    int a -> a
    int b -> b
    java.io.File c -> c
    android.graphics.Bitmap$CompressFormat d -> d
    int e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    void a(int) -> a
    void b(int) -> b
    void a(java.lang.String) -> a
    void a(boolean) -> a
    void b(boolean) -> b
com.amap.api.mapcore.util.o -> com.amap.api.mapcore.util.o:
    com.amap.api.maps.model.TileProvider e -> e
    void a(android.content.Context) -> a
    void a(com.amap.api.maps.model.TileProvider) -> a
    void b(android.content.Context) -> b
    android.graphics.Bitmap c(com.amap.api.mapcore.az$a) -> c
    android.graphics.Bitmap a(java.lang.Object) -> a
com.amap.api.mapcore.util.p -> com.amap.api.mapcore.util.p:
    int a -> a
    int b -> b
    void a(int,int) -> a
    android.graphics.Bitmap a(int) -> a
    android.graphics.Bitmap a(java.lang.Object) -> a
    android.graphics.Bitmap a(android.content.res.Resources,int,int,int,com.amap.api.mapcore.util.n) -> a
    android.graphics.Bitmap a(java.io.FileDescriptor,int,int,com.amap.api.mapcore.util.n) -> a
    int a(android.graphics.BitmapFactory$Options,int,int) -> a
com.amap.api.mapcore.util.q -> com.amap.api.mapcore.util.q:
    com.amap.api.mapcore.util.n a -> a
    com.amap.api.mapcore.util.n$a b -> b
    boolean e -> e
    boolean c -> c
    java.lang.Object f -> f
    android.content.res.Resources d -> d
    void a(boolean,com.amap.api.mapcore.az$a) -> a
    void a(com.amap.api.mapcore.util.n$a) -> a
    void a(boolean) -> a
    android.graphics.Bitmap a(java.lang.Object) -> a
    com.amap.api.mapcore.util.n a() -> a
    void a(com.amap.api.mapcore.az$a) -> a
    com.amap.api.mapcore.util.q$a c(com.amap.api.mapcore.az$a) -> c
    void b(boolean) -> b
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void g() -> g
    void h() -> h
    java.lang.Object a(com.amap.api.mapcore.util.q) -> a
    com.amap.api.mapcore.util.n b(com.amap.api.mapcore.util.q) -> b
    boolean c(com.amap.api.mapcore.util.q) -> c
    com.amap.api.mapcore.util.q$a b(com.amap.api.mapcore.az$a) -> b
com.amap.api.mapcore.util.q$a -> com.amap.api.mapcore.util.q$a:
    java.lang.ref.WeakReference e -> e
    com.amap.api.mapcore.util.q a -> a
    android.graphics.Bitmap a(java.lang.Boolean[]) -> a
    void a(android.graphics.Bitmap) -> a
    void b(android.graphics.Bitmap) -> b
    com.amap.api.mapcore.az$a e() -> e
    void b(java.lang.Object) -> b
    void a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object[]) -> a
com.amap.api.mapcore.util.q$b -> com.amap.api.mapcore.util.q$b:
    com.amap.api.mapcore.util.q a -> a
    java.lang.Void d(java.lang.Object[]) -> d
    java.lang.Object a(java.lang.Object[]) -> a
com.amap.api.mapcore.util.r -> com.amap.api.mapcore.util.r:
    void a(java.lang.String,java.lang.String,int) -> a
com.amap.api.mapcore.util.s -> com.amap.api.mapcore.util.s:
    java.util.LinkedHashMap a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    java.lang.Object a(java.lang.Object) -> a
    java.lang.Object b(java.lang.Object,java.lang.Object) -> b
    void a(int) -> a
    void a(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.lang.Object b(java.lang.Object) -> b
    int c(java.lang.Object,java.lang.Object) -> c
    int a(java.lang.Object,java.lang.Object) -> a
    void a() -> a
    java.lang.String toString() -> toString
com.amap.api.mapcore.util.t -> com.amap.api.mapcore.util.t:
    java.lang.String[] a -> a
    java.lang.String a(byte[]) -> a
    java.lang.String a(java.lang.String) -> a
com.amap.api.mapcore.util.u -> com.amap.api.mapcore.util.u:
    android.content.res.AssetManager a -> a
    android.content.res.Resources b -> b
    android.content.res.Resources c -> c
    boolean d -> d
    boolean e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    android.content.res.Resources$Theme n -> n
    android.content.res.Resources$Theme o -> o
    java.lang.reflect.Field p -> p
    java.lang.reflect.Field q -> q
    java.lang.reflect.Field r -> r
    android.app.Activity s -> s
    android.content.res.AssetManager a(android.content.Context) -> a
com.amap.api.mapcore.util.v -> com.amap.api.mapcore.util.v:
    boolean a(float,float,float,float,float,float,float,float) -> a
    boolean a(com.autonavi.amap.mapcore.FPoint[],int,int,int,int,int[]) -> a
    int a(com.autonavi.amap.mapcore.FPoint[]) -> a
    boolean a(com.autonavi.amap.mapcore.FPoint[],java.util.List) -> a
com.amap.api.mapcore.util.w -> com.amap.api.mapcore.util.w:
    int[] a -> a
    double[] b -> b
    android.graphics.Bitmap a(android.content.Context,java.lang.String) -> a
    void a(android.graphics.drawable.Drawable) -> a
    java.lang.String a(java.lang.String,java.lang.Object) -> a
    float a(float) -> a
    float b(float) -> b
    java.nio.FloatBuffer a(float[]) -> a
    java.nio.FloatBuffer a(float[],java.nio.FloatBuffer) -> a
    int a(javax.microedition.khronos.opengles.GL10,android.graphics.Bitmap) -> a
    int a(javax.microedition.khronos.opengles.GL10,android.graphics.Bitmap,boolean) -> a
    int a(javax.microedition.khronos.opengles.GL10,int,android.graphics.Bitmap) -> a
    int a(javax.microedition.khronos.opengles.GL10,int,android.graphics.Bitmap,boolean) -> a
    int a(int) -> a
    java.lang.String a(java.lang.String[]) -> a
    int a(java.lang.Object[]) -> a
    android.graphics.Bitmap a(android.graphics.Bitmap,int,int) -> a
    byte[] a(byte[]) -> a
    byte[] b(android.content.Context,java.lang.String) -> b
    android.graphics.Bitmap a(android.graphics.Bitmap,float) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    double a(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> a
    java.lang.String b(int) -> b
    boolean c(android.content.Context) -> c
    boolean a() -> a
    boolean b() -> b
    boolean c() -> c
    boolean d() -> d
    void a(javax.microedition.khronos.opengles.GL10,int) -> a
    java.lang.String a(java.io.InputStream) -> a
    java.lang.String a(java.io.File) -> a
    void a(java.lang.String) -> a
    boolean a(com.amap.api.maps.model.LatLng,java.util.List) -> a
    double a(double,double,double,double,double,double) -> a
    boolean b(double,double,double,double,double,double) -> b
    boolean a(double,double,double,double,double,double,double,double) -> a
    float[] a(com.amap.api.mapcore.v,java.util.List) -> a
    com.autonavi.amap.mapcore.FPoint[] a(com.amap.api.mapcore.v) -> a
    java.util.List b(com.amap.api.mapcore.v,java.util.List) -> b
    com.autonavi.amap.mapcore.FPoint a(com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint) -> a
    boolean a(com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint) -> a
    float a(double,double,double,double) -> a
    double a(double,double) -> a
com.amap.api.mapcore.util.x -> com.amap.api.mapcore.util.x:
    double[][] a -> a
    double[] a(double,double) -> a
    double a(double,double,double) -> a
com.amap.api.mapcore.v -> com.amap.api.mapcore.v:
    void a(com.amap.api.maps.CustomRenderer) -> a
    void a(com.amap.api.mapcore.s) -> a
    com.autonavi.amap.mapcore.MapProjection c() -> c
    int h() -> h
    int i() -> i
    int b() -> b
    int j() -> j
    android.view.View x() -> x
    void setZOrderOnTop(boolean) -> setZOrderOnTop
    void a(android.location.Location) -> a
    boolean a(java.lang.String) -> a
    void H() -> H
    void a(double,double,com.autonavi.amap.mapcore.IPoint) -> a
    void b(int,int,com.autonavi.amap.mapcore.FPoint) -> b
    void b(int,int,com.autonavi.amap.mapcore.DPoint) -> b
    float z() -> z
    int F() -> F
    void f(int) -> f
    com.amap.api.maps.model.CameraPosition l() -> l
    float m() -> m
    float n() -> n
    void a(com.amap.api.mapcore.m) -> a
    void b(com.amap.api.mapcore.m) -> b
    void a(com.amap.api.mapcore.m,com.amap.api.maps.AMap$CancelableCallback) -> a
    void a(com.amap.api.mapcore.m,long,com.amap.api.maps.AMap$CancelableCallback) -> a
    void o() -> o
    com.amap.api.mapcore.ae a(com.amap.api.maps.model.PolylineOptions) -> a
    com.amap.api.mapcore.x a(com.amap.api.maps.model.CircleOptions) -> a
    com.amap.api.mapcore.ad a(com.amap.api.maps.model.PolygonOptions) -> a
    com.amap.api.mapcore.y a(com.amap.api.maps.model.GroundOverlayOptions) -> a
    com.amap.api.maps.model.Marker a(com.amap.api.maps.model.MarkerOptions) -> a
    com.amap.api.maps.model.TileOverlay a(com.amap.api.maps.model.TileOverlayOptions) -> a
    void p() -> p
    int q() -> q
    void b(int) -> b
    boolean r() -> r
    void f(boolean) -> f
    boolean s() -> s
    void g(boolean) -> g
    void k(boolean) -> k
    void a(com.amap.api.maps.model.MyLocationStyle) -> a
    void a(int) -> a
    android.location.Location t() -> t
    void a(com.amap.api.maps.LocationSource) -> a
    com.amap.api.mapcore.ai u() -> u
    com.amap.api.mapcore.af v() -> v
    void a(com.amap.api.maps.AMap$OnCameraChangeListener) -> a
    void a(com.amap.api.maps.AMap$OnMapClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMapTouchListener) -> a
    void a(com.amap.api.maps.AMap$OnMapLongClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMarkerClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMarkerDragListener) -> a
    void a(com.amap.api.maps.AMap$OnMapLoadedListener) -> a
    void a(com.amap.api.maps.AMap$OnInfoWindowClickListener) -> a
    void a(com.amap.api.maps.AMap$InfoWindowAdapter) -> a
    void a(com.amap.api.mapcore.aa) -> a
    boolean b(com.amap.api.mapcore.aa) -> b
    void y() -> y
    void a(double,double,com.autonavi.amap.mapcore.FPoint) -> a
    void a(int,int,com.autonavi.amap.mapcore.DPoint) -> a
    void b(double,double,com.autonavi.amap.mapcore.IPoint) -> b
    void k() -> k
    void a(com.amap.api.maps.AMap$OnMyLocationChangeListener) -> a
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void d(boolean) -> d
    void d() -> d
    void a(com.amap.api.maps.AMap$onMapPrintScreenListener) -> a
    void a(com.amap.api.maps.AMap$OnMapScreenShotListener) -> a
    void d(int) -> d
    void e(int) -> e
    float E() -> E
    com.amap.api.maps.model.LatLngBounds B() -> B
    void onResume() -> onResume
    void onPause() -> onPause
    void e(boolean) -> e
    void a(int,int,int,int) -> a
    void a(float) -> a
    java.util.List G() -> G
    void a(int,int,com.autonavi.amap.mapcore.FPoint) -> a
    float c(int) -> c
    void I() -> I
    void a(int,int) -> a
    com.amap.api.maps.model.CameraPosition h(boolean) -> h
    void g(int) -> g
    int L() -> L
    boolean M() -> M
    com.amap.api.mapcore.w a(com.amap.api.maps.model.ArcOptions) -> a
    com.amap.api.mapcore.l N() -> N
    com.amap.api.mapcore.ab a(com.amap.api.maps.model.NavigateArrowOptions) -> a
    java.util.ArrayList a(java.util.ArrayList,boolean) -> a
    void O() -> O
    void a(com.amap.api.maps.AMap$OnCacheRemoveListener) -> a
com.amap.api.mapcore.w -> com.amap.api.mapcore.w:
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    int i() -> i
com.amap.api.mapcore.x -> com.amap.api.mapcore.x:
    void a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.maps.model.LatLng i() -> i
    void a(double) -> a
    double l() -> l
    void b(float) -> b
    float m() -> m
    void a(int) -> a
    int n() -> n
    void b(int) -> b
    int o() -> o
    boolean b(com.amap.api.maps.model.LatLng) -> b
com.amap.api.mapcore.y -> com.amap.api.mapcore.y:
    void a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.maps.model.LatLng h() -> h
    void b(float) -> b
    void a(float,float) -> a
    float i() -> i
    float l() -> l
    void a(com.amap.api.maps.model.LatLngBounds) -> a
    com.amap.api.maps.model.LatLngBounds m() -> m
    void c(float) -> c
    float n() -> n
    void d(float) -> d
    float o() -> o
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
com.amap.api.mapcore.z -> com.amap.api.mapcore.z:
    com.amap.api.mapcore.v a() -> a
    void a(android.app.Activity,com.amap.api.maps.AMapOptions,android.os.Bundle) -> a
    void a(android.content.Context) -> a
    void a(com.amap.api.maps.AMapOptions) -> a
    void a(android.os.Bundle) -> a
    android.view.View a(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void b(android.os.Bundle) -> b
com.amap.api.maps.AMap -> com.amap.api.maps.AMap:
    int MAP_TYPE_NORMAL -> MAP_TYPE_NORMAL
    int MAP_TYPE_SATELLITE -> MAP_TYPE_SATELLITE
    int MAP_TYPE_NIGHT -> MAP_TYPE_NIGHT
    int LOCATION_TYPE_LOCATE -> LOCATION_TYPE_LOCATE
    int LOCATION_TYPE_MAP_FOLLOW -> LOCATION_TYPE_MAP_FOLLOW
    int LOCATION_TYPE_MAP_ROTATE -> LOCATION_TYPE_MAP_ROTATE
    com.amap.api.mapcore.v a -> a
    com.amap.api.maps.UiSettings b -> b
    com.amap.api.maps.Projection c -> c
    com.amap.api.maps.model.MyTrafficStyle d -> d
    com.amap.api.maps.model.CameraPosition getCameraPosition() -> getCameraPosition
    float getMaxZoomLevel() -> getMaxZoomLevel
    float getMinZoomLevel() -> getMinZoomLevel
    void moveCamera(com.amap.api.maps.CameraUpdate) -> moveCamera
    void animateCamera(com.amap.api.maps.CameraUpdate) -> animateCamera
    void animateCamera(com.amap.api.maps.CameraUpdate,com.amap.api.maps.AMap$CancelableCallback) -> animateCamera
    void animateCamera(com.amap.api.maps.CameraUpdate,long,com.amap.api.maps.AMap$CancelableCallback) -> animateCamera
    void stopAnimation() -> stopAnimation
    com.amap.api.maps.model.NavigateArrow addNavigateArrow(com.amap.api.maps.model.NavigateArrowOptions) -> addNavigateArrow
    com.amap.api.maps.model.Polyline addPolyline(com.amap.api.maps.model.PolylineOptions) -> addPolyline
    com.amap.api.maps.model.Circle addCircle(com.amap.api.maps.model.CircleOptions) -> addCircle
    com.amap.api.maps.model.Arc addArc(com.amap.api.maps.model.ArcOptions) -> addArc
    com.amap.api.maps.model.Polygon addPolygon(com.amap.api.maps.model.PolygonOptions) -> addPolygon
    com.amap.api.maps.model.GroundOverlay addGroundOverlay(com.amap.api.maps.model.GroundOverlayOptions) -> addGroundOverlay
    com.amap.api.maps.model.Marker addMarker(com.amap.api.maps.model.MarkerOptions) -> addMarker
    java.util.ArrayList addMarkers(java.util.ArrayList,boolean) -> addMarkers
    java.util.List getMapScreenMarkers() -> getMapScreenMarkers
    com.amap.api.maps.model.TileOverlay addTileOverlay(com.amap.api.maps.model.TileOverlayOptions) -> addTileOverlay
    void clear() -> clear
    int getMapType() -> getMapType
    void setMapType(int) -> setMapType
    boolean isTrafficEnabled() -> isTrafficEnabled
    void setTrafficEnabled(boolean) -> setTrafficEnabled
    void setMyTrafficStyle(com.amap.api.maps.model.MyTrafficStyle) -> setMyTrafficStyle
    com.amap.api.maps.model.MyTrafficStyle getMyTrafficStyle() -> getMyTrafficStyle
    boolean isMyLocationEnabled() -> isMyLocationEnabled
    void setMyLocationEnabled(boolean) -> setMyLocationEnabled
    android.location.Location getMyLocation() -> getMyLocation
    void setLocationSource(com.amap.api.maps.LocationSource) -> setLocationSource
    void setMyLocationStyle(com.amap.api.maps.model.MyLocationStyle) -> setMyLocationStyle
    void setMyLocationType(int) -> setMyLocationType
    void setMyLocationRotateAngle(float) -> setMyLocationRotateAngle
    com.amap.api.maps.UiSettings getUiSettings() -> getUiSettings
    com.amap.api.maps.Projection getProjection() -> getProjection
    void setOnCameraChangeListener(com.amap.api.maps.AMap$OnCameraChangeListener) -> setOnCameraChangeListener
    void setOnMapClickListener(com.amap.api.maps.AMap$OnMapClickListener) -> setOnMapClickListener
    void setOnMapTouchListener(com.amap.api.maps.AMap$OnMapTouchListener) -> setOnMapTouchListener
    void setOnMyLocationChangeListener(com.amap.api.maps.AMap$OnMyLocationChangeListener) -> setOnMyLocationChangeListener
    void setOnMapLongClickListener(com.amap.api.maps.AMap$OnMapLongClickListener) -> setOnMapLongClickListener
    void setOnMarkerClickListener(com.amap.api.maps.AMap$OnMarkerClickListener) -> setOnMarkerClickListener
    void setOnMarkerDragListener(com.amap.api.maps.AMap$OnMarkerDragListener) -> setOnMarkerDragListener
    void setOnInfoWindowClickListener(com.amap.api.maps.AMap$OnInfoWindowClickListener) -> setOnInfoWindowClickListener
    void setInfoWindowAdapter(com.amap.api.maps.AMap$InfoWindowAdapter) -> setInfoWindowAdapter
    void setOnMapLoadedListener(com.amap.api.maps.AMap$OnMapLoadedListener) -> setOnMapLoadedListener
    void getMapPrintScreen(com.amap.api.maps.AMap$onMapPrintScreenListener) -> getMapPrintScreen
    void getMapScreenShot(com.amap.api.maps.AMap$OnMapScreenShotListener) -> getMapScreenShot
    float getScalePerPixel() -> getScalePerPixel
    void runOnDrawFrame() -> runOnDrawFrame
    void removecache() -> removecache
    void removecache(com.amap.api.maps.AMap$OnCacheRemoveListener) -> removecache
    void setCustomRenderer(com.amap.api.maps.CustomRenderer) -> setCustomRenderer
    void setPointToCenter(int,int) -> setPointToCenter
    void setMapTextZIndex(int) -> setMapTextZIndex
    void setLoadOfflineData(boolean) -> setLoadOfflineData
    int getMapTextZIndex() -> getMapTextZIndex
    java.lang.String getVersion() -> getVersion
com.amap.api.maps.AMap$CancelableCallback -> com.amap.api.maps.AMap$CancelableCallback:
    void onFinish() -> onFinish
    void onCancel() -> onCancel
com.amap.api.maps.AMap$InfoWindowAdapter -> com.amap.api.maps.AMap$InfoWindowAdapter:
    android.view.View getInfoWindow(com.amap.api.maps.model.Marker) -> getInfoWindow
    android.view.View getInfoContents(com.amap.api.maps.model.Marker) -> getInfoContents
com.amap.api.maps.AMap$OnCacheRemoveListener -> com.amap.api.maps.AMap$OnCacheRemoveListener:
    void onRemoveCacheFinish(boolean) -> onRemoveCacheFinish
com.amap.api.maps.AMap$OnCameraChangeListener -> com.amap.api.maps.AMap$OnCameraChangeListener:
    void onCameraChange(com.amap.api.maps.model.CameraPosition) -> onCameraChange
    void onCameraChangeFinish(com.amap.api.maps.model.CameraPosition) -> onCameraChangeFinish
com.amap.api.maps.AMap$OnInfoWindowClickListener -> com.amap.api.maps.AMap$OnInfoWindowClickListener:
    void onInfoWindowClick(com.amap.api.maps.model.Marker) -> onInfoWindowClick
com.amap.api.maps.AMap$OnMapClickListener -> com.amap.api.maps.AMap$OnMapClickListener:
    void onMapClick(com.amap.api.maps.model.LatLng) -> onMapClick
com.amap.api.maps.AMap$OnMapLoadedListener -> com.amap.api.maps.AMap$OnMapLoadedListener:
    void onMapLoaded() -> onMapLoaded
com.amap.api.maps.AMap$OnMapLongClickListener -> com.amap.api.maps.AMap$OnMapLongClickListener:
    void onMapLongClick(com.amap.api.maps.model.LatLng) -> onMapLongClick
com.amap.api.maps.AMap$OnMapScreenShotListener -> com.amap.api.maps.AMap$OnMapScreenShotListener:
    void onMapScreenShot(android.graphics.Bitmap) -> onMapScreenShot
com.amap.api.maps.AMap$OnMapTouchListener -> com.amap.api.maps.AMap$OnMapTouchListener:
    void onTouch(android.view.MotionEvent) -> onTouch
com.amap.api.maps.AMap$OnMarkerClickListener -> com.amap.api.maps.AMap$OnMarkerClickListener:
    boolean onMarkerClick(com.amap.api.maps.model.Marker) -> onMarkerClick
com.amap.api.maps.AMap$OnMarkerDragListener -> com.amap.api.maps.AMap$OnMarkerDragListener:
    void onMarkerDragStart(com.amap.api.maps.model.Marker) -> onMarkerDragStart
    void onMarkerDrag(com.amap.api.maps.model.Marker) -> onMarkerDrag
    void onMarkerDragEnd(com.amap.api.maps.model.Marker) -> onMarkerDragEnd
com.amap.api.maps.AMap$OnMyLocationChangeListener -> com.amap.api.maps.AMap$OnMyLocationChangeListener:
    void onMyLocationChange(android.location.Location) -> onMyLocationChange
com.amap.api.maps.AMap$onMapPrintScreenListener -> com.amap.api.maps.AMap$onMapPrintScreenListener:
    void onMapPrint(android.graphics.drawable.Drawable) -> onMapPrint
com.amap.api.maps.AMapException -> com.amap.api.maps.AMapException:
    java.lang.String ERROR_IO -> ERROR_IO
    java.lang.String ERROR_SOCKET -> ERROR_SOCKET
    java.lang.String ERROR_SOCKE_TIME_OUT -> ERROR_SOCKE_TIME_OUT
    java.lang.String ERROR_INVALID_PARAMETER -> ERROR_INVALID_PARAMETER
    java.lang.String ERROR_NULL_PARAMETER -> ERROR_NULL_PARAMETER
    java.lang.String ERROR_URL -> ERROR_URL
    java.lang.String ERROR_UNKNOW_HOST -> ERROR_UNKNOW_HOST
    java.lang.String ERROR_UNKNOW_SERVICE -> ERROR_UNKNOW_SERVICE
    java.lang.String ERROR_PROTOCOL -> ERROR_PROTOCOL
    java.lang.String ERROR_CONNECTION -> ERROR_CONNECTION
    java.lang.String ERROR_UNKNOWN -> ERROR_UNKNOWN
    java.lang.String ERROR_FAILURE_AUTH -> ERROR_FAILURE_AUTH
    java.lang.String ERROR_NOT_ENOUGH_SPACE -> ERROR_NOT_ENOUGH_SPACE
    java.lang.String ERROR_NOT_AVAILABLE -> ERROR_NOT_AVAILABLE
    java.lang.String a -> a
    java.lang.String getErrorMessage() -> getErrorMessage
com.amap.api.maps.AMapNativeRenderer -> com.amap.api.maps.AMapNativeRenderer:
    void nativeDrawLineByTextureID(float[],int,float,int,float,float,float,float,float,boolean,boolean) -> nativeDrawLineByTextureID
    void nativeDrawArrowLineWithPoints(float[],int,float,float,float,float,float,float,float,float,float,float) -> nativeDrawArrowLineWithPoints
com.amap.api.maps.AMapOptions -> com.amap.api.maps.AMapOptions:
    com.amap.api.maps.AMapOptionsCreator CREATOR -> CREATOR
    int a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    com.amap.api.maps.model.CameraPosition h -> h
    boolean i -> i
    boolean j -> j
    int k -> k
    int LOGO_POSITION_BOTTOM_LEFT -> LOGO_POSITION_BOTTOM_LEFT
    int LOGO_POSITION_BOTTOM_CENTER -> LOGO_POSITION_BOTTOM_CENTER
    int LOGO_POSITION_BOTTOM_RIGHT -> LOGO_POSITION_BOTTOM_RIGHT
    int ZOOM_POSITION_RIGHT_CENTER -> ZOOM_POSITION_RIGHT_CENTER
    int ZOOM_POSITION_RIGHT_BUTTOM -> ZOOM_POSITION_RIGHT_BUTTOM
    com.amap.api.maps.AMapOptions logoPosition(int) -> logoPosition
    com.amap.api.maps.AMapOptions zOrderOnTop(boolean) -> zOrderOnTop
    com.amap.api.maps.AMapOptions mapType(int) -> mapType
    com.amap.api.maps.AMapOptions camera(com.amap.api.maps.model.CameraPosition) -> camera
    com.amap.api.maps.AMapOptions scaleControlsEnabled(boolean) -> scaleControlsEnabled
    com.amap.api.maps.AMapOptions zoomControlsEnabled(boolean) -> zoomControlsEnabled
    com.amap.api.maps.AMapOptions compassEnabled(boolean) -> compassEnabled
    com.amap.api.maps.AMapOptions scrollGesturesEnabled(boolean) -> scrollGesturesEnabled
    com.amap.api.maps.AMapOptions zoomGesturesEnabled(boolean) -> zoomGesturesEnabled
    com.amap.api.maps.AMapOptions tiltGesturesEnabled(boolean) -> tiltGesturesEnabled
    com.amap.api.maps.AMapOptions rotateGesturesEnabled(boolean) -> rotateGesturesEnabled
    int getLogoPosition() -> getLogoPosition
    java.lang.Boolean getZOrderOnTop() -> getZOrderOnTop
    int getMapType() -> getMapType
    com.amap.api.maps.model.CameraPosition getCamera() -> getCamera
    java.lang.Boolean getScaleControlsEnabled() -> getScaleControlsEnabled
    java.lang.Boolean getZoomControlsEnabled() -> getZoomControlsEnabled
    java.lang.Boolean getCompassEnabled() -> getCompassEnabled
    java.lang.Boolean getScrollGesturesEnabled() -> getScrollGesturesEnabled
    java.lang.Boolean getZoomGesturesEnabled() -> getZoomGesturesEnabled
    java.lang.Boolean getTiltGesturesEnabled() -> getTiltGesturesEnabled
    java.lang.Boolean getRotateGesturesEnabled() -> getRotateGesturesEnabled
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.AMapOptionsCreator -> com.amap.api.maps.AMapOptionsCreator:
    com.amap.api.maps.AMapOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.AMapOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.AMapUtils -> com.amap.api.maps.AMapUtils:
    float calculateLineDistance(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> calculateLineDistance
    float calculateArea(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> calculateArea
com.amap.api.maps.CameraUpdate -> com.amap.api.maps.CameraUpdate:
    com.amap.api.mapcore.m a -> a
    com.amap.api.mapcore.m a() -> a
com.amap.api.maps.CameraUpdateFactory -> com.amap.api.maps.CameraUpdateFactory:
    com.amap.api.maps.CameraUpdate zoomIn() -> zoomIn
    com.amap.api.maps.CameraUpdate zoomOut() -> zoomOut
    com.amap.api.maps.CameraUpdate scrollBy(float,float) -> scrollBy
    com.amap.api.maps.CameraUpdate zoomTo(float) -> zoomTo
    com.amap.api.maps.CameraUpdate zoomBy(float) -> zoomBy
    com.amap.api.maps.CameraUpdate zoomBy(float,android.graphics.Point) -> zoomBy
    com.amap.api.maps.CameraUpdate newCameraPosition(com.amap.api.maps.model.CameraPosition) -> newCameraPosition
    com.amap.api.maps.CameraUpdate newLatLng(com.amap.api.maps.model.LatLng) -> newLatLng
    com.amap.api.maps.CameraUpdate newLatLngZoom(com.amap.api.maps.model.LatLng,float) -> newLatLngZoom
    com.amap.api.maps.CameraUpdate newLatLngBounds(com.amap.api.maps.model.LatLngBounds,int) -> newLatLngBounds
    com.amap.api.maps.CameraUpdate changeLatLng(com.amap.api.maps.model.LatLng) -> changeLatLng
    com.amap.api.maps.CameraUpdate changeBearing(float) -> changeBearing
    com.amap.api.maps.CameraUpdate changeTilt(float) -> changeTilt
    com.amap.api.maps.CameraUpdate newLatLngBounds(com.amap.api.maps.model.LatLngBounds,int,int,int) -> newLatLngBounds
com.amap.api.maps.CustomRenderer -> com.amap.api.maps.CustomRenderer:
    void OnMapReferencechanged() -> OnMapReferencechanged
com.amap.api.maps.LocationSource -> com.amap.api.maps.LocationSource:
    void activate(com.amap.api.maps.LocationSource$OnLocationChangedListener) -> activate
    void deactivate() -> deactivate
com.amap.api.maps.LocationSource$OnLocationChangedListener -> com.amap.api.maps.LocationSource$OnLocationChangedListener:
    void onLocationChanged(android.location.Location) -> onLocationChanged
com.amap.api.maps.MapFragment -> com.amap.api.maps.MapFragment:
    com.amap.api.maps.AMap a -> a
    com.amap.api.mapcore.z b -> b
    com.amap.api.maps.MapFragment newInstance() -> newInstance
    com.amap.api.maps.MapFragment newInstance(com.amap.api.maps.AMapOptions) -> newInstance
    com.amap.api.mapcore.z getMapFragmentDelegate() -> getMapFragmentDelegate
    com.amap.api.maps.AMap getMap() -> getMap
    void onAttach(android.app.Activity) -> onAttach
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setArguments(android.os.Bundle) -> setArguments
com.amap.api.maps.MapView -> com.amap.api.maps.MapView:
    com.amap.api.mapcore.z a -> a
    com.amap.api.maps.AMap b -> b
    com.amap.api.mapcore.z getMapFragmentDelegate() -> getMapFragmentDelegate
    com.amap.api.maps.AMap getMap() -> getMap
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setLayerType(int,android.graphics.Paint) -> setLayerType
com.amap.api.maps.MapsInitializer -> com.amap.api.maps.MapsInitializer:
    java.lang.String sdcardDir -> sdcardDir
    boolean a -> a
    void initialize(android.content.Context) -> initialize
    void setNetWorkEnable(boolean) -> setNetWorkEnable
    boolean getNetWorkEnable() -> getNetWorkEnable
com.amap.api.maps.Projection -> com.amap.api.maps.Projection:
    com.amap.api.mapcore.af a -> a
    com.amap.api.maps.model.LatLng fromScreenLocation(android.graphics.Point) -> fromScreenLocation
    android.graphics.Point toScreenLocation(com.amap.api.maps.model.LatLng) -> toScreenLocation
    android.graphics.PointF toMapLocation(com.amap.api.maps.model.LatLng) -> toMapLocation
    android.graphics.PointF toOpenGLLocation(com.amap.api.maps.model.LatLng) -> toOpenGLLocation
    float toOpenGLWidth(int) -> toOpenGLWidth
    com.amap.api.maps.model.VisibleRegion getVisibleRegion() -> getVisibleRegion
    com.amap.api.maps.model.TileProjection fromBoundsToTile(com.amap.api.maps.model.LatLngBounds,int,int) -> fromBoundsToTile
com.amap.api.maps.SupportMapFragment -> com.amap.api.maps.SupportMapFragment:
    com.amap.api.maps.AMap a -> a
    com.amap.api.mapcore.z b -> b
    com.amap.api.maps.SupportMapFragment newInstance() -> newInstance
    com.amap.api.maps.SupportMapFragment newInstance(com.amap.api.maps.AMapOptions) -> newInstance
    com.amap.api.mapcore.z getMapFragmentDelegate() -> getMapFragmentDelegate
    com.amap.api.maps.AMap getMap() -> getMap
    void onAttach(android.app.Activity) -> onAttach
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setArguments(android.os.Bundle) -> setArguments
com.amap.api.maps.UiSettings -> com.amap.api.maps.UiSettings:
    com.amap.api.mapcore.ai a -> a
    void setScaleControlsEnabled(boolean) -> setScaleControlsEnabled
    void setZoomControlsEnabled(boolean) -> setZoomControlsEnabled
    void setCompassEnabled(boolean) -> setCompassEnabled
    void setMyLocationButtonEnabled(boolean) -> setMyLocationButtonEnabled
    void setScrollGesturesEnabled(boolean) -> setScrollGesturesEnabled
    void setZoomGesturesEnabled(boolean) -> setZoomGesturesEnabled
    void setTiltGesturesEnabled(boolean) -> setTiltGesturesEnabled
    void setRotateGesturesEnabled(boolean) -> setRotateGesturesEnabled
    void setAllGesturesEnabled(boolean) -> setAllGesturesEnabled
    void setLogoPosition(int) -> setLogoPosition
    void setZoomPosition(int) -> setZoomPosition
    int getZoomPosition() -> getZoomPosition
    boolean isScaleControlsEnabled() -> isScaleControlsEnabled
    boolean isZoomControlsEnabled() -> isZoomControlsEnabled
    boolean isCompassEnabled() -> isCompassEnabled
    boolean isMyLocationButtonEnabled() -> isMyLocationButtonEnabled
    boolean isScrollGesturesEnabled() -> isScrollGesturesEnabled
    boolean isZoomGesturesEnabled() -> isZoomGesturesEnabled
    boolean isTiltGesturesEnabled() -> isTiltGesturesEnabled
    boolean isRotateGesturesEnabled() -> isRotateGesturesEnabled
    int getLogoPosition() -> getLogoPosition
com.amap.api.maps.model.AMapGLOverlay -> com.amap.api.maps.model.AMapGLOverlay:
    void destroy() -> destroy
com.amap.api.maps.model.Arc -> com.amap.api.maps.model.Arc:
    com.amap.api.mapcore.w a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.amap.api.maps.model.ArcOptions -> com.amap.api.maps.model.ArcOptions:
    com.amap.api.maps.model.ArcOptionsCreator CREATOR -> CREATOR
    java.lang.String a -> a
    com.amap.api.maps.model.LatLng b -> b
    com.amap.api.maps.model.LatLng c -> c
    com.amap.api.maps.model.LatLng d -> d
    float e -> e
    int f -> f
    float g -> g
    boolean h -> h
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    com.amap.api.maps.model.ArcOptions point(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> point
    com.amap.api.maps.model.ArcOptions strokeWidth(float) -> strokeWidth
    com.amap.api.maps.model.ArcOptions strokeColor(int) -> strokeColor
    com.amap.api.maps.model.ArcOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.ArcOptions visible(boolean) -> visible
    float getStrokeWidth() -> getStrokeWidth
    int getStrokeColor() -> getStrokeColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
    com.amap.api.maps.model.LatLng getStart() -> getStart
    com.amap.api.maps.model.LatLng getPassed() -> getPassed
    com.amap.api.maps.model.LatLng getEnd() -> getEnd
com.amap.api.maps.model.ArcOptionsCreator -> com.amap.api.maps.model.ArcOptionsCreator:
    com.amap.api.maps.model.ArcOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.ArcOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.BitmapDescriptor -> com.amap.api.maps.model.BitmapDescriptor:
    com.amap.api.maps.model.BitmapDescriptorCreator CREATOR -> CREATOR
    int a -> a
    int b -> b
    android.graphics.Bitmap c -> c
    com.amap.api.maps.model.BitmapDescriptor clone() -> clone
    android.graphics.Bitmap getBitmap() -> getBitmap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    android.graphics.Bitmap a(android.graphics.Bitmap,int,int) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void recycle() -> recycle
    java.lang.Object clone() -> clone
com.amap.api.maps.model.BitmapDescriptorCreator -> com.amap.api.maps.model.BitmapDescriptorCreator:
    com.amap.api.maps.model.BitmapDescriptor createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.BitmapDescriptor[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.BitmapDescriptorFactory -> com.amap.api.maps.model.BitmapDescriptorFactory:
    float HUE_RED -> HUE_RED
    float HUE_ORANGE -> HUE_ORANGE
    float HUE_YELLOW -> HUE_YELLOW
    float HUE_GREEN -> HUE_GREEN
    float HUE_CYAN -> HUE_CYAN
    float HUE_AZURE -> HUE_AZURE
    float HUE_BLUE -> HUE_BLUE
    float HUE_VIOLET -> HUE_VIOLET
    float HUE_MAGENTA -> HUE_MAGENTA
    float HUE_ROSE -> HUE_ROSE
    com.amap.api.maps.model.BitmapDescriptor fromResource(int) -> fromResource
    com.amap.api.maps.model.BitmapDescriptor fromView(android.view.View) -> fromView
    android.graphics.Bitmap a(android.view.View) -> a
    com.amap.api.maps.model.BitmapDescriptor fromPath(java.lang.String) -> fromPath
    com.amap.api.maps.model.BitmapDescriptor fromAsset(java.lang.String) -> fromAsset
    com.amap.api.maps.model.BitmapDescriptor fromFile(java.lang.String) -> fromFile
    com.amap.api.maps.model.BitmapDescriptor defaultMarker() -> defaultMarker
    com.amap.api.maps.model.BitmapDescriptor defaultMarker(float) -> defaultMarker
    com.amap.api.maps.model.BitmapDescriptor fromBitmap(android.graphics.Bitmap) -> fromBitmap
com.amap.api.maps.model.CameraPosition -> com.amap.api.maps.model.CameraPosition:
    com.amap.api.maps.model.CameraPositionCreator CREATOR -> CREATOR
    com.amap.api.maps.model.LatLng target -> target
    float zoom -> zoom
    float tilt -> tilt
    float bearing -> bearing
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    com.amap.api.maps.model.CameraPosition fromLatLngZoom(com.amap.api.maps.model.LatLng,float) -> fromLatLngZoom
    com.amap.api.maps.model.CameraPosition$Builder builder() -> builder
    com.amap.api.maps.model.CameraPosition$Builder builder(com.amap.api.maps.model.CameraPosition) -> builder
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.amap.api.maps.model.CameraPosition$Builder -> com.amap.api.maps.model.CameraPosition$Builder:
    com.amap.api.maps.model.LatLng a -> a
    float b -> b
    float c -> c
    float d -> d
    com.amap.api.maps.model.CameraPosition$Builder target(com.amap.api.maps.model.LatLng) -> target
    com.amap.api.maps.model.CameraPosition$Builder zoom(float) -> zoom
    com.amap.api.maps.model.CameraPosition$Builder tilt(float) -> tilt
    com.amap.api.maps.model.CameraPosition$Builder bearing(float) -> bearing
    com.amap.api.maps.model.CameraPosition build() -> build
com.amap.api.maps.model.CameraPositionCreator -> com.amap.api.maps.model.CameraPositionCreator:
    com.amap.api.maps.model.CameraPosition createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.CameraPosition[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.Circle -> com.amap.api.maps.model.Circle:
    com.amap.api.mapcore.x a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setCenter(com.amap.api.maps.model.LatLng) -> setCenter
    com.amap.api.maps.model.LatLng getCenter() -> getCenter
    void setRadius(double) -> setRadius
    double getRadius() -> getRadius
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean contains(com.amap.api.maps.model.LatLng) -> contains
com.amap.api.maps.model.CircleOptions -> com.amap.api.maps.model.CircleOptions:
    com.amap.api.maps.model.CircleOptionsCreator CREATOR -> CREATOR
    java.lang.String a -> a
    com.amap.api.maps.model.LatLng b -> b
    double c -> c
    float d -> d
    int e -> e
    int f -> f
    float g -> g
    boolean h -> h
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    com.amap.api.maps.model.CircleOptions center(com.amap.api.maps.model.LatLng) -> center
    com.amap.api.maps.model.CircleOptions radius(double) -> radius
    com.amap.api.maps.model.CircleOptions strokeWidth(float) -> strokeWidth
    com.amap.api.maps.model.CircleOptions strokeColor(int) -> strokeColor
    com.amap.api.maps.model.CircleOptions fillColor(int) -> fillColor
    com.amap.api.maps.model.CircleOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.CircleOptions visible(boolean) -> visible
    com.amap.api.maps.model.LatLng getCenter() -> getCenter
    double getRadius() -> getRadius
    float getStrokeWidth() -> getStrokeWidth
    int getStrokeColor() -> getStrokeColor
    int getFillColor() -> getFillColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
com.amap.api.maps.model.CircleOptionsCreator -> com.amap.api.maps.model.CircleOptionsCreator:
    com.amap.api.maps.model.CircleOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.CircleOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.GroundOverlay -> com.amap.api.maps.model.GroundOverlay:
    com.amap.api.mapcore.y a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPosition(com.amap.api.maps.model.LatLng) -> setPosition
    com.amap.api.maps.model.LatLng getPosition() -> getPosition
    void setDimensions(float) -> setDimensions
    void setImage(com.amap.api.maps.model.BitmapDescriptor) -> setImage
    void setDimensions(float,float) -> setDimensions
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    void setPositionFromBounds(com.amap.api.maps.model.LatLngBounds) -> setPositionFromBounds
    com.amap.api.maps.model.LatLngBounds getBounds() -> getBounds
    void setBearing(float) -> setBearing
    float getBearing() -> getBearing
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    void setTransparency(float) -> setTransparency
    float getTransparency() -> getTransparency
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.amap.api.maps.model.GroundOverlayOptions -> com.amap.api.maps.model.GroundOverlayOptions:
    com.amap.api.maps.model.GroundOverlayOptionsCreator CREATOR -> CREATOR
    float NO_DIMENSION -> NO_DIMENSION
    int a -> a
    com.amap.api.maps.model.BitmapDescriptor b -> b
    com.amap.api.maps.model.LatLng c -> c
    float d -> d
    float e -> e
    com.amap.api.maps.model.LatLngBounds f -> f
    float g -> g
    float h -> h
    boolean i -> i
    float j -> j
    float k -> k
    float l -> l
    com.amap.api.maps.model.GroundOverlayOptions image(com.amap.api.maps.model.BitmapDescriptor) -> image
    com.amap.api.maps.model.GroundOverlayOptions anchor(float,float) -> anchor
    com.amap.api.maps.model.GroundOverlayOptions position(com.amap.api.maps.model.LatLng,float) -> position
    com.amap.api.maps.model.GroundOverlayOptions position(com.amap.api.maps.model.LatLng,float,float) -> position
    com.amap.api.maps.model.GroundOverlayOptions a(com.amap.api.maps.model.LatLng,float,float) -> a
    com.amap.api.maps.model.GroundOverlayOptions positionFromBounds(com.amap.api.maps.model.LatLngBounds) -> positionFromBounds
    com.amap.api.maps.model.GroundOverlayOptions bearing(float) -> bearing
    com.amap.api.maps.model.GroundOverlayOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.GroundOverlayOptions visible(boolean) -> visible
    com.amap.api.maps.model.GroundOverlayOptions transparency(float) -> transparency
    com.amap.api.maps.model.BitmapDescriptor getImage() -> getImage
    com.amap.api.maps.model.LatLng getLocation() -> getLocation
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    com.amap.api.maps.model.LatLngBounds getBounds() -> getBounds
    float getBearing() -> getBearing
    float getZIndex() -> getZIndex
    float getTransparency() -> getTransparency
    float getAnchorU() -> getAnchorU
    float getAnchorV() -> getAnchorV
    boolean isVisible() -> isVisible
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.GroundOverlayOptionsCreator -> com.amap.api.maps.model.GroundOverlayOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.GroundOverlayOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.GroundOverlayOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.LatLng -> com.amap.api.maps.model.LatLng:
    com.amap.api.maps.model.LatLngCreator CREATOR -> CREATOR
    double latitude -> latitude
    double longitude -> longitude
    java.text.DecimalFormat a -> a
    double a(double) -> a
    com.amap.api.maps.model.LatLng clone() -> clone
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object clone() -> clone
com.amap.api.maps.model.LatLngBounds -> com.amap.api.maps.model.LatLngBounds:
    com.amap.api.maps.model.LatLngBoundsCreator CREATOR -> CREATOR
    int a -> a
    com.amap.api.maps.model.LatLng southwest -> southwest
    com.amap.api.maps.model.LatLng northeast -> northeast
    int a() -> a
    com.amap.api.maps.model.LatLngBounds$Builder builder() -> builder
    boolean contains(com.amap.api.maps.model.LatLng) -> contains
    boolean contains(com.amap.api.maps.model.LatLngBounds) -> contains
    boolean intersects(com.amap.api.maps.model.LatLngBounds) -> intersects
    boolean a(com.amap.api.maps.model.LatLngBounds) -> a
    com.amap.api.maps.model.LatLngBounds including(com.amap.api.maps.model.LatLng) -> including
    double c(double,double) -> c
    double d(double,double) -> d
    boolean a(double) -> a
    boolean b(double) -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    double a(double,double) -> a
    double b(double,double) -> b
com.amap.api.maps.model.LatLngBounds$Builder -> com.amap.api.maps.model.LatLngBounds$Builder:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
    com.amap.api.maps.model.LatLngBounds$Builder include(com.amap.api.maps.model.LatLng) -> include
    boolean a(double) -> a
    com.amap.api.maps.model.LatLngBounds build() -> build
com.amap.api.maps.model.LatLngBoundsCreator -> com.amap.api.maps.model.LatLngBoundsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.LatLngBounds createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.LatLngBounds[] newArray(int) -> newArray
    void a(com.amap.api.maps.model.LatLngBounds,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.LatLngCreator -> com.amap.api.maps.model.LatLngCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.LatLng createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.LatLng[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.Marker -> com.amap.api.maps.model.Marker:
    com.amap.api.mapcore.aa a -> a
    void setPeriod(int) -> setPeriod
    int getPeriod() -> getPeriod
    void setIcons(java.util.ArrayList) -> setIcons
    java.util.ArrayList getIcons() -> getIcons
    void remove() -> remove
    void destroy() -> destroy
    java.lang.String getId() -> getId
    void setPerspective(boolean) -> setPerspective
    boolean isPerspective() -> isPerspective
    void setPosition(com.amap.api.maps.model.LatLng) -> setPosition
    com.amap.api.maps.model.LatLng getPosition() -> getPosition
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    void setSnippet(java.lang.String) -> setSnippet
    java.lang.String getSnippet() -> getSnippet
    void setIcon(com.amap.api.maps.model.BitmapDescriptor) -> setIcon
    void setAnchor(float,float) -> setAnchor
    void setDraggable(boolean) -> setDraggable
    boolean isDraggable() -> isDraggable
    void showInfoWindow() -> showInfoWindow
    void hideInfoWindow() -> hideInfoWindow
    boolean isInfoWindowShown() -> isInfoWindowShown
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void setObject(java.lang.Object) -> setObject
    java.lang.Object getObject() -> getObject
    void setRotateAngle(float) -> setRotateAngle
    float getRotateAngle() -> getRotateAngle
    void setToTop() -> setToTop
    void setFlat(boolean) -> setFlat
    boolean isFlat() -> isFlat
    void setPositionByPixels(int,int) -> setPositionByPixels
com.amap.api.maps.model.MarkerOptions -> com.amap.api.maps.model.MarkerOptions:
    com.amap.api.maps.model.MarkerOptionsCreator CREATOR -> CREATOR
    com.amap.api.maps.model.LatLng b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    float e -> e
    float f -> f
    boolean g -> g
    boolean h -> h
    java.lang.String a -> a
    boolean i -> i
    int j -> j
    int k -> k
    java.util.ArrayList l -> l
    int m -> m
    boolean n -> n
    boolean o -> o
    com.amap.api.maps.model.MarkerOptions icons(java.util.ArrayList) -> icons
    java.util.ArrayList getIcons() -> getIcons
    com.amap.api.maps.model.MarkerOptions period(int) -> period
    int getPeriod() -> getPeriod
    boolean isPerspective() -> isPerspective
    com.amap.api.maps.model.MarkerOptions perspective(boolean) -> perspective
    com.amap.api.maps.model.MarkerOptions position(com.amap.api.maps.model.LatLng) -> position
    com.amap.api.maps.model.MarkerOptions setFlat(boolean) -> setFlat
    void a() -> a
    com.amap.api.maps.model.MarkerOptions icon(com.amap.api.maps.model.BitmapDescriptor) -> icon
    com.amap.api.maps.model.MarkerOptions anchor(float,float) -> anchor
    com.amap.api.maps.model.MarkerOptions setInfoWindowOffset(int,int) -> setInfoWindowOffset
    com.amap.api.maps.model.MarkerOptions title(java.lang.String) -> title
    com.amap.api.maps.model.MarkerOptions snippet(java.lang.String) -> snippet
    com.amap.api.maps.model.MarkerOptions draggable(boolean) -> draggable
    com.amap.api.maps.model.MarkerOptions visible(boolean) -> visible
    com.amap.api.maps.model.MarkerOptions setGps(boolean) -> setGps
    com.amap.api.maps.model.LatLng getPosition() -> getPosition
    java.lang.String getTitle() -> getTitle
    java.lang.String getSnippet() -> getSnippet
    com.amap.api.maps.model.BitmapDescriptor getIcon() -> getIcon
    float getAnchorU() -> getAnchorU
    int getInfoWindowOffsetX() -> getInfoWindowOffsetX
    int getInfoWindowOffsetY() -> getInfoWindowOffsetY
    float getAnchorV() -> getAnchorV
    boolean isDraggable() -> isDraggable
    boolean isVisible() -> isVisible
    boolean isGps() -> isGps
    boolean isFlat() -> isFlat
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.MarkerOptionsCreator -> com.amap.api.maps.model.MarkerOptionsCreator:
    com.amap.api.maps.model.MarkerOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.MarkerOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.MyLocationStyle -> com.amap.api.maps.model.MyLocationStyle:
    com.amap.api.maps.model.BitmapDescriptor a -> a
    float b -> b
    float c -> c
    int d -> d
    int e -> e
    float f -> f
    com.amap.api.maps.model.MyLocationStyle myLocationIcon(com.amap.api.maps.model.BitmapDescriptor) -> myLocationIcon
    com.amap.api.maps.model.MyLocationStyle anchor(float,float) -> anchor
    com.amap.api.maps.model.MyLocationStyle radiusFillColor(int) -> radiusFillColor
    com.amap.api.maps.model.MyLocationStyle strokeColor(int) -> strokeColor
    com.amap.api.maps.model.MyLocationStyle strokeWidth(float) -> strokeWidth
    com.amap.api.maps.model.BitmapDescriptor getMyLocationIcon() -> getMyLocationIcon
    float getAnchorU() -> getAnchorU
    float getAnchorV() -> getAnchorV
    int getRadiusFillColor() -> getRadiusFillColor
    int getStrokeColor() -> getStrokeColor
    float getStrokeWidth() -> getStrokeWidth
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.MyLocationStyleCreator -> com.amap.api.maps.model.MyLocationStyleCreator:
    com.amap.api.maps.model.MyLocationStyle createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.MyLocationStyle[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.MyTrafficStyle -> com.amap.api.maps.model.MyTrafficStyle:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int getSmoothColor() -> getSmoothColor
    void setSmoothColor(int) -> setSmoothColor
    int getSlowColor() -> getSlowColor
    void setSlowColor(int) -> setSlowColor
    int getCongestedColor() -> getCongestedColor
    void setCongestedColor(int) -> setCongestedColor
    int getSeriousCongestedColor() -> getSeriousCongestedColor
    void setSeriousCongestedColor(int) -> setSeriousCongestedColor
com.amap.api.maps.model.NavigateArrow -> com.amap.api.maps.model.NavigateArrow:
    com.amap.api.mapcore.ab a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPoints(java.util.List) -> setPoints
    java.util.List getPoints() -> getPoints
    void setWidth(float) -> setWidth
    float getWidth() -> getWidth
    void setTopColor(int) -> setTopColor
    int getTopColor() -> getTopColor
    void setSideColor(int) -> setSideColor
    int getSideColor() -> getSideColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.amap.api.maps.model.NavigateArrowOptions -> com.amap.api.maps.model.NavigateArrowOptions:
    com.amap.api.maps.model.NavigateArrowOptionsCreator CREATOR -> CREATOR
    java.util.List b -> b
    float c -> c
    int d -> d
    int e -> e
    float f -> f
    boolean g -> g
    java.lang.String a -> a
    com.amap.api.maps.model.NavigateArrowOptions add(com.amap.api.maps.model.LatLng) -> add
    com.amap.api.maps.model.NavigateArrowOptions add(com.amap.api.maps.model.LatLng[]) -> add
    com.amap.api.maps.model.NavigateArrowOptions addAll(java.lang.Iterable) -> addAll
    com.amap.api.maps.model.NavigateArrowOptions width(float) -> width
    com.amap.api.maps.model.NavigateArrowOptions topColor(int) -> topColor
    com.amap.api.maps.model.NavigateArrowOptions sideColor(int) -> sideColor
    com.amap.api.maps.model.NavigateArrowOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.NavigateArrowOptions visible(boolean) -> visible
    java.util.List getPoints() -> getPoints
    float getWidth() -> getWidth
    int getTopColor() -> getTopColor
    int getSideColor() -> getSideColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.NavigateArrowOptionsCreator -> com.amap.api.maps.model.NavigateArrowOptionsCreator:
    com.amap.api.maps.model.NavigateArrowOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.NavigateArrowOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.Polygon -> com.amap.api.maps.model.Polygon:
    com.amap.api.mapcore.ad a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPoints(java.util.List) -> setPoints
    java.util.List getPoints() -> getPoints
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean contains(com.amap.api.maps.model.LatLng) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.amap.api.maps.model.PolygonOptions -> com.amap.api.maps.model.PolygonOptions:
    com.amap.api.maps.model.PolygonOptionsCreator CREATOR -> CREATOR
    java.util.List b -> b
    float c -> c
    int d -> d
    int e -> e
    float f -> f
    boolean g -> g
    java.lang.String a -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.amap.api.maps.model.PolygonOptions add(com.amap.api.maps.model.LatLng) -> add
    com.amap.api.maps.model.PolygonOptions add(com.amap.api.maps.model.LatLng[]) -> add
    com.amap.api.maps.model.PolygonOptions addAll(java.lang.Iterable) -> addAll
    com.amap.api.maps.model.PolygonOptions strokeWidth(float) -> strokeWidth
    com.amap.api.maps.model.PolygonOptions strokeColor(int) -> strokeColor
    com.amap.api.maps.model.PolygonOptions fillColor(int) -> fillColor
    com.amap.api.maps.model.PolygonOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.PolygonOptions visible(boolean) -> visible
    java.util.List getPoints() -> getPoints
    float getStrokeWidth() -> getStrokeWidth
    int getStrokeColor() -> getStrokeColor
    int getFillColor() -> getFillColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
com.amap.api.maps.model.PolygonOptionsCreator -> com.amap.api.maps.model.PolygonOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.PolygonOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.PolygonOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.Polyline -> com.amap.api.maps.model.Polyline:
    com.amap.api.mapcore.ae a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPoints(java.util.List) -> setPoints
    java.util.List getPoints() -> getPoints
    void setGeodesic(boolean) -> setGeodesic
    boolean isGeodesic() -> isGeodesic
    void setDottedLine(boolean) -> setDottedLine
    boolean isDottedLine() -> isDottedLine
    void setWidth(float) -> setWidth
    float getWidth() -> getWidth
    void setColor(int) -> setColor
    int getColor() -> getColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.amap.api.maps.model.LatLng getNearestLatLng(com.amap.api.maps.model.LatLng) -> getNearestLatLng
com.amap.api.maps.model.PolylineOptions -> com.amap.api.maps.model.PolylineOptions:
    com.amap.api.maps.model.PolylineOptionsCreator CREATOR -> CREATOR
    java.util.List b -> b
    float c -> c
    int d -> d
    float e -> e
    boolean f -> f
    java.lang.String a -> a
    com.amap.api.maps.model.BitmapDescriptor g -> g
    boolean h -> h
    boolean i -> i
    boolean j -> j
    com.amap.api.maps.model.PolylineOptions setUseTexture(boolean) -> setUseTexture
    com.amap.api.maps.model.PolylineOptions setCustomTexture(com.amap.api.maps.model.BitmapDescriptor) -> setCustomTexture
    com.amap.api.maps.model.BitmapDescriptor getCustomTexture() -> getCustomTexture
    boolean isUseTexture() -> isUseTexture
    boolean isGeodesic() -> isGeodesic
    com.amap.api.maps.model.PolylineOptions add(com.amap.api.maps.model.LatLng) -> add
    com.amap.api.maps.model.PolylineOptions add(com.amap.api.maps.model.LatLng[]) -> add
    com.amap.api.maps.model.PolylineOptions addAll(java.lang.Iterable) -> addAll
    com.amap.api.maps.model.PolylineOptions width(float) -> width
    com.amap.api.maps.model.PolylineOptions color(int) -> color
    com.amap.api.maps.model.PolylineOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.PolylineOptions visible(boolean) -> visible
    com.amap.api.maps.model.PolylineOptions geodesic(boolean) -> geodesic
    com.amap.api.maps.model.PolylineOptions setDottedLine(boolean) -> setDottedLine
    boolean isDottedLine() -> isDottedLine
    java.util.List getPoints() -> getPoints
    float getWidth() -> getWidth
    int getColor() -> getColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.PolylineOptionsCreator -> com.amap.api.maps.model.PolylineOptionsCreator:
    com.amap.api.maps.model.PolylineOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.PolylineOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.RuntimeRemoteException -> com.amap.api.maps.model.RuntimeRemoteException:
com.amap.api.maps.model.Tile -> com.amap.api.maps.model.Tile:
    com.amap.api.maps.model.a CREATOR -> CREATOR
    int a -> a
    int width -> width
    int height -> height
    byte[] data -> data
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.TileOverlay -> com.amap.api.maps.model.TileOverlay:
    com.amap.api.mapcore.ah a -> a
    void remove() -> remove
    void clearTileCache() -> clearTileCache
    java.lang.String getId() -> getId
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.amap.api.maps.model.TileOverlayOptions -> com.amap.api.maps.model.TileOverlayOptions:
    com.amap.api.maps.model.TileOverlayOptionsCreator CREATOR -> CREATOR
    int a -> a
    com.amap.api.maps.model.TileProvider b -> b
    boolean c -> c
    float d -> d
    int e -> e
    int f -> f
    java.lang.String g -> g
    boolean h -> h
    boolean i -> i
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.amap.api.maps.model.TileOverlayOptions tileProvider(com.amap.api.maps.model.TileProvider) -> tileProvider
    com.amap.api.maps.model.TileOverlayOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.TileOverlayOptions visible(boolean) -> visible
    com.amap.api.maps.model.TileOverlayOptions memCacheSize(int) -> memCacheSize
    com.amap.api.maps.model.TileOverlayOptions diskCacheSize(int) -> diskCacheSize
    com.amap.api.maps.model.TileOverlayOptions diskCacheDir(java.lang.String) -> diskCacheDir
    com.amap.api.maps.model.TileOverlayOptions memoryCacheEnabled(boolean) -> memoryCacheEnabled
    com.amap.api.maps.model.TileOverlayOptions diskCacheEnabled(boolean) -> diskCacheEnabled
    com.amap.api.maps.model.TileProvider getTileProvider() -> getTileProvider
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
    int getMemCacheSize() -> getMemCacheSize
    int getDiskCacheSize() -> getDiskCacheSize
    java.lang.String getDiskCacheDir() -> getDiskCacheDir
    boolean getMemoryCacheEnabled() -> getMemoryCacheEnabled
    boolean getDiskCacheEnabled() -> getDiskCacheEnabled
com.amap.api.maps.model.TileOverlayOptionsCreator -> com.amap.api.maps.model.TileOverlayOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.TileOverlayOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.TileOverlayOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.TileProjection -> com.amap.api.maps.model.TileProjection:
    int offsetX -> offsetX
    int offsetY -> offsetY
    int minX -> minX
    int maxX -> maxX
    int minY -> minY
    int maxY -> maxY
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.TileProjectionCreator -> com.amap.api.maps.model.TileProjectionCreator:
    com.amap.api.maps.model.TileProjection createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.TileProjection[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.TileProvider -> com.amap.api.maps.model.TileProvider:
    com.amap.api.maps.model.Tile NO_TILE -> NO_TILE
    com.amap.api.maps.model.Tile getTile(int,int,int) -> getTile
    int getTileWidth() -> getTileWidth
    int getTileHeight() -> getTileHeight
com.amap.api.maps.model.UrlTileProvider -> com.amap.api.maps.model.UrlTileProvider:
    int a -> a
    int b -> b
    java.net.URL getTileUrl(int,int,int) -> getTileUrl
    com.amap.api.maps.model.Tile getTile(int,int,int) -> getTile
    byte[] a(java.io.InputStream) -> a
    long a(java.io.InputStream,java.io.OutputStream) -> a
    int getTileWidth() -> getTileWidth
    int getTileHeight() -> getTileHeight
com.amap.api.maps.model.VisibleRegion -> com.amap.api.maps.model.VisibleRegion:
    com.amap.api.maps.model.VisibleRegionCreator CREATOR -> CREATOR
    int a -> a
    com.amap.api.maps.model.LatLng nearLeft -> nearLeft
    com.amap.api.maps.model.LatLng nearRight -> nearRight
    com.amap.api.maps.model.LatLng farLeft -> farLeft
    com.amap.api.maps.model.LatLng farRight -> farRight
    com.amap.api.maps.model.LatLngBounds latLngBounds -> latLngBounds
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    int a() -> a
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.amap.api.maps.model.VisibleRegionCreator -> com.amap.api.maps.model.VisibleRegionCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.VisibleRegion createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.VisibleRegion[] newArray(int) -> newArray
    void a(com.amap.api.maps.model.VisibleRegion,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.a -> com.amap.api.maps.model.a:
    com.amap.api.maps.model.Tile a(android.os.Parcel) -> a
    com.amap.api.maps.model.Tile[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.offlinemap.City -> com.amap.api.maps.offlinemap.City:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void setCity(java.lang.String) -> setCity
    java.lang.String getCity() -> getCity
    void setCode(java.lang.String) -> setCode
    java.lang.String getCode() -> getCode
    java.lang.String getJianpin() -> getJianpin
    void setJianpin(java.lang.String) -> setJianpin
    java.lang.String getPinyin() -> getPinyin
    void setPinyin(java.lang.String) -> setPinyin
    java.lang.String getProvince() -> getProvince
    void setProvince(java.lang.String) -> setProvince
    java.lang.String getAdcode() -> getAdcode
    void setAdcode(java.lang.String) -> setAdcode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.offlinemap.OfflineInitBean -> com.amap.api.maps.offlinemap.OfflineInitBean:
    boolean a -> a
    java.lang.String b -> b
    boolean isNeedUpdate() -> isNeedUpdate
    void setNeedUpdate(boolean) -> setNeedUpdate
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
com.amap.api.maps.offlinemap.OfflineMapCity -> com.amap.api.maps.offlinemap.OfflineMapCity:
    java.lang.String a -> a
    long b -> b
    int c -> c
    java.lang.String d -> d
    int e -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    long getSize() -> getSize
    void setSize(long) -> setSize
    int getState() -> getState
    void setState(int) -> setState
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
    int getcompleteCode() -> getcompleteCode
    void setCompleteCode(int) -> setCompleteCode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.offlinemap.OfflineMapManager -> com.amap.api.maps.offlinemap.OfflineMapManager:
    java.lang.String c -> c
    java.lang.String d -> d
    com.amap.api.maps.offlinemap.d e -> e
    com.amap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener f -> f
    java.util.concurrent.CopyOnWriteArrayList g -> g
    java.util.concurrent.CopyOnWriteArrayList h -> h
    java.util.concurrent.CopyOnWriteArrayList i -> i
    java.util.concurrent.CopyOnWriteArrayList j -> j
    android.content.Context k -> k
    boolean mIsStart -> mIsStart
    java.lang.String a -> a
    java.lang.String l -> l
    java.lang.String m -> m
    com.amap.api.maps.AMap n -> n
    int mMessageUpdateFile -> mMessageUpdateFile
    java.lang.String UPDATE_OFFLINE_FILE -> UPDATE_OFFLINE_FILE
    android.os.Handler b -> b
    void a(android.content.Context,com.amap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener) -> a
    boolean downloadByCityCode(java.lang.String) -> downloadByCityCode
    boolean downloadByCityName(java.lang.String) -> downloadByCityName
    boolean downloadByProvinceName(java.lang.String) -> downloadByProvinceName
    boolean updateOfflineMapProvinceByName(java.lang.String) -> updateOfflineMapProvinceByName
    java.util.ArrayList getOfflineMapProvinceList() -> getOfflineMapProvinceList
    java.util.ArrayList getDownloadOfflineMapProvinceList() -> getDownloadOfflineMapProvinceList
    void restart() -> restart
    void stop() -> stop
    void pause() -> pause
    boolean remove(java.lang.String) -> remove
    void setStart(boolean) -> setStart
    boolean isStart() -> isStart
    boolean a(java.lang.String) -> a
    boolean b(java.lang.String) -> b
    com.amap.api.maps.offlinemap.OfflineMapCity getItemByCityCode(java.lang.String) -> getItemByCityCode
    com.amap.api.maps.offlinemap.OfflineMapCity getItemByCityName(java.lang.String) -> getItemByCityName
    com.amap.api.maps.offlinemap.OfflineMapProvince getItemByProvinceName(java.lang.String) -> getItemByProvinceName
    java.util.ArrayList getOfflineMapCityList() -> getOfflineMapCityList
    java.util.ArrayList getDownloadingCityList() -> getDownloadingCityList
    java.util.ArrayList getDownloadingProvinceList() -> getDownloadingProvinceList
    boolean a(java.lang.String,java.lang.String) -> a
    boolean updateOfflineCityByCode(java.lang.String) -> updateOfflineCityByCode
    boolean updateOfflineCityByName(java.lang.String) -> updateOfflineCityByName
    java.util.List getDownloadOfflineMapCityList() -> getDownloadOfflineMapCityList
    void a() -> a
    void a(com.amap.api.maps.offlinemap.m) -> a
    void b(com.amap.api.maps.offlinemap.m) -> b
    boolean a(java.io.File) -> a
    void updateAllCity() -> updateAllCity
    void a(com.amap.api.maps.offlinemap.OfflineMapCity) -> a
    com.amap.api.maps.offlinemap.OfflineMapProvince b(com.amap.api.maps.offlinemap.OfflineMapCity) -> b
    com.amap.api.maps.offlinemap.OfflineMapCity a(com.amap.api.maps.offlinemap.OfflineMapProvince) -> a
    void b(com.amap.api.maps.offlinemap.OfflineMapProvince) -> b
    boolean c(com.amap.api.maps.offlinemap.OfflineMapCity) -> c
    boolean c(com.amap.api.maps.offlinemap.OfflineMapProvince) -> c
    void b() -> b
    void a(java.lang.Object,long,long) -> a
    boolean d(com.amap.api.maps.offlinemap.OfflineMapCity) -> d
    boolean d(com.amap.api.maps.offlinemap.OfflineMapProvince) -> d
    boolean b(java.lang.String,java.lang.String) -> b
    boolean c(java.lang.String,java.lang.String) -> c
    boolean d(java.lang.String,java.lang.String) -> d
    boolean e(java.lang.String,java.lang.String) -> e
    java.lang.String b(java.io.File) -> b
    int c(java.io.File) -> c
    com.amap.api.maps.offlinemap.OfflineMapCity c(com.amap.api.maps.offlinemap.m) -> c
    com.amap.api.maps.offlinemap.OfflineMapProvince d(com.amap.api.maps.offlinemap.m) -> d
    com.amap.api.maps.offlinemap.m d(java.io.File) -> d
    void c(java.lang.String) -> c
    boolean a(int,int) -> a
    boolean f(java.lang.String,java.lang.String) -> f
    void a(android.os.Message) -> a
    boolean d(java.lang.String) -> d
    void a(int,java.lang.String,java.lang.String,int) -> a
    void b(int,java.lang.String,java.lang.String,int) -> b
    com.amap.api.maps.offlinemap.d a(com.amap.api.maps.offlinemap.OfflineMapManager) -> a
    com.amap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener b(com.amap.api.maps.offlinemap.OfflineMapManager) -> b
    void a(com.amap.api.maps.offlinemap.OfflineMapManager,android.os.Message) -> a
com.amap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener -> com.amap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener:
    void onDownload(int,int,java.lang.String) -> onDownload
com.amap.api.maps.offlinemap.OfflineMapProvince -> com.amap.api.maps.offlinemap.OfflineMapProvince:
    java.lang.String a -> a
    int b -> b
    long c -> c
    java.lang.String d -> d
    int e -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    int getState() -> getState
    void setState(int) -> setState
    long getSize() -> getSize
    void setSize(long) -> setSize
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
    int getcompleteCode() -> getcompleteCode
    void setCompleteCode(int) -> setCompleteCode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.offlinemap.OfflineMapStatus -> com.amap.api.maps.offlinemap.OfflineMapStatus:
    int CHECKUPDATES -> CHECKUPDATES
    int ERROR -> ERROR
    int STOP -> STOP
    int LOADING -> LOADING
    int UNZIP -> UNZIP
    int WAITING -> WAITING
    int PAUSE -> PAUSE
    int SUCCESS -> SUCCESS
com.amap.api.maps.offlinemap.ProtocalHandler -> com.amap.api.maps.offlinemap.ProtocalHandler:
    java.net.Proxy proxy -> proxy
    java.lang.Object task -> task
    int maxTry -> maxTry
    java.lang.String recommandURL -> recommandURL
    void a(java.lang.Object,java.net.Proxy) -> a
    void setTask(java.lang.Object) -> setTask
    byte[] getProtoBufferRequest() -> getProtoBufferRequest
    java.lang.String getRequestString() -> getRequestString
    java.lang.Object loadData(java.io.InputStream) -> loadData
    java.lang.String getUrl() -> getUrl
    byte[] makeProtobufRequestBytes() -> makeProtobufRequestBytes
    java.lang.Object GetData() -> GetData
    java.lang.Object a() -> a
    java.io.InputStream sendRequest(java.net.HttpURLConnection) -> sendRequest
    java.lang.Object a(java.io.InputStream) -> a
    java.lang.Object onExceptionOccur() -> onExceptionOccur
    int getInt(java.io.InputStream) -> getInt
    java.lang.String getJsonString(org.json.JSONObject,java.lang.String) -> getJsonString
    boolean isNull(java.lang.String) -> isNull
    java.lang.String strEncoder(java.lang.String) -> strEncoder
    boolean isNullString(java.lang.String) -> isNullString
    int str2int(java.lang.String) -> str2int
    float str2float(java.lang.String) -> str2float
    long str2long(java.lang.String) -> str2long
    boolean str2boolean(java.lang.String) -> str2boolean
com.amap.api.maps.offlinemap.Province -> com.amap.api.maps.offlinemap.Province:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.util.ArrayList e -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getProvinceName() -> getProvinceName
    java.lang.String getJianpin() -> getJianpin
    java.lang.String getPinyin() -> getPinyin
    void setProvinceName(java.lang.String) -> setProvinceName
    void setJianpin(java.lang.String) -> setJianpin
    void setPinyin(java.lang.String) -> setPinyin
    void setProvinceCode(java.lang.String) -> setProvinceCode
    java.lang.String getProvinceCode() -> getProvinceCode
    java.util.ArrayList getCityList() -> getCityList
    void setCityList(java.util.ArrayList) -> setCityList
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.offlinemap.a -> com.amap.api.maps.offlinemap.a:
    com.amap.api.maps.offlinemap.City a(android.os.Parcel) -> a
    com.amap.api.maps.offlinemap.City[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.offlinemap.b -> com.amap.api.maps.offlinemap.b:
    java.io.RandomAccessFile a -> a
    int a(byte[],int,int) -> a
com.amap.api.maps.offlinemap.c -> com.amap.api.maps.offlinemap.c:
    java.lang.String a -> a
    long b -> b
    long c -> c
    int d -> d
    boolean e -> e
    boolean f -> f
    com.amap.api.maps.offlinemap.b g -> g
    java.net.HttpURLConnection h -> h
    java.io.InputStream i -> i
    int j -> j
    void run() -> run
    int a() -> a
    void b() -> b
com.amap.api.maps.offlinemap.d -> com.amap.api.maps.offlinemap.d:
    java.util.concurrent.CopyOnWriteArrayList a -> a
    java.util.concurrent.CopyOnWriteArrayList b -> b
    java.util.concurrent.CopyOnWriteArrayList c -> c
    java.util.concurrent.CopyOnWriteArrayList d -> d
    android.os.Handler f -> f
    android.os.Bundle g -> g
    java.lang.String h -> h
    android.content.Context i -> i
    com.amap.api.maps.offlinemap.k e -> e
    com.amap.api.maps.offlinemap.OfflineMapManager j -> j
    com.amap.api.maps.AMap k -> k
    java.lang.String a() -> a
    void a(int) -> a
    void b(int) -> b
    void e() -> e
    boolean a(com.amap.api.maps.offlinemap.m) -> a
    void b() -> b
    void c() -> c
    void a(java.io.File) -> a
    void b(java.io.File) -> b
    void a(java.lang.String) -> a
    void d() -> d
    void a(java.util.List) -> a
    void a(com.amap.api.maps.offlinemap.m,int,int) -> a
    android.os.Message b(com.amap.api.maps.offlinemap.m,int,int) -> b
    void b(com.amap.api.maps.offlinemap.m) -> b
com.amap.api.maps.offlinemap.e -> com.amap.api.maps.offlinemap.e:
    byte[] getProtoBufferRequest() -> getProtoBufferRequest
    java.lang.String getRequestString() -> getRequestString
    com.amap.api.maps.offlinemap.OfflineInitBean a(java.io.InputStream) -> a
    java.lang.String getUrl() -> getUrl
    java.lang.Object loadData(java.io.InputStream) -> loadData
com.amap.api.maps.offlinemap.f -> com.amap.api.maps.offlinemap.f:
    com.amap.api.maps.offlinemap.OfflineMapCity a(android.os.Parcel) -> a
    com.amap.api.maps.offlinemap.OfflineMapCity[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.offlinemap.g -> com.amap.api.maps.offlinemap.g:
    com.amap.api.maps.offlinemap.OfflineMapManager a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.maps.offlinemap.h -> com.amap.api.maps.offlinemap.h:
    com.amap.api.maps.offlinemap.OfflineMapProvince a(android.os.Parcel) -> a
    com.amap.api.maps.offlinemap.OfflineMapProvince[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.offlinemap.i -> com.amap.api.maps.offlinemap.i:
    android.content.Context a -> a
    void a(android.content.Context) -> a
    byte[] getProtoBufferRequest() -> getProtoBufferRequest
    java.lang.String getRequestString() -> getRequestString
    java.util.List a(java.io.InputStream) -> a
    void a(java.lang.String) -> a
    long a() -> a
    java.lang.String getUrl() -> getUrl
    java.lang.Object loadData(java.io.InputStream) -> loadData
com.amap.api.maps.offlinemap.j -> com.amap.api.maps.offlinemap.j:
    com.amap.api.maps.offlinemap.Province a(android.os.Parcel) -> a
    com.amap.api.maps.offlinemap.Province[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.offlinemap.k -> com.amap.api.maps.offlinemap.k:
    com.amap.api.maps.offlinemap.l a -> a
    long[] b -> b
    long[] c -> c
    com.amap.api.maps.offlinemap.c[] d -> d
    long e -> e
    boolean f -> f
    boolean g -> g
    java.io.File h -> h
    java.io.DataOutputStream i -> i
    com.amap.api.maps.offlinemap.d j -> j
    com.amap.api.maps.offlinemap.m k -> k
    android.content.Context l -> l
    android.os.Handler m -> m
    void run() -> run
    void c() -> c
    boolean d() -> d
    void a(java.util.ArrayList) -> a
    void e() -> e
    long a() -> a
    boolean f() -> f
    boolean g() -> g
    void a(int) -> a
    void b() -> b
com.amap.api.maps.offlinemap.l -> com.amap.api.maps.offlinemap.l:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    int d() -> d
com.amap.api.maps.offlinemap.m -> com.amap.api.maps.offlinemap.m:
    int a -> a
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    long h -> h
    long i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    int l -> l
    long b -> b
    boolean m -> m
    int n -> n
    java.lang.String o -> o
    void a() -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    java.lang.String d() -> d
    java.lang.String e() -> e
    void c(java.lang.String) -> c
    java.lang.String f() -> f
    void d(java.lang.String) -> d
    long g() -> g
    void a(long) -> a
    void b(long) -> b
    void a(int) -> a
    void c(long) -> c
    long h() -> h
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    boolean i() -> i
    void b(int) -> b
    int j() -> j
    java.lang.String k() -> k
    void g(java.lang.String) -> g
    void l() -> l
com.amap.api.maps.offlinemap.n -> com.amap.api.maps.offlinemap.n:
    void a(int) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    java.lang.String a(java.lang.Throwable) -> a
    long a() -> a
    boolean b() -> b
    void b(int) -> b
    java.util.List c(java.lang.String) -> c
    com.amap.api.maps.offlinemap.OfflineMapProvince a(org.json.JSONObject) -> a
    java.util.ArrayList b(org.json.JSONObject) -> b
    com.amap.api.maps.offlinemap.OfflineMapCity c(org.json.JSONObject) -> c
    void a(java.io.File,java.io.File) -> a
    void b(java.io.File,java.io.File) -> b
    boolean a(java.io.File) -> a
com.amap.api.maps.offlinemap.o -> com.amap.api.maps.offlinemap.o:
    void a(java.util.zip.ZipInputStream,java.io.File,com.amap.api.maps.offlinemap.m,com.amap.api.maps.offlinemap.d) -> a
    boolean a(java.lang.String,java.lang.String,com.amap.api.maps.offlinemap.m,com.amap.api.maps.offlinemap.d) -> a
com.amap.api.maps.overlay.BusLineOverlay -> com.amap.api.maps.overlay.BusLineOverlay:
    com.amap.api.services.busline.BusLineItem a -> a
    com.amap.api.maps.AMap b -> b
    java.util.ArrayList c -> c
    com.amap.api.maps.model.Polyline d -> d
    java.util.List e -> e
    com.amap.api.maps.model.BitmapDescriptor f -> f
    com.amap.api.maps.model.BitmapDescriptor g -> g
    com.amap.api.maps.model.BitmapDescriptor h -> h
    android.content.Context i -> i
    void addToMap() -> addToMap
    void removeFromMap() -> removeFromMap
    void a() -> a
    void zoomToSpan() -> zoomToSpan
    com.amap.api.maps.model.LatLngBounds a(java.util.List) -> a
    com.amap.api.maps.model.MarkerOptions a(int) -> a
    com.amap.api.maps.model.BitmapDescriptor getStartBitmapDescriptor() -> getStartBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getEndBitmapDescriptor() -> getEndBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getBusBitmapDescriptor() -> getBusBitmapDescriptor
    java.lang.String getTitle(int) -> getTitle
    java.lang.String getSnippet(int) -> getSnippet
    int getBusStationIndex(com.amap.api.maps.model.Marker) -> getBusStationIndex
    com.amap.api.services.busline.BusStationItem getBusStationItem(int) -> getBusStationItem
    int getBusColor() -> getBusColor
    float getBuslineWidth() -> getBuslineWidth
    com.amap.api.maps.model.BitmapDescriptor a(java.lang.String) -> a
com.amap.api.maps.overlay.BusRouteOverlay -> com.amap.api.maps.overlay.BusRouteOverlay:
    com.amap.api.services.route.BusPath a -> a
    com.amap.api.maps.model.LatLng b -> b
    void addToMap() -> addToMap
    java.lang.String a(java.util.List) -> a
    void drawLineArrow(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> drawLineArrow
    java.lang.String a(com.amap.api.services.route.RouteBusLineItem) -> a
    float getBuslineWidth() -> getBuslineWidth
    com.amap.api.services.core.LatLonPoint a(com.amap.api.services.route.BusStep) -> a
    com.amap.api.services.core.LatLonPoint b(com.amap.api.services.route.BusStep) -> b
com.amap.api.maps.overlay.DrivingRouteOverlay -> com.amap.api.maps.overlay.DrivingRouteOverlay:
    com.amap.api.services.route.DrivePath a -> a
    java.util.List b -> b
    java.util.List c -> c
    boolean d -> d
    android.content.Context e -> e
    void addToMap() -> addToMap
    void a() -> a
    com.amap.api.maps.model.LatLngBounds getLatLngBounds() -> getLatLngBounds
    void setThroughPointIconVisibility(boolean) -> setThroughPointIconVisibility
    com.amap.api.maps.model.BitmapDescriptor b() -> b
    float getBuslineWidth() -> getBuslineWidth
    void removeFromMap() -> removeFromMap
com.amap.api.maps.overlay.PoiOverlay -> com.amap.api.maps.overlay.PoiOverlay:
    java.util.List a -> a
    com.amap.api.maps.AMap b -> b
    java.util.ArrayList c -> c
    void addToMap() -> addToMap
    void removeFromMap() -> removeFromMap
    void zoomToSpan() -> zoomToSpan
    com.amap.api.maps.model.LatLngBounds a() -> a
    com.amap.api.maps.model.MarkerOptions a(int) -> a
    com.amap.api.maps.model.BitmapDescriptor getBitmapDescriptor(int) -> getBitmapDescriptor
    java.lang.String getTitle(int) -> getTitle
    java.lang.String getSnippet(int) -> getSnippet
    int getPoiIndex(com.amap.api.maps.model.Marker) -> getPoiIndex
    com.amap.api.services.core.PoiItem getPoiItem(int) -> getPoiItem
com.amap.api.maps.overlay.RouteOverlay -> com.amap.api.maps.overlay.RouteOverlay:
    java.util.List stationMarkers -> stationMarkers
    java.util.List allPolyLines -> allPolyLines
    com.amap.api.maps.model.Marker startMarker -> startMarker
    com.amap.api.maps.model.Marker endMarker -> endMarker
    com.amap.api.maps.model.LatLng startPoint -> startPoint
    com.amap.api.maps.model.LatLng endPoint -> endPoint
    com.amap.api.maps.AMap mAMap -> mAMap
    android.content.Context a -> a
    android.graphics.Bitmap b -> b
    android.graphics.Bitmap c -> c
    android.graphics.Bitmap d -> d
    android.graphics.Bitmap e -> e
    android.graphics.Bitmap f -> f
    boolean nodeIconVisible -> nodeIconVisible
    void removeFromMap() -> removeFromMap
    void a() -> a
    com.amap.api.maps.model.BitmapDescriptor getStartBitmapDescriptor() -> getStartBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getEndBitmapDescriptor() -> getEndBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getBusBitmapDescriptor() -> getBusBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getWalkBitmapDescriptor() -> getWalkBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getDriveBitmapDescriptor() -> getDriveBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor a(android.graphics.Bitmap,java.lang.String) -> a
    void addStartAndEndMarker() -> addStartAndEndMarker
    void zoomToSpan() -> zoomToSpan
    com.amap.api.maps.model.LatLngBounds getLatLngBounds() -> getLatLngBounds
    void setNodeIconVisibility(boolean) -> setNodeIconVisibility
    int getWalkColor() -> getWalkColor
    int getBusColor() -> getBusColor
    int getDriveColor() -> getDriveColor
com.amap.api.maps.overlay.WalkRouteOverlay -> com.amap.api.maps.overlay.WalkRouteOverlay:
    com.amap.api.services.route.WalkPath a -> a
    void addToMap() -> addToMap
    float getBuslineWidth() -> getBuslineWidth
com.amap.api.maps.overlay.a -> com.amap.api.maps.overlay.a:
    int a -> a
    com.amap.api.maps.model.LatLng a(com.amap.api.services.core.LatLonPoint) -> a
    java.util.ArrayList a(java.util.List) -> a
com.aps.a -> com.aps.a:
    android.content.Context f -> f
    int g -> g
    android.net.ConnectivityManager h -> h
    android.net.wifi.WifiManager i -> i
    android.telephony.TelephonyManager j -> j
    java.util.List k -> k
    java.util.List l -> l
    java.util.Map m -> m
    java.util.Map n -> n
    com.aps.b o -> o
    android.telephony.PhoneStateListener p -> p
    int q -> q
    com.aps.a$a r -> r
    android.net.wifi.WifiInfo s -> s
    org.json.JSONObject t -> t
    java.lang.String u -> u
    com.aps.c v -> v
    long w -> w
    boolean x -> x
    long y -> y
    long z -> z
    long A -> A
    com.aps.l B -> B
    int C -> C
    java.lang.String D -> D
    com.aps.y E -> E
    java.lang.StringBuilder F -> F
    long G -> G
    long H -> H
    long a -> a
    android.telephony.CellLocation I -> I
    java.lang.String J -> J
    java.lang.String K -> K
    boolean L -> L
    java.util.TimerTask b -> b
    java.util.Timer c -> c
    com.aps.ae d -> d
    int e -> e
    void a(android.content.Context,com.amap.api.location.d) -> a
    com.aps.c a() -> a
    void a(java.lang.String) -> a
    void a(org.json.JSONObject) -> a
    void a(com.aps.j,android.app.PendingIntent) -> a
    void b(com.aps.j,android.app.PendingIntent) -> b
    void a(android.app.PendingIntent) -> a
    void b(android.app.PendingIntent) -> b
    void b() -> b
    void f() -> f
    void g() -> g
    void a(android.telephony.CellLocation) -> a
    boolean a(long) -> a
    java.lang.String h() -> h
    boolean a(android.net.wifi.WifiInfo) -> a
    boolean a(android.net.wifi.ScanResult) -> a
    java.lang.StringBuilder i() -> i
    byte[] a(java.lang.Object) -> a
    void a(java.util.List) -> a
    boolean a(int) -> a
    byte[] j() -> j
    boolean k() -> k
    boolean l() -> l
    boolean m() -> m
    com.aps.c a(byte[],boolean) -> a
    void a(java.lang.StringBuilder) -> a
    void b(int) -> b
    com.aps.e b(android.telephony.CellLocation) -> b
    com.aps.e a(android.telephony.NeighboringCellInfo) -> a
    void c(android.telephony.CellLocation) -> c
    void d(android.telephony.CellLocation) -> d
    void n() -> n
    void o() -> o
    boolean p() -> p
    void c() -> c
    void q() -> q
    void d() -> d
    void a(com.amap.api.location.AMapLocation) -> a
    void r() -> r
    boolean s() -> s
    com.aps.c t() -> t
    void u() -> u
    int a(boolean,int) -> a
    void c(int) -> c
    void v() -> v
    void w() -> w
    void d(int) -> d
    boolean e() -> e
    void x() -> x
    java.lang.String a(int,int,int) -> a
    boolean a(com.aps.a) -> a
    android.telephony.CellLocation a(com.aps.a,android.telephony.CellLocation) -> a
    long a(com.aps.a,long) -> a
    int b(com.aps.a) -> b
    void a(com.aps.a,int) -> a
    java.util.List c(com.aps.a) -> c
    int b(com.aps.a,int) -> b
    android.net.wifi.WifiManager d(com.aps.a) -> d
    java.util.List a(com.aps.a,java.util.List) -> a
    java.util.List e(com.aps.a) -> e
    void f(com.aps.a) -> f
    void g(com.aps.a) -> g
    int h(com.aps.a) -> h
    boolean a(com.aps.a,boolean) -> a
    boolean i(com.aps.a) -> i
    void c(com.aps.a,int) -> c
com.aps.a$1 -> com.aps.a$1:
    com.aps.a a -> a
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthChanged(int) -> onSignalStrengthChanged
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
    void onServiceStateChanged(android.telephony.ServiceState) -> onServiceStateChanged
com.aps.a$2 -> com.aps.a$2:
    int a -> a
    com.aps.a b -> b
    void run() -> run
com.aps.a$a -> com.aps.a$a:
    com.aps.a a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aps.aa -> com.aps.aa:
    byte k -> k
    short l -> l
    byte[] a -> a
    byte[] b -> b
    byte[] c -> c
    short d -> d
    short e -> e
    byte f -> f
    byte[] g -> g
    byte[] h -> h
    short i -> i
    java.util.ArrayList j -> j
    java.lang.Boolean a(java.io.DataOutputStream) -> a
    byte[] a() -> a
com.aps.ab -> com.aps.ab:
    com.aps.aa a(android.location.Location,com.aps.ai,int,byte,long) -> a
com.aps.ac -> com.aps.ac:
    byte c -> c
    byte a -> a
    java.util.ArrayList b -> b
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.aps.ad -> com.aps.ad:
    byte[] a -> a
    short b -> b
    byte[] c -> c
com.aps.ae -> com.aps.ae:
    java.io.File a -> a
    java.util.ArrayList c -> c
    int[] b -> b
    boolean d -> d
    byte[] a() -> a
    void a(boolean) -> a
    boolean b() -> b
    int c() -> c
com.aps.af -> com.aps.af:
    android.content.Context a -> a
    int b -> b
    int c -> c
    int d -> d
    byte[] a(byte[],int) -> a
    void a(int) -> a
    int a() -> a
    java.io.File a(long) -> a
    boolean b(long) -> b
    java.io.File b() -> b
    java.io.File d() -> d
    java.util.ArrayList a(java.io.File[]) -> a
    int e() -> e
    java.io.File f() -> f
    java.io.File c(long) -> c
    java.io.File d(long) -> d
    byte[] a(byte[]) -> a
    com.aps.aa a(android.location.Location,com.aps.ai,int,byte,long) -> a
    int a(int,int) -> a
    byte[] a(java.util.BitSet) -> a
    java.util.BitSet b(byte[]) -> b
    boolean c() -> c
    java.io.File a(android.content.Context) -> a
com.aps.ag -> com.aps.ag:
    byte g -> g
    int a -> a
    int b -> b
    short c -> c
    short d -> d
    int e -> e
    byte f -> f
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.aps.ah -> com.aps.ah:
    short a -> a
    int b -> b
    byte c -> c
com.aps.ai -> com.aps.ai:
    android.content.Context a -> a
    android.telephony.TelephonyManager b -> b
    android.location.LocationManager c -> c
    android.net.wifi.WifiManager d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    boolean h -> h
    int i -> i
    boolean j -> j
    long k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    int n -> n
    int o -> o
    int p -> p
    java.lang.String q -> q
    long r -> r
    long s -> s
    com.aps.ai t -> t
    com.aps.ak u -> u
    com.aps.al v -> v
    android.telephony.CellLocation w -> w
    com.aps.am x -> x
    java.util.List y -> y
    java.util.Timer z -> z
    java.lang.Thread A -> A
    android.os.Looper B -> B
    int C -> C
    com.aps.ai a(android.content.Context) -> a
    java.lang.String[] b(android.telephony.TelephonyManager) -> b
    void a() -> a
    void b() -> b
    boolean c() -> c
    boolean d() -> d
    boolean e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    boolean i() -> i
    java.util.List j() -> j
    java.util.List k() -> k
    byte l() -> l
    java.util.List m() -> m
    java.util.List n() -> n
    long o() -> o
    java.lang.String p() -> p
    int q() -> q
    int r() -> r
    int s() -> s
    java.lang.String t() -> t
    java.util.List a(float) -> a
    java.util.List b(float) -> b
    java.util.List u() -> u
    void v() -> v
    void w() -> w
    void z() -> z
    void a(android.content.BroadcastReceiver) -> a
    void b(android.content.BroadcastReceiver) -> b
    void a(java.util.List) -> a
    boolean c(android.content.Context) -> c
    android.content.Context x() -> x
    boolean b(android.content.Context) -> b
    android.os.Looper a(com.aps.ai,android.os.Looper) -> a
    java.util.Timer a(com.aps.ai,java.util.Timer) -> a
    com.aps.ak a(com.aps.ai,com.aps.ak) -> a
    com.aps.ak a(com.aps.ai) -> a
    void a(com.aps.ai,android.telephony.PhoneStateListener) -> a
    com.aps.al a(com.aps.ai,com.aps.al) -> a
    com.aps.al b(com.aps.ai) -> b
    void a(com.aps.ai,android.location.GpsStatus$NmeaListener) -> a
    android.net.wifi.WifiManager c(com.aps.ai) -> c
    java.util.Timer d(com.aps.ai) -> d
    java.util.List e(com.aps.ai) -> e
    long a(com.aps.ai,long) -> a
    int y() -> y
    boolean a(com.aps.ai,boolean) -> a
    android.telephony.TelephonyManager f(com.aps.ai) -> f
    java.lang.String[] a(android.telephony.TelephonyManager) -> a
    int a(com.aps.ai,int) -> a
    int b(com.aps.ai,int) -> b
    long b(com.aps.ai,long) -> b
    android.telephony.CellLocation a(com.aps.ai,android.telephony.CellLocation) -> a
    boolean g(com.aps.ai) -> g
    int c(com.aps.ai,int) -> c
    int h(com.aps.ai) -> h
    long c(com.aps.ai,long) -> c
    java.lang.String a(com.aps.ai,java.lang.String) -> a
com.aps.aj -> com.aps.aj:
    com.aps.ai a -> a
    void run() -> run
com.aps.ak -> com.aps.ak:
    com.aps.ai a -> a
    void onServiceStateChanged(android.telephony.ServiceState) -> onServiceStateChanged
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
com.aps.al -> com.aps.al:
    com.aps.ai a -> a
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
com.aps.am -> com.aps.am:
    com.aps.ai a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aps.an -> com.aps.an:
    com.aps.am a -> a
    void run() -> run
com.aps.ao -> com.aps.ao:
    com.aps.y a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    boolean a(android.location.Location) -> a
com.aps.ap -> com.aps.ap:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aps.aq -> com.aps.aq:
    com.aps.y a -> a
    void run() -> run
com.aps.ar -> com.aps.ar:
    com.aps.aq a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aps.as -> com.aps.as:
    long a -> a
    long b -> b
    boolean c -> c
    java.util.List d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    com.aps.y h -> h
    void onGpsStatusChanged(int) -> onGpsStatusChanged
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
    void a(java.lang.String) -> a
com.aps.at -> com.aps.at:
    com.aps.y a -> a
    void run() -> run
com.aps.au -> com.aps.au:
    com.aps.y a -> a
    void a() -> a
com.aps.av -> com.aps.av:
    android.content.Context a -> a
    boolean b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    long j -> j
    com.aps.au k -> k
    boolean a() -> a
    int b() -> b
    int c() -> c
    int d() -> d
    int e() -> e
    void a(int) -> a
    int f() -> f
    void b(int) -> b
    void a(com.aps.au) -> a
    com.aps.av a(android.content.Context) -> a
    boolean a(java.lang.String) -> a
    java.lang.String b(android.content.Context) -> b
    byte[] c(int) -> c
    byte[] a(long) -> a
    int a(byte[],int) -> a
    long b(byte[],int) -> b
    void g() -> g
com.aps.aw -> com.aps.aw:
    int c -> c
    int d -> d
    com.aps.ai e -> e
    float f -> f
    com.aps.ba a -> a
    com.aps.ax b -> b
    void a() -> a
    boolean a(android.location.Location) -> a
    void a(int) -> a
    void b(int) -> b
    boolean b(android.location.Location) -> b
com.aps.ax -> com.aps.ax:
    com.aps.ay a -> a
    android.location.Location b -> b
com.aps.ay -> com.aps.ay:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
com.aps.az -> com.aps.az:
    java.lang.String a -> a
com.aps.b -> com.aps.b:
    java.lang.String a -> a
    javax.crypto.Cipher b -> b
    java.lang.String a(java.lang.String,java.lang.String) -> a
    byte[] a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
com.aps.ba -> com.aps.ba:
    java.util.List a -> a
    android.location.Location b -> b
com.aps.bb -> com.aps.bb:
    java.lang.String[] a -> a
    boolean a(java.lang.String[],java.lang.String) -> a
com.aps.bc -> com.aps.bc:
    java.io.RandomAccessFile a -> a
    com.aps.af b -> b
    java.io.File c -> c
    com.aps.ae a(int) -> a
    java.util.BitSet b() -> b
    java.util.ArrayList a(int,int) -> a
    byte a(byte[]) -> a
    int a(java.util.BitSet) -> a
    int a(int,int,int) -> a
    int a() -> a
    void a(com.aps.ae) -> a
com.aps.bd -> com.aps.bd:
    java.io.RandomAccessFile a -> a
    com.aps.af b -> b
    java.lang.String c -> c
    java.io.File d -> d
    void a(long,byte[]) -> a
com.aps.be -> com.aps.be:
    java.lang.String a -> a
    boolean a(android.content.Context) -> a
    void a(java.lang.String) -> a
com.aps.c -> com.aps.c:
    java.lang.String a -> a
    double b -> b
    double c -> c
    float d -> d
    float e -> e
    float f -> f
    long g -> g
    com.amap.api.location.core.AMapLocException h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    org.json.JSONObject v -> v
    com.amap.api.location.core.AMapLocException a() -> a
    void a(com.amap.api.location.core.AMapLocException) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    double d() -> d
    void a(double) -> a
    double e() -> e
    void b(double) -> b
    float f() -> f
    void a(float) -> a
    long g() -> g
    void a(long) -> a
    java.lang.String h() -> h
    void d(java.lang.String) -> d
    java.lang.String i() -> i
    void e(java.lang.String) -> e
    java.lang.String j() -> j
    void f(java.lang.String) -> f
    java.lang.String k() -> k
    void g(java.lang.String) -> g
    java.lang.String l() -> l
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void l(java.lang.String) -> l
    void m(java.lang.String) -> m
    void n(java.lang.String) -> n
    org.json.JSONObject m() -> m
    void a(org.json.JSONObject) -> a
    java.lang.String n() -> n
com.aps.d -> com.aps.d:
    com.aps.d a -> a
    java.util.LinkedHashMap b -> b
    com.aps.p c -> c
    long d -> d
    java.io.File b(android.content.Context) -> b
    com.aps.d a(android.content.Context) -> a
    void a(java.lang.String,com.aps.c,java.lang.StringBuilder) -> a
    com.aps.c a(java.lang.String,java.lang.StringBuilder,java.lang.String) -> a
    boolean a(java.lang.String,com.aps.c) -> a
    void a() -> a
    com.aps.d$a a(java.lang.String,java.lang.StringBuilder,java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.StringBuilder) -> a
    void a(java.lang.String,java.util.Hashtable) -> a
    double a(double[],double[]) -> a
com.aps.d$a -> com.aps.d$a:
    com.aps.c a -> a
    java.lang.String b -> b
    com.aps.c a() -> a
    void a(com.aps.c) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
com.aps.e -> com.aps.e:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
com.aps.f -> com.aps.f:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    boolean g -> g
    boolean h -> h
    long i -> i
    long j -> j
    boolean k -> k
    android.util.SparseArray l -> l
    java.lang.String[] m -> m
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void a(boolean) -> a
com.aps.g -> com.aps.g:
    java.util.regex.Pattern a -> a
    java.io.File c -> c
    java.io.File d -> d
    java.io.File e -> e
    java.io.File f -> f
    int g -> g
    long h -> h
    int i -> i
    long j -> j
    java.io.Writer k -> k
    java.util.LinkedHashMap l -> l
    int m -> m
    long n -> n
    java.util.concurrent.ThreadPoolExecutor b -> b
    java.util.concurrent.Callable o -> o
    java.io.OutputStream p -> p
    com.aps.g a(java.io.File,int,int,long) -> a
    void c() -> c
    void d(java.lang.String) -> d
    void d() -> d
    void e() -> e
    void a(java.io.File) -> a
    void a(java.io.File,java.io.File,boolean) -> a
    com.aps.g$c a(java.lang.String) -> a
    com.aps.g$a b(java.lang.String) -> b
    com.aps.g$a a(java.lang.String,long) -> a
    void a(com.aps.g$a,boolean) -> a
    boolean f() -> f
    boolean c(java.lang.String) -> c
    void g() -> g
    void close() -> close
    void h() -> h
    void a() -> a
    void e(java.lang.String) -> e
    java.io.Writer a(com.aps.g) -> a
    void b(com.aps.g) -> b
    boolean c(com.aps.g) -> c
    void d(com.aps.g) -> d
    int a(com.aps.g,int) -> a
    int e(com.aps.g) -> e
    java.io.File f(com.aps.g) -> f
    java.io.OutputStream b() -> b
    void a(com.aps.g,com.aps.g$a,boolean) -> a
com.aps.g$a -> com.aps.g$a:
    com.aps.g$b b -> b
    boolean[] c -> c
    boolean d -> d
    boolean e -> e
    com.aps.g a -> a
    java.io.OutputStream a(int) -> a
    void a() -> a
    void b() -> b
    com.aps.g$b a(com.aps.g$a) -> a
    boolean[] b(com.aps.g$a) -> b
    boolean a(com.aps.g$a,boolean) -> a
com.aps.g$a$a -> com.aps.g$a$a:
    com.aps.g$a a -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.aps.g$b -> com.aps.g$b:
    java.lang.String b -> b
    long[] c -> c
    boolean d -> d
    com.aps.g$a e -> e
    long f -> f
    com.aps.g a -> a
    java.lang.String a() -> a
    void a(java.lang.String[]) -> a
    java.io.IOException b(java.lang.String[]) -> b
    java.io.File a(int) -> a
    java.io.File b(int) -> b
    boolean a(com.aps.g$b,boolean) -> a
    com.aps.g$a a(com.aps.g$b,com.aps.g$a) -> a
    void a(com.aps.g$b,java.lang.String[]) -> a
    com.aps.g$a a(com.aps.g$b) -> a
    long[] b(com.aps.g$b) -> b
    java.lang.String c(com.aps.g$b) -> c
    boolean d(com.aps.g$b) -> d
    long e(com.aps.g$b) -> e
    long a(com.aps.g$b,long) -> a
com.aps.g$c -> com.aps.g$c:
    java.lang.String b -> b
    long c -> c
    java.io.InputStream[] d -> d
    long[] e -> e
    com.aps.g a -> a
    java.io.InputStream a(int) -> a
    void close() -> close
com.aps.h -> com.aps.h:
    com.aps.g a -> a
    java.lang.Void a() -> a
    java.lang.Object call() -> call
com.aps.i -> com.aps.i:
    void write(int) -> write
com.aps.j -> com.aps.j:
    double a -> a
    double b -> b
    float c -> c
    int d -> d
    long e -> e
    long a() -> a
    void a(long) -> a
    java.lang.String b() -> b
com.aps.k -> com.aps.k:
    void a(android.content.Context,com.amap.api.location.d) -> a
    void a(java.lang.String) -> a
    void a(org.json.JSONObject) -> a
    void a(com.amap.api.location.AMapLocation) -> a
    com.aps.c a() -> a
    void a(com.aps.j,android.app.PendingIntent) -> a
    void b(com.aps.j,android.app.PendingIntent) -> b
    void a(android.app.PendingIntent) -> a
    void b(android.app.PendingIntent) -> b
    void b() -> b
com.aps.l -> com.aps.l:
    com.aps.l a -> a
    com.aps.l a() -> a
    java.lang.String a(android.content.Context,java.lang.String,byte[],java.lang.String) -> a
    java.lang.String a(byte[],android.content.Context,org.json.JSONObject) -> a
    org.apache.http.client.HttpClient a(android.content.Context,android.net.NetworkInfo) -> a
    boolean a(java.lang.String,int) -> a
    int a(android.net.NetworkInfo) -> a
    java.lang.String a(android.telephony.TelephonyManager) -> a
    boolean a(org.apache.http.HttpResponse) -> a
    java.lang.String[] a(org.json.JSONObject) -> a
    java.lang.String b() -> b
    java.lang.String a(byte[],android.content.Context) -> a
com.aps.m -> com.aps.m:
    java.lang.String a(java.lang.String) -> a
    com.aps.c b(java.lang.String) -> b
com.aps.m$1 -> com.aps.m$1:
com.aps.m$a -> com.aps.m$a:
    com.aps.c a -> a
    java.lang.String b -> b
    void characters(char[],int,int) -> characters
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
com.aps.m$b -> com.aps.m$b:
    java.lang.String a -> a
    boolean b -> b
    void characters(char[],int,int) -> characters
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
com.aps.n -> com.aps.n:
    java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object[]) -> a
com.aps.o -> com.aps.o:
    java.lang.String a -> a
    short b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    byte[] A -> A
    byte[] a() -> a
    byte[] a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(java.lang.String,int) -> a
    void b() -> b
com.aps.p -> com.aps.p:
    java.util.List a -> a
    com.aps.g b -> b
    int c -> c
    com.aps.p a(java.io.File,int,long) -> a
    java.util.Map a(java.lang.String) -> a
    java.io.OutputStream a(java.lang.String,java.util.Map) -> a
    void b(java.lang.String,java.util.Map) -> b
    java.util.Map a(com.aps.g$c) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
com.aps.p$1 -> com.aps.p$1:
com.aps.p$a -> com.aps.p$a:
    com.aps.g$a a -> a
    boolean b -> b
    void close() -> close
    void flush() -> flush
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
com.aps.q -> com.aps.q:
    com.aps.q a -> a
    java.lang.String a(java.lang.Object,java.lang.String) -> a
    byte[] a(java.lang.String) -> a
    byte[] a(int) -> a
    byte[] b(java.lang.String) -> b
    byte[] b(int) -> b
    byte[] a(long) -> a
com.aps.r -> com.aps.r:
    java.io.InputStream a -> a
    java.nio.charset.Charset b -> b
    byte[] c -> c
    int d -> d
    int e -> e
    void close() -> close
    java.lang.String a() -> a
    void b() -> b
    java.nio.charset.Charset a(com.aps.r) -> a
com.aps.r$1 -> com.aps.r$1:
    com.aps.r a -> a
    java.lang.String toString() -> toString
com.aps.s -> com.aps.s:
    java.nio.charset.Charset a -> a
    java.nio.charset.Charset b -> b
    void a(java.io.File) -> a
    void a(java.io.Closeable) -> a
com.aps.t -> com.aps.t:
    void a(java.lang.Object[]) -> a
    void a(android.content.Context,java.lang.String) -> a
    void a(java.lang.Throwable) -> a
    boolean a(com.aps.c) -> a
    int a(int) -> a
    java.lang.String[] a(android.telephony.TelephonyManager) -> a
    int a(android.telephony.CellLocation,android.content.Context) -> a
    long a() -> a
    boolean a(android.content.Context) -> a
    float a(double[]) -> a
    java.lang.Object b(android.content.Context,java.lang.String) -> b
    void a(org.apache.http.params.HttpParams,int) -> a
    int b() -> b
    byte[] a(byte[]) -> a
    android.net.NetworkInfo b(android.content.Context) -> b
com.aps.u -> com.aps.u:
    double[][] a -> a
    double[] a(double,double) -> a
    double a(double,double,double) -> a
com.aps.v -> com.aps.v:
    byte f -> f
    short a -> a
    int b -> b
    byte c -> c
    byte d -> d
    java.util.ArrayList e -> e
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.aps.w -> com.aps.w:
    boolean a -> a
    java.lang.String b -> b
    boolean c -> c
    double d -> d
    double e -> e
    void d() -> d
    boolean a() -> a
    double b() -> b
    double c() -> c
com.aps.x -> com.aps.x:
    short a -> a
    int b -> b
    com.aps.z c -> c
    com.aps.v d -> d
    com.aps.ag e -> e
    com.aps.ac f -> f
com.aps.y -> com.aps.y:
    boolean a -> a
    boolean b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    java.lang.Object i -> i
    com.aps.y j -> j
    boolean k -> k
    boolean l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    long q -> q
    android.content.Context r -> r
    android.location.LocationManager s -> s
    com.aps.ai t -> t
    com.aps.aw u -> u
    com.aps.bd v -> v
    com.aps.af w -> w
    com.aps.bc x -> x
    com.aps.av y -> y
    com.aps.ab z -> z
    java.lang.Thread A -> A
    android.os.Looper B -> B
    com.aps.at C -> C
    android.location.Location D -> D
    com.aps.as E -> E
    android.os.Handler F -> F
    com.aps.au G -> G
    android.location.LocationListener H -> H
    android.content.BroadcastReceiver I -> I
    android.location.GpsStatus J -> J
    int K -> K
    int L -> L
    java.util.HashMap M -> M
    int N -> N
    int O -> O
    float P -> P
    float Q -> Q
    float R -> R
    float S -> S
    int T -> T
    int U -> U
    int V -> V
    int W -> W
    int X -> X
    int Y -> Y
    int Z -> Z
    com.aps.y a(android.content.Context) -> a
    void a(int) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    com.aps.ae d() -> d
    void a(com.aps.ae,java.lang.String) -> a
    boolean e() -> e
    int f() -> f
    void n() -> n
    int a(java.util.HashMap) -> a
    double[] a(java.util.List) -> a
    void a(com.aps.y) -> a
    int g() -> g
    int h() -> h
    int i() -> i
    int j() -> j
    int k() -> k
    com.aps.av b(com.aps.y) -> b
    long a(com.aps.y,long) -> a
    android.location.Location a(com.aps.y,android.location.Location) -> a
    boolean c(com.aps.y) -> c
    void a(com.aps.y,android.location.Location,int,long) -> a
    void a(com.aps.y,java.lang.String) -> a
    android.os.Looper a(com.aps.y,android.os.Looper) -> a
    com.aps.as a(com.aps.y,com.aps.as) -> a
    com.aps.as d(com.aps.y) -> d
    android.location.LocationManager e(com.aps.y) -> e
    android.os.Handler a(com.aps.y,android.os.Handler) -> a
    int l() -> l
    android.location.LocationListener f(com.aps.y) -> f
    android.location.Location g(com.aps.y) -> g
    int h(com.aps.y) -> h
    android.location.GpsStatus i(com.aps.y) -> i
    android.location.GpsStatus a(com.aps.y,android.location.GpsStatus) -> a
    int a(com.aps.y,int) -> a
    int b(com.aps.y,int) -> b
    java.util.HashMap a(com.aps.y,java.util.HashMap) -> a
    int m() -> m
    int j(com.aps.y) -> j
    int k(com.aps.y) -> k
    int c(com.aps.y,int) -> c
    com.aps.ai l(com.aps.y) -> l
    int d(com.aps.y,int) -> d
    java.util.HashMap m(com.aps.y) -> m
    int b(com.aps.y,java.util.HashMap) -> b
    android.os.Handler n(com.aps.y) -> n
    int e(com.aps.y,int) -> e
    int o(com.aps.y) -> o
    int a(com.aps.y,com.aps.w,int) -> a
    int p(com.aps.y) -> p
    java.lang.String b(com.aps.y,java.lang.String) -> b
com.aps.z -> com.aps.z:
    byte k -> k
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    short f -> f
    byte g -> g
    byte h -> h
    long i -> i
    long j -> j
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.autonavi.amap.mapcore.BaseMapCallImplement -> com.autonavi.amap.mapcore.BaseMapCallImplement:
    java.util.ArrayList baseMapGrids -> baseMapGrids
    java.util.ArrayList bldMapGrids -> bldMapGrids
    java.util.ArrayList bmpbmMapGirds -> bmpbmMapGirds
    java.util.ArrayList vectmcMapGirds -> vectmcMapGirds
    java.util.ArrayList stiMapGirds -> stiMapGirds
    java.util.ArrayList mapModels -> mapModels
    java.util.ArrayList screenGirds -> screenGirds
    com.autonavi.amap.mapcore.ConnectionManager connectionManager -> connectionManager
    com.autonavi.amap.mapcore.d tileProcessCtrl -> tileProcessCtrl
    com.autonavi.amap.mapcore.c connectionPool -> connectionPool
    void destory() -> destory
    void OnMapDataRequired(com.autonavi.amap.mapcore.MapCore,int,java.lang.String[]) -> OnMapDataRequired
    java.util.ArrayList getScreenGridList(int) -> getScreenGridList
    boolean isGridsInScreen(java.util.ArrayList,int) -> isGridsInScreen
    boolean isGridInList(com.autonavi.amap.mapcore.MapSourceGridData,java.util.ArrayList) -> isGridInList
    void proccessRequiredData(com.autonavi.amap.mapcore.MapCore,java.util.ArrayList,int) -> proccessRequiredData
    void sendMapDataRequest(com.autonavi.amap.mapcore.MapCore,java.util.ArrayList,int) -> sendMapDataRequest
    void OnMapSurfaceCreate(com.autonavi.amap.mapcore.MapCore) -> OnMapSurfaceCreate
    void onPause() -> onPause
    void onResume() -> onResume
    void OnMapDestory(com.autonavi.amap.mapcore.MapCore) -> OnMapDestory
    byte[] OnMapCharsWidthsRequired(com.autonavi.amap.mapcore.MapCore,int[],int,int) -> OnMapCharsWidthsRequired
    void OnMapLabelsRequired(com.autonavi.amap.mapcore.MapCore,int[],int) -> OnMapLabelsRequired
com.autonavi.amap.mapcore.ConnectionManager -> com.autonavi.amap.mapcore.ConnectionManager:
    com.autonavi.amap.mapcore.c connectionPool -> connectionPool
    int sleepTime -> sleepTime
    boolean threadFlag -> threadFlag
    int getTaskCount() -> getTaskCount
    void addConntionTask(com.autonavi.amap.mapcore.MapLoader) -> addConntionTask
    void insertConntionTask(com.autonavi.amap.mapcore.MapLoader) -> insertConntionTask
    void run() -> run
    boolean isEmptyTask() -> isEmptyTask
    void finalize() -> finalize
com.autonavi.amap.mapcore.Convert -> com.autonavi.amap.mapcore.Convert:
    int getInt(byte[],int) -> getInt
    short getShort(byte[],int) -> getShort
    int getUShort(byte[],int) -> getUShort
    boolean getBit(byte,int) -> getBit
    byte[] copyString(byte[],int,int) -> copyString
    byte[] covertBytes(byte) -> covertBytes
    byte[] convertInt(int) -> convertInt
    int getNum(byte,int,int) -> getNum
    int getNum(short,int,int) -> getNum
    byte[] convertShort(int) -> convertShort
    void writeInt(byte[],int,int) -> writeInt
    void writeShort(byte[],int,short) -> writeShort
    void moveArray(byte[],int,byte[],int,int) -> moveArray
    java.lang.String getString(byte[],int,int) -> getString
    byte[] getSubBytes(byte[],int,int) -> getSubBytes
    byte[] get1BString(java.lang.String) -> get1BString
    byte[] get2BString(java.lang.String) -> get2BString
    double convertDouble(byte[],int) -> convertDouble
    byte[] getDouble(double) -> getDouble
    void convert1bString(byte[],int,com.autonavi.amap.mapcore.a) -> convert1bString
    void convert2bString(byte[],int,com.autonavi.amap.mapcore.a) -> convert2bString
    java.lang.String bytesToHexString(byte[]) -> bytesToHexString
com.autonavi.amap.mapcore.DPoint -> com.autonavi.amap.mapcore.DPoint:
    double x -> x
    double y -> y
com.autonavi.amap.mapcore.ERROR_CODE -> com.autonavi.amap.mapcore.ERROR_CODE:
    int CONN_CREATE_FALSE -> CONN_CREATE_FALSE
    int CONN_ERROR -> CONN_ERROR
    int ERROR_NONE -> ERROR_NONE
com.autonavi.amap.mapcore.FPoint -> com.autonavi.amap.mapcore.FPoint:
    float x -> x
    float y -> y
com.autonavi.amap.mapcore.IBaseMapCallback -> com.autonavi.amap.mapcore.IBaseMapCallback:
    android.content.Context getContext() -> getContext
    boolean isMapEngineValid() -> isMapEngineValid
    void OnMapLoaderError(int) -> OnMapLoaderError
    java.lang.String getMapSvrAddress() -> getMapSvrAddress
com.autonavi.amap.mapcore.IMapCallback -> com.autonavi.amap.mapcore.IMapCallback:
    void OnMapSurfaceCreate(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore) -> OnMapSurfaceCreate
    void OnMapSurfaceRenderer(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore,int) -> OnMapSurfaceRenderer
    void OnMapSufaceChanged(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore,int,int) -> OnMapSufaceChanged
    void OnMapProcessEvent(com.autonavi.amap.mapcore.MapCore) -> OnMapProcessEvent
    void OnMapDestory(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore) -> OnMapDestory
    void OnMapDataRequired(com.autonavi.amap.mapcore.MapCore,int,java.lang.String[]) -> OnMapDataRequired
    void OnMapLabelsRequired(com.autonavi.amap.mapcore.MapCore,int[],int) -> OnMapLabelsRequired
    void OnMapReferencechanged(com.autonavi.amap.mapcore.MapCore,java.lang.String,java.lang.String) -> OnMapReferencechanged
    byte[] OnMapCharsWidthsRequired(com.autonavi.amap.mapcore.MapCore,int[],int,int) -> OnMapCharsWidthsRequired
    void onSetParameter(com.autonavi.amap.mapcore.MapCore) -> onSetParameter
com.autonavi.amap.mapcore.IPoint -> com.autonavi.amap.mapcore.IPoint:
    int x -> x
    int y -> y
    java.lang.Object clone() -> clone
com.autonavi.amap.mapcore.MapCore -> com.autonavi.amap.mapcore.MapCore:
    int TEXTURE_ICON -> TEXTURE_ICON
    int TEXTURE_BACKGROUND -> TEXTURE_BACKGROUND
    int TEXTURE_ROADARROW -> TEXTURE_ROADARROW
    int TEXTURE_ROADROUND -> TEXTURE_ROADROUND
    int TEXTURE_TMC_RED -> TEXTURE_TMC_RED
    int TEXTURE_TMC_YELLOW -> TEXTURE_TMC_YELLOW
    int TEXTURE_TMC_GREEN -> TEXTURE_TMC_GREEN
    int TEXTURE_RAILWAY -> TEXTURE_RAILWAY
    int AM_DATA_BASEMAP -> AM_DATA_BASEMAP
    int AM_DATA_GEO_BUILDING -> AM_DATA_GEO_BUILDING
    int AM_DATA_BMP_BASEMAP -> AM_DATA_BMP_BASEMAP
    int AM_DATA_SATELLITE -> AM_DATA_SATELLITE
    int AM_DATA_VEC_TMC -> AM_DATA_VEC_TMC
    int AM_DATA_SCREEN -> AM_DATA_SCREEN
    int AM_DATA_MODEL -> AM_DATA_MODEL
    int MAPRENDER_ENTER -> MAPRENDER_ENTER
    int MAPRENDER_BASEMAPBEGIN -> MAPRENDER_BASEMAPBEGIN
    int MAPRENDER_BUILDINGBEGIN -> MAPRENDER_BUILDINGBEGIN
    int MAPRENDER_LABELSBEGIN -> MAPRENDER_LABELSBEGIN
    int MAPRENDER_RENDEROVER -> MAPRENDER_RENDEROVER
    int MAPRENDER_NOMORENEEDRENDER -> MAPRENDER_NOMORENEEDRENDER
    java.lang.Object mut_lock -> mut_lock
    android.view.View view -> view
    com.autonavi.amap.mapcore.IMapCallback mMapcallback -> mMapcallback
    int native_instance -> native_instance
    javax.microedition.khronos.opengles.GL10 mGL -> mGL
    void setGL(javax.microedition.khronos.opengles.GL10) -> setGL
    boolean isMapEngineValid() -> isMapEngineValid
    void setMapCallback(com.autonavi.amap.mapcore.IMapCallback) -> setMapCallback
    void surfaceCreate(javax.microedition.khronos.opengles.GL10) -> surfaceCreate
    byte[] OnMapCharsWidthsRequired(int[],int,int) -> OnMapCharsWidthsRequired
    void surfaceChange(javax.microedition.khronos.opengles.GL10,int,int) -> surfaceChange
    void drawFrame(javax.microedition.khronos.opengles.GL10) -> drawFrame
    void setStyleData(byte[],int) -> setStyleData
    void setInternaltexture(byte[],int) -> setInternaltexture
    int getInstanceHandle() -> getInstanceHandle
    com.autonavi.amap.mapcore.MapProjection getMapstate() -> getMapstate
    void setMapstate(com.autonavi.amap.mapcore.MapProjection) -> setMapstate
    void setParameter(int,int,int,int,int) -> setParameter
    void putMapData(byte[],int,int,int) -> putMapData
    void putCharbitmap(int,byte[]) -> putCharbitmap
    void OnMapSurfaceCreate() -> OnMapSurfaceCreate
    void OnMapSurfaceRenderer(int) -> OnMapSurfaceRenderer
    void OnMapSufaceChanged(int,int) -> OnMapSufaceChanged
    void OnMapProcessEvent() -> OnMapProcessEvent
    void OnMapDestory() -> OnMapDestory
    void OnMapDataRequired(int,java.lang.String[]) -> OnMapDataRequired
    void OnMapLabelsRequired(int[],int) -> OnMapLabelsRequired
    void OnMapReferencechanged(java.lang.String,java.lang.String) -> OnMapReferencechanged
    void destroy() -> destroy
    int nativeNewInstance(java.lang.String) -> nativeNewInstance
    void nativeDestroy(int,com.autonavi.amap.mapcore.MapCore) -> nativeDestroy
    void nativeSetStyleData(int,byte[],int) -> nativeSetStyleData
    void nativeSetInternaltexture(int,byte[],int) -> nativeSetInternaltexture
    void nativeSurfaceCreate(int,com.autonavi.amap.mapcore.MapCore) -> nativeSurfaceCreate
    void nativeSurfaceChange(int,com.autonavi.amap.mapcore.MapCore,int,int) -> nativeSurfaceChange
    void nativeSurfaceRenderMap(int,com.autonavi.amap.mapcore.MapCore) -> nativeSurfaceRenderMap
    void nativeSetMapstate(int,int) -> nativeSetMapstate
    int nativeGetMapstate(int) -> nativeGetMapstate
    void nativeSetparameter(int,int,int,int,int,int) -> nativeSetparameter
    void nativePutMapdata(int,int,byte[]) -> nativePutMapdata
    void nativePutCharbitmap(int,int,byte[]) -> nativePutCharbitmap
com.autonavi.amap.mapcore.MapLoader -> com.autonavi.amap.mapcore.MapLoader:
    com.autonavi.amap.mapcore.BaseMapCallImplement mMapCallback -> mMapCallback
    com.autonavi.amap.mapcore.MapCore mMapCore -> mMapCore
    java.util.ArrayList mapTiles -> mapTiles
    boolean mCanceled -> mCanceled
    long createtime -> createtime
    byte[] recievedDataBuffer -> recievedDataBuffer
    int recievedDataSize -> recievedDataSize
    int nextImgDataLength -> nextImgDataLength
    boolean recievedHeader -> recievedHeader
    int datasource -> datasource
    void destory() -> destory
    java.lang.String getGridParma() -> getGridParma
    void OnException(int) -> OnException
    void doRequest() -> doRequest
    boolean isRequestValid() -> isRequestValid
    void onConnectionError(com.autonavi.amap.mapcore.MapLoader,int,java.lang.String) -> onConnectionError
    void onConnectionOpened(com.autonavi.amap.mapcore.MapLoader) -> onConnectionOpened
    void addReuqestTiles(com.autonavi.amap.mapcore.MapSourceGridData) -> addReuqestTiles
    void onConnectionOver(com.autonavi.amap.mapcore.MapLoader) -> onConnectionOver
    void onConnectionRecieveData(com.autonavi.amap.mapcore.MapLoader,int,byte[],int) -> onConnectionRecieveData
    void processRecivedData() -> processRecivedData
    void processRecivedTileData(byte[],int,int) -> processRecivedTileData
    void processRecivedTileDataBmp(byte[],int,int) -> processRecivedTileDataBmp
    void processRecivedTileDataVTmc(byte[],int,int) -> processRecivedTileDataVTmc
    void processRecivedModels(byte[],int,int) -> processRecivedModels
com.autonavi.amap.mapcore.MapProjection -> com.autonavi.amap.mapcore.MapProjection:
    int native_instance -> native_instance
    boolean m_bNewInstance -> m_bNewInstance
    void finalize() -> finalize
    int getInstanceHandle() -> getInstanceHandle
    void getBound(com.autonavi.amap.mapcore.IPoint) -> getBound
    void setGeoCenter(int,int) -> setGeoCenter
    void getGeoCenter(com.autonavi.amap.mapcore.IPoint) -> getGeoCenter
    void setMapCenter(float,float) -> setMapCenter
    void getMapCenter(com.autonavi.amap.mapcore.FPoint) -> getMapCenter
    void setMapZoomer(float) -> setMapZoomer
    float getMapZoomer() -> getMapZoomer
    void setMapAngle(float) -> setMapAngle
    float getMapAngle() -> getMapAngle
    void setCameraHeaderAngle(float) -> setCameraHeaderAngle
    float getCameraHeaderAngle() -> getCameraHeaderAngle
    void geo2Map(int,int,com.autonavi.amap.mapcore.FPoint) -> geo2Map
    void map2Win(float,float,com.autonavi.amap.mapcore.IPoint) -> map2Win
    void win2Map(int,int,com.autonavi.amap.mapcore.FPoint) -> win2Map
    float getMapLenWithWinbyY(int,int) -> getMapLenWithWinbyY
    float getMapLenWithWin(int) -> getMapLenWithWin
    float getMapLenWithGeo(int) -> getMapLenWithGeo
    void recalculate() -> recalculate
    void map2Geo(float,float,com.autonavi.amap.mapcore.IPoint) -> map2Geo
    void setCenterWithMap(float,float) -> setCenterWithMap
    void getCenterMap(com.autonavi.amap.mapcore.FPoint) -> getCenterMap
    void lonlat2Geo(double,double,com.autonavi.amap.mapcore.IPoint) -> lonlat2Geo
    void geo2LonLat(int,int,com.autonavi.amap.mapcore.DPoint) -> geo2LonLat
    int nativeCreate(int) -> nativeCreate
    void nativeDestroy(int) -> nativeDestroy
    void nativeGetBound(int,com.autonavi.amap.mapcore.IPoint) -> nativeGetBound
    void nativeSetGeoCenter(int,int,int) -> nativeSetGeoCenter
    void nativeGetGeoCenter(int,com.autonavi.amap.mapcore.IPoint) -> nativeGetGeoCenter
    void nativeSetMapCenter(int,float,float) -> nativeSetMapCenter
    void nativeGetMapCenter(int,com.autonavi.amap.mapcore.FPoint) -> nativeGetMapCenter
    void nativeSetMapZoomer(int,float) -> nativeSetMapZoomer
    float nativeGetMapZoomer(int) -> nativeGetMapZoomer
    void nativeSetMapAngle(int,float) -> nativeSetMapAngle
    float nativeGetMapAngle(int) -> nativeGetMapAngle
    void nativeSetCameraHeaderAngle(int,float) -> nativeSetCameraHeaderAngle
    float nativeGetCameraHeaderAngle(int) -> nativeGetCameraHeaderAngle
    void nativeGeo2Map(int,int,int,com.autonavi.amap.mapcore.FPoint) -> nativeGeo2Map
    void nativeMap2Win(int,float,float,com.autonavi.amap.mapcore.IPoint) -> nativeMap2Win
    void nativeWin2Map(int,int,int,com.autonavi.amap.mapcore.FPoint) -> nativeWin2Map
    float nativeGetMapLenWithWinbyY(int,int,int) -> nativeGetMapLenWithWinbyY
    float nativeGetMapLenWithWin(int,int) -> nativeGetMapLenWithWin
    void nativeMap2Geo(int,float,float,com.autonavi.amap.mapcore.IPoint) -> nativeMap2Geo
    void nativeSetCenterWithMap(int,float,float) -> nativeSetCenterWithMap
    void nativeGetCenterMap(int,com.autonavi.amap.mapcore.FPoint) -> nativeGetCenterMap
    void nativeLonLat2Geo(double,double,com.autonavi.amap.mapcore.IPoint) -> nativeLonLat2Geo
    void nativeGeo2LonLat(int,int,com.autonavi.amap.mapcore.DPoint) -> nativeGeo2LonLat
    float nativeGetMapLenWithGeo(int,int) -> nativeGetMapLenWithGeo
    void nativeRecalculate(int) -> nativeRecalculate
com.autonavi.amap.mapcore.MapSourceGridData -> com.autonavi.amap.mapcore.MapSourceGridData:
    java.lang.String gridName -> gridName
    int sourceType -> sourceType
    java.lang.String getKeyGridName() -> getKeyGridName
    int getSourceType() -> getSourceType
    java.lang.String getGridName() -> getGridName
com.autonavi.amap.mapcore.TextTextureGenerator -> com.autonavi.amap.mapcore.TextTextureGenerator:
    android.graphics.Paint paint -> paint
    int TEXT_FONTSIZE -> TEXT_FONTSIZE
    int AN_LABEL_MAXCHARINLINE -> AN_LABEL_MAXCHARINLINE
    int AN_LABEL_MULITYLINE_SPAN -> AN_LABEL_MULITYLINE_SPAN
    float base_line -> base_line
    float start_x -> start_x
    int ALIGNCENTER -> ALIGNCENTER
    int ALIGNLEFT -> ALIGNLEFT
    int ALIGNRIGHT -> ALIGNRIGHT
    int GetNearstSize2N(int) -> GetNearstSize2N
    android.graphics.Paint newPaint(java.lang.String,int,int) -> newPaint
    byte[] getTextPixelBuffer(int) -> getTextPixelBuffer
    byte[] getPixels(android.graphics.Bitmap) -> getPixels
    byte[] getCharsWidths(int[]) -> getCharsWidths
    byte[] getCharWidths() -> getCharWidths
com.autonavi.amap.mapcore.VTMCDataCache -> com.autonavi.amap.mapcore.VTMCDataCache:
    int MAXSIZE -> MAXSIZE
    int MAX_EXPIREDTIME -> MAX_EXPIREDTIME
    java.util.Hashtable vtmcHs -> vtmcHs
    java.util.ArrayList vtmcList -> vtmcList
    com.autonavi.amap.mapcore.VTMCDataCache instance -> instance
    com.autonavi.amap.mapcore.VTMCDataCache getInstance() -> getInstance
    void reset() -> reset
    com.autonavi.amap.mapcore.e GetData(java.lang.String) -> GetData
    void putData(java.lang.String,byte[]) -> putData
com.autonavi.amap.mapcore.a -> com.autonavi.amap.mapcore.a:
    int a -> a
    java.lang.String b -> b
com.autonavi.amap.mapcore.b -> com.autonavi.amap.mapcore.b:
com.autonavi.amap.mapcore.c -> com.autonavi.amap.mapcore.c:
    int a -> a
    void a(java.lang.Object) -> a
    java.lang.Object a() -> a
    boolean b() -> b
    void clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.autonavi.amap.mapcore.d -> com.autonavi.amap.mapcore.d:
    java.util.Hashtable a -> a
    void a(java.lang.String) -> a
    boolean b(java.lang.String) -> b
    void c(java.lang.String) -> c
com.autonavi.amap.mapcore.e -> com.autonavi.amap.mapcore.e:
    byte[] a -> a
    java.lang.String b -> b
    int c -> c
com.dahuatech.app.AppConfig -> com.dahuatech.app.AppConfig:
    java.lang.String CONF_APP_UNIQUEID -> CONF_APP_UNIQUEID
    java.lang.String CONF_COOKIE -> CONF_COOKIE
    java.lang.String CONF_LOAD_IMAGE -> CONF_LOAD_IMAGE
    java.lang.String CONF_SCROLL -> CONF_SCROLL
    java.lang.String CONF_HTTPS_LOGIN -> CONF_HTTPS_LOGIN
    java.lang.String CONF_VOICE -> CONF_VOICE
    java.lang.String CONF_CHECKUP -> CONF_CHECKUP
    java.lang.String SAVE_IMAGE_PATH -> SAVE_IMAGE_PATH
    java.lang.String DEFAULT_SAVE_IMAGE_PATH -> DEFAULT_SAVE_IMAGE_PATH
    android.content.Context mContext -> a
    com.dahuatech.app.AppConfig appConfig -> b
    com.dahuatech.app.AppConfig getAppConfig(android.content.Context) -> getAppConfig
    android.content.SharedPreferences getSharedPreferences(android.content.Context) -> getSharedPreferences
    boolean isLoadImage(android.content.Context) -> isLoadImage
    java.lang.String getCookie() -> getCookie
    java.lang.String get(java.lang.String) -> get
    void set(java.util.Properties) -> set
    void set(java.lang.String,java.lang.String) -> set
    void remove(java.lang.String[]) -> remove
    java.util.Properties get() -> get
    void setProps(java.util.Properties) -> a
com.dahuatech.app.AppContext -> com.dahuatech.app.AppContext:
    java.lang.String GUIDEANDWELCOME_CONFIG_FILE -> GUIDEANDWELCOME_CONFIG_FILE
    java.lang.String IS_FIRST_COUNT_KEY -> IS_FIRST_COUNT_KEY
    long LOGINACTIVITY_SESSION -> LOGINACTIVITY_SESSION
    java.lang.String LOGINACTIVITY_CONFIG_FILE -> LOGINACTIVITY_CONFIG_FILE
    java.lang.String USER_NAME_KEY -> USER_NAME_KEY
    java.lang.String PASSWORD_KEY -> PASSWORD_KEY
    java.lang.String FITEMNAME_KEY -> FITEMNAME_KEY
    java.lang.String ACCURATE_EXPIRES_TIME -> ACCURATE_EXPIRES_TIME
    java.lang.String FNOTICE_ALARM_KEY -> FNOTICE_ALARM_KEY
    java.lang.String FNOTICE_LOGIN_IS_SHOW_KEY -> FNOTICE_LOGIN_IS_SHOW_KEY
    java.lang.String FLOGIN_IS_FIRST_KEY -> FLOGIN_IS_FIRST_KEY
    java.lang.String FITEMNUMBER_KEY -> FITEMNUMBER_KEY
    java.lang.String SETTINGACTIVITY_CONFIG_FILE -> SETTINGACTIVITY_CONFIG_FILE
    java.lang.String IS_NOTICE_KEY -> IS_NOTICE_KEY
    java.lang.String IS_GESTURES_KEY -> IS_GESTURES_KEY
    java.lang.String IS_EXPENSE_JURNEY_KEY -> IS_EXPENSE_JURNEY_KEY
    java.lang.String IS_EXPENSE_ADDRESS_KEY -> IS_EXPENSE_ADDRESS_KEY
    java.lang.String IS_EXPENSE_TIME_KEY -> IS_EXPENSE_TIME_KEY
    java.lang.String GESTURES_PASSWORD_SOURCE_KEY -> GESTURES_PASSWORD_SOURCE_KEY
    java.lang.String TASKLISTACTIVITY_CONFIG_FILE -> TASKLISTACTIVITY_CONFIG_FILE
    java.lang.String FSTATUS_KEY -> FSTATUS_KEY
    java.lang.String FTOTALCOUNT_KEY -> FTOTALCOUNT_KEY
    java.lang.String PAGE_SIZE -> PAGE_SIZE
    java.lang.String ADCHECKINACTIVITY_CONFIG_FILE -> ADCHECKINACTIVITY_CONFIG_FILE
    java.lang.String AD_AMAP_ADDRESS_KEY -> AD_AMAP_ADDRESS_KEY
    java.lang.String AD_AMAP_ADDRESS_CACHE_KEY -> AD_AMAP_ADDRESS_CACHE_KEY
    java.lang.String FMENUID_KEY -> FMENUID_KEY
    java.lang.String FSYSTEMTYPE_KEY -> FSYSTEMTYPE_KEY
    java.lang.String FBILLID_KEY -> FBILLID_KEY
    java.lang.String FCLASSTYPEID_KEY -> FCLASSTYPEID_KEY
    java.lang.String FEXPENSEPRIVATE_COSTTYPE_KEY -> FEXPENSEPRIVATE_COSTTYPE_KEY
    java.lang.String TA_APPROVE_FSTATUS -> TA_APPROVE_FSTATUS
    int ACTIVITY_WORKFLOW -> ACTIVITY_WORKFLOW
    int ACTIVITY_WORKFLOWBEEN -> ACTIVITY_WORKFLOWBEEN
    java.lang.String WORKFLOW_FSYSTEMTYPE_KEY -> WORKFLOW_FSYSTEMTYPE_KEY
    java.lang.String WORKFLOW_FCLASSTYPEID_KEY -> WORKFLOW_FCLASSTYPEID_KEY
    java.lang.String WORKFLOW_FBILLID_KEY -> WORKFLOW_FBILLID_KEY
    java.lang.String WORKFLOW_FBILLNAME_KEY -> WORKFLOW_FBILLNAME_KEY
    java.lang.String WORKFLOW_ENGINEERING_KEY -> WORKFLOW_ENGINEERING_KEY
    java.lang.String WORKFLOW_EXPENSEPRIVATE_KEY -> WORKFLOW_EXPENSEPRIVATE_KEY
    java.lang.String WORKFLOW_NEWOFFICE_KEY -> WORKFLOW_NEWOFFICE_KEY
    java.lang.String WORKFLOW_ATTENDANCE_HR_KEY -> WORKFLOW_ATTENDANCE_HR_KEY
    java.lang.String FPLUSCOPY_TYPE_KEY -> FPLUSCOPY_TYPE_KEY
    int FPLUSCOPY_PERSON_KEY -> FPLUSCOPY_PERSON_KEY
    java.lang.String PLUSCOPY_PERSON_LIST -> PLUSCOPY_PERSON_LIST
    java.lang.String BROADCAST_WAITTASKCOUNT_KEY -> BROADCAST_WAITTASKCOUNT_KEY
    java.lang.String EXPENSE_FLOW_DETAIL_STATUS -> EXPENSE_FLOW_DETAIL_STATUS
    java.lang.String EXPENSE_FLOW_DETAIL_EXPENDTIME -> EXPENSE_FLOW_DETAIL_EXPENDTIME
    java.lang.String EXPENSE_FLOW_DETAIL_SKIP_SOURCE -> EXPENSE_FLOW_DETAIL_SKIP_SOURCE
    java.lang.String EXPENSE_FLOW_DETAIL_BACK_FID -> EXPENSE_FLOW_DETAIL_BACK_FID
    java.lang.String EXPENSE_FLOW_DETAIL_BACK_FNAME -> EXPENSE_FLOW_DETAIL_BACK_FNAME
    int EXPENSE_FLOW_DETAIL_CLIENT -> EXPENSE_FLOW_DETAIL_CLIENT
    int EXPENSE_FLOW_DETAIL_PROJECT -> EXPENSE_FLOW_DETAIL_PROJECT
    java.lang.String MEETING_DETAIL_FSTATUS -> MEETING_DETAIL_FSTATUS
    java.lang.String MEETING_DETAIL_FORDERID -> MEETING_DETAIL_FORDERID
    java.lang.String MEETING_DETAIL_SELECTEDDATE -> MEETING_DETAIL_SELECTEDDATE
    java.lang.String MEETING_DETAIL_SELECTEDSTART -> MEETING_DETAIL_SELECTEDSTART
    java.lang.String MEETING_DETAIL_SELECTEDEND -> MEETING_DETAIL_SELECTEDEND
    java.lang.String MEETING_DETAIL_ROOM_ID -> MEETING_DETAIL_ROOM_ID
    java.lang.String MEETING_DETAIL_ROOM_NAME -> MEETING_DETAIL_ROOM_NAME
    java.lang.String MEETING_DETAIL_ROOM_IP -> MEETING_DETAIL_ROOM_IP
    java.lang.String MEETING_DETAIL_PERSON_LIST -> MEETING_DETAIL_PERSON_LIST
    java.lang.String MEETING_DETAIL_PERSON_FLAG -> MEETING_DETAIL_PERSON_FLAG
    int MEETING_DETAIL_ROOM -> MEETING_DETAIL_ROOM
    int MEETING_DETAIL_PERSON -> MEETING_DETAIL_PERSON
    int MEETING_DETAIL_MASTER -> MEETING_DETAIL_MASTER
    int MEETING_DETAIL_INFO -> MEETING_DETAIL_INFO
    java.lang.String DEVELOP_HOURS_WEEK_BILLID -> DEVELOP_HOURS_WEEK_BILLID
    java.lang.String DEVELOP_HOURS_WEEK_VALUE -> DEVELOP_HOURS_WEEK_VALUE
    java.lang.String DEVELOP_HOURS_WEEK_DATE -> DEVELOP_HOURS_WEEK_DATE
    java.lang.String DEVELOP_HOURS_LIST_PROJECT_TYPE -> DEVELOP_HOURS_LIST_PROJECT_TYPE
    java.lang.String DEVELOP_HOURS_DETAIL_ACTION_TYPE -> DEVELOP_HOURS_DETAIL_ACTION_TYPE
    java.lang.String DEVELOP_HOURS_DETAIL_ACCESS -> DEVELOP_HOURS_DETAIL_ACCESS
    java.lang.String DEVELOP_HOURS_DETAIL_PASS_WEEKDATE -> DEVELOP_HOURS_DETAIL_PASS_WEEKDATE
    java.lang.String DEVELOP_HOURS_DETAIL_PASS_PROJECTCODE -> DEVELOP_HOURS_DETAIL_PASS_PROJECTCODE
    java.lang.String DEVELOP_HOURS_DETAIL_PASS_PROJECTNAME -> DEVELOP_HOURS_DETAIL_PASS_PROJECTNAME
    java.lang.String DEVELOP_HOURS_DETAIL_PASS_TYPEID -> DEVELOP_HOURS_DETAIL_PASS_TYPEID
    int DEVELOP_HOURS_DETAIL_PROJECT -> DEVELOP_HOURS_DETAIL_PROJECT
    int DEVELOP_HOURS_DETAIL_TYPE -> DEVELOP_HOURS_DETAIL_TYPE
    int DEVELOP_HOURS_DETAIL -> DEVELOP_HOURS_DETAIL
    java.lang.String DEVELOP_HOURS_DETAIL_BACK_FPROJECTCODE -> DEVELOP_HOURS_DETAIL_BACK_FPROJECTCODE
    java.lang.String DEVELOP_HOURS_DETAIL_BACK_FPROJECTNAME -> DEVELOP_HOURS_DETAIL_BACK_FPROJECTNAME
    java.lang.String DEVELOP_HOURS_DETAIL_BACK_FTYPEID -> DEVELOP_HOURS_DETAIL_BACK_FTYPEID
    java.lang.String DEVELOP_HOURS_DETAIL_BACK_FTYPENAME -> DEVELOP_HOURS_DETAIL_BACK_FTYPENAME
    java.lang.String DEVELOP_HOURS_CONFIRM_PASS_PROJECTNUMBER -> DEVELOP_HOURS_CONFIRM_PASS_PROJECTNUMBER
    java.lang.String DEVELOP_HOURS_CONFIRM_PASS_WEEKINDEX -> DEVELOP_HOURS_CONFIRM_PASS_WEEKINDEX
    java.lang.String DEVELOP_HOURS_CONFIRM_PASS_YEAR -> DEVELOP_HOURS_CONFIRM_PASS_YEAR
    java.lang.String DEVELOP_HOURS_CONFIRM_PASS_PROJECTCODE -> DEVELOP_HOURS_CONFIRM_PASS_PROJECTCODE
    java.lang.String DEVELOP_HOURS_CONFIRM_PASS_CONFIRMNUMBER -> DEVELOP_HOURS_CONFIRM_PASS_CONFIRMNUMBER
    java.lang.String CONTACTS_SOURCE_TYPE -> CONTACTS_SOURCE_TYPE
    java.lang.String CONTACTS_RETURN_VALUE -> CONTACTS_RETURN_VALUE
    int CONTACTS_SMS_SEARCH -> CONTACTS_SMS_SEARCH
    java.lang.String MARKET_WORKFLOW_TYPE -> MARKET_WORKFLOW_TYPE
    int NETTYPE_WIFI -> NETTYPE_WIFI
    int NETTYPE_CMWAP -> NETTYPE_CMWAP
    int NETTYPE_CMNET -> NETTYPE_CMNET
    java.util.Hashtable memCacheRegion -> a
    boolean login -> b
    int loginUid -> c
    com.dahuatech.app.AppContext mInstance -> d
    android.content.Context mContext -> e
    boolean containsProperty(java.lang.String) -> containsProperty
    void setProperties(java.util.Properties) -> setProperties
    java.util.Properties getProperties() -> getProperties
    void setProperty(java.lang.String,java.lang.String) -> setProperty
    java.lang.String getProperty(java.lang.String) -> getProperty
    void removeProperty(java.lang.String[]) -> removeProperty
    com.dahuatech.app.AppContext getInstance() -> getInstance
    android.content.Context getContext() -> getContext
    void onCreate() -> onCreate
    void onTerminate() -> onTerminate
    android.content.pm.PackageInfo getPackageInfo() -> getPackageInfo
    java.lang.String getAppId() -> getAppId
    boolean isLogin() -> isLogin
    void setLogin(boolean) -> setLogin
    int getLoginUid() -> getLoginUid
    void Logout() -> Logout
    void clearLoginSP(android.content.SharedPreferences) -> a
    void clearSettingSP(android.content.SharedPreferences) -> b
    com.dahuatech.app.bean.UserInfo getLoginInfo() -> getLoginInfo
    void saveLoginInfo(com.dahuatech.app.bean.UserInfo) -> saveLoginInfo
    void clearLoginPwd() -> clearLoginPwd
    void clearSharedPreferences(android.content.SharedPreferences) -> clearSharedPreferences
    boolean isAudioNormal() -> isAudioNormal
    boolean isAppSound() -> isAppSound
    boolean isVoice() -> isVoice
    void setConfigVoice(boolean) -> setConfigVoice
    boolean isNetworkConnected() -> isNetworkConnected
    int getNetworkType() -> getNetworkType
    boolean isMethodsCompat(int) -> isMethodsCompat
    boolean isLoadImage() -> isLoadImage
    void setConfigLoadimage(boolean) -> setConfigLoadimage
    boolean isCheckUp() -> isCheckUp
    void setConfigCheckUp(boolean) -> setConfigCheckUp
    boolean isScroll() -> isScroll
    void setConfigScroll(boolean) -> setConfigScroll
    boolean isHttpsLogin() -> isHttpsLogin
    void setConfigHttpsLogin(boolean) -> setConfigHttpsLogin
    void cleanCookie() -> cleanCookie
    boolean isExistDataCache(java.lang.String) -> a
    boolean isCacheDataFailure(java.lang.String) -> isCacheDataFailure
    void clearAppCache() -> clearAppCache
    int clearCacheFolder(java.io.File,long) -> a
    void setMemCache(java.lang.String,java.lang.Object) -> setMemCache
    java.lang.Object getMemCache(java.lang.String) -> getMemCache
    void setDiskCache(java.lang.String,java.lang.String) -> setDiskCache
    java.lang.String getDiskCache(java.lang.String) -> getDiskCache
    boolean saveObject(java.io.Serializable,java.lang.String) -> saveObject
    java.io.Serializable readObject(java.lang.String) -> readObject
    boolean isHaveUploadCount() -> isHaveUploadCount
com.dahuatech.app.AppContext$1 -> cp:
    com.dahuatech.app.AppContext this$0 -> this$0
com.dahuatech.app.AppException -> com.dahuatech.app.AppException:
    long serialVersionUID -> serialVersionUID
    byte TYPE_NETWORK -> TYPE_NETWORK
    byte TYPE_SOCKET -> TYPE_SOCKET
    byte TYPE_HTTP_CODE -> TYPE_HTTP_CODE
    byte TYPE_HTTP_ERROR -> TYPE_HTTP_ERROR
    byte TYPE_XML -> TYPE_XML
    byte TYPE_IO -> TYPE_IO
    byte TYPE_RUN -> TYPE_RUN
    byte TYPE_JSON -> TYPE_JSON
    byte TYPE_ENCODING -> TYPE_ENCODING
    byte type -> type
    int code -> code
    java.lang.Thread$UncaughtExceptionHandler mDefaultHandler -> mDefaultHandler
    int getCode() -> getCode
    int getType() -> getType
    void saveErrorLog(java.lang.Exception) -> saveErrorLog
    void makeToast(android.content.Context) -> makeToast
    com.dahuatech.app.AppException http(int) -> http
    com.dahuatech.app.AppException http(java.lang.Exception) -> http
    com.dahuatech.app.AppException socket(java.lang.Exception) -> socket
    com.dahuatech.app.AppException io(java.lang.Exception) -> io
    com.dahuatech.app.AppException xml(java.lang.Exception) -> xml
    com.dahuatech.app.AppException json(java.lang.Exception) -> json
    com.dahuatech.app.AppException encode(java.lang.Exception) -> encode
    com.dahuatech.app.AppException network(java.lang.Exception) -> network
    com.dahuatech.app.AppException run(java.lang.Exception) -> run
    com.dahuatech.app.AppException getAppExceptionHandler() -> getAppExceptionHandler
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    java.lang.String getCrashReport(android.content.Context,java.lang.Throwable) -> a
com.dahuatech.app.AppException$1 -> cq:
    com.dahuatech.app.AppException this$0 -> a
    android.content.Context val$context -> b
    java.lang.String val$crashReport -> c
    void run() -> run
com.dahuatech.app.AppExpiration -> com.dahuatech.app.AppExpiration:
    boolean fNotice -> a
    boolean fLoginShowNotice -> b
    java.lang.String fItemNumber -> c
    java.lang.String fItemName -> d
    android.content.SharedPreferences sp -> e
    void onCreate(android.os.Bundle) -> onCreate
com.dahuatech.app.AppGuide -> com.dahuatech.app.AppGuide:
    android.support.v4.view.ViewPager viewPager -> a
    android.widget.ImageView[] dots -> b
    java.util.List views -> c
    int currIndex -> d
    android.view.View view1 -> e
    android.view.View view2 -> f
    android.widget.Button fStart -> g
    int mCount -> h
    android.content.SharedPreferences sp -> i
    void onCreate(android.os.Bundle) -> onCreate
    void initViewPager() -> a
    void initImageView() -> b
    void setCurView(int) -> a
    void setCurDot(int) -> b
    void onClick(android.view.View) -> onClick
    void redirectTo() -> c
    void closeGuide() -> d
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onDestroy() -> onDestroy
    void access$0(com.dahuatech.app.AppGuide,android.widget.Button) -> a
    android.widget.Button access$1(com.dahuatech.app.AppGuide) -> a
    void access$2(com.dahuatech.app.AppGuide) -> b
    void access$3(com.dahuatech.app.AppGuide,int) -> a
com.dahuatech.app.AppGuide$MyOnPageChangeListener -> cr:
    com.dahuatech.app.AppGuide this$0 -> a
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.dahuatech.app.AppGuide$MyViewPagerAdapter -> cs:
    java.util.List mListViews -> b
    com.dahuatech.app.AppGuide this$0 -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    int getCount() -> getCount
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    com.dahuatech.app.AppGuide access$1(com.dahuatech.app.AppGuide$MyViewPagerAdapter) -> a
com.dahuatech.app.AppGuide$MyViewPagerAdapter$1 -> ct:
    com.dahuatech.app.AppGuide$MyViewPagerAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.AppManager -> com.dahuatech.app.AppManager:
    java.util.Stack activityStack -> a
    com.dahuatech.app.AppManager instance -> b
    com.dahuatech.app.AppManager getAppManager() -> getAppManager
    void addActivity(android.app.Activity) -> addActivity
    android.app.Activity currentActivity() -> currentActivity
    void finishActivity() -> finishActivity
    void finishActivity(android.app.Activity) -> finishActivity
    void finishActivity(java.lang.Class) -> finishActivity
    void finishAllActivity() -> finishAllActivity
    void AppExit(android.content.Context) -> AppExit
com.dahuatech.app.AppStart -> com.dahuatech.app.AppStart:
    void onCreate(android.os.Bundle) -> onCreate
com.dahuatech.app.AppUrl -> com.dahuatech.app.AppUrl:
    java.lang.String HOST -> HOST
    java.lang.String HTTP -> HTTP
    java.lang.String HTTPS -> HTTPS
    java.lang.String URL_API_HOST_ANDROID_LYNC_DOWNLOAD -> URL_API_HOST_ANDROID_LYNC_DOWNLOAD
    java.lang.String URL_API_HOST_ANDROID_LOGSRECORD -> URL_API_HOST_ANDROID_LOGSRECORD
    java.lang.String URL_API_HOST_ANDROID_LOGINACTIVITY -> URL_API_HOST_ANDROID_LOGINACTIVITY
    java.lang.String URL_API_HOST_ANDROID_VERIFYVALIDACTIVITY -> URL_API_HOST_ANDROID_VERIFYVALIDACTIVITY
    java.lang.String URL_API_HOST_ANDROID_NOTICESERVICE -> URL_API_HOST_ANDROID_NOTICESERVICE
    java.lang.String URL_API_HOST_ANDROID_SETTINGACTIVITY -> URL_API_HOST_ANDROID_SETTINGACTIVITY
    java.lang.String URL_API_HOST_ANDROID_TASKLISTACTIVITY -> URL_API_HOST_ANDROID_TASKLISTACTIVITY
    java.lang.String URL_API_HOST_ANDROID_ENGINEERINGACTIVITY -> URL_API_HOST_ANDROID_ENGINEERINGACTIVITY
    java.lang.String URL_API_HOST_ANDROID_EXPENSEPRIVATETHEADERACTIVITY -> URL_API_HOST_ANDROID_EXPENSEPRIVATETHEADERACTIVITY
    java.lang.String URL_API_HOST_ANDROID_EXPENSEPRIVATETBODYACTIVITY -> URL_API_HOST_ANDROID_EXPENSEPRIVATETBODYACTIVITY
    java.lang.String URL_API_HOST_ANDROID_EXPENSEPUBLICTHEADERACTIVITY -> URL_API_HOST_ANDROID_EXPENSEPUBLICTHEADERACTIVITY
    java.lang.String URL_API_HOST_ANDROID_EXPENSECOSTTHEADERACTIVITY -> URL_API_HOST_ANDROID_EXPENSECOSTTHEADERACTIVITY
    java.lang.String URL_API_HOST_ANDROID_EXPENSESPECIALTHEADERACTIVITY -> URL_API_HOST_ANDROID_EXPENSESPECIALTHEADERACTIVITY
    java.lang.String URL_API_HOST_ANDROID_EXPENSESPECIALTBODYACTIVITY -> URL_API_HOST_ANDROID_EXPENSESPECIALTBODYACTIVITY
    java.lang.String URL_API_HOST_ANDROID_EXPENSESPECIALTHINGHEADERACTIVITY -> URL_API_HOST_ANDROID_EXPENSESPECIALTHINGHEADERACTIVITY
    java.lang.String URL_API_HOST_ANDROID_EXPENSESPECIALTHINGBODYACTIVITY -> URL_API_HOST_ANDROID_EXPENSESPECIALTHINGBODYACTIVITY
    java.lang.String URL_API_HOST_ANDROID_EXPENSEMARKETPAYTHEADERACTIVITY -> URL_API_HOST_ANDROID_EXPENSEMARKETPAYTHEADERACTIVITY
    java.lang.String URL_API_HOST_ANDROID_EXPENSEMARKETBIDTHEADERACTIVITY -> URL_API_HOST_ANDROID_EXPENSEMARKETBIDTHEADERACTIVITY
    java.lang.String URL_API_HOST_ANDROID_NETWORKPERMISSIONACTIVITY -> URL_API_HOST_ANDROID_NETWORKPERMISSIONACTIVITY
    java.lang.String URL_API_HOST_ANDROID_DEVELOPTESTNETWORKACTIVITY -> URL_API_HOST_ANDROID_DEVELOPTESTNETWORKACTIVITY
    java.lang.String URL_API_HOST_ANDROID_DAHUAASSUMECOSTACTIVITY -> URL_API_HOST_ANDROID_DAHUAASSUMECOSTACTIVITY
    java.lang.String URL_API_HOST_ANDROID_DEVELOPINQUIRYACTIVITY -> URL_API_HOST_ANDROID_DEVELOPINQUIRYACTIVITY
    java.lang.String URL_API_HOST_ANDROID_MEMREQUREACTIVITY -> URL_API_HOST_ANDROID_MEMREQUREACTIVITY
    java.lang.String URL_API_HOST_ANDROID_APPLYOVERTIMEACTIVITY -> URL_API_HOST_ANDROID_APPLYOVERTIMEACTIVITY
    java.lang.String URL_API_HOST_ANDROID_APPLYLEAVEACTIVITY -> URL_API_HOST_ANDROID_APPLYLEAVEACTIVITY
    java.lang.String URL_API_HOST_ANDROID_APPLYRESUMEACTIVITY -> URL_API_HOST_ANDROID_APPLYRESUMEACTIVITY
    java.lang.String URL_API_HOST_ANDROID_EXATTENDANCEACTIVITY -> URL_API_HOST_ANDROID_EXATTENDANCEACTIVITY
    java.lang.String URL_API_HOST_ANDROID_APPLYDAYSOFFACTIVITY -> URL_API_HOST_ANDROID_APPLYDAYSOFFACTIVITY
    java.lang.String URL_API_HOST_ANDROID_APPLYDAYSOFFDEVELOPACTIVITY -> URL_API_HOST_ANDROID_APPLYDAYSOFFDEVELOPACTIVITY
    java.lang.String URL_API_HOST_ANDROID_DOCUMENTAPPROVEACTIVITY -> URL_API_HOST_ANDROID_DOCUMENTAPPROVEACTIVITY
    java.lang.String URL_API_HOST_ANDROID_NEWPRODUCTLIBACTIVITY -> URL_API_HOST_ANDROID_NEWPRODUCTLIBACTIVITY
    java.lang.String URL_API_HOST_ANDROID_SVNPERMISSIONACTIVITY -> URL_API_HOST_ANDROID_SVNPERMISSIONACTIVITY
    java.lang.String URL_API_HOST_ANDROID_DEVELOPTRAVELACTIVITY -> URL_API_HOST_ANDROID_DEVELOPTRAVELACTIVITY
    java.lang.String URL_API_HOST_ANDROID_PURCHASESTOCKACTIVITY -> URL_API_HOST_ANDROID_PURCHASESTOCKACTIVITY
    java.lang.String URL_API_HOST_ANDROID_EMAILOPENACTIVITY -> URL_API_HOST_ANDROID_EMAILOPENACTIVITY
    java.lang.String URL_API_HOST_ANDROID_FIXEDASSETSSPECIALACTIVITY -> URL_API_HOST_ANDROID_FIXEDASSETSSPECIALACTIVITY
    java.lang.String URL_API_HOST_ANDROID_LOWCONSUMABLEACTIVITY -> URL_API_HOST_ANDROID_LOWCONSUMABLEACTIVITY
    java.lang.String URL_API_HOST_ANDROID_TRAINCOMPUTERACTIVITY -> URL_API_HOST_ANDROID_TRAINCOMPUTERACTIVITY
    java.lang.String URL_API_HOST_ANDROID_TRAVELAPPROVALACTIVITY -> URL_API_HOST_ANDROID_TRAVELAPPROVALACTIVITY
    java.lang.String URL_API_HOST_ANDROID_DOORPERMISSIONACTIVITY -> URL_API_HOST_ANDROID_DOORPERMISSIONACTIVITY
    java.lang.String URL_API_HOST_ANDROID_NEWPRODUCTREWORKACTIVITY -> URL_API_HOST_ANDROID_NEWPRODUCTREWORKACTIVITY
    java.lang.String URL_API_HOST_ANDROID_TDBORROWACTIVITY -> URL_API_HOST_ANDROID_TDBORROWACTIVITY
    java.lang.String URL_API_HOST_ANDROID_TDPERMISSIONACTIVITY -> URL_API_HOST_ANDROID_TDPERMISSIONACTIVITY
    java.lang.String URL_API_HOST_ANDROID_PROJECTREADACTIVITY -> URL_API_HOST_ANDROID_PROJECTREADACTIVITY
    java.lang.String URL_API_HOST_ANDROID_FEDESTROYACTIVITY -> URL_API_HOST_ANDROID_FEDESTROYACTIVITY
    java.lang.String URL_API_HOST_ANDROID_FEENGRAVINGACTIVITY -> URL_API_HOST_ANDROID_FEENGRAVINGACTIVITY
    java.lang.String URL_API_HOST_ANDROID_FETAKEOUTACTIVITY -> URL_API_HOST_ANDROID_FETAKEOUTACTIVITY
    java.lang.String URL_API_HOST_ANDROID_FETRANSFERACTIVITY -> URL_API_HOST_ANDROID_FETRANSFERACTIVITY
    java.lang.String URL_API_HOST_ANDROID_FEUPDATEACTIVITY -> URL_API_HOST_ANDROID_FEUPDATEACTIVITY
    java.lang.String URL_API_HOST_ANDROID_WORKFLOWACTIVITY -> URL_API_HOST_ANDROID_WORKFLOWACTIVITY
    java.lang.String URL_API_HOST_ANDROID_OLDWORKFLOWAPPSERVICEURL -> URL_API_HOST_ANDROID_OLDWORKFLOWAPPSERVICEURL
    java.lang.String URL_API_HOST_ANDROID_NEWWORKFLOWAPPSERVICEURL -> URL_API_HOST_ANDROID_NEWWORKFLOWAPPSERVICEURL
    java.lang.String URL_API_HOST_ANDROID_HRWORKFLOWAPPSERVICEURL -> URL_API_HOST_ANDROID_HRWORKFLOWAPPSERVICEURL
    java.lang.String URL_API_HOST_ANDROID_EPWORKFLOWAPPSERVICEURL -> URL_API_HOST_ANDROID_EPWORKFLOWAPPSERVICEURL
    java.lang.String URL_API_HOST_ANDROID_REJECTNODEREPOSITORY -> URL_API_HOST_ANDROID_REJECTNODEREPOSITORY
    java.lang.String URL_API_HOST_ANDROID_HRREJECTNODEREPOSITORY -> URL_API_HOST_ANDROID_HRREJECTNODEREPOSITORY
    java.lang.String URL_API_HOST_ANDROID_EPREJECTNODEREPOSITORY -> URL_API_HOST_ANDROID_EPREJECTNODEREPOSITORY
    java.lang.String URL_API_HOST_ANDROID_PLUSCOPYAPPURL -> URL_API_HOST_ANDROID_PLUSCOPYAPPURL
    java.lang.String URL_API_HOST_ANDROID_PLUSCOPYPERSONURL -> URL_API_HOST_ANDROID_PLUSCOPYPERSONURL
    java.lang.String URL_API_HOST_ANDROID_LOWERNODEAPPROVEURL -> URL_API_HOST_ANDROID_LOWERNODEAPPROVEURL
    java.lang.String URL_API_HOST_ANDROID_PASSLOWERNODEHANDLEURL -> URL_API_HOST_ANDROID_PASSLOWERNODEHANDLEURL
    java.lang.String URL_API_HOST_ANDROID_EXPENSEMAINACTIVITY -> URL_API_HOST_ANDROID_EXPENSEMAINACTIVITY
    java.lang.String URL_API_HOST_ANDROID_EXPENSETAXILISTACTIVITY -> URL_API_HOST_ANDROID_EXPENSETAXILISTACTIVITY
    java.lang.String URL_API_HOST_ANDROID_CONTACTSMAINACTIVITY -> URL_API_HOST_ANDROID_CONTACTSMAINACTIVITY
    java.lang.String URL_API_HOST_ANDROID_EXPENSEFLOWLISTACTIVITY -> URL_API_HOST_ANDROID_EXPENSEFLOWLISTACTIVITY
    java.lang.String URL_API_HOST_ANDROID_EXPENSEFLOWSEARCHACTIVITY -> URL_API_HOST_ANDROID_EXPENSEFLOWSEARCHACTIVITY
    java.lang.String URL_API_HOST_ANDROID_EXPENSEFLOWUPLOADACTIVITY -> URL_API_HOST_ANDROID_EXPENSEFLOWUPLOADACTIVITY
    java.lang.String URL_API_HOST_ANDROID_MEETINGLISTACTIVITY -> URL_API_HOST_ANDROID_MEETINGLISTACTIVITY
    java.lang.String URL_API_HOST_ANDROID_CANCLEMEETINGDATA -> URL_API_HOST_ANDROID_CANCLEMEETINGDATA
    java.lang.String URL_API_HOST_ANDROID_MEETINGDETAILACTIVITY -> URL_API_HOST_ANDROID_MEETINGDETAILACTIVITY
    java.lang.String URL_API_HOST_ANDROID_MEETINGINITACTIVITY -> URL_API_HOST_ANDROID_MEETINGINITACTIVITY
    java.lang.String URL_API_HOST_ANDROID_UPLOADMEETINGDETAIL -> URL_API_HOST_ANDROID_UPLOADMEETINGDETAIL
    java.lang.String URL_API_HOST_ANDROID_MEETINGPERSONLISTACTIVITY -> URL_API_HOST_ANDROID_MEETINGPERSONLISTACTIVITY
    java.lang.String URL_API_HOST_ANDROID_MEETINGROOMLISTACTIVITY -> URL_API_HOST_ANDROID_MEETINGROOMLISTACTIVITY
    java.lang.String URL_API_HOST_ANDROID_INITMEETINGROOMLISTACTIVITY -> URL_API_HOST_ANDROID_INITMEETINGROOMLISTACTIVITY
    java.lang.String URL_API_HOST_ANDROID_DHLISTACTIVITY -> URL_API_HOST_ANDROID_DHLISTACTIVITY
    java.lang.String URL_API_HOST_ANDROID_DHLISTPROJECTACTIVITY -> URL_API_HOST_ANDROID_DHLISTPROJECTACTIVITY
    java.lang.String URL_API_HOST_ANDROID_DHDETAILACTIVITY -> URL_API_HOST_ANDROID_DHDETAILACTIVITY
    java.lang.String URL_API_HOST_ANDROID_UPLOADDHDETAILACTIVITY -> URL_API_HOST_ANDROID_UPLOADDHDETAILACTIVITY
    java.lang.String URL_API_HOST_ANDROID_DHPROJECTSEARCHACTIVITY -> URL_API_HOST_ANDROID_DHPROJECTSEARCHACTIVITY
    java.lang.String URL_API_HOST_ANDROID_DHTYPELISTACTIVITY -> URL_API_HOST_ANDROID_DHTYPELISTACTIVITY
    java.lang.String URL_API_HOST_ANDROID_DHCONFIRMLISTACTIVITY -> URL_API_HOST_ANDROID_DHCONFIRMLISTACTIVITY
    java.lang.String URL_API_HOST_ANDROID_UPLOADDHCONFIRMACTIVITY -> URL_API_HOST_ANDROID_UPLOADDHCONFIRMACTIVITY
    java.lang.String URL_API_HOST_ANDROID_DHCONFIRMLISTPERSONACTIVITY -> URL_API_HOST_ANDROID_DHCONFIRMLISTPERSONACTIVITY
    java.lang.String URL_API_HOST_ANDROID_ATTENDANCELISTACTIVITY -> URL_API_HOST_ANDROID_ATTENDANCELISTACTIVITY
    java.lang.String URL_API_HOST_ANDROID_GETCHECKSTATUSACTIVITY -> URL_API_HOST_ANDROID_GETCHECKSTATUSACTIVITY
    java.lang.String URL_API_HOST_ANDROID_UPLOADCHECKACTIVITY -> URL_API_HOST_ANDROID_UPLOADCHECKACTIVITY
    java.lang.String URL_API_HOST_ANDROID_GETNEWAMAPLISTACTIVITY -> URL_API_HOST_ANDROID_GETNEWAMAPLISTACTIVITY
    java.lang.String URL_API_HOST_ANDROID_GETMARKETBIDACTIVITY -> URL_API_HOST_ANDROID_GETMARKETBIDACTIVITY
    java.lang.String URL_API_HOST_ANDROID_GETMARKETCONTRACTACTIVITY -> URL_API_HOST_ANDROID_GETMARKETCONTRACTACTIVITY
    java.lang.String URL_API_HOST_ANDROID_GETMARKETPRODUCTACTIVITY -> URL_API_HOST_ANDROID_GETMARKETPRODUCTACTIVITY
    java.lang.String URL_API_HOST_ANDROID_GETMARKETBIDHISTORYACTIVITY -> URL_API_HOST_ANDROID_GETMARKETBIDHISTORYACTIVITY
    java.lang.String URL_API_HOST_ANDROID_GETMARKETCONTRACTHISTORYACTIVITY -> URL_API_HOST_ANDROID_GETMARKETCONTRACTHISTORYACTIVITY
    java.lang.String URL_API_HOST_ANDROID_CONTRIBUTIONAWARDACTIVITY -> URL_API_HOST_ANDROID_CONTRIBUTIONAWARDACTIVITY
com.dahuatech.app.AppWelcome -> com.dahuatech.app.AppWelcome:
    android.widget.TextView tVersionName -> a
    void onCreate(android.os.Bundle) -> onCreate
    void redirectTo() -> a
    void access$0(com.dahuatech.app.AppWelcome) -> a
com.dahuatech.app.AppWelcome$1 -> cu:
    com.dahuatech.app.AppWelcome this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.dahuatech.app.BuildConfig -> com.dahuatech.app.BuildConfig:
    boolean DEBUG -> DEBUG
com.dahuatech.app.R -> com.dahuatech.app.R:
com.dahuatech.app.R$anim -> com.dahuatech.app.R$anim:
    int push_up_in -> push_up_in
    int push_up_out -> push_up_out
    int slide_in_from_bottom -> slide_in_from_bottom
    int slide_in_from_top -> slide_in_from_top
    int slide_out_to_bottom -> slide_out_to_bottom
    int slide_out_to_top -> slide_out_to_top
    int zoom_enter -> zoom_enter
    int zoom_exit -> zoom_exit
com.dahuatech.app.R$array -> com.dahuatech.app.R$array:
    int app_share_items -> app_share_items
    int businesslevel_labels_array -> businesslevel_labels_array
    int businesslevel_value_array -> businesslevel_value_array
    int expendtype_labels_array -> expendtype_labels_array
    int expendtype_value_array -> expendtype_value_array
    int nocard_labels_array -> nocard_labels_array
    int nocard_value_array -> nocard_value_array
    int socialize_labels_array -> socialize_labels_array
    int socialize_value_array -> socialize_value_array
    int travel_labels_array -> travel_labels_array
    int travel_value_array -> travel_value_array
com.dahuatech.app.R$attr -> com.dahuatech.app.R$attr:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionSpinnerItemStyle -> actionSpinnerItemStyle
    int activatedBackgroundIndicator -> activatedBackgroundIndicator
    int activityChooserViewStyle -> activityChooserViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int behindOffset -> behindOffset
    int behindScrollScale -> behindScrollScale
    int behindWidth -> behindWidth
    int buttonStyleSmall -> buttonStyleSmall
    int customNavigationLayout -> customNavigationLayout
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerVertical -> dividerVertical
    int dropDownHintAppearance -> dropDownHintAppearance
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int fadeDegree -> fadeDegree
    int fadeEnabled -> fadeEnabled
    int headerBackground -> headerBackground
    int height -> height
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int horizontalDivider -> horizontalDivider
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int itemBackground -> itemBackground
    int itemIconDisabledAlpha -> itemIconDisabledAlpha
    int itemPadding -> itemPadding
    int itemTextAppearance -> itemTextAppearance
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int mode -> mode
    int navigationMode -> navigationMode
    int popupMenuStyle -> popupMenuStyle
    int preserveIconSpacing -> preserveIconSpacing
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int ptrAdapterViewBackground -> ptrAdapterViewBackground
    int ptrAnimationStyle -> ptrAnimationStyle
    int ptrDrawable -> ptrDrawable
    int ptrDrawableBottom -> ptrDrawableBottom
    int ptrDrawableEnd -> ptrDrawableEnd
    int ptrDrawableStart -> ptrDrawableStart
    int ptrDrawableTop -> ptrDrawableTop
    int ptrHeaderBackground -> ptrHeaderBackground
    int ptrHeaderSubTextColor -> ptrHeaderSubTextColor
    int ptrHeaderTextAppearance -> ptrHeaderTextAppearance
    int ptrHeaderTextColor -> ptrHeaderTextColor
    int ptrListViewExtrasEnabled -> ptrListViewExtrasEnabled
    int ptrMode -> ptrMode
    int ptrOverScroll -> ptrOverScroll
    int ptrRefreshableViewBackground -> ptrRefreshableViewBackground
    int ptrRotateDrawableWhilePulling -> ptrRotateDrawableWhilePulling
    int ptrScrollingWhileRefreshingEnabled -> ptrScrollingWhileRefreshingEnabled
    int ptrShowIndicator -> ptrShowIndicator
    int ptrSubHeaderTextAppearance -> ptrSubHeaderTextAppearance
    int queryHint -> queryHint
    int searchAutoCompleteTextView -> searchAutoCompleteTextView
    int searchDropdownBackground -> searchDropdownBackground
    int searchResultListItemHeight -> searchResultListItemHeight
    int searchViewCloseIcon -> searchViewCloseIcon
    int searchViewEditQuery -> searchViewEditQuery
    int searchViewEditQueryBackground -> searchViewEditQueryBackground
    int searchViewGoIcon -> searchViewGoIcon
    int searchViewSearchIcon -> searchViewSearchIcon
    int searchViewTextField -> searchViewTextField
    int searchViewTextFieldRight -> searchViewTextFieldRight
    int searchViewVoiceIcon -> searchViewVoiceIcon
    int selectableItemBackground -> selectableItemBackground
    int selectorDrawable -> selectorDrawable
    int selectorEnabled -> selectorEnabled
    int shadowDrawable -> shadowDrawable
    int shadowWidth -> shadowWidth
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerItemStyle -> spinnerItemStyle
    int subtitle -> subtitle
    int subtitleTextStyle -> subtitleTextStyle
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmall -> textAppearanceSmall
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorPrimary -> textColorPrimary
    int textColorPrimaryDisableOnly -> textColorPrimaryDisableOnly
    int textColorPrimaryInverse -> textColorPrimaryInverse
    int textColorSearchUrl -> textColorSearchUrl
    int title -> title
    int titleTextStyle -> titleTextStyle
    int touchModeAbove -> touchModeAbove
    int touchModeBehind -> touchModeBehind
    int verticalDivider -> verticalDivider
    int viewAbove -> viewAbove
    int viewBehind -> viewBehind
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowAnimationStyle -> windowAnimationStyle
    int windowContentOverlay -> windowContentOverlay
    int windowMinWidthMajor -> windowMinWidthMajor
    int windowMinWidthMinor -> windowMinWidthMinor
    int windowNoTitle -> windowNoTitle
    int windowSplitActionBar -> windowSplitActionBar
com.dahuatech.app.R$bool -> com.dahuatech.app.R$bool:
    int abs__action_bar_embed_tabs -> abs__action_bar_embed_tabs
    int abs__action_bar_expanded_action_views_exclusive -> abs__action_bar_expanded_action_views_exclusive
    int abs__config_actionMenuItemAllCaps -> abs__config_actionMenuItemAllCaps
    int abs__config_allowActionMenuItemTextWithIcon -> abs__config_allowActionMenuItemTextWithIcon
    int abs__config_showMenuShortcutsWhenKeyboardPresent -> abs__config_showMenuShortcutsWhenKeyboardPresent
    int abs__split_action_bar_is_narrow -> abs__split_action_bar_is_narrow
com.dahuatech.app.R$color -> com.dahuatech.app.R$color:
    int abs__background_holo_dark -> abs__background_holo_dark
    int abs__background_holo_light -> abs__background_holo_light
    int abs__bright_foreground_disabled_holo_dark -> abs__bright_foreground_disabled_holo_dark
    int abs__bright_foreground_disabled_holo_light -> abs__bright_foreground_disabled_holo_light
    int abs__bright_foreground_holo_dark -> abs__bright_foreground_holo_dark
    int abs__bright_foreground_holo_light -> abs__bright_foreground_holo_light
    int abs__primary_text_disable_only_holo_dark -> abs__primary_text_disable_only_holo_dark
    int abs__primary_text_disable_only_holo_light -> abs__primary_text_disable_only_holo_light
    int abs__primary_text_holo_dark -> abs__primary_text_holo_dark
    int abs__primary_text_holo_light -> abs__primary_text_holo_light
    int active_font -> active_font
    int background_color -> background_color
    int black -> black
    int blue -> blue
    int contacts_switch -> contacts_switch
    int contents_text -> contents_text
    int cot_number -> cot_number
    int default_font -> default_font
    int dh_project_background_color -> dh_project_background_color
    int dh_type_background_color -> dh_type_background_color
    int divider_color -> divider_color
    int encode_view -> encode_view
    int full_transparent -> full_transparent
    int gold -> gold
    int gray -> gray
    int grayslate -> grayslate
    int graywhite -> graywhite
    int green -> green
    int half_transparent -> half_transparent
    int lemonyellow -> lemonyellow
    int lightblue -> lightblue
    int line_color -> line_color
    int orange -> orange
    int pink -> pink
    int possible_result_points -> possible_result_points
    int purple -> purple
    int red -> red
    int result_minor_text -> result_minor_text
    int result_points -> result_points
    int result_text -> result_text
    int result_view -> result_view
    int status_text -> status_text
    int transparent -> transparent
    int viewfinder_laser -> viewfinder_laser
    int viewfinder_mask -> viewfinder_mask
    int white -> white
    int yellow -> yellow
com.dahuatech.app.R$dimen -> com.dahuatech.app.R$dimen:
    int abs__action_bar_default_height -> abs__action_bar_default_height
    int abs__action_bar_icon_vertical_padding -> abs__action_bar_icon_vertical_padding
    int abs__action_bar_subtitle_bottom_margin -> abs__action_bar_subtitle_bottom_margin
    int abs__action_bar_subtitle_text_size -> abs__action_bar_subtitle_text_size
    int abs__action_bar_subtitle_top_margin -> abs__action_bar_subtitle_top_margin
    int abs__action_bar_title_text_size -> abs__action_bar_title_text_size
    int abs__action_button_min_width -> abs__action_button_min_width
    int abs__config_prefDialogWidth -> abs__config_prefDialogWidth
    int abs__dialog_min_width_major -> abs__dialog_min_width_major
    int abs__dialog_min_width_minor -> abs__dialog_min_width_minor
    int abs__dropdownitem_icon_width -> abs__dropdownitem_icon_width
    int abs__dropdownitem_text_padding_left -> abs__dropdownitem_text_padding_left
    int abs__dropdownitem_text_padding_right -> abs__dropdownitem_text_padding_right
    int abs__search_view_preferred_width -> abs__search_view_preferred_width
    int abs__search_view_text_min_width -> abs__search_view_text_min_width
    int activity_horizontal_margin -> activity_horizontal_margin
    int activity_vertical_margin -> activity_vertical_margin
    int delete_action_len -> delete_action_len
    int header_footer_left_right_padding -> header_footer_left_right_padding
    int header_footer_top_bottom_padding -> header_footer_top_bottom_padding
    int indicator_corner_radius -> indicator_corner_radius
    int indicator_internal_padding -> indicator_internal_padding
    int indicator_right_padding -> indicator_right_padding
    int shadow_width -> shadow_width
    int slidingmenu_offset_left -> slidingmenu_offset_left
    int slidingmenu_offset_right -> slidingmenu_offset_right
com.dahuatech.app.R$drawable -> com.dahuatech.app.R$drawable:
    int abs__ab_bottom_solid_dark_holo -> abs__ab_bottom_solid_dark_holo
    int abs__ab_bottom_solid_inverse_holo -> abs__ab_bottom_solid_inverse_holo
    int abs__ab_bottom_solid_light_holo -> abs__ab_bottom_solid_light_holo
    int abs__ab_bottom_transparent_dark_holo -> abs__ab_bottom_transparent_dark_holo
    int abs__ab_bottom_transparent_light_holo -> abs__ab_bottom_transparent_light_holo
    int abs__ab_share_pack_holo_dark -> abs__ab_share_pack_holo_dark
    int abs__ab_share_pack_holo_light -> abs__ab_share_pack_holo_light
    int abs__ab_solid_dark_holo -> abs__ab_solid_dark_holo
    int abs__ab_solid_light_holo -> abs__ab_solid_light_holo
    int abs__ab_solid_shadow_holo -> abs__ab_solid_shadow_holo
    int abs__ab_stacked_solid_dark_holo -> abs__ab_stacked_solid_dark_holo
    int abs__ab_stacked_solid_light_holo -> abs__ab_stacked_solid_light_holo
    int abs__ab_stacked_transparent_dark_holo -> abs__ab_stacked_transparent_dark_holo
    int abs__ab_stacked_transparent_light_holo -> abs__ab_stacked_transparent_light_holo
    int abs__ab_transparent_dark_holo -> abs__ab_transparent_dark_holo
    int abs__ab_transparent_light_holo -> abs__ab_transparent_light_holo
    int abs__activated_background_holo_dark -> abs__activated_background_holo_dark
    int abs__activated_background_holo_light -> abs__activated_background_holo_light
    int abs__btn_cab_done_default_holo_dark -> abs__btn_cab_done_default_holo_dark
    int abs__btn_cab_done_default_holo_light -> abs__btn_cab_done_default_holo_light
    int abs__btn_cab_done_focused_holo_dark -> abs__btn_cab_done_focused_holo_dark
    int abs__btn_cab_done_focused_holo_light -> abs__btn_cab_done_focused_holo_light
    int abs__btn_cab_done_holo_dark -> abs__btn_cab_done_holo_dark
    int abs__btn_cab_done_holo_light -> abs__btn_cab_done_holo_light
    int abs__btn_cab_done_pressed_holo_dark -> abs__btn_cab_done_pressed_holo_dark
    int abs__btn_cab_done_pressed_holo_light -> abs__btn_cab_done_pressed_holo_light
    int abs__cab_background_bottom_holo_dark -> abs__cab_background_bottom_holo_dark
    int abs__cab_background_bottom_holo_light -> abs__cab_background_bottom_holo_light
    int abs__cab_background_top_holo_dark -> abs__cab_background_top_holo_dark
    int abs__cab_background_top_holo_light -> abs__cab_background_top_holo_light
    int abs__ic_ab_back_holo_dark -> abs__ic_ab_back_holo_dark
    int abs__ic_ab_back_holo_light -> abs__ic_ab_back_holo_light
    int abs__ic_cab_done_holo_dark -> abs__ic_cab_done_holo_dark
    int abs__ic_cab_done_holo_light -> abs__ic_cab_done_holo_light
    int abs__ic_clear -> abs__ic_clear
    int abs__ic_clear_disabled -> abs__ic_clear_disabled
    int abs__ic_clear_holo_light -> abs__ic_clear_holo_light
    int abs__ic_clear_normal -> abs__ic_clear_normal
    int abs__ic_clear_search_api_disabled_holo_light -> abs__ic_clear_search_api_disabled_holo_light
    int abs__ic_clear_search_api_holo_light -> abs__ic_clear_search_api_holo_light
    int abs__ic_commit_search_api_holo_dark -> abs__ic_commit_search_api_holo_dark
    int abs__ic_commit_search_api_holo_light -> abs__ic_commit_search_api_holo_light
    int abs__ic_go -> abs__ic_go
    int abs__ic_go_search_api_holo_light -> abs__ic_go_search_api_holo_light
    int abs__ic_menu_moreoverflow_holo_dark -> abs__ic_menu_moreoverflow_holo_dark
    int abs__ic_menu_moreoverflow_holo_light -> abs__ic_menu_moreoverflow_holo_light
    int abs__ic_menu_moreoverflow_normal_holo_dark -> abs__ic_menu_moreoverflow_normal_holo_dark
    int abs__ic_menu_moreoverflow_normal_holo_light -> abs__ic_menu_moreoverflow_normal_holo_light
    int abs__ic_menu_share_holo_dark -> abs__ic_menu_share_holo_dark
    int abs__ic_menu_share_holo_light -> abs__ic_menu_share_holo_light
    int abs__ic_search -> abs__ic_search
    int abs__ic_search_api_holo_light -> abs__ic_search_api_holo_light
    int abs__ic_voice_search -> abs__ic_voice_search
    int abs__ic_voice_search_api_holo_light -> abs__ic_voice_search_api_holo_light
    int abs__item_background_holo_dark -> abs__item_background_holo_dark
    int abs__item_background_holo_light -> abs__item_background_holo_light
    int abs__list_activated_holo -> abs__list_activated_holo
    int abs__list_divider_holo_dark -> abs__list_divider_holo_dark
    int abs__list_divider_holo_light -> abs__list_divider_holo_light
    int abs__list_focused_holo -> abs__list_focused_holo
    int abs__list_longpressed_holo -> abs__list_longpressed_holo
    int abs__list_pressed_holo_dark -> abs__list_pressed_holo_dark
    int abs__list_pressed_holo_light -> abs__list_pressed_holo_light
    int abs__list_selector_background_transition_holo_dark -> abs__list_selector_background_transition_holo_dark
    int abs__list_selector_background_transition_holo_light -> abs__list_selector_background_transition_holo_light
    int abs__list_selector_disabled_holo_dark -> abs__list_selector_disabled_holo_dark
    int abs__list_selector_disabled_holo_light -> abs__list_selector_disabled_holo_light
    int abs__list_selector_holo_dark -> abs__list_selector_holo_dark
    int abs__list_selector_holo_light -> abs__list_selector_holo_light
    int abs__menu_dropdown_panel_holo_dark -> abs__menu_dropdown_panel_holo_dark
    int abs__menu_dropdown_panel_holo_light -> abs__menu_dropdown_panel_holo_light
    int abs__progress_bg_holo_dark -> abs__progress_bg_holo_dark
    int abs__progress_bg_holo_light -> abs__progress_bg_holo_light
    int abs__progress_horizontal_holo_dark -> abs__progress_horizontal_holo_dark
    int abs__progress_horizontal_holo_light -> abs__progress_horizontal_holo_light
    int abs__progress_medium_holo -> abs__progress_medium_holo
    int abs__progress_primary_holo_dark -> abs__progress_primary_holo_dark
    int abs__progress_primary_holo_light -> abs__progress_primary_holo_light
    int abs__progress_secondary_holo_dark -> abs__progress_secondary_holo_dark
    int abs__progress_secondary_holo_light -> abs__progress_secondary_holo_light
    int abs__search_dropdown_dark -> abs__search_dropdown_dark
    int abs__search_dropdown_light -> abs__search_dropdown_light
    int abs__spinner_48_inner_holo -> abs__spinner_48_inner_holo
    int abs__spinner_48_outer_holo -> abs__spinner_48_outer_holo
    int abs__spinner_ab_default_holo_dark -> abs__spinner_ab_default_holo_dark
    int abs__spinner_ab_default_holo_light -> abs__spinner_ab_default_holo_light
    int abs__spinner_ab_disabled_holo_dark -> abs__spinner_ab_disabled_holo_dark
    int abs__spinner_ab_disabled_holo_light -> abs__spinner_ab_disabled_holo_light
    int abs__spinner_ab_focused_holo_dark -> abs__spinner_ab_focused_holo_dark
    int abs__spinner_ab_focused_holo_light -> abs__spinner_ab_focused_holo_light
    int abs__spinner_ab_holo_dark -> abs__spinner_ab_holo_dark
    int abs__spinner_ab_holo_light -> abs__spinner_ab_holo_light
    int abs__spinner_ab_pressed_holo_dark -> abs__spinner_ab_pressed_holo_dark
    int abs__spinner_ab_pressed_holo_light -> abs__spinner_ab_pressed_holo_light
    int abs__tab_indicator_ab_holo -> abs__tab_indicator_ab_holo
    int abs__tab_selected_focused_holo -> abs__tab_selected_focused_holo
    int abs__tab_selected_holo -> abs__tab_selected_holo
    int abs__tab_selected_pressed_holo -> abs__tab_selected_pressed_holo
    int abs__tab_unselected_pressed_holo -> abs__tab_unselected_pressed_holo
    int abs__textfield_search_default_holo_dark -> abs__textfield_search_default_holo_dark
    int abs__textfield_search_default_holo_light -> abs__textfield_search_default_holo_light
    int abs__textfield_search_right_default_holo_dark -> abs__textfield_search_right_default_holo_dark
    int abs__textfield_search_right_default_holo_light -> abs__textfield_search_right_default_holo_light
    int abs__textfield_search_right_selected_holo_dark -> abs__textfield_search_right_selected_holo_dark
    int abs__textfield_search_right_selected_holo_light -> abs__textfield_search_right_selected_holo_light
    int abs__textfield_search_selected_holo_dark -> abs__textfield_search_selected_holo_dark
    int abs__textfield_search_selected_holo_light -> abs__textfield_search_selected_holo_light
    int abs__textfield_searchview_holo_dark -> abs__textfield_searchview_holo_dark
    int abs__textfield_searchview_holo_light -> abs__textfield_searchview_holo_light
    int abs__textfield_searchview_right_holo_dark -> abs__textfield_searchview_right_holo_dark
    int abs__textfield_searchview_right_holo_light -> abs__textfield_searchview_right_holo_light
    int abs__toast_frame -> abs__toast_frame
    int addr_desc -> addr_desc
    int address -> address
    int amount -> amount
    int amount_2001 -> amount_2001
    int amount_2002 -> amount_2002
    int amount_2003 -> amount_2003
    int amount_2004 -> amount_2004
    int amount_2005 -> amount_2005
    int amount_2006 -> amount_2006
    int amount_2007 -> amount_2007
    int amount_2008 -> amount_2008
    int amount_2009 -> amount_2009
    int amount_2010 -> amount_2010
    int amount_2011 -> amount_2011
    int amount_2012 -> amount_2012
    int amount_2013 -> amount_2013
    int amount_2014 -> amount_2014
    int amount_2016 -> amount_2016
    int amount_3002 -> amount_3002
    int amount_4001 -> amount_4001
    int amount_hour -> amount_hour
    int baoxiao -> baoxiao
    int barcode -> barcode
    int bg_panel_1 -> bg_panel_1
    int bg_panel_2_1 -> bg_panel_2_1
    int bg_panel_2_2 -> bg_panel_2_2
    int bg_panel_3_1 -> bg_panel_3_1
    int bg_panel_3_2 -> bg_panel_3_2
    int bg_panel_4 -> bg_panel_4
    int bg_panel_5_1 -> bg_panel_5_1
    int bg_panel_5_2 -> bg_panel_5_2
    int bg_panel_5_3 -> bg_panel_5_3
    int bg_panel_5_4 -> bg_panel_5_4
    int bg_panel_6_1 -> bg_panel_6_1
    int bg_panel_6_2 -> bg_panel_6_2
    int btn_arrow -> btn_arrow
    int btn_arrow_hover -> btn_arrow_hover
    int btn_arrow_list -> btn_arrow_list
    int btn_arrow_list_hover -> btn_arrow_list_hover
    int btn_back -> btn_back
    int btn_back_hover -> btn_back_hover
    int btn_call -> btn_call
    int btn_call_hover -> btn_call_hover
    int btn_exit -> btn_exit
    int btn_exit_hover -> btn_exit_hover
    int btn_flash -> btn_flash
    int btn_flash_hover -> btn_flash_hover
    int btn_input -> btn_input
    int btn_input_white -> btn_input_white
    int btn_inputs -> btn_inputs
    int btn_inputs_hover -> btn_inputs_hover
    int btn_items_add -> btn_items_add
    int btn_logo -> btn_logo
    int btn_msg -> btn_msg
    int btn_msg_hover -> btn_msg_hover
    int btn_off -> btn_off
    int btn_on -> btn_on
    int btn_refresh -> btn_refresh
    int btn_refresh_hover -> btn_refresh_hover
    int btn_search -> btn_search
    int btn_search_white -> btn_search_white
    int btn_searchs -> btn_searchs
    int btn_searchs_hover -> btn_searchs_hover
    int btn_setup -> btn_setup
    int btn_setup_hover -> btn_setup_hover
    int btn_vision -> btn_vision
    int btn_visit -> btn_visit
    int btn_visit_hover -> btn_visit_hover
    int btncancel -> btncancel
    int btndel -> btndel
    int btndel_selector -> btndel_selector
    int calendar -> calendar
    int calendar_add -> calendar_add
    int calendar_bk -> calendar_bk
    int calendar_dot -> calendar_dot
    int calendar_dot_hover -> calendar_dot_hover
    int check -> check
    int check_in -> check_in
    int check_item -> check_item
    int check_list -> check_list
    int checkbox_active -> checkbox_active
    int checkbox_back -> checkbox_back
    int checkbox_item_active -> checkbox_item_active
    int checkbox_item_back -> checkbox_item_back
    int checkbox_off -> checkbox_off
    int checkbox_on -> checkbox_on
    int clock -> clock
    int corners_bg -> corners_bg
    int corners_bg_areatext -> corners_bg_areatext
    int corners_bg_bottom -> corners_bg_bottom
    int corners_bg_red -> corners_bg_red
    int corners_bg_top -> corners_bg_top
    int corners_bg_white -> corners_bg_white
    int cot -> cot
    int cot_number_bk -> cot_number_bk
    int default_ptr_flip -> default_ptr_flip
    int default_ptr_rotate -> default_ptr_rotate
    int dh_list_item_add -> dh_list_item_add
    int dh_list_item_icon -> dh_list_item_icon
    int dh_list_item_icon_add -> dh_list_item_icon_add
    int dh_list_item_icon_add_hover -> dh_list_item_icon_add_hover
    int dh_list_type_blue -> dh_list_type_blue
    int dialog_bottom_bg -> dialog_bottom_bg
    int dot -> dot
    int dot_bk -> dot_bk
    int expense_flowdetail_bottom -> expense_flowdetail_bottom
    int expense_flowdetail_leftright -> expense_flowdetail_leftright
    int expense_flowdetail_right -> expense_flowdetail_right
    int flow -> flow
    int footer_bk -> footer_bk
    int gps_meter -> gps_meter
    int gps_status -> gps_status
    int guide_viewpager1 -> guide_viewpager1
    int guide_viewpager2 -> guide_viewpager2
    int guide_viewpager_blue -> guide_viewpager_blue
    int guide_viewpager_blue_dot -> guide_viewpager_blue_dot
    int guide_viewpager_dot -> guide_viewpager_dot
    int guide_viewpager_white_dot -> guide_viewpager_white_dot
    int head -> head
    int ic_launcher -> ic_launcher
    int imgbtn_arrow -> imgbtn_arrow
    int imgbtn_arrow_list -> imgbtn_arrow_list
    int imgbtn_back -> imgbtn_back
    int imgbtn_blue -> imgbtn_blue
    int imgbtn_call -> imgbtn_call
    int imgbtn_disable -> imgbtn_disable
    int imgbtn_exit -> imgbtn_exit
    int imgbtn_msg -> imgbtn_msg
    int imgbtn_red -> imgbtn_red
    int imgbtn_refresh -> imgbtn_refresh
    int imgbtn_setup -> imgbtn_setup
    int imgbtn_visit -> imgbtn_visit
    int indicator_arrow -> indicator_arrow
    int indicator_bg_bottom -> indicator_bg_bottom
    int indicator_bg_top -> indicator_bg_top
    int items_add -> items_add
    int items_add_hover -> items_add_hover
    int line -> line
    int line_blue -> line_blue
    int line_input -> line_input
    int line_main_top -> line_main_top
    int lineblue_left -> lineblue_left
    int linegray_bottom -> linegray_bottom
    int linegray_bottom_hover -> linegray_bottom_hover
    int linegray_left -> linegray_left
    int linegray_right -> linegray_right
    int linegray_top -> linegray_top
    int linegraye5_bottom -> linegraye5_bottom
    int linegraye5_left -> linegraye5_left
    int linered -> linered
    int linewhite_bottom -> linewhite_bottom
    int linewhite_input -> linewhite_input
    int linewhite_left -> linewhite_left
    int linewhite_leftright -> linewhite_leftright
    int linewhite_right -> linewhite_right
    int linewhitee5_bottom -> linewhitee5_bottom
    int list_del -> list_del
    int list_del_active -> list_del_active
    int list_delete -> list_delete
    int list_item_color_bg -> list_item_color_bg
    int list_where -> list_where
    int list_who -> list_who
    int location_marker -> location_marker
    int location_point1 -> location_point1
    int lock_bg -> lock_bg
    int lock_bg_welcome -> lock_bg_welcome
    int lock_btn_red -> lock_btn_red
    int lock_btn_red_pressed -> lock_btn_red_pressed
    int lock_btn_selector -> lock_btn_selector
    int lock_button -> lock_button
    int lock_line -> lock_line
    int lock_line_error -> lock_line_error
    int lock_line_semicircle -> lock_line_semicircle
    int lock_line_semicircle_error -> lock_line_semicircle_error
    int lock_round_click -> lock_round_click
    int lock_round_click_error -> lock_round_click_error
    int lock_round_original -> lock_round_original
    int loginbutton -> loginbutton
    int logo -> logo
    int lync -> lync
    int market -> market
    int market_bid -> market_bid
    int market_contract -> market_contract
    int market_product -> market_product
    int meeting -> meeting
    int meeting_tabs_left -> meeting_tabs_left
    int meeting_tabs_left_active -> meeting_tabs_left_active
    int meeting_tabs_right -> meeting_tabs_right
    int meeting_tabs_right_active -> meeting_tabs_right_active
    int meetings -> meetings
    int menu_left_arrows -> menu_left_arrows
    int menu_right_arrows -> menu_right_arrows
    int menubutton -> menubutton
    int msg_bk -> msg_bk
    int msg_red -> msg_red
    int no1 -> no1
    int no2 -> no2
    int no3 -> no3
    int number -> number
    int number_bk -> number_bk
    int number_red -> number_red
    int panel_bk -> panel_bk
    int panel_title -> panel_title
    int pop_up_del -> pop_up_del
    int qrcode_scan_line -> qrcode_scan_line
    int radiobutton -> radiobutton
    int radiobutton_active -> radiobutton_active
    int radiobutton_blue -> radiobutton_blue
    int radiobutton_blue_active -> radiobutton_blue_active
    int radiobutton_blue_default -> radiobutton_blue_default
    int radiobutton_default -> radiobutton_default
    int record -> record
    int record_bk_l -> record_bk_l
    int record_bk_ll -> record_bk_ll
    int record_bk_o -> record_bk_o
    int record_bk_repeat -> record_bk_repeat
    int record_icon -> record_icon
    int record_line -> record_line
    int reload -> reload
    int repeat_bk -> repeat_bk
    int sale -> sale
    int shadow -> shadow
    int shadowright -> shadowright
    int sidebar_baoxiao -> sidebar_baoxiao
    int sidebar_barcode -> sidebar_barcode
    int sidebar_cot -> sidebar_cot
    int sidebar_exit -> sidebar_exit
    int sidebar_friends -> sidebar_friends
    int sidebar_home -> sidebar_home
    int sidebar_market -> sidebar_market
    int sidebar_meeting -> sidebar_meeting
    int sidebar_record -> sidebar_record
    int sidebar_setting -> sidebar_setting
    int sidebar_task -> sidebar_task
    int sidebar_worktime -> sidebar_worktime
    int sidebarbutton -> sidebarbutton
    int space -> space
    int stroke_fa -> stroke_fa
    int stroke_ff -> stroke_ff
    int tabs_active -> tabs_active
    int tabs_default -> tabs_default
    int tabs_default_expense_flow_active_white -> tabs_default_expense_flow_active_white
    int tabs_default_expense_flow_white -> tabs_default_expense_flow_white
    int tabs_default_left -> tabs_default_left
    int tabs_default_left_active_white -> tabs_default_left_active_white
    int tabs_default_left_white -> tabs_default_left_white
    int tabs_default_right -> tabs_default_right
    int tabs_default_right_active_white -> tabs_default_right_active_white
    int tabs_default_right_white -> tabs_default_right_white
    int tabs_default_white -> tabs_default_white
    int tabs_more -> tabs_more
    int tabs_search -> tabs_search
    int task -> task
    int taxi -> taxi
    int tel -> tel
    int time -> time
    int time_add -> time_add
    int time_confirm -> time_confirm
    int time_list -> time_list
    int toggle_btn -> toggle_btn
    int uploadbutton -> uploadbutton
    int user -> user
    int welcome -> welcome
    int workflow_dot -> workflow_dot
    int workflow_role -> workflow_role
    int workflow_textline -> workflow_textline
    int xlistview_arrow -> xlistview_arrow
com.dahuatech.app.R$id -> com.dahuatech.app.R$id:
    int Addr_Desc -> Addr_Desc
    int GPS_Meter -> GPS_Meter
    int GPS_Status -> GPS_Status
    int ScrollView -> ScrollView
    int abs__action_bar -> abs__action_bar
    int abs__action_bar_container -> abs__action_bar_container
    int abs__action_bar_subtitle -> abs__action_bar_subtitle
    int abs__action_bar_title -> abs__action_bar_title
    int abs__action_context_bar -> abs__action_context_bar
    int abs__action_menu_divider -> abs__action_menu_divider
    int abs__action_menu_presenter -> abs__action_menu_presenter
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_bar_stub -> abs__action_mode_bar_stub
    int abs__action_mode_close_button -> abs__action_mode_close_button
    int abs__activity_chooser_view_content -> abs__activity_chooser_view_content
    int abs__checkbox -> abs__checkbox
    int abs__content -> abs__content
    int abs__default_activity_button -> abs__default_activity_button
    int abs__expand_activities_button -> abs__expand_activities_button
    int abs__home -> abs__home
    int abs__icon -> abs__icon
    int abs__image -> abs__image
    int abs__imageButton -> abs__imageButton
    int abs__list_item -> abs__list_item
    int abs__progress_circular -> abs__progress_circular
    int abs__progress_horizontal -> abs__progress_horizontal
    int abs__radio -> abs__radio
    int abs__search_badge -> abs__search_badge
    int abs__search_bar -> abs__search_bar
    int abs__search_button -> abs__search_button
    int abs__search_close_btn -> abs__search_close_btn
    int abs__search_edit_frame -> abs__search_edit_frame
    int abs__search_go_btn -> abs__search_go_btn
    int abs__search_mag_icon -> abs__search_mag_icon
    int abs__search_plate -> abs__search_plate
    int abs__search_src_text -> abs__search_src_text
    int abs__search_voice_btn -> abs__search_voice_btn
    int abs__shortcut -> abs__shortcut
    int abs__split_action_bar -> abs__split_action_bar
    int abs__submit_area -> abs__submit_area
    int abs__textButton -> abs__textButton
    int abs__title -> abs__title
    int abs__up -> abs__up
    int adAmap_spinnerDialog_Cancle -> adAmap_spinnerDialog_Cancle
    int adAmap_spinnerDialog_OK -> adAmap_spinnerDialog_OK
    int adAmap_spinnerDialog_button -> adAmap_spinnerDialog_button
    int adAmap_spinnerDialog_spinner -> adAmap_spinnerDialog_spinner
    int adAmap_spinnerDialog_title -> adAmap_spinnerDialog_title
    int app_start_view -> app_start_view
    int apply_leave_tbody_FEndDate -> apply_leave_tbody_FEndDate
    int apply_leave_tbody_FEndTime -> apply_leave_tbody_FEndTime
    int apply_leave_tbody_FHolidayType -> apply_leave_tbody_FHolidayType
    int apply_leave_tbody_FLine -> apply_leave_tbody_FLine
    int apply_leave_tbody_FReason -> apply_leave_tbody_FReason
    int apply_leave_tbody_FStartDate -> apply_leave_tbody_FStartDate
    int apply_leave_tbody_FStartTime -> apply_leave_tbody_FStartTime
    int apply_leave_tbody_FTimeLength -> apply_leave_tbody_FTimeLength
    int apply_resume_tbody_FAmCheckResult -> apply_resume_tbody_FAmCheckResult
    int apply_resume_tbody_FAmCheckTime -> apply_resume_tbody_FAmCheckTime
    int apply_resume_tbody_FAmResume -> apply_resume_tbody_FAmResume
    int apply_resume_tbody_FLine -> apply_resume_tbody_FLine
    int apply_resume_tbody_FPmCheckResult -> apply_resume_tbody_FPmCheckResult
    int apply_resume_tbody_FPmCheckTime -> apply_resume_tbody_FPmCheckTime
    int apply_resume_tbody_FPmResume -> apply_resume_tbody_FPmResume
    int apply_resume_tbody_FReason -> apply_resume_tbody_FReason
    int apply_resume_tbody_FStartDate -> apply_resume_tbody_FStartDate
    int applydaysoff_FApplyDate -> applydaysoff_FApplyDate
    int applydaysoff_FApplyDept -> applydaysoff_FApplyDept
    int applydaysoff_FApplyName -> applydaysoff_FApplyName
    int applydaysoff_FBillNo -> applydaysoff_FBillNo
    int applydaysoff_LinearLayout -> applydaysoff_LinearLayout
    int applydaysoff_No -> applydaysoff_No
    int applydaysoff_ScrollView -> applydaysoff_ScrollView
    int applydaysoff_imgbtnApprove -> applydaysoff_imgbtnApprove
    int applydaysoffdevelop_FApplyDate -> applydaysoffdevelop_FApplyDate
    int applydaysoffdevelop_FApplyDept -> applydaysoffdevelop_FApplyDept
    int applydaysoffdevelop_FApplyName -> applydaysoffdevelop_FApplyName
    int applydaysoffdevelop_FBillNo -> applydaysoffdevelop_FBillNo
    int applydaysoffdevelop_FEndTime -> applydaysoffdevelop_FEndTime
    int applydaysoffdevelop_FReason -> applydaysoffdevelop_FReason
    int applydaysoffdevelop_FStartTime -> applydaysoffdevelop_FStartTime
    int applydaysoffdevelop_FSumDays -> applydaysoffdevelop_FSumDays
    int applydaysoffdevelop_FTypeName -> applydaysoffdevelop_FTypeName
    int applydaysoffdevelop_LinearLayout -> applydaysoffdevelop_LinearLayout
    int applydaysoffdevelop_No -> applydaysoffdevelop_No
    int applydaysoffdevelop_ScrollView -> applydaysoffdevelop_ScrollView
    int applydaysoffdevelop_endTime -> applydaysoffdevelop_endTime
    int applydaysoffdevelop_reason -> applydaysoffdevelop_reason
    int applydaysoffdevelop_startTime -> applydaysoffdevelop_startTime
    int applydaysoffdevelop_sumDays -> applydaysoffdevelop_sumDays
    int applydaysoffdevelop_typeName -> applydaysoffdevelop_typeName
    int applyleavetheader_FApplyDate -> applyleavetheader_FApplyDate
    int applyleavetheader_FApplyDept -> applyleavetheader_FApplyDept
    int applyleavetheader_FApplyName -> applyleavetheader_FApplyName
    int applyleavetheader_FBillNo -> applyleavetheader_FBillNo
    int applyleavetheader_LinearLayout -> applyleavetheader_LinearLayout
    int applyleavetheader_No -> applyleavetheader_No
    int applyleavetheader_ScrollView -> applyleavetheader_ScrollView
    int applyovertime_FApplyDate -> applyovertime_FApplyDate
    int applyovertime_FApplyName -> applyovertime_FApplyName
    int applyovertime_FBillNo -> applyovertime_FBillNo
    int applyovertime_FDaysOffCount -> applyovertime_FDaysOffCount
    int applyovertime_FOverTimeCount -> applyovertime_FOverTimeCount
    int applyovertime_LinearLayout -> applyovertime_LinearLayout
    int applyovertime_No -> applyovertime_No
    int applyovertime_ScrollView -> applyovertime_ScrollView
    int applyovertime_daysOffCount -> applyovertime_daysOffCount
    int applyovertime_imgbtnApprove -> applyovertime_imgbtnApprove
    int applyovertime_overTimeCount -> applyovertime_overTimeCount
    int applyresumetheader_FApplyDate -> applyresumetheader_FApplyDate
    int applyresumetheader_FApplyDept -> applyresumetheader_FApplyDept
    int applyresumetheader_FApplyName -> applyresumetheader_FApplyName
    int applyresumetheader_FBillNo -> applyresumetheader_FBillNo
    int applyresumetheader_LinearLayout -> applyresumetheader_LinearLayout
    int applyresumetheader_No -> applyresumetheader_No
    int applyresumetheader_ScrollView -> applyresumetheader_ScrollView
    int approve_button_imgbtnApprove -> approve_button_imgbtnApprove
    int approve_button_imgbtnCopy -> approve_button_imgbtnCopy
    int approve_button_imgbtnNext -> approve_button_imgbtnNext
    int approve_button_imgbtnPlus -> approve_button_imgbtnPlus
    int approve_button_tableLayout -> approve_button_tableLayout
    int approve_imgbtnApprove -> approve_imgbtnApprove
    int attendance_check_btn -> attendance_check_btn
    int attendance_check_list -> attendance_check_list
    int attendance_check_map -> attendance_check_map
    int attendance_check_text -> attendance_check_text
    int attendance_icon -> attendance_icon
    int attendance_line1 -> attendance_line1
    int attendance_line2 -> attendance_line2
    int attendance_list_item -> attendance_list_item
    int attendance_list_item_FAmResult -> attendance_list_item_FAmResult
    int attendance_list_item_FAttendanceDate -> attendance_list_item_FAttendanceDate
    int attendance_list_item_FCheckInTime -> attendance_list_item_FCheckInTime
    int attendance_list_item_FCheckOutTime -> attendance_list_item_FCheckOutTime
    int attendance_list_item_FPmResult -> attendance_list_item_FPmResult
    int attendance_list_item_FType -> attendance_list_item_FType
    int attendance_list_listView -> attendance_list_listView
    int both -> both
    int capture_decode -> capture_decode
    int capture_decode_failed -> capture_decode_failed
    int capture_decode_succeeded -> capture_decode_succeeded
    int capture_launch_product_query -> capture_launch_product_query
    int capture_preview_view -> capture_preview_view
    int capture_quit -> capture_quit
    int capture_restart_preview -> capture_restart_preview
    int capture_return_scan_result -> capture_return_scan_result
    int capture_status_view -> capture_status_view
    int capture_top -> capture_top
    int capture_viewfinder_view -> capture_viewfinder_view
    int captureheader_imgbtnBack -> captureheader_imgbtnBack
    int captureheader_imgbtnFrash -> captureheader_imgbtnFrash
    int captureheader_title -> captureheader_title
    int contacts_item_FClear -> contacts_item_FClear
    int contacts_item_clear -> contacts_item_clear
    int contacts_listView -> contacts_listView
    int contacts_search -> contacts_search
    int contacts_searchEditText -> contacts_searchEditText
    int contacts_searchImageButton -> contacts_searchImageButton
    int contacts_searchtext -> contacts_searchtext
    int contactslist_FCornet -> contactslist_FCornet
    int contactslist_FDepartment -> contactslist_FDepartment
    int contactslist_FItemName -> contactslist_FItemName
    int contactslist_FItemNumber -> contactslist_FItemNumber
    int contactslist_itemsIconcal -> contactslist_itemsIconcal
    int contactslist_itemsIconmsg -> contactslist_itemsIconmsg
    int contactslist_itemsIconvisit -> contactslist_itemsIconvisit
    int contactslist_tablelayout -> contactslist_tablelayout
    int contributionaward_FAmount -> contributionaward_FAmount
    int contributionaward_FApplyDate -> contributionaward_FApplyDate
    int contributionaward_FBillNo -> contributionaward_FBillNo
    int contributionaward_FBillerDeptName -> contributionaward_FBillerDeptName
    int contributionaward_FBillerName -> contributionaward_FBillerName
    int contributionaward_FCheckBox -> contributionaward_FCheckBox
    int contributionaward_FDate -> contributionaward_FDate
    int contributionaward_FInteger -> contributionaward_FInteger
    int contributionaward_FText -> contributionaward_FText
    int contributionaward_FText2 -> contributionaward_FText2
    int contributionaward_LinearLayout -> contributionaward_LinearLayout
    int contributionaward_No -> contributionaward_No
    int contributionaward_ScrollView -> contributionaward_ScrollView
    int contributionaward_list10 -> contributionaward_list10
    int contributionaward_list11 -> contributionaward_list11
    int contributionaward_list12 -> contributionaward_list12
    int contributionaward_list13 -> contributionaward_list13
    int contributionaward_list14 -> contributionaward_list14
    int contributionaward_list15 -> contributionaward_list15
    int contributionaward_list16 -> contributionaward_list16
    int contributionaward_list2 -> contributionaward_list2
    int contributionaward_list5 -> contributionaward_list5
    int contributionaward_list9 -> contributionaward_list9
    int customdialog_contentView -> customdialog_contentView
    int customdialog_edittext -> customdialog_edittext
    int customdialog_negativeButton -> customdialog_negativeButton
    int customdialog_positiveButton -> customdialog_positiveButton
    int customdialog_title -> customdialog_title
    int dahuaassumecost_FApplyDate -> dahuaassumecost_FApplyDate
    int dahuaassumecost_FApplyName -> dahuaassumecost_FApplyName
    int dahuaassumecost_FBillNo -> dahuaassumecost_FBillNo
    int dahuaassumecost_FBusinessName -> dahuaassumecost_FBusinessName
    int dahuaassumecost_FCause -> dahuaassumecost_FCause
    int dahuaassumecost_FFreightEstimate -> dahuaassumecost_FFreightEstimate
    int dahuaassumecost_FGoodsType -> dahuaassumecost_FGoodsType
    int dahuaassumecost_FPIInfo -> dahuaassumecost_FPIInfo
    int dahuaassumecost_LinearLayout -> dahuaassumecost_LinearLayout
    int dahuaassumecost_No -> dahuaassumecost_No
    int dahuaassumecost_ScrollView -> dahuaassumecost_ScrollView
    int dahuaassumecost_tb1 -> dahuaassumecost_tb1
    int dahuaassumecost_tb3 -> dahuaassumecost_tb3
    int delslide_actionsheet_cancel -> delslide_actionsheet_cancel
    int delslide_actionsheet_content -> delslide_actionsheet_content
    int delslide_actionsheet_title -> delslide_actionsheet_title
    int develop_travel_FApplyDate -> develop_travel_FApplyDate
    int develop_travel_FApplyName -> develop_travel_FApplyName
    int develop_travel_FAssumeCost -> develop_travel_FAssumeCost
    int develop_travel_FAssumeDept -> develop_travel_FAssumeDept
    int develop_travel_FBillNo -> develop_travel_FBillNo
    int develop_travel_FProjectCode -> develop_travel_FProjectCode
    int develop_travel_FProjectName -> develop_travel_FProjectName
    int develop_travel_FTravelAddress -> develop_travel_FTravelAddress
    int develop_travel_FTravelAim -> develop_travel_FTravelAim
    int develop_travel_FTravelEndTime -> develop_travel_FTravelEndTime
    int develop_travel_FTravelReason -> develop_travel_FTravelReason
    int develop_travel_FTravelStartTime -> develop_travel_FTravelStartTime
    int develop_travel_FTravelWay -> develop_travel_FTravelWay
    int develop_travel_LinearLayout -> develop_travel_LinearLayout
    int develop_travel_No -> develop_travel_No
    int develop_travel_ScrollView -> develop_travel_ScrollView
    int developinquiry_ApplyerDeptName -> developinquiry_ApplyerDeptName
    int developinquiry_FApplyName -> developinquiry_FApplyName
    int developinquiry_FApplyerDeptName -> developinquiry_FApplyerDeptName
    int developinquiry_FBillNo -> developinquiry_FBillNo
    int developinquiry_FDate -> developinquiry_FDate
    int developinquiry_FEmployeeNumber -> developinquiry_FEmployeeNumber
    int developinquiry_FMaterialType -> developinquiry_FMaterialType
    int developinquiry_FOfferExplain -> developinquiry_FOfferExplain
    int developinquiry_LinearLayout -> developinquiry_LinearLayout
    int developinquiry_No -> developinquiry_No
    int developinquiry_ScrollView -> developinquiry_ScrollView
    int developinquiry_imgbtnApprove -> developinquiry_imgbtnApprove
    int developinquiry_layout_FCurrency -> developinquiry_layout_FCurrency
    int developinquiry_layout_FManufacturer -> developinquiry_layout_FManufacturer
    int developinquiry_layout_FMasterialName -> developinquiry_layout_FMasterialName
    int developinquiry_layout_FMini -> developinquiry_layout_FMini
    int developinquiry_layout_FMiniOrder -> developinquiry_layout_FMiniOrder
    int developinquiry_layout_FOffer -> developinquiry_layout_FOffer
    int developinquiry_layout_FOrderForward -> developinquiry_layout_FOrderForward
    int developinquiry_layout_FOrderQuantityFrom -> developinquiry_layout_FOrderQuantityFrom
    int developinquiry_layout_FOrderQuantityTo -> developinquiry_layout_FOrderQuantityTo
    int developinquiry_layout_FPayment -> developinquiry_layout_FPayment
    int developinquiry_layout_FSupplier -> developinquiry_layout_FSupplier
    int developinquiry_layout_FUnit -> developinquiry_layout_FUnit
    int developinquiry_layout_LinearLayout -> developinquiry_layout_LinearLayout
    int developinquiry_layout_ScrollView -> developinquiry_layout_ScrollView
    int developinquiry_tb1 -> developinquiry_tb1
    int developinquiry_tb2 -> developinquiry_tb2
    int developtestnetwork_ApplyerDeptName -> developtestnetwork_ApplyerDeptName
    int developtestnetwork_FApplyName -> developtestnetwork_FApplyName
    int developtestnetwork_FApplyerDeptName -> developtestnetwork_FApplyerDeptName
    int developtestnetwork_FApplyerPermisson -> developtestnetwork_FApplyerPermisson
    int developtestnetwork_FBillNo -> developtestnetwork_FBillNo
    int developtestnetwork_FDate -> developtestnetwork_FDate
    int developtestnetwork_FPermissionRequre -> developtestnetwork_FPermissionRequre
    int developtestnetwork_FTelphone -> developtestnetwork_FTelphone
    int developtestnetwork_LinearLayout -> developtestnetwork_LinearLayout
    int developtestnetwork_No -> developtestnetwork_No
    int developtestnetwork_ScrollView -> developtestnetwork_ScrollView
    int developtestnetwork_imgbtnApprove -> developtestnetwork_imgbtnApprove
    int developtestnetwork_tb1 -> developtestnetwork_tb1
    int developtestnetwork_tb2 -> developtestnetwork_tb2
    int developtestnetwork_tb4 -> developtestnetwork_tb4
    int dh_comfirm_list_FWeekIndex -> dh_comfirm_list_FWeekIndex
    int dh_comfirm_list_btnOk -> dh_comfirm_list_btnOk
    int dh_comfirm_list_btnSelect -> dh_comfirm_list_btnSelect
    int dh_comfirm_list_button -> dh_comfirm_list_button
    int dh_comfirm_list_content -> dh_comfirm_list_content
    int dh_comfirm_list_search -> dh_comfirm_list_search
    int dh_confirm_item_root_FProjectName -> dh_confirm_item_root_FProjectName
    int dh_confirm_item_root_checkBox -> dh_confirm_item_root_checkBox
    int dh_confirm_list -> dh_confirm_list
    int dh_confirm_list_child -> dh_confirm_list_child
    int dh_confirm_list_child_FItemName -> dh_confirm_list_child_FItemName
    int dh_confirm_list_child_checkBox -> dh_confirm_list_child_checkBox
    int dh_confirm_list_person_ExpandableListView -> dh_confirm_list_person_ExpandableListView
    int dh_confirm_list_person_child -> dh_confirm_list_person_child
    int dh_confirm_list_person_child_FHours -> dh_confirm_list_person_child_FHours
    int dh_confirm_list_person_child_FWeekDay -> dh_confirm_list_person_child_FWeekDay
    int dh_confirm_list_person_root_FHours -> dh_confirm_list_person_root_FHours
    int dh_confirm_list_person_root_FTypeName -> dh_confirm_list_person_root_FTypeName
    int dh_confirm_list_search_EditText -> dh_confirm_list_search_EditText
    int dh_confirm_list_search_ImageButton -> dh_confirm_list_search_ImageButton
    int dh_detail_FHours -> dh_detail_FHours
    int dh_detail_FHours_ImageView -> dh_detail_FHours_ImageView
    int dh_detail_FNote -> dh_detail_FNote
    int dh_detail_FNote_ImageView -> dh_detail_FNote_ImageView
    int dh_detail_FProjectCode -> dh_detail_FProjectCode
    int dh_detail_FProjectName -> dh_detail_FProjectName
    int dh_detail_FProjectName_ImageView -> dh_detail_FProjectName_ImageView
    int dh_detail_FProjectNo -> dh_detail_FProjectNo
    int dh_detail_FTypeId -> dh_detail_FTypeId
    int dh_detail_FTypeName -> dh_detail_FTypeName
    int dh_detail_FTypeName_ImageView -> dh_detail_FTypeName_ImageView
    int dh_detail_FWeekDate -> dh_detail_FWeekDate
    int dh_detail_FWeekDate_ImageView -> dh_detail_FWeekDate_ImageView
    int dh_detail_LinearLayout -> dh_detail_LinearLayout
    int dh_detail_ScrollView -> dh_detail_ScrollView
    int dh_detail_button_FCancle -> dh_detail_button_FCancle
    int dh_detail_button_FUpload -> dh_detail_button_FUpload
    int dh_list_PullToRefreshListView -> dh_list_PullToRefreshListView
    int dh_list_item_FFriHours -> dh_list_item_FFriHours
    int dh_list_item_FMonHours -> dh_list_item_FMonHours
    int dh_list_item_FSatHours -> dh_list_item_FSatHours
    int dh_list_item_FSunHours -> dh_list_item_FSunHours
    int dh_list_item_FThurHours -> dh_list_item_FThurHours
    int dh_list_item_FTueHours -> dh_list_item_FTueHours
    int dh_list_item_FWedHours -> dh_list_item_FWedHours
    int dh_list_item_FWeekDate -> dh_list_item_FWeekDate
    int dh_list_item_FWeekHours -> dh_list_item_FWeekHours
    int dh_list_item_FWeekTitle -> dh_list_item_FWeekTitle
    int dh_list_item_friday -> dh_list_item_friday
    int dh_list_item_friday_ImageButton -> dh_list_item_friday_ImageButton
    int dh_list_item_friday_hours -> dh_list_item_friday_hours
    int dh_list_item_hours_count -> dh_list_item_hours_count
    int dh_list_item_monday -> dh_list_item_monday
    int dh_list_item_monday_ImageButton -> dh_list_item_monday_ImageButton
    int dh_list_item_monday_hours -> dh_list_item_monday_hours
    int dh_list_item_saturday -> dh_list_item_saturday
    int dh_list_item_saturday_ImageButton -> dh_list_item_saturday_ImageButton
    int dh_list_item_saturday_hours -> dh_list_item_saturday_hours
    int dh_list_item_sunday -> dh_list_item_sunday
    int dh_list_item_sunday_ImageButton -> dh_list_item_sunday_ImageButton
    int dh_list_item_sunday_hours -> dh_list_item_sunday_hours
    int dh_list_item_thursday -> dh_list_item_thursday
    int dh_list_item_thursday_ImageButton -> dh_list_item_thursday_ImageButton
    int dh_list_item_thursday_hours -> dh_list_item_thursday_hours
    int dh_list_item_tuesday -> dh_list_item_tuesday
    int dh_list_item_tuesday_ImageButton -> dh_list_item_tuesday_ImageButton
    int dh_list_item_tuesday_hours -> dh_list_item_tuesday_hours
    int dh_list_item_wendnesday -> dh_list_item_wendnesday
    int dh_list_item_wendnesday_ImageButton -> dh_list_item_wendnesday_ImageButton
    int dh_list_item_wendnesday_hours -> dh_list_item_wendnesday_hours
    int dh_list_project_Add_ImageView -> dh_list_project_Add_ImageView
    int dh_list_project_ExpandableListView -> dh_list_project_ExpandableListView
    int dh_list_project_item_FAdd_ImageView -> dh_list_project_item_FAdd_ImageView
    int dh_list_project_item_FHours -> dh_list_project_item_FHours
    int dh_list_project_item_FLayout -> dh_list_project_item_FLayout
    int dh_list_project_item_FProjectName -> dh_list_project_item_FProjectName
    int dh_list_searchEditText -> dh_list_searchEditText
    int dh_list_searchImageButton -> dh_list_searchImageButton
    int dh_list_type_item -> dh_list_type_item
    int dh_list_type_item_FAdd -> dh_list_type_item_FAdd
    int dh_list_type_item_FHours -> dh_list_type_item_FHours
    int dh_list_type_item_FLayout -> dh_list_type_item_FLayout
    int dh_list_type_item_FTypeName -> dh_list_type_item_FTypeName
    int dh_main_confirm_list -> dh_main_confirm_list
    int dh_main_detail -> dh_main_detail
    int dh_main_list -> dh_main_list
    int dh_project_searchEditText -> dh_project_searchEditText
    int dh_project_searchImageButton -> dh_project_searchImageButton
    int dh_project_search_item -> dh_project_search_item
    int dh_project_search_item_FProjectCode -> dh_project_search_item_FProjectCode
    int dh_project_search_item_FProjectName -> dh_project_search_item_FProjectName
    int dh_project_search_pullToRefreshListView -> dh_project_search_pullToRefreshListView
    int dh_type_list -> dh_type_list
    int dh_type_list_item -> dh_type_list_item
    int dh_type_list_item_FTypeId -> dh_type_list_item_FTypeId
    int dh_type_list_item_FTypeName -> dh_type_list_item_FTypeName
    int disableHome -> disableHome
    int disabled -> disabled
    int document_approve_FApplyDate -> document_approve_FApplyDate
    int document_approve_FApplyName -> document_approve_FApplyName
    int document_approve_FBillNo -> document_approve_FBillNo
    int document_approve_LinearLayout -> document_approve_LinearLayout
    int document_approve_No -> document_approve_No
    int document_approve_ScrollView -> document_approve_ScrollView
    int document_approve_tbody_FDocumentBelong -> document_approve_tbody_FDocumentBelong
    int document_approve_tbody_FDocumentCode -> document_approve_tbody_FDocumentCode
    int document_approve_tbody_FDocumentName -> document_approve_tbody_FDocumentName
    int document_approve_tbody_FDocumentVersion -> document_approve_tbody_FDocumentVersion
    int document_approve_tbody_Line -> document_approve_tbody_Line
    int documentapprove_FDocumentPost -> documentapprove_FDocumentPost
    int documentapprove_FDocumentStatus -> documentapprove_FDocumentStatus
    int documentapprove_FDocumentType -> documentapprove_FDocumentType
    int documentapprove_FPendingApp -> documentapprove_FPendingApp
    int documentapprove_FReason -> documentapprove_FReason
    int door_permission_FApplyDate -> door_permission_FApplyDate
    int door_permission_FApplyDept -> door_permission_FApplyDept
    int door_permission_FApplyName -> door_permission_FApplyName
    int door_permission_FApplyType -> door_permission_FApplyType
    int door_permission_FBillNo -> door_permission_FBillNo
    int door_permission_FIsOther -> door_permission_FIsOther
    int door_permission_FRegion -> door_permission_FRegion
    int door_permission_FTel -> door_permission_FTel
    int door_permission_LinearLayout -> door_permission_LinearLayout
    int door_permission_No -> door_permission_No
    int door_permission_ScrollView -> door_permission_ScrollView
    int door_permission_tbody_FNote -> door_permission_tbody_FNote
    int door_permission_tbody_FPermission -> door_permission_tbody_FPermission
    int door_permission_tbody_FPosition -> door_permission_tbody_FPosition
    int door_permission_tbody_Line -> door_permission_tbody_Line
    int drawer_left_menu -> drawer_left_menu
    int drawer_left_menu_back -> drawer_left_menu_back
    int drawer_left_menu_exit -> drawer_left_menu_exit
    int drawer_left_menu_invite -> drawer_left_menu_invite
    int drawer_left_menu_setting -> drawer_left_menu_setting
    int drawer_right_menu -> drawer_right_menu
    int drawer_right_menu_attendance -> drawer_right_menu_attendance
    int drawer_right_menu_contacts -> drawer_right_menu_contacts
    int drawer_right_menu_develop_hour -> drawer_right_menu_develop_hour
    int drawer_right_menu_expense -> drawer_right_menu_expense
    int drawer_right_menu_market -> drawer_right_menu_market
    int drawer_right_menu_meeting -> drawer_right_menu_meeting
    int drawer_right_menu_myTask -> drawer_right_menu_myTask
    int drawer_right_menu_richscan -> drawer_right_menu_richscan
    int dveloptravel_one_body_FEndTime -> dveloptravel_one_body_FEndTime
    int dveloptravel_one_body_FLine -> dveloptravel_one_body_FLine
    int dveloptravel_one_body_FNote -> dveloptravel_one_body_FNote
    int dveloptravel_one_body_FSchedule -> dveloptravel_one_body_FSchedule
    int dveloptravel_one_body_FStartTime -> dveloptravel_one_body_FStartTime
    int dveloptravel_two_body_FDeptManager -> dveloptravel_two_body_FDeptManager
    int dveloptravel_two_body_FEndTime -> dveloptravel_two_body_FEndTime
    int dveloptravel_two_body_FLine -> dveloptravel_two_body_FLine
    int dveloptravel_two_body_FStartTime -> dveloptravel_two_body_FStartTime
    int dveloptravel_two_body_FTravelDept -> dveloptravel_two_body_FTravelDept
    int dveloptravel_two_body_FTravelName -> dveloptravel_two_body_FTravelName
    int edit_query -> edit_query
    int email_open_FApplyDate -> email_open_FApplyDate
    int email_open_FApplyDept -> email_open_FApplyDept
    int email_open_FApplyName -> email_open_FApplyName
    int email_open_FApplyPermission -> email_open_FApplyPermission
    int email_open_FBillNo -> email_open_FBillNo
    int email_open_FEmailType -> email_open_FEmailType
    int email_open_FInfoSafe -> email_open_FInfoSafe
    int email_open_FReason -> email_open_FReason
    int email_open_LinearLayout -> email_open_LinearLayout
    int email_open_No -> email_open_No
    int email_open_ScrollView -> email_open_ScrollView
    int email_open_tbody_FApplyDeadLine -> email_open_tbody_FApplyDeadLine
    int email_open_tbody_FEmailAddress -> email_open_tbody_FEmailAddress
    int email_open_tbody_FLine -> email_open_tbody_FLine
    int email_open_tbody_FStartTime -> email_open_tbody_FStartTime
    int engineering_165 -> engineering_165
    int engineering_Amount -> engineering_Amount
    int engineering_Base1 -> engineering_Base1
    int engineering_ComboBox -> engineering_ComboBox
    int engineering_ComboBox1 -> engineering_ComboBox1
    int engineering_FAddress -> engineering_FAddress
    int engineering_FAmount -> engineering_FAmount
    int engineering_FApplyDate -> engineering_FApplyDate
    int engineering_FApplyName -> engineering_FApplyName
    int engineering_FBase1 -> engineering_FBase1
    int engineering_FBillNo -> engineering_FBillNo
    int engineering_FComboBox -> engineering_FComboBox
    int engineering_FComboBox1 -> engineering_FComboBox1
    int engineering_FContact -> engineering_FContact
    int engineering_FEngineereName -> engineering_FEngineereName
    int engineering_FNote -> engineering_FNote
    int engineering_FTel -> engineering_FTel
    int engineering_FText -> engineering_FText
    int engineering_No -> engineering_No
    int engineering_Note -> engineering_Note
    int engineering_Text -> engineering_Text
    int engineering_list1 -> engineering_list1
    int engineering_list10 -> engineering_list10
    int engineering_list11 -> engineering_list11
    int engineering_list2 -> engineering_list2
    int engineering_list3 -> engineering_list3
    int engineering_list4 -> engineering_list4
    int engineering_list5 -> engineering_list5
    int engineering_list6 -> engineering_list6
    int engineering_list7 -> engineering_list7
    int engineering_list8 -> engineering_list8
    int engineering_list9 -> engineering_list9
    int exattendance_FApplyDate -> exattendance_FApplyDate
    int exattendance_FApplyDept -> exattendance_FApplyDept
    int exattendance_FApplyName -> exattendance_FApplyName
    int exattendance_FBillNo -> exattendance_FBillNo
    int exattendance_LinearLayout -> exattendance_LinearLayout
    int exattendance_No -> exattendance_No
    int exattendance_ScrollView -> exattendance_ScrollView
    int exattendance_imgbtnApprove -> exattendance_imgbtnApprove
    int expensePrivateTBodyInfo_ClientName -> expensePrivateTBodyInfo_ClientName
    int expensePrivateTBodyInfo_FAmount -> expensePrivateTBodyInfo_FAmount
    int expensePrivateTBodyInfo_FClientName -> expensePrivateTBodyInfo_FClientName
    int expensePrivateTBodyInfo_FConSmDate -> expensePrivateTBodyInfo_FConSmDate
    int expensePrivateTBodyInfo_FConSmType -> expensePrivateTBodyInfo_FConSmType
    int expensePrivateTBodyInfo_FProjectName -> expensePrivateTBodyInfo_FProjectName
    int expensePrivateTBodyInfo_FUse -> expensePrivateTBodyInfo_FUse
    int expensePrivateTBodyInfo_ProjectName -> expensePrivateTBodyInfo_ProjectName
    int expensePrivateTBodyInfo_Use -> expensePrivateTBodyInfo_Use
    int expense_buttons -> expense_buttons
    int expense_flow_detail_FAccompany -> expense_flow_detail_FAccompany
    int expense_flow_detail_FAccompanyReason -> expense_flow_detail_FAccompanyReason
    int expense_flow_detail_FAccompanyReason_ImageView -> expense_flow_detail_FAccompanyReason_ImageView
    int expense_flow_detail_FAccompany_no -> expense_flow_detail_FAccompany_no
    int expense_flow_detail_FAccompany_yes -> expense_flow_detail_FAccompany_yes
    int expense_flow_detail_FAccompanylabel -> expense_flow_detail_FAccompanylabel
    int expense_flow_detail_button_temp -> expense_flow_detail_button_temp
    int expense_flow_detail_button_upload -> expense_flow_detail_button_upload
    int expense_flow_detail_socialize -> expense_flow_detail_socialize
    int expense_flow_detail_socialize_FReason -> expense_flow_detail_socialize_FReason
    int expense_flow_detail_travel -> expense_flow_detail_travel
    int expense_flow_detail_travel_FBusinessLevel -> expense_flow_detail_travel_FBusinessLevel
    int expense_flow_detail_travel_FEndAddress -> expense_flow_detail_travel_FEndAddress
    int expense_flow_detail_travel_FEndAddress_ImageView -> expense_flow_detail_travel_FEndAddress_ImageView
    int expense_flow_detail_travel_FEndAddresstitle -> expense_flow_detail_travel_FEndAddresstitle
    int expense_flow_detail_travel_FEndTime -> expense_flow_detail_travel_FEndTime
    int expense_flow_detail_travel_FEndTime_ImageView -> expense_flow_detail_travel_FEndTime_ImageView
    int expense_flow_detail_travel_FEndTimetitle -> expense_flow_detail_travel_FEndTimetitle
    int expense_flow_detail_travel_FStartAddress -> expense_flow_detail_travel_FStartAddress
    int expense_flow_detail_travel_FStartAddress_ImageView -> expense_flow_detail_travel_FStartAddress_ImageView
    int expense_flow_detail_travel_FStartAddresstitle -> expense_flow_detail_travel_FStartAddresstitle
    int expense_flow_detail_travel_FStartTime -> expense_flow_detail_travel_FStartTime
    int expense_flow_detail_travel_FStartTime_ImageView -> expense_flow_detail_travel_FStartTime_ImageView
    int expense_flow_detail_travel_FStartTimetitle -> expense_flow_detail_travel_FStartTimetitle
    int expense_flowclient_search_pullToRefreshListView -> expense_flowclient_search_pullToRefreshListView
    int expense_flowdetail_FCause -> expense_flowdetail_FCause
    int expense_flowdetail_FCause_ImageView -> expense_flowdetail_FCause_ImageView
    int expense_flowdetail_FClient -> expense_flowdetail_FClient
    int expense_flowdetail_FClient_FId -> expense_flowdetail_FClient_FId
    int expense_flowdetail_FClient_ImageView -> expense_flowdetail_FClient_ImageView
    int expense_flowdetail_FExpendAddress -> expense_flowdetail_FExpendAddress
    int expense_flowdetail_FExpendAddress_ImageView -> expense_flowdetail_FExpendAddress_ImageView
    int expense_flowdetail_FExpendAmount -> expense_flowdetail_FExpendAmount
    int expense_flowdetail_FExpendTime -> expense_flowdetail_FExpendTime
    int expense_flowdetail_FProject -> expense_flowdetail_FProject
    int expense_flowdetail_FProject_FId -> expense_flowdetail_FProject_FId
    int expense_flowdetail_FProject_ImageView -> expense_flowdetail_FProject_ImageView
    int expense_flowdetail_LinearLayout -> expense_flowdetail_LinearLayout
    int expense_flowdetail_ScrollView -> expense_flowdetail_ScrollView
    int expense_flowdetail_Spinner_Child -> expense_flowdetail_Spinner_Child
    int expense_flowdetail_Spinner_Parent -> expense_flowdetail_Spinner_Parent
    int expense_flowdetail_socialize_FDescription -> expense_flowdetail_socialize_FDescription
    int expense_flowdetail_socialize_FDescription_ImageView -> expense_flowdetail_socialize_FDescription_ImageView
    int expense_flowdetail_socialize_FDescriptiontitle -> expense_flowdetail_socialize_FDescriptiontitle
    int expense_flowlist_btnAdd -> expense_flowlist_btnAdd
    int expense_flowlist_btnSubmit -> expense_flowlist_btnSubmit
    int expense_flowlist_btnUpload -> expense_flowlist_btnUpload
    int expense_flowlist_expand -> expense_flowlist_expand
    int expense_flowlist_group_btnAdd -> expense_flowlist_group_btnAdd
    int expense_flowlist_group_no -> expense_flowlist_group_no
    int expense_flowlist_group_title -> expense_flowlist_group_title
    int expense_flowlist_item -> expense_flowlist_item
    int expense_flowlist_item_FCause -> expense_flowlist_item_FCause
    int expense_flowlist_item_FExpendAddress -> expense_flowlist_item_FExpendAddress
    int expense_flowlist_item_FExpendAmount -> expense_flowlist_item_FExpendAmount
    int expense_flowlist_item_FExpendType -> expense_flowlist_item_FExpendType
    int expense_flowlist_search -> expense_flowlist_search
    int expense_flowlist_searchEditText -> expense_flowlist_searchEditText
    int expense_flowlist_searchImageButton -> expense_flowlist_searchImageButton
    int expense_flowlocal_list -> expense_flowlocal_list
    int expense_flowlocal_list_batchDelete -> expense_flowlocal_list_batchDelete
    int expense_flowlocal_list_batchUpload -> expense_flowlocal_list_batchUpload
    int expense_flowlocal_list_item -> expense_flowlocal_list_item
    int expense_flowlocal_list_item_FCause -> expense_flowlocal_list_item_FCause
    int expense_flowlocal_list_item_FExpendAddress -> expense_flowlocal_list_item_FExpendAddress
    int expense_flowlocal_list_item_FExpendAmount -> expense_flowlocal_list_item_FExpendAmount
    int expense_flowlocal_list_item_FExpendTime -> expense_flowlocal_list_item_FExpendTime
    int expense_flowlocal_list_item_FExpendType -> expense_flowlocal_list_item_FExpendType
    int expense_flowlocal_list_item_chkBox -> expense_flowlocal_list_item_chkBox
    int expense_flowproject_search_pullToRefreshListView -> expense_flowproject_search_pullToRefreshListView
    int expense_flowsearch_layout -> expense_flowsearch_layout
    int expense_flowsearch_layout_FId -> expense_flowsearch_layout_FId
    int expense_flowsearch_layout_FItemName -> expense_flowsearch_layout_FItemName
    int expense_footer -> expense_footer
    int expense_itemview_Amount -> expense_itemview_Amount
    int expense_itemview_EndPos -> expense_itemview_EndPos
    int expense_itemview_EndTime -> expense_itemview_EndTime
    int expense_itemview_StartPos -> expense_itemview_StartPos
    int expense_itemview_StartTime -> expense_itemview_StartTime
    int expense_itemview_button -> expense_itemview_button
    int expense_itemview_editAmount -> expense_itemview_editAmount
    int expense_itemview_editEndPos -> expense_itemview_editEndPos
    int expense_itemview_editStartPos -> expense_itemview_editStartPos
    int expense_itemview_imgbtnReject -> expense_itemview_imgbtnReject
    int expense_itemview_imgbtnSave -> expense_itemview_imgbtnSave
    int expense_itemview_ivStartPos -> expense_itemview_ivStartPos
    int expense_itemview_ivStartTime -> expense_itemview_ivStartTime
    int expense_itemview_ivTvAmount -> expense_itemview_ivTvAmount
    int expense_itemview_ivTvEndPos -> expense_itemview_ivTvEndPos
    int expense_itemview_ivTvEndTime -> expense_itemview_ivTvEndTime
    int expense_itemview_ivTvStartPos -> expense_itemview_ivTvStartPos
    int expense_itemview_ivTvStartTime -> expense_itemview_ivTvStartTime
    int expense_itemview_tvAmount -> expense_itemview_tvAmount
    int expense_itemview_tvEndPos -> expense_itemview_tvEndPos
    int expense_itemview_tvEndTime -> expense_itemview_tvEndTime
    int expense_main_flow -> expense_main_flow
    int expense_main_taxi -> expense_main_taxi
    int expense_taxiinput_Amount -> expense_taxiinput_Amount
    int expense_taxiinput_EndPos -> expense_taxiinput_EndPos
    int expense_taxiinput_StartPos -> expense_taxiinput_StartPos
    int expense_taxiinput_StartTime -> expense_taxiinput_StartTime
    int expense_taxiinput_button -> expense_taxiinput_button
    int expense_taxiinput_editAmount -> expense_taxiinput_editAmount
    int expense_taxiinput_editEndPos -> expense_taxiinput_editEndPos
    int expense_taxiinput_editEndTime -> expense_taxiinput_editEndTime
    int expense_taxiinput_editStartPos -> expense_taxiinput_editStartPos
    int expense_taxiinput_edtAmount -> expense_taxiinput_edtAmount
    int expense_taxiinput_edtEndPos -> expense_taxiinput_edtEndPos
    int expense_taxiinput_edtEndTime -> expense_taxiinput_edtEndTime
    int expense_taxiinput_edtStartPos -> expense_taxiinput_edtStartPos
    int expense_taxiinput_edtStartTime -> expense_taxiinput_edtStartTime
    int expense_taxiinput_imgbtnReject -> expense_taxiinput_imgbtnReject
    int expense_taxiinput_imgbtnSave -> expense_taxiinput_imgbtnSave
    int expense_taxiinput_tvAmount -> expense_taxiinput_tvAmount
    int expense_taxiinput_tvEndPos -> expense_taxiinput_tvEndPos
    int expense_taxiinput_tvEndTime -> expense_taxiinput_tvEndTime
    int expense_taxiinput_tvStartPos -> expense_taxiinput_tvStartPos
    int expense_taxiinput_tvStartTime -> expense_taxiinput_tvStartTime
    int expense_taxilist_All -> expense_taxilist_All
    int expense_taxilist_BatchUpload -> expense_taxilist_BatchUpload
    int expense_taxilist_Cancle -> expense_taxilist_Cancle
    int expense_taxilist_checkbox -> expense_taxilist_checkbox
    int expense_taxilist_layout_chkBox -> expense_taxilist_layout_chkBox
    int expense_taxilist_layout_deleteAction -> expense_taxilist_layout_deleteAction
    int expense_taxilist_layout_endAddress -> expense_taxilist_layout_endAddress
    int expense_taxilist_layout_endTime -> expense_taxilist_layout_endTime
    int expense_taxilist_layout_startTime -> expense_taxilist_layout_startTime
    int expense_taxilist_list -> expense_taxilist_list
    int expense_taxilist_new -> expense_taxilist_new
    int expense_taxilist_upload -> expense_taxilist_upload
    int expense_taxilistlayout -> expense_taxilistlayout
    int expensecosttheader_165_1 -> expensecosttheader_165_1
    int expensecosttheader_165_2 -> expensecosttheader_165_2
    int expensecosttheader_AppAmt -> expensecosttheader_AppAmt
    int expensecosttheader_FAppAmt -> expensecosttheader_FAppAmt
    int expensecosttheader_FBillNo -> expensecosttheader_FBillNo
    int expensecosttheader_FCommitDate -> expensecosttheader_FCommitDate
    int expensecosttheader_FConSmName -> expensecosttheader_FConSmName
    int expensecosttheader_FGeneralName -> expensecosttheader_FGeneralName
    int expensecosttheader_FLDAmt -> expensecosttheader_FLDAmt
    int expensecosttheader_GeneralName -> expensecosttheader_GeneralName
    int expensecosttheader_LDAmt -> expensecosttheader_LDAmt
    int expensecosttheader_LinearLayout -> expensecosttheader_LinearLayout
    int expensecosttheader_No -> expensecosttheader_No
    int expensecosttheader_ScrollView -> expensecosttheader_ScrollView
    int expensecosttheader_imgbtnApprove -> expensecosttheader_imgbtnApprove
    int expensecosttheader_tb1 -> expensecosttheader_tb1
    int expensecosttheader_tb2 -> expensecosttheader_tb2
    int expensemarketbidtheader_165 -> expensemarketbidtheader_165
    int expensemarketbidtheader_ConSmTypeName -> expensemarketbidtheader_ConSmTypeName
    int expensemarketbidtheader_FAmountAll -> expensemarketbidtheader_FAmountAll
    int expensemarketbidtheader_FBillNo -> expensemarketbidtheader_FBillNo
    int expensemarketbidtheader_FCaseType -> expensemarketbidtheader_FCaseType
    int expensemarketbidtheader_FCommitDate -> expensemarketbidtheader_FCommitDate
    int expensemarketbidtheader_FConSmName -> expensemarketbidtheader_FConSmName
    int expensemarketbidtheader_FConSmTypeName -> expensemarketbidtheader_FConSmTypeName
    int expensemarketbidtheader_FProjectName -> expensemarketbidtheader_FProjectName
    int expensemarketbidtheader_FPubPayNo -> expensemarketbidtheader_FPubPayNo
    int expensemarketbidtheader_FRecAccName -> expensemarketbidtheader_FRecAccName
    int expensemarketbidtheader_FSetOffType -> expensemarketbidtheader_FSetOffType
    int expensemarketbidtheader_LinearLayout -> expensemarketbidtheader_LinearLayout
    int expensemarketbidtheader_No -> expensemarketbidtheader_No
    int expensemarketbidtheader_ProjectName -> expensemarketbidtheader_ProjectName
    int expensemarketbidtheader_ScrollView -> expensemarketbidtheader_ScrollView
    int expensemarketbidtheader_tb1 -> expensemarketbidtheader_tb1
    int expensemarketbidtheader_tb2 -> expensemarketbidtheader_tb2
    int expensemarketbidtheader_tb3 -> expensemarketbidtheader_tb3
    int expensemarketbidtheader_tb4 -> expensemarketbidtheader_tb4
    int expensemarketpaytheader_165 -> expensemarketpaytheader_165
    int expensemarketpaytheader_ConSmTypeName -> expensemarketpaytheader_ConSmTypeName
    int expensemarketpaytheader_FAmountAll -> expensemarketpaytheader_FAmountAll
    int expensemarketpaytheader_FBillNo -> expensemarketpaytheader_FBillNo
    int expensemarketpaytheader_FCommitDate -> expensemarketpaytheader_FCommitDate
    int expensemarketpaytheader_FConSmName -> expensemarketpaytheader_FConSmName
    int expensemarketpaytheader_FConSmTypeName -> expensemarketpaytheader_FConSmTypeName
    int expensemarketpaytheader_FProjectName -> expensemarketpaytheader_FProjectName
    int expensemarketpaytheader_FPubPayNo -> expensemarketpaytheader_FPubPayNo
    int expensemarketpaytheader_FRecAccName -> expensemarketpaytheader_FRecAccName
    int expensemarketpaytheader_LinearLayout -> expensemarketpaytheader_LinearLayout
    int expensemarketpaytheader_No -> expensemarketpaytheader_No
    int expensemarketpaytheader_ProjectName -> expensemarketpaytheader_ProjectName
    int expensemarketpaytheader_ScrollView -> expensemarketpaytheader_ScrollView
    int expensemarketpaytheader_tb1 -> expensemarketpaytheader_tb1
    int expensemarketpaytheader_tb2 -> expensemarketpaytheader_tb2
    int expenseprivatetbody_xListView -> expenseprivatetbody_xListView
    int expenseprivatetheader_FBillNo -> expenseprivatetheader_FBillNo
    int expenseprivatetheader_FCommitDate -> expenseprivatetheader_FCommitDate
    int expenseprivatetheader_FConSmAmountAll -> expenseprivatetheader_FConSmAmountAll
    int expenseprivatetheader_FConSmName -> expenseprivatetheader_FConSmName
    int expenseprivatetheader_LinearLayout -> expenseprivatetheader_LinearLayout
    int expenseprivatetheader_No -> expenseprivatetheader_No
    int expenseprivatetheader_ScrollView -> expenseprivatetheader_ScrollView
    int expenseprivatetheader_bill -> expenseprivatetheader_bill
    int expenseprivatetheader_imgbtnApprove -> expenseprivatetheader_imgbtnApprove
    int expensepublictheader_165 -> expensepublictheader_165
    int expensepublictheader_FAmountAll -> expensepublictheader_FAmountAll
    int expensepublictheader_FBillNo -> expensepublictheader_FBillNo
    int expensepublictheader_FCommitDate -> expensepublictheader_FCommitDate
    int expensepublictheader_FConSmName -> expensepublictheader_FConSmName
    int expensepublictheader_FContent -> expensepublictheader_FContent
    int expensepublictheader_FGeneralType -> expensepublictheader_FGeneralType
    int expensepublictheader_FRecAccName -> expensepublictheader_FRecAccName
    int expensepublictheader_LinearLayout -> expensepublictheader_LinearLayout
    int expensepublictheader_No -> expensepublictheader_No
    int expensepublictheader_Note -> expensepublictheader_Note
    int expensepublictheader_ScrollView -> expensepublictheader_ScrollView
    int expensepublictheader_cause -> expensepublictheader_cause
    int expensepublictheader_tb1 -> expensepublictheader_tb1
    int expensepublictheader_tb2 -> expensepublictheader_tb2
    int expensespecialtbody_ClientName -> expensespecialtbody_ClientName
    int expensespecialtbody_FAmount -> expensespecialtbody_FAmount
    int expensespecialtbody_FClientName -> expensespecialtbody_FClientName
    int expensespecialtbody_FConSmDate -> expensespecialtbody_FConSmDate
    int expensespecialtbody_FConSmType -> expensespecialtbody_FConSmType
    int expensespecialtbody_FProjectName -> expensespecialtbody_FProjectName
    int expensespecialtbody_FUse -> expensespecialtbody_FUse
    int expensespecialtbody_ListView -> expensespecialtbody_ListView
    int expensespecialtbody_ProjectName -> expensespecialtbody_ProjectName
    int expensespecialtbody_Use -> expensespecialtbody_Use
    int expensespecialtheader_FAmountAll -> expensespecialtheader_FAmountAll
    int expensespecialtheader_FBillNo -> expensespecialtheader_FBillNo
    int expensespecialtheader_FCommitDate -> expensespecialtheader_FCommitDate
    int expensespecialtheader_FConSmName -> expensespecialtheader_FConSmName
    int expensespecialtheader_FGeneralName -> expensespecialtheader_FGeneralName
    int expensespecialtheader_LinearLayout -> expensespecialtheader_LinearLayout
    int expensespecialtheader_No -> expensespecialtheader_No
    int expensespecialtheader_ScrollView -> expensespecialtheader_ScrollView
    int expensespecialtheader_bill -> expensespecialtheader_bill
    int expensespecialtheader_imgbtnApprove -> expensespecialtheader_imgbtnApprove
    int expensespecialthingheader_FAmountAll -> expensespecialthingheader_FAmountAll
    int expensespecialthingheader_FBillNo -> expensespecialthingheader_FBillNo
    int expensespecialthingheader_FCommitDate -> expensespecialthingheader_FCommitDate
    int expensespecialthingheader_FConSmName -> expensespecialthingheader_FConSmName
    int expensespecialthingheader_LinearLayout -> expensespecialthingheader_LinearLayout
    int expensespecialthingheader_No -> expensespecialthingheader_No
    int expensespecialthingheader_ScrollView -> expensespecialthingheader_ScrollView
    int expensespecialthingheader_bill -> expensespecialthingheader_bill
    int fe_destroy_FApplyDate -> fe_destroy_FApplyDate
    int fe_destroy_FApplyDept -> fe_destroy_FApplyDept
    int fe_destroy_FApplyName -> fe_destroy_FApplyName
    int fe_destroy_FBillNo -> fe_destroy_FBillNo
    int fe_destroy_FDestroy -> fe_destroy_FDestroy
    int fe_destroy_FReason -> fe_destroy_FReason
    int fe_destroy_FTel -> fe_destroy_FTel
    int fe_destroy_FWitnesses -> fe_destroy_FWitnesses
    int fe_destroy_LinearLayout -> fe_destroy_LinearLayout
    int fe_destroy_ScrollView -> fe_destroy_ScrollView
    int fe_destroy_tbody_FCompany -> fe_destroy_tbody_FCompany
    int fe_destroy_tbody_FDestroyTime -> fe_destroy_tbody_FDestroyTime
    int fe_destroy_tbody_FKeeper -> fe_destroy_tbody_FKeeper
    int fe_destroy_tbody_FKeeperArea -> fe_destroy_tbody_FKeeperArea
    int fe_destroy_tbody_FKeeperDept -> fe_destroy_tbody_FKeeperDept
    int fe_destroy_tbody_FLine -> fe_destroy_tbody_FLine
    int fe_destroy_tbody_FStatus -> fe_destroy_tbody_FStatus
    int fe_destroy_tbody_FeCode -> fe_destroy_tbody_FeCode
    int fe_destroy_tbody_FeName -> fe_destroy_tbody_FeName
    int fe_destroy_tbody_FeType -> fe_destroy_tbody_FeType
    int fe_engraving_FAmount -> fe_engraving_FAmount
    int fe_engraving_FApplyDate -> fe_engraving_FApplyDate
    int fe_engraving_FApplyDept -> fe_engraving_FApplyDept
    int fe_engraving_FApplyName -> fe_engraving_FApplyName
    int fe_engraving_FBillNo -> fe_engraving_FBillNo
    int fe_engraving_FTel -> fe_engraving_FTel
    int fe_engraving_LinearLayout -> fe_engraving_LinearLayout
    int fe_engraving_No -> fe_engraving_No
    int fe_engraving_ScrollView -> fe_engraving_ScrollView
    int fe_engraving_body_FCompany -> fe_engraving_body_FCompany
    int fe_engraving_body_FKeeper -> fe_engraving_body_FKeeper
    int fe_engraving_body_FKeeperArea -> fe_engraving_body_FKeeperArea
    int fe_engraving_body_FKeeperDept -> fe_engraving_body_FKeeperDept
    int fe_engraving_body_FKeeperTel -> fe_engraving_body_FKeeperTel
    int fe_engraving_body_FLine -> fe_engraving_body_FLine
    int fe_engraving_body_FNote -> fe_engraving_body_FNote
    int fe_engraving_body_FReason -> fe_engraving_body_FReason
    int fe_engraving_body_FeName -> fe_engraving_body_FeName
    int fe_engraving_body_FeType -> fe_engraving_body_FeType
    int fe_takeout_FApplyDate -> fe_takeout_FApplyDate
    int fe_takeout_FApplyDept -> fe_takeout_FApplyDept
    int fe_takeout_FApplyName -> fe_takeout_FApplyName
    int fe_takeout_FBillNo -> fe_takeout_FBillNo
    int fe_takeout_FDestination -> fe_takeout_FDestination
    int fe_takeout_FEndTime -> fe_takeout_FEndTime
    int fe_takeout_FProjectName -> fe_takeout_FProjectName
    int fe_takeout_FSealData -> fe_takeout_FSealData
    int fe_takeout_FStartTime -> fe_takeout_FStartTime
    int fe_takeout_FTel -> fe_takeout_FTel
    int fe_takeout_FeCarry -> fe_takeout_FeCarry
    int fe_takeout_FeCarryTel -> fe_takeout_FeCarryTel
    int fe_takeout_FeCode -> fe_takeout_FeCode
    int fe_takeout_FeName -> fe_takeout_FeName
    int fe_takeout_FeUseCarry -> fe_takeout_FeUseCarry
    int fe_takeout_FeUseDestination -> fe_takeout_FeUseDestination
    int fe_takeout_LinearLayout -> fe_takeout_LinearLayout
    int fe_takeout_No -> fe_takeout_No
    int fe_takeout_ScrollView -> fe_takeout_ScrollView
    int fe_transfer_FAmount -> fe_transfer_FAmount
    int fe_transfer_FApplyDate -> fe_transfer_FApplyDate
    int fe_transfer_FApplyDept -> fe_transfer_FApplyDept
    int fe_transfer_FApplyName -> fe_transfer_FApplyName
    int fe_transfer_FBillNo -> fe_transfer_FBillNo
    int fe_transfer_FTel -> fe_transfer_FTel
    int fe_transfer_FnKeeper -> fe_transfer_FnKeeper
    int fe_transfer_FnKeeperArea -> fe_transfer_FnKeeperArea
    int fe_transfer_FnKeeperDept -> fe_transfer_FnKeeperDept
    int fe_transfer_FnKeeperTel -> fe_transfer_FnKeeperTel
    int fe_transfer_LinearLayout -> fe_transfer_LinearLayout
    int fe_transfer_No -> fe_transfer_No
    int fe_transfer_ScrollView -> fe_transfer_ScrollView
    int fe_transfer_body_FCompany -> fe_transfer_body_FCompany
    int fe_transfer_body_FKeeper -> fe_transfer_body_FKeeper
    int fe_transfer_body_FKeeperArea -> fe_transfer_body_FKeeperArea
    int fe_transfer_body_FKeeperDept -> fe_transfer_body_FKeeperDept
    int fe_transfer_body_FLine -> fe_transfer_body_FLine
    int fe_transfer_body_FReason -> fe_transfer_body_FReason
    int fe_transfer_body_FStatus -> fe_transfer_body_FStatus
    int fe_transfer_body_FeCode -> fe_transfer_body_FeCode
    int fe_transfer_body_FeName -> fe_transfer_body_FeName
    int fe_transfer_body_FeType -> fe_transfer_body_FeType
    int fe_update_FAmount -> fe_update_FAmount
    int fe_update_FApplyDate -> fe_update_FApplyDate
    int fe_update_FApplyDept -> fe_update_FApplyDept
    int fe_update_FApplyName -> fe_update_FApplyName
    int fe_update_FBillNo -> fe_update_FBillNo
    int fe_update_FDestroy -> fe_update_FDestroy
    int fe_update_FDestroyWitness -> fe_update_FDestroyWitness
    int fe_update_FTel -> fe_update_FTel
    int fe_update_LinearLayout -> fe_update_LinearLayout
    int fe_update_No -> fe_update_No
    int fe_update_ScrollView -> fe_update_ScrollView
    int fe_update_tbody_FCompany -> fe_update_tbody_FCompany
    int fe_update_tbody_FKeeper -> fe_update_tbody_FKeeper
    int fe_update_tbody_FKeeperArea -> fe_update_tbody_FKeeperArea
    int fe_update_tbody_FKeeperDept -> fe_update_tbody_FKeeperDept
    int fe_update_tbody_FLine -> fe_update_tbody_FLine
    int fe_update_tbody_FReason -> fe_update_tbody_FReason
    int fe_update_tbody_FStatus -> fe_update_tbody_FStatus
    int fe_update_tbody_FeCode -> fe_update_tbody_FeCode
    int fe_update_tbody_FeName -> fe_update_tbody_FeName
    int fe_update_tbody_FeType -> fe_update_tbody_FeType
    int fixed_assets_special_FApplyCause -> fixed_assets_special_FApplyCause
    int fixed_assets_special_FApplyDate -> fixed_assets_special_FApplyDate
    int fixed_assets_special_FApplyDept -> fixed_assets_special_FApplyDept
    int fixed_assets_special_FApplyName -> fixed_assets_special_FApplyName
    int fixed_assets_special_FBillNo -> fixed_assets_special_FBillNo
    int fixed_assets_special_FReason -> fixed_assets_special_FReason
    int fixed_assets_special_FRequireType -> fixed_assets_special_FRequireType
    int fixed_assets_special_LinearLayout -> fixed_assets_special_LinearLayout
    int fixed_assets_special_No -> fixed_assets_special_No
    int fixed_assets_special_ScrollView -> fixed_assets_special_ScrollView
    int fixed_assets_special_body_FBillNo -> fixed_assets_special_body_FBillNo
    int fixed_assets_special_body_FDate -> fixed_assets_special_body_FDate
    int fixed_assets_special_body_FLine -> fixed_assets_special_body_FLine
    int fixed_assets_special_body_FModel -> fixed_assets_special_body_FModel
    int fixed_assets_special_body_FName -> fixed_assets_special_body_FName
    int fixed_assets_special_body_FNote -> fixed_assets_special_body_FNote
    int fixed_assets_special_body_FNumber -> fixed_assets_special_body_FNumber
    int fixed_assets_special_body_FPerson -> fixed_assets_special_body_FPerson
    int fl_inner -> fl_inner
    int flip -> flip
    int fullscreen -> fullscreen
    int gridview -> gridview
    int guide_viewpager -> guide_viewpager
    int guide_viewpager_imageView1 -> guide_viewpager_imageView1
    int guide_viewpager_imageView2 -> guide_viewpager_imageView2
    int guide_viewpager_layout -> guide_viewpager_layout
    int guide_viewpager_start -> guide_viewpager_start
    int homeAsUp -> homeAsUp
    int imgbtnJurney -> imgbtnJurney
    int items_footer -> items_footer
    int items_imgbtnHistory -> items_imgbtnHistory
    int items_imgbtnList -> items_imgbtnList
    int left -> left
    int listMode -> listMode
    int login_btnLogin -> login_btnLogin
    int login_checkBox -> login_checkBox
    int login_editPassWord -> login_editPassWord
    int login_editUserName -> login_editUserName
    int login_lock_Gestures -> login_lock_Gestures
    int login_lock_NoSetPwd -> login_lock_NoSetPwd
    int login_lock_Pattern -> login_lock_Pattern
    int login_lock_jump -> login_lock_jump
    int login_lock_manager_gestures -> login_lock_manager_gestures
    int login_lock_setpwd_Gestures -> login_lock_setpwd_Gestures
    int login_lock_setpwd_Pattern -> login_lock_setpwd_Pattern
    int login_lock_setpwd_reset -> login_lock_setpwd_reset
    int login_lock_setpwd_save -> login_lock_setpwd_save
    int login_tablelayout1 -> login_tablelayout1
    int login_tablerow1 -> login_tablerow1
    int login_tablerow2 -> login_tablerow2
    int login_textView1 -> login_textView1
    int login_tvPassword -> login_tvPassword
    int login_tvUserName -> login_tvUserName
    int low_consumable_FApplyCause -> low_consumable_FApplyCause
    int low_consumable_FApplyDate -> low_consumable_FApplyDate
    int low_consumable_FApplyDept -> low_consumable_FApplyDept
    int low_consumable_FApplyName -> low_consumable_FApplyName
    int low_consumable_FBillNo -> low_consumable_FBillNo
    int low_consumable_FBillType -> low_consumable_FBillType
    int low_consumable_LinearLayout -> low_consumable_LinearLayout
    int low_consumable_No -> low_consumable_No
    int low_consumable_ScrollView -> low_consumable_ScrollView
    int low_consumable_body_FAccount -> low_consumable_body_FAccount
    int low_consumable_body_FLine -> low_consumable_body_FLine
    int low_consumable_body_FMaterialName -> low_consumable_body_FMaterialName
    int low_consumable_body_FMaterialType -> low_consumable_body_FMaterialType
    int low_consumable_body_FModel -> low_consumable_body_FModel
    int low_consumable_body_FNote -> low_consumable_body_FNote
    int low_consumable_body_FUnit -> low_consumable_body_FUnit
    int lower_node_approve_FCancle -> lower_node_approve_FCancle
    int lower_node_approve_FConfirm -> lower_node_approve_FConfirm
    int lower_node_approve_FResult -> lower_node_approve_FResult
    int lower_node_approve_LinearLayout -> lower_node_approve_LinearLayout
    int lower_node_approve_ScrollView -> lower_node_approve_ScrollView
    int lower_node_approve_checkBox_layout -> lower_node_approve_checkBox_layout
    int lower_node_approve_checkbox_name -> lower_node_approve_checkbox_name
    int lower_node_approve_checkbox_value -> lower_node_approve_checkbox_value
    int lower_node_approve_search_FImageView -> lower_node_approve_search_FImageView
    int lower_node_approve_search_FItem -> lower_node_approve_search_FItem
    int lower_node_approve_search_FNodeName -> lower_node_approve_search_FNodeName
    int lower_node_approve_spinner_role -> lower_node_approve_spinner_role
    int lower_node_approve_spinner_role_title -> lower_node_approve_spinner_role_title
    int lower_node_approve_spinner_user -> lower_node_approve_spinner_user
    int lower_node_approve_struct_layout -> lower_node_approve_struct_layout
    int main_btnAttendance -> main_btnAttendance
    int main_btnContacts -> main_btnContacts
    int main_btnDevelopHour -> main_btnDevelopHour
    int main_btnExpense -> main_btnExpense
    int main_btnMarket -> main_btnMarket
    int main_btnMeeting -> main_btnMeeting
    int main_btnMyTask -> main_btnMyTask
    int main_btnlync -> main_btnlync
    int main_hello -> main_hello
    int main_imageView -> main_imageView
    int main_imgbtnExit -> main_imgbtnExit
    int main_imgbtnSetup -> main_imgbtnSetup
    int main_msg_MyTask -> main_msg_MyTask
    int main_msg_MyTask_bk -> main_msg_MyTask_bk
    int main_top -> main_top
    int main_txtFItemName -> main_txtFItemName
    int main_txtTitle -> main_txtTitle
    int main_txtWelcome -> main_txtWelcome
    int manualOnly -> manualOnly
    int margin -> margin
    int market_bid_FBidCode -> market_bid_FBidCode
    int market_bid_FCustomerName -> market_bid_FCustomerName
    int market_bid_FImageButton -> market_bid_FImageButton
    int market_bid_FNodeName -> market_bid_FNodeName
    int market_bid_FTasker -> market_bid_FTasker
    int market_bid_NodeName_Label -> market_bid_NodeName_Label
    int market_bid_Tasker_Label -> market_bid_Tasker_Label
    int market_bid_pullToRefreshListView -> market_bid_pullToRefreshListView
    int market_bid_search -> market_bid_search
    int market_bid_searchEditText -> market_bid_searchEditText
    int market_bid_searchImageButton -> market_bid_searchImageButton
    int market_bid_search_item -> market_bid_search_item
    int market_bid_searchtext -> market_bid_searchtext
    int market_contract_FContractCode -> market_contract_FContractCode
    int market_contract_FCustomerName -> market_contract_FCustomerName
    int market_contract_FImageButton -> market_contract_FImageButton
    int market_contract_FNodeName -> market_contract_FNodeName
    int market_contract_FTasker -> market_contract_FTasker
    int market_contract_NodeName_Label -> market_contract_NodeName_Label
    int market_contract_Tasker_Label -> market_contract_Tasker_Label
    int market_contract_pullToRefreshListView -> market_contract_pullToRefreshListView
    int market_contract_search -> market_contract_search
    int market_contract_searchEditText -> market_contract_searchEditText
    int market_contract_searchImageButton -> market_contract_searchImageButton
    int market_contract_search_item -> market_contract_search_item
    int market_contract_searchtext -> market_contract_searchtext
    int market_main_bid_search -> market_main_bid_search
    int market_main_contract_search -> market_main_contract_search
    int market_main_product_search -> market_main_product_search
    int market_product_pullToRefreshListView -> market_product_pullToRefreshListView
    int market_product_search -> market_product_search
    int market_product_searchEditText -> market_product_searchEditText
    int market_product_searchImageButton -> market_product_searchImageButton
    int market_product_search_FFirstLine -> market_product_search_FFirstLine
    int market_product_search_FModel -> market_product_search_FModel
    int market_product_search_FName -> market_product_search_FName
    int market_product_search_FSecLine -> market_product_search_FSecLine
    int market_product_search_FStandPrice -> market_product_search_FStandPrice
    int market_product_search_item -> market_product_search_item
    int market_product_search_layout -> market_product_search_layout
    int market_product_searchtext -> market_product_searchtext
    int market_workflow_dot -> market_workflow_dot
    int market_workflow_listView -> market_workflow_listView
    int market_workflow_textline -> market_workflow_textline
    int market_workflowlayout_FComment -> market_workflowlayout_FComment
    int market_workflowlayout_FCornet -> market_workflowlayout_FCornet
    int market_workflowlayout_FItemName -> market_workflowlayout_FItemName
    int market_workflowlayout_FStatusResult -> market_workflowlayout_FStatusResult
    int market_workflowlayout_FStepFlagName -> market_workflowlayout_FStepFlagName
    int market_workflowlayout_FUpdateTime -> market_workflowlayout_FUpdateTime
    int meeting_detail_ApplyDept -> meeting_detail_ApplyDept
    int meeting_detail_ApplyName -> meeting_detail_ApplyName
    int meeting_detail_FApplyDept -> meeting_detail_FApplyDept
    int meeting_detail_FApplyName -> meeting_detail_FApplyName
    int meeting_detail_FMeetingDate -> meeting_detail_FMeetingDate
    int meeting_detail_FMeetingEnd -> meeting_detail_FMeetingEnd
    int meeting_detail_FMeetingMasterId -> meeting_detail_FMeetingMasterId
    int meeting_detail_FMeetingMasterName -> meeting_detail_FMeetingMasterName
    int meeting_detail_FMeetingMaster_ImageView -> meeting_detail_FMeetingMaster_ImageView
    int meeting_detail_FMeetingName -> meeting_detail_FMeetingName
    int meeting_detail_FMeetingName_ImageView -> meeting_detail_FMeetingName_ImageView
    int meeting_detail_FMeetingPerson -> meeting_detail_FMeetingPerson
    int meeting_detail_FMeetingPerson_ImageView -> meeting_detail_FMeetingPerson_ImageView
    int meeting_detail_FMeetingRoomId -> meeting_detail_FMeetingRoomId
    int meeting_detail_FMeetingRoomIp -> meeting_detail_FMeetingRoomIp
    int meeting_detail_FMeetingRoomName -> meeting_detail_FMeetingRoomName
    int meeting_detail_FMeetingRoom_ImageView -> meeting_detail_FMeetingRoom_ImageView
    int meeting_detail_FMeetingStart -> meeting_detail_FMeetingStart
    int meeting_detail_LinearLayout -> meeting_detail_LinearLayout
    int meeting_detail_ScrollView -> meeting_detail_ScrollView
    int meeting_detail_button_FCancle -> meeting_detail_button_FCancle
    int meeting_detail_button_FSave -> meeting_detail_button_FSave
    int meeting_detail_icon -> meeting_detail_icon
    int meeting_list_PullToRefreshListView -> meeting_list_PullToRefreshListView
    int meeting_list_item -> meeting_list_item
    int meeting_list_item_asFor -> meeting_list_item_asFor
    int meeting_list_item_btnCancle -> meeting_list_item_btnCancle
    int meeting_list_item_fCreate -> meeting_list_item_fCreate
    int meeting_list_item_fMeetingDate -> meeting_list_item_fMeetingDate
    int meeting_list_item_fMeetingEnd -> meeting_list_item_fMeetingEnd
    int meeting_list_item_fMeetingName -> meeting_list_item_fMeetingName
    int meeting_list_item_fMeetingStart -> meeting_list_item_fMeetingStart
    int meeting_list_launch -> meeting_list_launch
    int meeting_list_mine -> meeting_list_mine
    int meeting_person_list_checkAll -> meeting_person_list_checkAll
    int meeting_person_list_confirm -> meeting_person_list_confirm
    int meeting_person_list_item -> meeting_person_list_item
    int meeting_person_list_item_FDeptName -> meeting_person_list_item_FDeptName
    int meeting_person_list_item_FItemName -> meeting_person_list_item_FItemName
    int meeting_person_list_item_FItemNumber -> meeting_person_list_item_FItemNumber
    int meeting_person_list_item_chkBox -> meeting_person_list_item_chkBox
    int meeting_person_list_not_select -> meeting_person_list_not_select
    int meeting_person_list_pullToRefreshListView -> meeting_person_list_pullToRefreshListView
    int meeting_person_list_yet_select -> meeting_person_list_yet_select
    int meeting_room_list_item -> meeting_room_list_item
    int meeting_room_list_item_FRoomId -> meeting_room_list_item_FRoomId
    int meeting_room_list_item_FRoomIp -> meeting_room_list_item_FRoomIp
    int meeting_room_list_item_FRoomName -> meeting_room_list_item_FRoomName
    int meeting_room_list_item_FType -> meeting_room_list_item_FType
    int meeting_room_list_pullToRefreshListView -> meeting_room_list_pullToRefreshListView
    int mem_FApplyDate -> mem_FApplyDate
    int mem_FApplyerDeptName -> mem_FApplyerDeptName
    int mem_FApplyerName -> mem_FApplyerName
    int mem_FBillNo -> mem_FBillNo
    int mem_FMemProduct -> mem_FMemProduct
    int mem_FMemReasonNote -> mem_FMemReasonNote
    int mem_FMemScope -> mem_FMemScope
    int mem_FNote -> mem_FNote
    int mem_FOtherReason -> mem_FOtherReason
    int mem_FSubject -> mem_FSubject
    int mem_FTechnology -> mem_FTechnology
    int mem_FUpgradeNote -> mem_FUpgradeNote
    int mem_FUpgradeReason -> mem_FUpgradeReason
    int mem_FValidDate -> mem_FValidDate
    int mem_FVersion -> mem_FVersion
    int mem_LinearLayout -> mem_LinearLayout
    int mem_No -> mem_No
    int mem_ScrollView -> mem_ScrollView
    int mem_list1 -> mem_list1
    int mem_list10 -> mem_list10
    int mem_list11 -> mem_list11
    int mem_list12 -> mem_list12
    int mem_list13 -> mem_list13
    int mem_list14 -> mem_list14
    int mem_list15 -> mem_list15
    int mem_list16 -> mem_list16
    int mem_list17 -> mem_list17
    int mem_list18 -> mem_list18
    int mem_list19 -> mem_list19
    int mem_list2 -> mem_list2
    int mem_list20 -> mem_list20
    int mem_list21 -> mem_list21
    int mem_list22 -> mem_list22
    int mem_list23 -> mem_list23
    int mem_list24 -> mem_list24
    int mem_list3 -> mem_list3
    int mem_list4 -> mem_list4
    int mem_list5 -> mem_list5
    int mem_list6 -> mem_list6
    int mem_list7 -> mem_list7
    int mem_list8 -> mem_list8
    int mem_list9 -> mem_list9
    int menu_arrows -> menu_arrows
    int menu_search -> menu_search
    int networkpermission_ApplyerDeptName -> networkpermission_ApplyerDeptName
    int networkpermission_ApplyerType -> networkpermission_ApplyerType
    int networkpermission_FApplyName -> networkpermission_FApplyName
    int networkpermission_FApplyerDeptName -> networkpermission_FApplyerDeptName
    int networkpermission_FApplyerType -> networkpermission_FApplyerType
    int networkpermission_FBillNo -> networkpermission_FBillNo
    int networkpermission_FComboBox4 -> networkpermission_FComboBox4
    int networkpermission_FDate -> networkpermission_FDate
    int networkpermission_FNote -> networkpermission_FNote
    int networkpermission_FTelphone -> networkpermission_FTelphone
    int networkpermission_LinearLayout -> networkpermission_LinearLayout
    int networkpermission_No -> networkpermission_No
    int networkpermission_Note -> networkpermission_Note
    int networkpermission_ScrollView -> networkpermission_ScrollView
    int networkpermission_cause -> networkpermission_cause
    int networkpermission_imgbtnApprove -> networkpermission_imgbtnApprove
    int networkpermission_tb1 -> networkpermission_tb1
    int networkpermission_tb2 -> networkpermission_tb2
    int new_product_lib_FApplyDate -> new_product_lib_FApplyDate
    int new_product_lib_FApplyDept -> new_product_lib_FApplyDept
    int new_product_lib_FApplyName -> new_product_lib_FApplyName
    int new_product_lib_FBillNo -> new_product_lib_FBillNo
    int new_product_lib_FDescribe -> new_product_lib_FDescribe
    int new_product_lib_FMaterialType -> new_product_lib_FMaterialType
    int new_product_lib_FProductLine -> new_product_lib_FProductLine
    int new_product_lib_FReason -> new_product_lib_FReason
    int new_product_lib_LinearLayout -> new_product_lib_LinearLayout
    int new_product_lib_No -> new_product_lib_No
    int new_product_lib_ScrollView -> new_product_lib_ScrollView
    int new_product_lib_tbody_FAmount -> new_product_lib_tbody_FAmount
    int new_product_lib_tbody_FInLocation -> new_product_lib_tbody_FInLocation
    int new_product_lib_tbody_FLine -> new_product_lib_tbody_FLine
    int new_product_lib_tbody_FModel -> new_product_lib_tbody_FModel
    int new_product_lib_tbody_FNote -> new_product_lib_tbody_FNote
    int new_product_lib_tbody_FOutLocation -> new_product_lib_tbody_FOutLocation
    int new_product_lib_tbody_FProductName -> new_product_lib_tbody_FProductName
    int new_product_lib_tbody_FUnit -> new_product_lib_tbody_FUnit
    int new_product_rework_FApplyDate -> new_product_rework_FApplyDate
    int new_product_rework_FApplyDept -> new_product_rework_FApplyDept
    int new_product_rework_FApplyName -> new_product_rework_FApplyName
    int new_product_rework_FBillNo -> new_product_rework_FBillNo
    int new_product_rework_FProductLine -> new_product_rework_FProductLine
    int new_product_rework_FProductModel -> new_product_rework_FProductModel
    int new_product_rework_FProductName -> new_product_rework_FProductName
    int new_product_rework_FProjectCode -> new_product_rework_FProjectCode
    int new_product_rework_FProjectName -> new_product_rework_FProjectName
    int new_product_rework_FReason -> new_product_rework_FReason
    int new_product_rework_LinearLayout -> new_product_rework_LinearLayout
    int new_product_rework_No -> new_product_rework_No
    int new_product_rework_ScrollView -> new_product_rework_ScrollView
    int new_product_rework_tbody_FAmount -> new_product_rework_tbody_FAmount
    int new_product_rework_tbody_FContent -> new_product_rework_tbody_FContent
    int new_product_rework_tbody_FExpectedTime -> new_product_rework_tbody_FExpectedTime
    int new_product_rework_tbody_FLine -> new_product_rework_tbody_FLine
    int new_product_rework_tbody_FLocation -> new_product_rework_tbody_FLocation
    int new_product_rework_tbody_FLocationCode -> new_product_rework_tbody_FLocationCode
    int new_product_rework_tbody_FMaterialCode -> new_product_rework_tbody_FMaterialCode
    int new_product_rework_tbody_FMaterialName -> new_product_rework_tbody_FMaterialName
    int new_product_rework_tbody_FModel -> new_product_rework_tbody_FModel
    int new_product_rework_tbody_FRequireTime -> new_product_rework_tbody_FRequireTime
    int new_product_rework_tbody_FType -> new_product_rework_tbody_FType
    int none -> none
    int normal -> normal
    int panel1 -> panel1
    int panel2 -> panel2
    int panel2_1 -> panel2_1
    int panel2_2 -> panel2_2
    int panel3 -> panel3
    int panel3_1 -> panel3_1
    int panel3_2 -> panel3_2
    int panel4 -> panel4
    int panel5 -> panel5
    int panel5_1 -> panel5_1
    int panel5_2 -> panel5_2
    int panel5_3 -> panel5_3
    int panel5_4 -> panel5_4
    int panel6 -> panel6
    int panel6_1 -> panel6_1
    int panel6_2 -> panel6_2
    int pluscopy_main_FCancle -> pluscopy_main_FCancle
    int pluscopy_main_FConfirm -> pluscopy_main_FConfirm
    int pluscopy_main_FContent -> pluscopy_main_FContent
    int pluscopy_main_FContent_ImageView -> pluscopy_main_FContent_ImageView
    int pluscopy_main_FItemNames -> pluscopy_main_FItemNames
    int pluscopy_main_FItemNumbers -> pluscopy_main_FItemNumbers
    int pluscopy_main_FItemNumbers_ImageView -> pluscopy_main_FItemNumbers_ImageView
    int pluscopy_main_FPlus -> pluscopy_main_FPlus
    int pluscopy_main_LinearLayout -> pluscopy_main_LinearLayout
    int pluscopy_main_ScrollView -> pluscopy_main_ScrollView
    int pluscopy_main_checkBox -> pluscopy_main_checkBox
    int pluscopy_main_checkBox_name -> pluscopy_main_checkBox_name
    int pluscopy_main_checkBox_value -> pluscopy_main_checkBox_value
    int pluscopy_main_title -> pluscopy_main_title
    int pluscopy_person_checkAll -> pluscopy_person_checkAll
    int pluscopy_person_confirm -> pluscopy_person_confirm
    int pluscopy_person_item -> pluscopy_person_item
    int pluscopy_person_item_FItemName -> pluscopy_person_item_FItemName
    int pluscopy_person_item_FItemNumber -> pluscopy_person_item_FItemNumber
    int pluscopy_person_item_chkBox -> pluscopy_person_item_chkBox
    int pluscopy_person_list -> pluscopy_person_list
    int pluscopy_person_not_select -> pluscopy_person_not_select
    int pluscopy_person_yet_select -> pluscopy_person_yet_select
    int process_img -> process_img
    int project_read_FApplyDate -> project_read_FApplyDate
    int project_read_FApplyDept -> project_read_FApplyDept
    int project_read_FApplyName -> project_read_FApplyName
    int project_read_FBillNo -> project_read_FBillNo
    int project_read_FPermissionType -> project_read_FPermissionType
    int project_read_FProgramPublic -> project_read_FProgramPublic
    int project_read_FProjectManage -> project_read_FProjectManage
    int project_read_FTel -> project_read_FTel
    int project_read_LinearLayout -> project_read_LinearLayout
    int project_read_No -> project_read_No
    int project_read_ScrollView -> project_read_ScrollView
    int project_read_tbody_FApplyDept -> project_read_tbody_FApplyDept
    int project_read_tbody_FApplyName -> project_read_tbody_FApplyName
    int project_read_tbody_FApplyNumber -> project_read_tbody_FApplyNumber
    int project_read_tbody_FApplyReason -> project_read_tbody_FApplyReason
    int project_read_tbody_FApplyType -> project_read_tbody_FApplyType
    int project_read_tbody_FEmail -> project_read_tbody_FEmail
    int project_read_tbody_FEndProject -> project_read_tbody_FEndProject
    int project_read_tbody_FLine -> project_read_tbody_FLine
    int project_read_tbody_FMarketPublic -> project_read_tbody_FMarketPublic
    int project_read_tbody_FProductPublic -> project_read_tbody_FProductPublic
    int project_read_tbody_FProgramPublic -> project_read_tbody_FProgramPublic
    int project_read_tbody_FRisk -> project_read_tbody_FRisk
    int project_read_tbody_FStartProject -> project_read_tbody_FStartProject
    int pullDownFromTop -> pullDownFromTop
    int pullFromEnd -> pullFromEnd
    int pullFromStart -> pullFromStart
    int pullUpFromBottom -> pullUpFromBottom
    int pull_to_refresh_image -> pull_to_refresh_image
    int pull_to_refresh_progress -> pull_to_refresh_progress
    int pull_to_refresh_sub_text -> pull_to_refresh_sub_text
    int pull_to_refresh_text -> pull_to_refresh_text
    int purchase_stock_FApplyDate -> purchase_stock_FApplyDate
    int purchase_stock_FApplyName -> purchase_stock_FApplyName
    int purchase_stock_FBillNo -> purchase_stock_FBillNo
    int purchase_stock_FDept -> purchase_stock_FDept
    int purchase_stock_FProcessName -> purchase_stock_FProcessName
    int purchase_stock_FProjectCode -> purchase_stock_FProjectCode
    int purchase_stock_FProjectName -> purchase_stock_FProjectName
    int purchase_stock_FTechnologyName -> purchase_stock_FTechnologyName
    int purchase_stock_LinearLayout -> purchase_stock_LinearLayout
    int purchase_stock_No -> purchase_stock_No
    int purchase_stock_ScrollView -> purchase_stock_ScrollView
    int purchase_stock_tbody_FEstimatedPrice -> purchase_stock_tbody_FEstimatedPrice
    int purchase_stock_tbody_FLine -> purchase_stock_tbody_FLine
    int purchase_stock_tbody_FMaterialCode -> purchase_stock_tbody_FMaterialCode
    int purchase_stock_tbody_FMaterialName -> purchase_stock_tbody_FMaterialName
    int purchase_stock_tbody_FModel -> purchase_stock_tbody_FModel
    int purchase_stock_tbody_FNote -> purchase_stock_tbody_FNote
    int purchase_stock_tbody_FNumber -> purchase_stock_tbody_FNumber
    int purchase_stock_tbody_FRdDate -> purchase_stock_tbody_FRdDate
    int purchase_stock_tbody_FUnit -> purchase_stock_tbody_FUnit
    int record_bk_ll -> record_bk_ll
    int reject_spinnerDialog_Cancle -> reject_spinnerDialog_Cancle
    int reject_spinnerDialog_OK -> reject_spinnerDialog_OK
    int reject_spinnerDialog_button -> reject_spinnerDialog_button
    int reject_spinnerDialog_spinner -> reject_spinnerDialog_spinner
    int reject_spinnerDialog_title -> reject_spinnerDialog_title
    int relativeLayout1 -> relativeLayout1
    int right -> right
    int rotate -> rotate
    int scrollview -> scrollview
    int selected_view -> selected_view
    int setting_ScrollView -> setting_ScrollView
    int setting_checkUpdate -> setting_checkUpdate
    int setting_checkUpdate_image -> setting_checkUpdate_image
    int setting_gestures_image -> setting_gestures_image
    int setting_gestures_toggleButton -> setting_gestures_toggleButton
    int setting_notice -> setting_notice
    int setting_notice_toggleButton -> setting_notice_toggleButton
    int setting_version -> setting_version
    int setting_version_image -> setting_version_image
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int slidingmenumain -> slidingmenumain
    int sms_Button -> sms_Button
    int sms_Edittextborder -> sms_Edittextborder
    int sms_TextView -> sms_TextView
    int sms_notice -> sms_notice
    int sms_searchEditText -> sms_searchEditText
    int sms_searchImageButton -> sms_searchImageButton
    int sms_searchtext -> sms_searchtext
    int svn_permission_FApplyDate -> svn_permission_FApplyDate
    int svn_permission_FApplyDept -> svn_permission_FApplyDept
    int svn_permission_FApplyName -> svn_permission_FApplyName
    int svn_permission_FBillNo -> svn_permission_FBillNo
    int svn_permission_FSvnShow -> svn_permission_FSvnShow
    int svn_permission_LinearLayout -> svn_permission_LinearLayout
    int svn_permission_No -> svn_permission_No
    int svn_permission_ScrollView -> svn_permission_ScrollView
    int svn_permission_tbody_Line -> svn_permission_tbody_Line
    int svnpermissiontbody_FAddress -> svnpermissiontbody_FAddress
    int svnpermissiontbody_FReadOrWrite -> svnpermissiontbody_FReadOrWrite
    int svnpermissiontbody_FReason -> svnpermissiontbody_FReason
    int svnpermissiontbody_FResponsible -> svnpermissiontbody_FResponsible
    int tabMode -> tabMode
    int tasklist_ListView -> tasklist_ListView
    int tasklist_fsender -> tasklist_fsender
    int tasklist_searchEditText -> tasklist_searchEditText
    int tasklist_searchImageButton -> tasklist_searchImageButton
    int tasklist_xListView -> tasklist_xListView
    int tasklistlayout_FClassTypeName -> tasklistlayout_FClassTypeName
    int tasklistlayout_FSendTime -> tasklistlayout_FSendTime
    int tasklistlayout_FSender -> tasklistlayout_FSender
    int tasklistlayout_FTitle -> tasklistlayout_FTitle
    int tasklistlayout_itemsIcon -> tasklistlayout_itemsIcon
    int tasklistlayout_tablelayout -> tasklistlayout_tablelayout
    int td_borrow_FApplyDate -> td_borrow_FApplyDate
    int td_borrow_FApplyDept -> td_borrow_FApplyDept
    int td_borrow_FApplyName -> td_borrow_FApplyName
    int td_borrow_FBillNo -> td_borrow_FBillNo
    int td_borrow_FDocumentType -> td_borrow_FDocumentType
    int td_borrow_FSecrecyDate -> td_borrow_FSecrecyDate
    int td_borrow_LinearLayout -> td_borrow_LinearLayout
    int td_borrow_No -> td_borrow_No
    int td_borrow_ScrollView -> td_borrow_ScrollView
    int td_borrow_tbody_FDocumentName -> td_borrow_tbody_FDocumentName
    int td_borrow_tbody_FDocumentUse -> td_borrow_tbody_FDocumentUse
    int td_borrow_tbody_FLine -> td_borrow_tbody_FLine
    int td_borrow_tbody_FNote -> td_borrow_tbody_FNote
    int td_borrow_tbody_FSupportType -> td_borrow_tbody_FSupportType
    int td_borrow_tbody_FVersion -> td_borrow_tbody_FVersion
    int td_permission_FAfterAmount -> td_permission_FAfterAmount
    int td_permission_FApplyDate -> td_permission_FApplyDate
    int td_permission_FApplyDept -> td_permission_FApplyDept
    int td_permission_FApplyName -> td_permission_FApplyName
    int td_permission_FBeforeAmount -> td_permission_FBeforeAmount
    int td_permission_FBillNo -> td_permission_FBillNo
    int td_permission_FPersonType -> td_permission_FPersonType
    int td_permission_FTel -> td_permission_FTel
    int td_permission_LinearLayout -> td_permission_LinearLayout
    int td_permission_No -> td_permission_No
    int td_permission_ScrollView -> td_permission_ScrollView
    int td_permission_after_tbody_FApplyDept -> td_permission_after_tbody_FApplyDept
    int td_permission_after_tbody_FApplyName -> td_permission_after_tbody_FApplyName
    int td_permission_after_tbody_FApplyNumber -> td_permission_after_tbody_FApplyNumber
    int td_permission_after_tbody_FCodeAndName -> td_permission_after_tbody_FCodeAndName
    int td_permission_after_tbody_FDevelopPermission -> td_permission_after_tbody_FDevelopPermission
    int td_permission_after_tbody_FEmail -> td_permission_after_tbody_FEmail
    int td_permission_after_tbody_FLine -> td_permission_after_tbody_FLine
    int td_permission_after_tbody_FManagerPermission -> td_permission_after_tbody_FManagerPermission
    int td_permission_after_tbody_FProductName -> td_permission_after_tbody_FProductName
    int td_permission_after_tbody_FProductType -> td_permission_after_tbody_FProductType
    int td_permission_after_tbody_FReadOnly -> td_permission_after_tbody_FReadOnly
    int td_permission_after_tbody_FTestPermission -> td_permission_after_tbody_FTestPermission
    int td_permission_before_tbody_FApplyDept -> td_permission_before_tbody_FApplyDept
    int td_permission_before_tbody_FApplyName -> td_permission_before_tbody_FApplyName
    int td_permission_before_tbody_FApplyNumber -> td_permission_before_tbody_FApplyNumber
    int td_permission_before_tbody_FCodeAndName -> td_permission_before_tbody_FCodeAndName
    int td_permission_before_tbody_FEmail -> td_permission_before_tbody_FEmail
    int td_permission_before_tbody_FLine -> td_permission_before_tbody_FLine
    int td_permission_before_tbody_FManager -> td_permission_before_tbody_FManager
    int td_permission_before_tbody_FProjectPermission -> td_permission_before_tbody_FProjectPermission
    int td_permission_before_tbody_FTdDomain -> td_permission_before_tbody_FTdDomain
    int td_permission_before_tbody_FTdProject -> td_permission_before_tbody_FTdProject
    int tittle_buttons -> tittle_buttons
    int tittle_search -> tittle_search
    int tittle_searchtext -> tittle_searchtext
    int train_computer_FApplyDate -> train_computer_FApplyDate
    int train_computer_FApplyDept -> train_computer_FApplyDept
    int train_computer_FApplyName -> train_computer_FApplyName
    int train_computer_FBillNo -> train_computer_FBillNo
    int train_computer_FTel -> train_computer_FTel
    int train_computer_LinearLayout -> train_computer_LinearLayout
    int train_computer_No -> train_computer_No
    int train_computer_ScrollView -> train_computer_ScrollView
    int train_computer_tbody_FApplyDesc -> train_computer_tbody_FApplyDesc
    int train_computer_tbody_FEndTime -> train_computer_tbody_FEndTime
    int train_computer_tbody_FNote -> train_computer_tbody_FNote
    int train_computer_tbody_FStartTime -> train_computer_tbody_FStartTime
    int train_computer_tbody_Line -> train_computer_tbody_Line
    int travel_approval_FApplyDate -> travel_approval_FApplyDate
    int travel_approval_FApplyDept -> travel_approval_FApplyDept
    int travel_approval_FApplyName -> travel_approval_FApplyName
    int travel_approval_FArrangement -> travel_approval_FArrangement
    int travel_approval_FBackTime -> travel_approval_FBackTime
    int travel_approval_FBillNo -> travel_approval_FBillNo
    int travel_approval_FClientName -> travel_approval_FClientName
    int travel_approval_FStartTime -> travel_approval_FStartTime
    int travel_approval_FTravelAddress -> travel_approval_FTravelAddress
    int travel_approval_FTravelCause -> travel_approval_FTravelCause
    int travel_approval_FTravelDays -> travel_approval_FTravelDays
    int travel_approval_FTravelReport -> travel_approval_FTravelReport
    int travel_approval_LinearLayout -> travel_approval_LinearLayout
    int travel_approval_No -> travel_approval_No
    int travel_approval_ScrollView -> travel_approval_ScrollView
    int update_progress -> update_progress
    int update_progress_text -> update_progress_text
    int useLogo -> useLogo
    int webview -> webview
    int week_spinner_dialog_Cancle -> week_spinner_dialog_Cancle
    int week_spinner_dialog_OK -> week_spinner_dialog_OK
    int week_spinner_dialog_button -> week_spinner_dialog_button
    int week_spinner_dialog_week -> week_spinner_dialog_week
    int week_spinner_dialog_year -> week_spinner_dialog_year
    int welcome_VersionName -> welcome_VersionName
    int welcome_bk -> welcome_bk
    int workflow_FComment -> workflow_FComment
    int workflow_areatext -> workflow_areatext
    int workflow_been_listView -> workflow_been_listView
    int workflow_button -> workflow_button
    int workflow_content -> workflow_content
    int workflow_dot -> workflow_dot
    int workflow_imgbtnPass -> workflow_imgbtnPass
    int workflow_imgbtnReject -> workflow_imgbtnReject
    int workflow_listView -> workflow_listView
    int workflow_textline -> workflow_textline
    int workflowlayout_FComment -> workflowlayout_FComment
    int workflowlayout_FItemName -> workflowlayout_FItemName
    int workflowlayout_FStatusResult -> workflowlayout_FStatusResult
    int workflowlayout_FStepFlagName -> workflowlayout_FStepFlagName
    int workflowlayout_FUpdateTime -> workflowlayout_FUpdateTime
    int wrap_content -> wrap_content
    int xlistview_footer_content -> xlistview_footer_content
    int xlistview_footer_hint_textview -> xlistview_footer_hint_textview
    int xlistview_footer_progressbar -> xlistview_footer_progressbar
    int xlistview_header_arrow -> xlistview_header_arrow
    int xlistview_header_content -> xlistview_header_content
    int xlistview_header_hint_textview -> xlistview_header_hint_textview
    int xlistview_header_progressbar -> xlistview_header_progressbar
    int xlistview_header_text -> xlistview_header_text
    int xlistview_header_time -> xlistview_header_time
com.dahuatech.app.R$integer -> com.dahuatech.app.R$integer:
    int abs__max_action_buttons -> abs__max_action_buttons
com.dahuatech.app.R$layout -> com.dahuatech.app.R$layout:
    int abs__action_bar_home -> abs__action_bar_home
    int abs__action_bar_tab -> abs__action_bar_tab
    int abs__action_bar_tab_bar_view -> abs__action_bar_tab_bar_view
    int abs__action_bar_title_item -> abs__action_bar_title_item
    int abs__action_menu_item_layout -> abs__action_menu_item_layout
    int abs__action_menu_layout -> abs__action_menu_layout
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_close_item -> abs__action_mode_close_item
    int abs__activity_chooser_view -> abs__activity_chooser_view
    int abs__activity_chooser_view_list_item -> abs__activity_chooser_view_list_item
    int abs__list_menu_item_checkbox -> abs__list_menu_item_checkbox
    int abs__list_menu_item_icon -> abs__list_menu_item_icon
    int abs__list_menu_item_radio -> abs__list_menu_item_radio
    int abs__popup_menu_item_layout -> abs__popup_menu_item_layout
    int abs__screen_action_bar -> abs__screen_action_bar
    int abs__screen_action_bar_overlay -> abs__screen_action_bar_overlay
    int abs__screen_simple -> abs__screen_simple
    int abs__screen_simple_overlay_action_mode -> abs__screen_simple_overlay_action_mode
    int abs__search_dropdown_item_icons_2line -> abs__search_dropdown_item_icons_2line
    int abs__search_view -> abs__search_view
    int abs__simple_dropdown_hint -> abs__simple_dropdown_hint
    int ad_amap_dialog -> ad_amap_dialog
    int apply_leave_tbody -> apply_leave_tbody
    int apply_leave_theader -> apply_leave_theader
    int apply_resume_tbody -> apply_resume_tbody
    int apply_resume_theader -> apply_resume_theader
    int applydaysoff -> applydaysoff
    int applydaysoff_develop -> applydaysoff_develop
    int applyovertime -> applyovertime
    int approve_button -> approve_button
    int attendance_check_in -> attendance_check_in
    int attendance_list -> attendance_list
    int attendance_list_item -> attendance_list_item
    int capture -> capture
    int capture_header -> capture_header
    int contacts_clear_item -> contacts_clear_item
    int contacts_item_invitation -> contacts_item_invitation
    int contacts_listlayout -> contacts_listlayout
    int contacts_main -> contacts_main
    int contributionawardactivity -> contributionawardactivity
    int customdialoglayout -> customdialoglayout
    int dahuaassumecost -> dahuaassumecost
    int delslide_actionsheet -> delslide_actionsheet
    int develop_travel_tbody_one -> develop_travel_tbody_one
    int develop_travel_tbody_two -> develop_travel_tbody_two
    int develop_travel_theader -> develop_travel_theader
    int developinquiry -> developinquiry
    int developinquiry_layout -> developinquiry_layout
    int developtestnetwork -> developtestnetwork
    int dh_confirm_list -> dh_confirm_list
    int dh_confirm_list_child -> dh_confirm_list_child
    int dh_confirm_list_person -> dh_confirm_list_person
    int dh_confirm_list_person_child -> dh_confirm_list_person_child
    int dh_confirm_list_person_root -> dh_confirm_list_person_root
    int dh_confirm_list_root -> dh_confirm_list_root
    int dh_detail -> dh_detail
    int dh_list -> dh_list
    int dh_list_item -> dh_list_item
    int dh_list_project -> dh_list_project
    int dh_list_project_item -> dh_list_project_item
    int dh_list_type_item -> dh_list_type_item
    int dh_main -> dh_main
    int dh_project_search -> dh_project_search
    int dh_project_search_item -> dh_project_search_item
    int dh_type_list -> dh_type_list
    int dh_type_list_item -> dh_type_list_item
    int document_approve_tbody -> document_approve_tbody
    int document_approve_theader -> document_approve_theader
    int door_permission_tbody -> door_permission_tbody
    int door_permission_theader -> door_permission_theader
    int drawer_left_menu -> drawer_left_menu
    int drawer_right_menu -> drawer_right_menu
    int email_open_tbody -> email_open_tbody
    int emial_open_theader -> emial_open_theader
    int engineering -> engineering
    int exattendance -> exattendance
    int expense_flow_socialize -> expense_flow_socialize
    int expense_flow_travel -> expense_flow_travel
    int expense_flowclient_search -> expense_flowclient_search
    int expense_flowdetail -> expense_flowdetail
    int expense_flowdetail_button -> expense_flowdetail_button
    int expense_flowlist -> expense_flowlist
    int expense_flowlist_group -> expense_flowlist_group
    int expense_flowlist_item -> expense_flowlist_item
    int expense_flowlocal_layout -> expense_flowlocal_layout
    int expense_flowlocal_list -> expense_flowlocal_list
    int expense_flowproject_search -> expense_flowproject_search
    int expense_flowsearch_layout -> expense_flowsearch_layout
    int expense_main -> expense_main
    int expense_taxifooter -> expense_taxifooter
    int expense_taxiinput -> expense_taxiinput
    int expense_taxiitemview -> expense_taxiitemview
    int expense_taxilist -> expense_taxilist
    int expense_taxilistlayout -> expense_taxilistlayout
    int expense_taximain -> expense_taximain
    int expensecosttheader -> expensecosttheader
    int expensemarketbidtheader -> expensemarketbidtheader
    int expensemarketpaytheader -> expensemarketpaytheader
    int expenseprivatetbody -> expenseprivatetbody
    int expenseprivatetbody_layout -> expenseprivatetbody_layout
    int expenseprivatetheader -> expenseprivatetheader
    int expensepublictheader -> expensepublictheader
    int expensespecialtbody -> expensespecialtbody
    int expensespecialtbody_layout -> expensespecialtbody_layout
    int expensespecialtheader -> expensespecialtheader
    int expensespecialthingheader -> expensespecialthingheader
    int fe_destroy_tbody -> fe_destroy_tbody
    int fe_destroy_theader -> fe_destroy_theader
    int fe_engraving_tbody -> fe_engraving_tbody
    int fe_engraving_theader -> fe_engraving_theader
    int fe_takeout_theader -> fe_takeout_theader
    int fe_transfer_tbody -> fe_transfer_tbody
    int fe_transfer_theader -> fe_transfer_theader
    int fe_update_tbody -> fe_update_tbody
    int fe_update_theader -> fe_update_theader
    int fixed_assets_special_tbody -> fixed_assets_special_tbody
    int fixed_assets_special_theader -> fixed_assets_special_theader
    int guide_viewpager -> guide_viewpager
    int guide_viewpager_lay1 -> guide_viewpager_lay1
    int guide_viewpager_lay2 -> guide_viewpager_lay2
    int items_footer -> items_footer
    int login -> login
    int login_lock -> login_lock
    int login_lock_setpwd -> login_lock_setpwd
    int low_consumabl_tbody -> low_consumabl_tbody
    int low_consumable_theader -> low_consumable_theader
    int lower_node_approve -> lower_node_approve
    int lower_node_approve_checkbox -> lower_node_approve_checkbox
    int lower_node_approve_search -> lower_node_approve_search
    int lower_node_approve_spinner_role -> lower_node_approve_spinner_role
    int lower_node_approve_spinner_user -> lower_node_approve_spinner_user
    int main -> main
    int main_footer -> main_footer
    int main_header -> main_header
    int market_bid_item -> market_bid_item
    int market_bid_search -> market_bid_search
    int market_contract_item -> market_contract_item
    int market_contract_search -> market_contract_search
    int market_main -> market_main
    int market_product_item -> market_product_item
    int market_product_search -> market_product_search
    int market_workflow -> market_workflow
    int market_workflow_item -> market_workflow_item
    int meeting_detail -> meeting_detail
    int meeting_list -> meeting_list
    int meeting_list_item -> meeting_list_item
    int meeting_person_list -> meeting_person_list
    int meeting_person_list_item -> meeting_person_list_item
    int meeting_room_list -> meeting_room_list
    int meeting_room_list_item -> meeting_room_list_item
    int memrequre -> memrequre
    int networkpermission -> networkpermission
    int new_product_lib_tbody -> new_product_lib_tbody
    int new_product_lib_theader -> new_product_lib_theader
    int new_product_rework_tbody -> new_product_rework_tbody
    int new_product_rework_theader -> new_product_rework_theader
    int plus_label_copy_to -> plus_label_copy_to
    int pluscopy_main -> pluscopy_main
    int pluscopy_main_checkbox -> pluscopy_main_checkbox
    int pluscopy_person -> pluscopy_person
    int pluscopy_person_item -> pluscopy_person_item
    int project_read_tbody -> project_read_tbody
    int project_read_theader -> project_read_theader
    int pull_to_refresh_header_horizontal -> pull_to_refresh_header_horizontal
    int pull_to_refresh_header_vertical -> pull_to_refresh_header_vertical
    int purchase_stock_tbody -> purchase_stock_tbody
    int purchase_stock_theader -> purchase_stock_theader
    int reject_spinner_dialog -> reject_spinner_dialog
    int setting -> setting
    int sherlock_spinner_dropdown_item -> sherlock_spinner_dropdown_item
    int sherlock_spinner_item -> sherlock_spinner_item
    int slidingmenumain -> slidingmenumain
    int sms_notice -> sms_notice
    int svn_permission_tbody -> svn_permission_tbody
    int svn_permission_theader -> svn_permission_theader
    int tasklist -> tasklist
    int tasklistlayout -> tasklistlayout
    int td_borrow_tbody -> td_borrow_tbody
    int td_borrow_theader -> td_borrow_theader
    int td_permission_after_tbody -> td_permission_after_tbody
    int td_permission_after_title_tbody -> td_permission_after_title_tbody
    int td_permission_before_tbody -> td_permission_before_tbody
    int td_permission_before_title_tbody -> td_permission_before_title_tbody
    int td_permission_theader -> td_permission_theader
    int train_computer_tbody -> train_computer_tbody
    int train_computer_theader -> train_computer_theader
    int travel_approval_theader -> travel_approval_theader
    int update_progress -> update_progress
    int week_spinner_dialog -> week_spinner_dialog
    int welcome -> welcome
    int workflow -> workflow
    int workflow_been -> workflow_been
    int workflowlayout -> workflowlayout
    int xlistview_footer -> xlistview_footer
    int xlistview_header -> xlistview_header
com.dahuatech.app.R$menu -> com.dahuatech.app.R$menu:
    int main -> main
    int menu_search -> menu_search
com.dahuatech.app.R$raw -> com.dahuatech.app.R$raw:
    int beep -> beep
com.dahuatech.app.R$string -> com.dahuatech.app.R$string:
    int abs__action_bar_home_description -> abs__action_bar_home_description
    int abs__action_bar_up_description -> abs__action_bar_up_description
    int abs__action_menu_overflow_description -> abs__action_menu_overflow_description
    int abs__action_mode_done -> abs__action_mode_done
    int abs__activity_chooser_view_see_all -> abs__activity_chooser_view_see_all
    int abs__activitychooserview_choose_application -> abs__activitychooserview_choose_application
    int abs__searchview_description_clear -> abs__searchview_description_clear
    int abs__searchview_description_query -> abs__searchview_description_query
    int abs__searchview_description_search -> abs__searchview_description_search
    int abs__searchview_description_submit -> abs__searchview_description_submit
    int abs__searchview_description_voice -> abs__searchview_description_voice
    int abs__shareactionprovider_share_with -> abs__shareactionprovider_share_with
    int abs__shareactionprovider_share_with_application -> abs__shareactionprovider_share_with_application
    int action_contacts -> action_contacts
    int action_develop_hour -> action_develop_hour
    int action_expense -> action_expense
    int action_meeting -> action_meeting
    int action_mytasks -> action_mytasks
    int action_richscan -> action_richscan
    int ad_check_title -> ad_check_title
    int app_dahua -> app_dahua
    int app_error -> app_error
    int app_error_message -> app_error_message
    int app_menu_surelogout -> app_menu_surelogout
    int app_name -> app_name
    int app_run_code_error -> app_run_code_error
    int applydaysoff_am -> applydaysoff_am
    int applydaysoff_applyDept -> applydaysoff_applyDept
    int applydaysoff_daysoff -> applydaysoff_daysoff
    int applydaysoff_netparseerror -> applydaysoff_netparseerror
    int applydaysoff_pm -> applydaysoff_pm
    int applydaysoff_reason -> applydaysoff_reason
    int applydaysoff_title -> applydaysoff_title
    int applydaysoffdevelop_am -> applydaysoffdevelop_am
    int applydaysoffdevelop_applyDept -> applydaysoffdevelop_applyDept
    int applydaysoffdevelop_netparseerror -> applydaysoffdevelop_netparseerror
    int applydaysoffdevelop_pm -> applydaysoffdevelop_pm
    int applydaysoffdevelop_reason -> applydaysoffdevelop_reason
    int applydaysoffdevelop_sumDays -> applydaysoffdevelop_sumDays
    int applydaysoffdevelop_title -> applydaysoffdevelop_title
    int applydaysoffdevelop_typeName -> applydaysoffdevelop_typeName
    int applyleave_FApplyDept -> applyleave_FApplyDept
    int applyleave_FEndDate -> applyleave_FEndDate
    int applyleave_FEndTime -> applyleave_FEndTime
    int applyleave_FHolidayType -> applyleave_FHolidayType
    int applyleave_FReason -> applyleave_FReason
    int applyleave_FStartDate -> applyleave_FStartDate
    int applyleave_FStartTime -> applyleave_FStartTime
    int applyleave_FTimeLength -> applyleave_FTimeLength
    int applyleave_netparseerror -> applyleave_netparseerror
    int applyleave_title -> applyleave_title
    int applyovertime_DaysOffCount -> applyovertime_DaysOffCount
    int applyovertime_OverTimeCount -> applyovertime_OverTimeCount
    int applyovertime_Purpose -> applyovertime_Purpose
    int applyovertime_am -> applyovertime_am
    int applyovertime_attenTime -> applyovertime_attenTime
    int applyovertime_attendance -> applyovertime_attendance
    int applyovertime_hours -> applyovertime_hours
    int applyovertime_netparseerror -> applyovertime_netparseerror
    int applyovertime_pm -> applyovertime_pm
    int applyovertime_reason -> applyovertime_reason
    int applyovertime_title -> applyovertime_title
    int applyresume_FAmCheckResult -> applyresume_FAmCheckResult
    int applyresume_FAmCheckTime -> applyresume_FAmCheckTime
    int applyresume_FAmResume -> applyresume_FAmResume
    int applyresume_FApplyDept -> applyresume_FApplyDept
    int applyresume_FPmCheckResult -> applyresume_FPmCheckResult
    int applyresume_FPmCheckTime -> applyresume_FPmCheckTime
    int applyresume_FPmResume -> applyresume_FPmResume
    int applyresume_FReason -> applyresume_FReason
    int applyresume_FStartDate -> applyresume_FStartDate
    int applyresume_netparseerror -> applyresume_netparseerror
    int applyresume_title -> applyresume_title
    int approve_imgbtnApprove -> approve_imgbtnApprove
    int approve_imgbtnApprove_record -> approve_imgbtnApprove_record
    int attendance_check_in -> attendance_check_in
    int attendance_check_out -> attendance_check_out
    int attendance_checkin -> attendance_checkin
    int attendance_list -> attendance_list
    int attendance_list_netparseerror -> attendance_list_netparseerror
    int attendance_main -> attendance_main
    int attendance_not_check_in -> attendance_not_check_in
    int attendance_open_mock_location -> attendance_open_mock_location
    int attendance_upload_failure -> attendance_upload_failure
    int attendance_upload_success -> attendance_upload_success
    int cancle -> cancle
    int capture_msg_camera_framework_bug -> capture_msg_camera_framework_bug
    int capture_msg_intent_failed -> capture_msg_intent_failed
    int capture_result_text -> capture_result_text
    int capture_result_uri -> capture_result_uri
    int capture_scan_false -> capture_scan_false
    int capture_status -> capture_status
    int contacts_addsuccess -> contacts_addsuccess
    int contacts_notfind -> contacts_notfind
    int contacts_search -> contacts_search
    int contacts_twoword -> contacts_twoword
    int contributionaward_FAmount -> contributionaward_FAmount
    int contributionaward_FCheckBox -> contributionaward_FCheckBox
    int contributionaward_FDate -> contributionaward_FDate
    int contributionaward_FInteger -> contributionaward_FInteger
    int contributionaward_FText -> contributionaward_FText
    int contributionaward_FText2 -> contributionaward_FText2
    int contributionaward_netparseerror -> contributionaward_netparseerror
    int contributionaward_title -> contributionaward_title
    int copy_app_button -> copy_app_button
    int copy_main_title -> copy_main_title
    int cot_main -> cot_main
    int customdialog_cancle -> customdialog_cancle
    int customdialog_ok -> customdialog_ok
    int dahuaassumecost_BusinessName -> dahuaassumecost_BusinessName
    int dahuaassumecost_Cause -> dahuaassumecost_Cause
    int dahuaassumecost_FreightEstimate -> dahuaassumecost_FreightEstimate
    int dahuaassumecost_GoodsType -> dahuaassumecost_GoodsType
    int dahuaassumecost_PIInfo -> dahuaassumecost_PIInfo
    int dahuaassumecost_netparseerror -> dahuaassumecost_netparseerror
    int dahuaassumecost_title -> dahuaassumecost_title
    int delSlide_cancel -> delSlide_cancel
    int delSlide_delete -> delSlide_delete
    int delSlide_title -> delSlide_title
    int develop_hour -> develop_hour
    int developinquiry_EmployeeNumber -> developinquiry_EmployeeNumber
    int developinquiry_MaterialType -> developinquiry_MaterialType
    int developinquiry_OfferExplain -> developinquiry_OfferExplain
    int developinquiry_OfferList -> developinquiry_OfferList
    int developinquiry_layout_Currency -> developinquiry_layout_Currency
    int developinquiry_layout_Manufacturer -> developinquiry_layout_Manufacturer
    int developinquiry_layout_MasterialName -> developinquiry_layout_MasterialName
    int developinquiry_layout_Mini -> developinquiry_layout_Mini
    int developinquiry_layout_MiniOrder -> developinquiry_layout_MiniOrder
    int developinquiry_layout_Offer -> developinquiry_layout_Offer
    int developinquiry_layout_OrderForward -> developinquiry_layout_OrderForward
    int developinquiry_layout_OrderQuantityFrom -> developinquiry_layout_OrderQuantityFrom
    int developinquiry_layout_OrderQuantityTo -> developinquiry_layout_OrderQuantityTo
    int developinquiry_layout_Payment -> developinquiry_layout_Payment
    int developinquiry_layout_Supplier -> developinquiry_layout_Supplier
    int developinquiry_layout_Unit -> developinquiry_layout_Unit
    int developinquiry_layout_title -> developinquiry_layout_title
    int developinquiry_netparseerror -> developinquiry_netparseerror
    int developinquiry_title -> developinquiry_title
    int developtestnetwork_ApplyForIp -> developtestnetwork_ApplyForIp
    int developtestnetwork_ApplyerPermisson -> developtestnetwork_ApplyerPermisson
    int developtestnetwork_EndTime -> developtestnetwork_EndTime
    int developtestnetwork_PermissionRequre -> developtestnetwork_PermissionRequre
    int developtestnetwork_PurposeIp -> developtestnetwork_PurposeIp
    int developtestnetwork_StartTime -> developtestnetwork_StartTime
    int developtestnetwork_line -> developtestnetwork_line
    int developtestnetwork_netparseerror -> developtestnetwork_netparseerror
    int developtestnetwork_title -> developtestnetwork_title
    int dh_add -> dh_add
    int dh_confrim_list -> dh_confrim_list
    int dh_confrim_list_ensure -> dh_confrim_list_ensure
    int dh_confrim_list_failure -> dh_confrim_list_failure
    int dh_confrim_list_netparseerror -> dh_confrim_list_netparseerror
    int dh_confrim_list_no_select -> dh_confrim_list_no_select
    int dh_confrim_list_person -> dh_confrim_list_person
    int dh_confrim_list_person_netparseerror -> dh_confrim_list_person_netparseerror
    int dh_confrim_list_selectAll -> dh_confrim_list_selectAll
    int dh_confrim_list_success -> dh_confrim_list_success
    int dh_confrim_list_sure_make -> dh_confrim_list_sure_make
    int dh_confrim_list_sure_no -> dh_confrim_list_sure_no
    int dh_confrim_list_sure_warn -> dh_confrim_list_sure_warn
    int dh_confrim_list_sure_yes -> dh_confrim_list_sure_yes
    int dh_detail -> dh_detail
    int dh_detail_FHours -> dh_detail_FHours
    int dh_detail_FNote -> dh_detail_FNote
    int dh_detail_FProjectCode -> dh_detail_FProjectCode
    int dh_detail_FTypeName -> dh_detail_FTypeName
    int dh_detail_FWeekDate -> dh_detail_FWeekDate
    int dh_detail_button_FCancle -> dh_detail_button_FCancle
    int dh_detail_button_FUpload -> dh_detail_button_FUpload
    int dh_detail_select_FProject -> dh_detail_select_FProject
    int dh_detail_verify_FHours -> dh_detail_verify_FHours
    int dh_detail_verify_FHours_NotSurpass -> dh_detail_verify_FHours_NotSurpass
    int dh_detail_verify_FProjectCode -> dh_detail_verify_FProjectCode
    int dh_detail_verify_FProjectName -> dh_detail_verify_FProjectName
    int dh_detail_verify_FTypeName -> dh_detail_verify_FTypeName
    int dh_detail_verify_FWeekDate -> dh_detail_verify_FWeekDate
    int dh_list -> dh_list
    int dh_list_item_friday -> dh_list_item_friday
    int dh_list_item_hours -> dh_list_item_hours
    int dh_list_item_hours_count -> dh_list_item_hours_count
    int dh_list_item_monday -> dh_list_item_monday
    int dh_list_item_saturday -> dh_list_item_saturday
    int dh_list_item_sunday -> dh_list_item_sunday
    int dh_list_item_thursday -> dh_list_item_thursday
    int dh_list_item_tuesday -> dh_list_item_tuesday
    int dh_list_item_wendnesday -> dh_list_item_wendnesday
    int dh_list_project -> dh_list_project
    int dh_list_project_add_type -> dh_list_project_add_type
    int dh_list_project_netparseerror -> dh_list_project_netparseerror
    int dh_project_search -> dh_project_search
    int dh_project_search_edit -> dh_project_search_edit
    int dh_project_search_empty -> dh_project_search_empty
    int dh_project_search_list_netparseerror -> dh_project_search_list_netparseerror
    int dh_type_list -> dh_type_list
    int dh_type_list_netparseerror -> dh_type_list_netparseerror
    int dh_week_search -> dh_week_search
    int dialog_amaploading -> dialog_amaploading
    int dialog_approveing -> dialog_approveing
    int dialog_loading -> dialog_loading
    int dialog_logining -> dialog_logining
    int dialog_uploading -> dialog_uploading
    int dialog_verifying -> dialog_verifying
    int documentapprove_FDocumentPost -> documentapprove_FDocumentPost
    int documentapprove_FDocumentStatus -> documentapprove_FDocumentStatus
    int documentapprove_FDocumentType -> documentapprove_FDocumentType
    int documentapprove_FPendingApp -> documentapprove_FPendingApp
    int documentapprove_FReason -> documentapprove_FReason
    int documentapprove_netparseerror -> documentapprove_netparseerror
    int documentapprove_title -> documentapprove_title
    int documentapprovetbody_FDocumentBelong -> documentapprovetbody_FDocumentBelong
    int documentapprovetbody_FDocumentName -> documentapprovetbody_FDocumentName
    int documentapprovetbody_FDocumentVersion -> documentapprovetbody_FDocumentVersion
    int doorpermission_FApplyDept -> doorpermission_FApplyDept
    int doorpermission_FApplyType -> doorpermission_FApplyType
    int doorpermission_FIsOther -> doorpermission_FIsOther
    int doorpermission_FRegion -> doorpermission_FRegion
    int doorpermission_FTel -> doorpermission_FTel
    int doorpermission_netparseerror -> doorpermission_netparseerror
    int doorpermission_title -> doorpermission_title
    int doorpermissionbody_FNote -> doorpermissionbody_FNote
    int doorpermissionbody_FPermission -> doorpermissionbody_FPermission
    int doorpermissionbody_FPosition -> doorpermissionbody_FPosition
    int download -> download
    int dveloptravel_FAssumeCost -> dveloptravel_FAssumeCost
    int dveloptravel_FAssumeDept -> dveloptravel_FAssumeDept
    int dveloptravel_FProjectCode -> dveloptravel_FProjectCode
    int dveloptravel_FTravelAddress -> dveloptravel_FTravelAddress
    int dveloptravel_FTravelAim -> dveloptravel_FTravelAim
    int dveloptravel_FTravelEndTime -> dveloptravel_FTravelEndTime
    int dveloptravel_FTravelReason -> dveloptravel_FTravelReason
    int dveloptravel_FTravelStartTime -> dveloptravel_FTravelStartTime
    int dveloptravel_FTravelWay -> dveloptravel_FTravelWay
    int dveloptravel_netparseerror -> dveloptravel_netparseerror
    int dveloptravel_title -> dveloptravel_title
    int dveloptravelonebody_FEndTime -> dveloptravelonebody_FEndTime
    int dveloptravelonebody_FNote -> dveloptravelonebody_FNote
    int dveloptravelonebody_FSchedule -> dveloptravelonebody_FSchedule
    int dveloptravelonebody_FStartTime -> dveloptravelonebody_FStartTime
    int dveloptraveltwobody_FDeptManager -> dveloptraveltwobody_FDeptManager
    int dveloptraveltwobody_FEndTime -> dveloptraveltwobody_FEndTime
    int dveloptraveltwobody_FStartTime -> dveloptraveltwobody_FStartTime
    int dveloptraveltwobody_FTravelDept -> dveloptraveltwobody_FTravelDept
    int dveloptraveltwobody_FTravelName -> dveloptraveltwobody_FTravelName
    int emailopen_FApplyDept -> emailopen_FApplyDept
    int emailopen_FApplyPermission -> emailopen_FApplyPermission
    int emailopen_FEmailType -> emailopen_FEmailType
    int emailopen_FInfoSafe -> emailopen_FInfoSafe
    int emailopen_FReason -> emailopen_FReason
    int emailopen_netparseerror -> emailopen_netparseerror
    int emailopen_title -> emailopen_title
    int emailopenbody_FApplyDeadLine -> emailopenbody_FApplyDeadLine
    int emailopenbody_FEmailAddress -> emailopenbody_FEmailAddress
    int emailopenbody_FStartTime -> emailopenbody_FStartTime
    int engineering_165 -> engineering_165
    int engineering_Amount -> engineering_Amount
    int engineering_Base1 -> engineering_Base1
    int engineering_ComboBox -> engineering_ComboBox
    int engineering_ComboBox1 -> engineering_ComboBox1
    int engineering_No -> engineering_No
    int engineering_Note -> engineering_Note
    int engineering_Text -> engineering_Text
    int engineering_netparseerror -> engineering_netparseerror
    int engineering_title -> engineering_title
    int error_encode_error -> error_encode_error
    int exattendance_am -> exattendance_am
    int exattendance_applyDept -> exattendance_applyDept
    int exattendance_change -> exattendance_change
    int exattendance_netparseerror -> exattendance_netparseerror
    int exattendance_pm -> exattendance_pm
    int exattendance_reason -> exattendance_reason
    int exattendance_title -> exattendance_title
    int expensePrivateTBodyInfo_ClientName -> expensePrivateTBodyInfo_ClientName
    int expensePrivateTBodyInfo_ProjectName -> expensePrivateTBodyInfo_ProjectName
    int expensePrivateTBodyInfo_Use -> expensePrivateTBodyInfo_Use
    int expensePrivateTBody_netparseerror -> expensePrivateTBody_netparseerror
    int expensePrivateTBody_title -> expensePrivateTBody_title
    int expense_adapte_endAddress -> expense_adapte_endAddress
    int expense_adapter_begin -> expense_adapter_begin
    int expense_adapter_to -> expense_adapter_to
    int expense_amount -> expense_amount
    int expense_endAddress -> expense_endAddress
    int expense_endDate -> expense_endDate
    int expense_flow -> expense_flow
    int expense_flow_E -> expense_flow_E
    int expense_flow_add -> expense_flow_add
    int expense_flow_client_list -> expense_flow_client_list
    int expense_flow_client_list_netparseerror -> expense_flow_client_list_netparseerror
    int expense_flow_client_list_search -> expense_flow_client_list_search
    int expense_flow_detail -> expense_flow_detail
    int expense_flow_detail_FAccompany -> expense_flow_detail_FAccompany
    int expense_flow_detail_FAccompanyPerson -> expense_flow_detail_FAccompanyPerson
    int expense_flow_detail_FAccompanyReason -> expense_flow_detail_FAccompanyReason
    int expense_flow_detail_FAccompany_no -> expense_flow_detail_FAccompany_no
    int expense_flow_detail_FAccompany_yes -> expense_flow_detail_FAccompany_yes
    int expense_flow_detail_FCause -> expense_flow_detail_FCause
    int expense_flow_detail_FClient -> expense_flow_detail_FClient
    int expense_flow_detail_FExpendAddress -> expense_flow_detail_FExpendAddress
    int expense_flow_detail_FExpendAmount -> expense_flow_detail_FExpendAmount
    int expense_flow_detail_FExpendTime -> expense_flow_detail_FExpendTime
    int expense_flow_detail_FExpendType -> expense_flow_detail_FExpendType
    int expense_flow_detail_FProject -> expense_flow_detail_FProject
    int expense_flow_detail_button_temp -> expense_flow_detail_button_temp
    int expense_flow_detail_button_upload -> expense_flow_detail_button_upload
    int expense_flow_detail_new -> expense_flow_detail_new
    int expense_flow_detail_notInput_FCause -> expense_flow_detail_notInput_FCause
    int expense_flow_detail_notInput_FExpendAddress -> expense_flow_detail_notInput_FExpendAddress
    int expense_flow_detail_notInput_FExpendAmount -> expense_flow_detail_notInput_FExpendAmount
    int expense_flow_detail_show_local_failure -> expense_flow_detail_show_local_failure
    int expense_flow_detail_show_local_success -> expense_flow_detail_show_local_success
    int expense_flow_detail_show_upload_failure -> expense_flow_detail_show_upload_failure
    int expense_flow_detail_show_upload_success -> expense_flow_detail_show_upload_success
    int expense_flow_detail_socialize_FDescription -> expense_flow_detail_socialize_FDescription
    int expense_flow_detail_socialize_FReason -> expense_flow_detail_socialize_FReason
    int expense_flow_detail_socialize_NoCard -> expense_flow_detail_socialize_NoCard
    int expense_flow_detail_travel_Address -> expense_flow_detail_travel_Address
    int expense_flow_detail_travel_FBusinessLevel -> expense_flow_detail_travel_FBusinessLevel
    int expense_flow_detail_travel_FEnd -> expense_flow_detail_travel_FEnd
    int expense_flow_detail_travel_FStart -> expense_flow_detail_travel_FStart
    int expense_flow_detail_travel_Time -> expense_flow_detail_travel_Time
    int expense_flow_detail_upload -> expense_flow_detail_upload
    int expense_flow_list -> expense_flow_list
    int expense_flow_list_btnAdd -> expense_flow_list_btnAdd
    int expense_flow_list_btnSubmit -> expense_flow_list_btnSubmit
    int expense_flow_list_btnUpload -> expense_flow_list_btnUpload
    int expense_flow_list_netparseerror -> expense_flow_list_netparseerror
    int expense_flow_list_no_load_records -> expense_flow_list_no_load_records
    int expense_flow_list_no_refresh_records -> expense_flow_list_no_refresh_records
    int expense_flow_list_search -> expense_flow_list_search
    int expense_flow_local_list -> expense_flow_local_list
    int expense_flow_local_list_batchDelete -> expense_flow_local_list_batchDelete
    int expense_flow_local_list_batchDelete_failure -> expense_flow_local_list_batchDelete_failure
    int expense_flow_local_list_batchDelete_noselect -> expense_flow_local_list_batchDelete_noselect
    int expense_flow_local_list_batchDelete_success -> expense_flow_local_list_batchDelete_success
    int expense_flow_local_list_batchUpload -> expense_flow_local_list_batchUpload
    int expense_flow_local_list_batchUpload_failure -> expense_flow_local_list_batchUpload_failure
    int expense_flow_local_list_batchUpload_noselect -> expense_flow_local_list_batchUpload_noselect
    int expense_flow_local_list_batchUpload_success -> expense_flow_local_list_batchUpload_success
    int expense_flow_local_list_netparseerror -> expense_flow_local_list_netparseerror
    int expense_flow_project_list -> expense_flow_project_list
    int expense_flow_project_list_netparseerror -> expense_flow_project_list_netparseerror
    int expense_flow_project_list_search -> expense_flow_project_list_search
    int expense_have_upload_fail -> expense_have_upload_fail
    int expense_itemview_edit -> expense_itemview_edit
    int expense_itemview_title -> expense_itemview_title
    int expense_itemview_upload -> expense_itemview_upload
    int expense_list -> expense_list
    int expense_main -> expense_main
    int expense_new -> expense_new
    int expense_notInput_amount -> expense_notInput_amount
    int expense_notInput_beginTimeAfterCurTime -> expense_notInput_beginTimeAfterCurTime
    int expense_notInput_beginTimeAfterEndTime -> expense_notInput_beginTimeAfterEndTime
    int expense_notInput_endDate -> expense_notInput_endDate
    int expense_notInput_endadress -> expense_notInput_endadress
    int expense_notInput_startDate -> expense_notInput_startDate
    int expense_notInput_startadress -> expense_notInput_startadress
    int expense_startAddress -> expense_startAddress
    int expense_startDate -> expense_startDate
    int expense_taxi_addr_descs -> expense_taxi_addr_descs
    int expense_taxi_addr_querying -> expense_taxi_addr_querying
    int expense_taxi_amount -> expense_taxi_amount
    int expense_taxi_end_taxi -> expense_taxi_end_taxi
    int expense_taxi_exit -> expense_taxi_exit
    int expense_taxi_gps_disabled -> expense_taxi_gps_disabled
    int expense_taxi_gps_exit -> expense_taxi_gps_exit
    int expense_taxi_gps_meters -> expense_taxi_gps_meters
    int expense_taxi_gps_open_failed -> expense_taxi_gps_open_failed
    int expense_taxi_gps_status -> expense_taxi_gps_status
    int expense_taxi_gps_success -> expense_taxi_gps_success
    int expense_taxi_query_addr_failed -> expense_taxi_query_addr_failed
    int expense_taxi_query_addr_success -> expense_taxi_query_addr_success
    int expense_taxi_start_taxi -> expense_taxi_start_taxi
    int expense_taxiinput_canel -> expense_taxiinput_canel
    int expense_taxiinput_editamount -> expense_taxiinput_editamount
    int expense_taxiinput_editendDate -> expense_taxiinput_editendDate
    int expense_taxiinput_editendadress -> expense_taxiinput_editendadress
    int expense_taxiinput_editstartDate -> expense_taxiinput_editstartDate
    int expense_taxiinput_editstartadress -> expense_taxiinput_editstartadress
    int expense_taxiinput_save -> expense_taxiinput_save
    int expense_taxiinput_saveSuccess -> expense_taxiinput_saveSuccess
    int expense_taxiinput_title -> expense_taxiinput_title
    int expense_taxiinput_updateSuccess -> expense_taxiinput_updateSuccess
    int expense_taxilist_all -> expense_taxilist_all
    int expense_taxilist_delete -> expense_taxilist_delete
    int expense_upload -> expense_upload
    int expense_upload_batch_fail -> expense_upload_batch_fail
    int expense_upload_delete_fail -> expense_upload_delete_fail
    int expense_upload_delete_success -> expense_upload_delete_success
    int expense_upload_fail -> expense_upload_fail
    int expense_upload_fail_notLogin -> expense_upload_fail_notLogin
    int expense_upload_fail_reason -> expense_upload_fail_reason
    int expense_upload_fail_recordnotFull -> expense_upload_fail_recordnotFull
    int expense_upload_success -> expense_upload_success
    int expensecosttheader_FAppAmt -> expensecosttheader_FAppAmt
    int expensecosttheader_FConSmDate -> expensecosttheader_FConSmDate
    int expensecosttheader_FConSmType -> expensecosttheader_FConSmType
    int expensecosttheader_FGeneralName -> expensecosttheader_FGeneralName
    int expensecosttheader_FLDAmt -> expensecosttheader_FLDAmt
    int expensecosttheader_FLendType -> expensecosttheader_FLendType
    int expensecosttheader_netparseerror -> expensecosttheader_netparseerror
    int expensecosttheader_subClassFAppAmt -> expensecosttheader_subClassFAppAmt
    int expensecosttheader_subClassFLDAmt -> expensecosttheader_subClassFLDAmt
    int expensecosttheader_title -> expensecosttheader_title
    int expensemarketbidtheader_fcasetype -> expensemarketbidtheader_fcasetype
    int expensemarketbidtheader_fpubpayno -> expensemarketbidtheader_fpubpayno
    int expensemarketbidtheader_fsetofftype -> expensemarketbidtheader_fsetofftype
    int expensemarketbidtheader_netparseerror -> expensemarketbidtheader_netparseerror
    int expensemarketbidtheader_title -> expensemarketbidtheader_title
    int expensemarketpaytheader_bill -> expensemarketpaytheader_bill
    int expensemarketpaytheader_fconsmtypename -> expensemarketpaytheader_fconsmtypename
    int expensemarketpaytheader_fprojectname -> expensemarketpaytheader_fprojectname
    int expensemarketpaytheader_fpubpayno -> expensemarketpaytheader_fpubpayno
    int expensemarketpaytheader_netparseerror -> expensemarketpaytheader_netparseerror
    int expensemarketpaytheader_title -> expensemarketpaytheader_title
    int expenseprivatetheader_2001 -> expenseprivatetheader_2001
    int expenseprivatetheader_2002 -> expenseprivatetheader_2002
    int expenseprivatetheader_2003 -> expenseprivatetheader_2003
    int expenseprivatetheader_2004 -> expenseprivatetheader_2004
    int expenseprivatetheader_2005 -> expenseprivatetheader_2005
    int expenseprivatetheader_2006 -> expenseprivatetheader_2006
    int expenseprivatetheader_2007 -> expenseprivatetheader_2007
    int expenseprivatetheader_2008 -> expenseprivatetheader_2008
    int expenseprivatetheader_2009 -> expenseprivatetheader_2009
    int expenseprivatetheader_2010 -> expenseprivatetheader_2010
    int expenseprivatetheader_2011 -> expenseprivatetheader_2011
    int expenseprivatetheader_2012 -> expenseprivatetheader_2012
    int expenseprivatetheader_2013 -> expenseprivatetheader_2013
    int expenseprivatetheader_2014 -> expenseprivatetheader_2014
    int expenseprivatetheader_2016 -> expenseprivatetheader_2016
    int expenseprivatetheader_bill -> expenseprivatetheader_bill
    int expenseprivatetheader_netparseerror -> expenseprivatetheader_netparseerror
    int expenseprivatetheader_title -> expenseprivatetheader_title
    int expensepublictheader_GeneralType -> expensepublictheader_GeneralType
    int expensepublictheader_Note -> expensepublictheader_Note
    int expensepublictheader_RecAccName -> expensepublictheader_RecAccName
    int expensepublictheader_netparseerror -> expensepublictheader_netparseerror
    int expensepublictheader_title -> expensepublictheader_title
    int expensespecialtbody_netparseerror -> expensespecialtbody_netparseerror
    int expensespecialtbody_title -> expensespecialtbody_title
    int expensespecialtheader_bill -> expensespecialtheader_bill
    int expensespecialtheader_netparseerror -> expensespecialtheader_netparseerror
    int expensespecialtheader_title -> expensespecialtheader_title
    int expensespecialthingbody_netparseerror -> expensespecialthingbody_netparseerror
    int expensespecialthingbody_title -> expensespecialthingbody_title
    int expensespecialthingheader_bill -> expensespecialthingheader_bill
    int expensespecialthingheader_netparseerror -> expensespecialthingheader_netparseerror
    int expensespecialthingheader_title -> expensespecialthingheader_title
    int expensetaxi_main -> expensetaxi_main
    int expensetaxi_main_title -> expensetaxi_main_title
    int expensetaxi_title -> expensetaxi_title
    int fedestroy_FApplyDept -> fedestroy_FApplyDept
    int fedestroy_FDestroy -> fedestroy_FDestroy
    int fedestroy_FReason -> fedestroy_FReason
    int fedestroy_FTel -> fedestroy_FTel
    int fedestroy_FWitnesses -> fedestroy_FWitnesses
    int fedestroy_netparseerror -> fedestroy_netparseerror
    int fedestroy_title -> fedestroy_title
    int fedestroybody_FCompany -> fedestroybody_FCompany
    int fedestroybody_FDestroyTime -> fedestroybody_FDestroyTime
    int fedestroybody_FKeeper -> fedestroybody_FKeeper
    int fedestroybody_FKeeperArea -> fedestroybody_FKeeperArea
    int fedestroybody_FKeeperDept -> fedestroybody_FKeeperDept
    int fedestroybody_FStatus -> fedestroybody_FStatus
    int fedestroybody_FeCode -> fedestroybody_FeCode
    int fedestroybody_FeName -> fedestroybody_FeName
    int feengraving_FAmount -> feengraving_FAmount
    int feengraving_FApplyDept -> feengraving_FApplyDept
    int feengraving_FTel -> feengraving_FTel
    int feengraving_netparseerror -> feengraving_netparseerror
    int feengraving_title -> feengraving_title
    int feengravingbody_FCompany -> feengravingbody_FCompany
    int feengravingbody_FKeeper -> feengravingbody_FKeeper
    int feengravingbody_FKeeperArea -> feengravingbody_FKeeperArea
    int feengravingbody_FKeeperDept -> feengravingbody_FKeeperDept
    int feengravingbody_FKeeperTel -> feengravingbody_FKeeperTel
    int feengravingbody_FNote -> feengravingbody_FNote
    int feengravingbody_FReason -> feengravingbody_FReason
    int feengravingbody_FeName -> feengravingbody_FeName
    int fetakeout_FApplyDept -> fetakeout_FApplyDept
    int fetakeout_FApplyUse -> fetakeout_FApplyUse
    int fetakeout_FDestination -> fetakeout_FDestination
    int fetakeout_FEndTime -> fetakeout_FEndTime
    int fetakeout_FProjectName -> fetakeout_FProjectName
    int fetakeout_FSealData -> fetakeout_FSealData
    int fetakeout_FStartTime -> fetakeout_FStartTime
    int fetakeout_FTel -> fetakeout_FTel
    int fetakeout_FeCarry -> fetakeout_FeCarry
    int fetakeout_FeCode -> fetakeout_FeCode
    int fetakeout_FeName -> fetakeout_FeName
    int fetakeout_FeUseCarry -> fetakeout_FeUseCarry
    int fetakeout_FeUseDestination -> fetakeout_FeUseDestination
    int fetakeout_netparseerror -> fetakeout_netparseerror
    int fetakeout_title -> fetakeout_title
    int fetransfer_FAmount -> fetransfer_FAmount
    int fetransfer_FApplyDept -> fetransfer_FApplyDept
    int fetransfer_FTel -> fetransfer_FTel
    int fetransfer_FnKeeper -> fetransfer_FnKeeper
    int fetransfer_FnKeeperArea -> fetransfer_FnKeeperArea
    int fetransfer_FnKeeperDept -> fetransfer_FnKeeperDept
    int fetransfer_netparseerror -> fetransfer_netparseerror
    int fetransfer_title -> fetransfer_title
    int fetransferbody_FCompany -> fetransferbody_FCompany
    int fetransferbody_FKeeper -> fetransferbody_FKeeper
    int fetransferbody_FKeeperArea -> fetransferbody_FKeeperArea
    int fetransferbody_FKeeperDept -> fetransferbody_FKeeperDept
    int fetransferbody_FReason -> fetransferbody_FReason
    int fetransferbody_FStatus -> fetransferbody_FStatus
    int fetransferbody_FeCode -> fetransferbody_FeCode
    int fetransferbody_FeName -> fetransferbody_FeName
    int feupdate_FAmount -> feupdate_FAmount
    int feupdate_FApplyDept -> feupdate_FApplyDept
    int feupdate_FDestroy -> feupdate_FDestroy
    int feupdate_FDestroyWitness -> feupdate_FDestroyWitness
    int feupdate_FTel -> feupdate_FTel
    int feupdate_netparseerror -> feupdate_netparseerror
    int feupdate_title -> feupdate_title
    int feupdatebody_FCompany -> feupdatebody_FCompany
    int feupdatebody_FKeeper -> feupdatebody_FKeeper
    int feupdatebody_FKeeperArea -> feupdatebody_FKeeperArea
    int feupdatebody_FKeeperDept -> feupdatebody_FKeeperDept
    int feupdatebody_FReason -> feupdatebody_FReason
    int feupdatebody_FStatus -> feupdatebody_FStatus
    int feupdatebody_FeCode -> feupdatebody_FeCode
    int feupdatebody_FeName -> feupdatebody_FeName
    int fixedassetsspecial_FApplyCause -> fixedassetsspecial_FApplyCause
    int fixedassetsspecial_FApplyDept -> fixedassetsspecial_FApplyDept
    int fixedassetsspecial_FReason -> fixedassetsspecial_FReason
    int fixedassetsspecial_FRequireType -> fixedassetsspecial_FRequireType
    int fixedassetsspecial_netparseerror -> fixedassetsspecial_netparseerror
    int fixedassetsspecial_title -> fixedassetsspecial_title
    int fixedassetsspecialbody_FBillNo -> fixedassetsspecialbody_FBillNo
    int fixedassetsspecialbody_FDate -> fixedassetsspecialbody_FDate
    int fixedassetsspecialbody_FModel -> fixedassetsspecialbody_FModel
    int fixedassetsspecialbody_FName -> fixedassetsspecialbody_FName
    int fixedassetsspecialbody_FNote -> fixedassetsspecialbody_FNote
    int fixedassetsspecialbody_FNumber -> fixedassetsspecialbody_FNumber
    int fixedassetsspecialbody_FPerson -> fixedassetsspecialbody_FPerson
    int gestures_pwd -> gestures_pwd
    int gestures_pwd_error -> gestures_pwd_error
    int gestures_pwd_not_empty -> gestures_pwd_not_empty
    int gestures_pwd_setting -> gestures_pwd_setting
    int gestures_pwd_success -> gestures_pwd_success
    int gestures_setting_forget -> gestures_setting_forget
    int gestures_setting_jump -> gestures_setting_jump
    int guide_viewpager_start -> guide_viewpager_start
    int history_record_clear_success -> history_record_clear_success
    int history_record_search_clear -> history_record_search_clear
    int http_exception_error -> http_exception_error
    int http_status_code_error -> http_status_code_error
    int io_exception_error -> io_exception_error
    int jump -> jump
    int lock_verify_faile -> lock_verify_faile
    int log_attendance -> log_attendance
    int log_contacts -> log_contacts
    int log_develop_hour -> log_develop_hour
    int log_expense_flow -> log_expense_flow
    int log_expense_taxi -> log_expense_taxi
    int log_login_module -> log_login_module
    int log_lync -> log_lync
    int log_market -> log_market
    int log_market_bid -> log_market_bid
    int log_market_contract -> log_market_contract
    int log_mymeeting -> log_mymeeting
    int log_mytasks -> log_mytasks
    int login_lock_draw -> login_lock_draw
    int login_lock_forget -> login_lock_forget
    int login_lock_gestures -> login_lock_gestures
    int login_lock_jump -> login_lock_jump
    int login_lock_old_gestures -> login_lock_old_gestures
    int login_lock_old_gestures_failure -> login_lock_old_gestures_failure
    int login_lock_old_gestures_success -> login_lock_old_gestures_success
    int login_lock_reset -> login_lock_reset
    int login_lock_save -> login_lock_save
    int login_lock_set_gestures -> login_lock_set_gestures
    int lowconsumable_FApplyCause -> lowconsumable_FApplyCause
    int lowconsumable_FApplyDept -> lowconsumable_FApplyDept
    int lowconsumable_FBillType -> lowconsumable_FBillType
    int lowconsumable_netparseerror -> lowconsumable_netparseerror
    int lowconsumable_title -> lowconsumable_title
    int lowconsumablebody_FAccount -> lowconsumablebody_FAccount
    int lowconsumablebody_FMaterialName -> lowconsumablebody_FMaterialName
    int lowconsumablebody_FMaterialType -> lowconsumablebody_FMaterialType
    int lowconsumablebody_FModel -> lowconsumablebody_FModel
    int lowconsumablebody_FNote -> lowconsumablebody_FNote
    int lowconsumablebody_FUnit -> lowconsumablebody_FUnit
    int lower_node_approve -> lower_node_approve
    int lower_node_approve_FConfirm -> lower_node_approve_FConfirm
    int lower_node_approve_button -> lower_node_approve_button
    int lower_node_approve_fCancle -> lower_node_approve_fCancle
    int lower_node_approve_radio -> lower_node_approve_radio
    int lower_node_approve_result -> lower_node_approve_result
    int lower_node_approve_result_error -> lower_node_approve_result_error
    int lower_node_approve_spinner_user_title -> lower_node_approve_spinner_user_title
    int lower_node_approve_struct -> lower_node_approve_struct
    int lync_main -> lync_main
    int lync_message -> lync_message
    int lync_title -> lync_title
    int main_hello -> main_hello
    int main_morning_hint -> main_morning_hint
    int main_noon_hint -> main_noon_hint
    int main_off_hint -> main_off_hint
    int main_overtime_hint -> main_overtime_hint
    int main_weekend_hint -> main_weekend_hint
    int market_NodeName -> market_NodeName
    int market_Tasker -> market_Tasker
    int market_bid_search -> market_bid_search
    int market_bid_search_empty -> market_bid_search_empty
    int market_bid_search_netparseerror -> market_bid_search_netparseerror
    int market_contract_search -> market_contract_search
    int market_contract_search_empty -> market_contract_search_empty
    int market_contract_search_netparseerror -> market_contract_search_netparseerror
    int market_main -> market_main
    int market_main_bid_search -> market_main_bid_search
    int market_main_contract_search -> market_main_contract_search
    int market_main_product_search -> market_main_product_search
    int market_product_search -> market_product_search
    int market_product_search_empty -> market_product_search_empty
    int market_product_search_netparseerror -> market_product_search_netparseerror
    int market_workflow -> market_workflow
    int market_workflow_netparseerror -> market_workflow_netparseerror
    int market_workflow_paramerror -> market_workflow_paramerror
    int meeting_cancle_failure -> meeting_cancle_failure
    int meeting_cancle_success -> meeting_cancle_success
    int meeting_detail -> meeting_detail
    int meeting_detail_FApplyDept -> meeting_detail_FApplyDept
    int meeting_detail_FApplyName -> meeting_detail_FApplyName
    int meeting_detail_FMeetingDate -> meeting_detail_FMeetingDate
    int meeting_detail_FMeetingEnd -> meeting_detail_FMeetingEnd
    int meeting_detail_FMeetingMaster -> meeting_detail_FMeetingMaster
    int meeting_detail_FMeetingName -> meeting_detail_FMeetingName
    int meeting_detail_FMeetingPerson -> meeting_detail_FMeetingPerson
    int meeting_detail_FMeetingRoom -> meeting_detail_FMeetingRoom
    int meeting_detail_FMeetingStart -> meeting_detail_FMeetingStart
    int meeting_detail_FMeetingTime -> meeting_detail_FMeetingTime
    int meeting_detail_button_FCancle -> meeting_detail_button_FCancle
    int meeting_detail_button_FCreate -> meeting_detail_button_FCreate
    int meeting_detail_button_FUpload -> meeting_detail_button_FUpload
    int meeting_detail_verify_FMeetingDate -> meeting_detail_verify_FMeetingDate
    int meeting_detail_verify_FMeetingEnd -> meeting_detail_verify_FMeetingEnd
    int meeting_detail_verify_FMeetingName -> meeting_detail_verify_FMeetingName
    int meeting_detail_verify_FMeetingRoom -> meeting_detail_verify_FMeetingRoom
    int meeting_detail_verify_FMeetingStart -> meeting_detail_verify_FMeetingStart
    int meeting_detail_verify_Room_FMeetingDate -> meeting_detail_verify_Room_FMeetingDate
    int meeting_detail_verify_Room_FMeetingEnd -> meeting_detail_verify_Room_FMeetingEnd
    int meeting_detail_verify_Room_FMeetingStart -> meeting_detail_verify_Room_FMeetingStart
    int meeting_list -> meeting_list
    int meeting_list_item_asFor -> meeting_list_item_asFor
    int meeting_list_item_btnCancle -> meeting_list_item_btnCancle
    int meeting_list_item_create -> meeting_list_item_create
    int meeting_list_item_meetingDate -> meeting_list_item_meetingDate
    int meeting_list_item_meetingName -> meeting_list_item_meetingName
    int meeting_list_launch -> meeting_list_launch
    int meeting_list_mine -> meeting_list_mine
    int meeting_list_netparseerror -> meeting_list_netparseerror
    int meeting_list_no_load_records -> meeting_list_no_load_records
    int meeting_list_no_refresh_records -> meeting_list_no_refresh_records
    int meeting_main -> meeting_main
    int meeting_person_list -> meeting_person_list
    int meeting_person_list_btnCheckAll -> meeting_person_list_btnCheckAll
    int meeting_person_list_btnResetAll -> meeting_person_list_btnResetAll
    int meeting_person_list_btnSelect -> meeting_person_list_btnSelect
    int meeting_person_list_btnSure -> meeting_person_list_btnSure
    int meeting_person_list_not_checkAll -> meeting_person_list_not_checkAll
    int meeting_person_list_not_select -> meeting_person_list_not_select
    int meeting_person_list_notselected -> meeting_person_list_notselected
    int meeting_person_list_selected -> meeting_person_list_selected
    int meeting_person_list_yet_select -> meeting_person_list_yet_select
    int meeting_room_list -> meeting_room_list
    int meeting_room_list_item_disable -> meeting_room_list_item_disable
    int meeting_room_list_item_enable -> meeting_room_list_item_enable
    int meeting_room_list_item_history -> meeting_room_list_item_history
    int meeting_search_person -> meeting_search_person
    int meeting_search_person_netparseerror -> meeting_search_person_netparseerror
    int meeting_search_room -> meeting_search_room
    int meeting_search_room_netparseerror -> meeting_search_room_netparseerror
    int memrequre_ApplyerDeptName -> memrequre_ApplyerDeptName
    int memrequre_MemProduct -> memrequre_MemProduct
    int memrequre_MemReasonNote -> memrequre_MemReasonNote
    int memrequre_MemScope -> memrequre_MemScope
    int memrequre_Note -> memrequre_Note
    int memrequre_OtherReason -> memrequre_OtherReason
    int memrequre_Subject -> memrequre_Subject
    int memrequre_Technology -> memrequre_Technology
    int memrequre_UpgradeNote -> memrequre_UpgradeNote
    int memrequre_UpgradeReason -> memrequre_UpgradeReason
    int memrequre_ValidDate -> memrequre_ValidDate
    int memrequre_Version -> memrequre_Version
    int memrequre_netparseerror -> memrequre_netparseerror
    int memrequre_title -> memrequre_title
    int menu_appBack -> menu_appBack
    int menu_appExit -> menu_appExit
    int menu_appSetting -> menu_appSetting
    int msg_load_is_null -> msg_load_is_null
    int msg_login_error -> msg_login_error
    int msg_login_fail -> msg_login_fail
    int msg_login_pwd_null -> msg_login_pwd_null
    int msg_login_success -> msg_login_success
    int msg_noaccess_delete -> msg_noaccess_delete
    int network_connected_success -> network_connected_success
    int network_not_connected -> network_not_connected
    int networkpermission_ApplyerDeptName -> networkpermission_ApplyerDeptName
    int networkpermission_ApplyerType -> networkpermission_ApplyerType
    int networkpermission_ComboBox1 -> networkpermission_ComboBox1
    int networkpermission_ComboBox3 -> networkpermission_ComboBox3
    int networkpermission_ComboBox4 -> networkpermission_ComboBox4
    int networkpermission_IpAddress -> networkpermission_IpAddress
    int networkpermission_Note -> networkpermission_Note
    int networkpermission_StartDate -> networkpermission_StartDate
    int networkpermission_Telphone -> networkpermission_Telphone
    int networkpermission_line -> networkpermission_line
    int networkpermission_netparseerror -> networkpermission_netparseerror
    int networkpermission_title -> networkpermission_title
    int newproductlib_FApplyDept -> newproductlib_FApplyDept
    int newproductlib_FDescribe -> newproductlib_FDescribe
    int newproductlib_FMaterialType -> newproductlib_FMaterialType
    int newproductlib_FProductLine -> newproductlib_FProductLine
    int newproductlib_FReason -> newproductlib_FReason
    int newproductlib_netparseerror -> newproductlib_netparseerror
    int newproductlib_title -> newproductlib_title
    int newproductlibtbody_FAmount -> newproductlibtbody_FAmount
    int newproductlibtbody_FInLocation -> newproductlibtbody_FInLocation
    int newproductlibtbody_FModel -> newproductlibtbody_FModel
    int newproductlibtbody_FNote -> newproductlibtbody_FNote
    int newproductlibtbody_FOutLocation -> newproductlibtbody_FOutLocation
    int newproductlibtbody_FUnit -> newproductlibtbody_FUnit
    int newproductrework_FApplyDept -> newproductrework_FApplyDept
    int newproductrework_FProductLine -> newproductrework_FProductLine
    int newproductrework_FProductModel -> newproductrework_FProductModel
    int newproductrework_FProductName -> newproductrework_FProductName
    int newproductrework_FProjectCode -> newproductrework_FProjectCode
    int newproductrework_FProjectName -> newproductrework_FProjectName
    int newproductrework_FReason -> newproductrework_FReason
    int newproductrework_netparseerror -> newproductrework_netparseerror
    int newproductrework_title -> newproductrework_title
    int newproductreworkbody_FAmount -> newproductreworkbody_FAmount
    int newproductreworkbody_FContent -> newproductreworkbody_FContent
    int newproductreworkbody_FExpectedTime -> newproductreworkbody_FExpectedTime
    int newproductreworkbody_FLocation -> newproductreworkbody_FLocation
    int newproductreworkbody_FLocationCode -> newproductreworkbody_FLocationCode
    int newproductreworkbody_FMaterialCode -> newproductreworkbody_FMaterialCode
    int newproductreworkbody_FModel -> newproductreworkbody_FModel
    int newproductreworkbody_FRequireTime -> newproductreworkbody_FRequireTime
    int newproductreworkbody_FType -> newproductreworkbody_FType
    int plus_app_button -> plus_app_button
    int plus_main_title -> plus_main_title
    int pluscopy_main_content -> pluscopy_main_content
    int pluscopy_main_copy -> pluscopy_main_copy
    int pluscopy_main_copy_app_result -> pluscopy_main_copy_app_result
    int pluscopy_main_copy_error -> pluscopy_main_copy_error
    int pluscopy_main_fCancle -> pluscopy_main_fCancle
    int pluscopy_main_fConfirm -> pluscopy_main_fConfirm
    int pluscopy_main_nodes_error -> pluscopy_main_nodes_error
    int pluscopy_main_plus -> pluscopy_main_plus
    int pluscopy_main_plus_app_result -> pluscopy_main_plus_app_result
    int pluscopy_main_plus_error -> pluscopy_main_plus_error
    int pluscopy_main_title -> pluscopy_main_title
    int pluscopy_person_btnSelect -> pluscopy_person_btnSelect
    int pluscopy_person_btnSure -> pluscopy_person_btnSure
    int pluscopy_person_checkAll -> pluscopy_person_checkAll
    int pluscopy_person_not_cancle -> pluscopy_person_not_cancle
    int pluscopy_person_not_checkAll -> pluscopy_person_not_checkAll
    int pluscopy_person_not_select -> pluscopy_person_not_select
    int pluscopy_person_notselected -> pluscopy_person_notselected
    int pluscopy_person_resetAll -> pluscopy_person_resetAll
    int pluscopy_person_selected -> pluscopy_person_selected
    int pluscopy_person_yet_select -> pluscopy_person_yet_select
    int pluscopy_search_person -> pluscopy_search_person
    int pluscopy_search_person_netparseerror -> pluscopy_search_person_netparseerror
    int pluscopy_search_person_title -> pluscopy_search_person_title
    int projectread_FApplyDept -> projectread_FApplyDept
    int projectread_FPermissionType -> projectread_FPermissionType
    int projectread_FProgramPublic -> projectread_FProgramPublic
    int projectread_FProjectManage -> projectread_FProjectManage
    int projectread_FTel -> projectread_FTel
    int projectread_netparseerror -> projectread_netparseerror
    int projectread_title -> projectread_title
    int projectreadbody_FApplyDept -> projectreadbody_FApplyDept
    int projectreadbody_FApplyName -> projectreadbody_FApplyName
    int projectreadbody_FApplyReason -> projectreadbody_FApplyReason
    int projectreadbody_FApplyType -> projectreadbody_FApplyType
    int projectreadbody_FEmail -> projectreadbody_FEmail
    int projectreadbody_FEndProject -> projectreadbody_FEndProject
    int projectreadbody_FMarketPublic -> projectreadbody_FMarketPublic
    int projectreadbody_FProductPublic -> projectreadbody_FProductPublic
    int projectreadbody_FProgramPublic -> projectreadbody_FProgramPublic
    int projectreadbody_FRisk -> projectreadbody_FRisk
    int projectreadbody_FStartProject -> projectreadbody_FStartProject
    int pull_to_refresh_from_bottom_pull_label -> pull_to_refresh_from_bottom_pull_label
    int pull_to_refresh_from_bottom_refreshing_label -> pull_to_refresh_from_bottom_refreshing_label
    int pull_to_refresh_from_bottom_release_label -> pull_to_refresh_from_bottom_release_label
    int pull_to_refresh_last_load_label -> pull_to_refresh_last_load_label
    int pull_to_refresh_last_refresh_label -> pull_to_refresh_last_refresh_label
    int pull_to_refresh_pull_label -> pull_to_refresh_pull_label
    int pull_to_refresh_refreshing_label -> pull_to_refresh_refreshing_label
    int pull_to_refresh_release_label -> pull_to_refresh_release_label
    int purchasestock_FDept -> purchasestock_FDept
    int purchasestock_FProcessName -> purchasestock_FProcessName
    int purchasestock_FProjectCode -> purchasestock_FProjectCode
    int purchasestock_FTechnologyName -> purchasestock_FTechnologyName
    int purchasestock_netparseerror -> purchasestock_netparseerror
    int purchasestock_title -> purchasestock_title
    int purchasestockbody_FEstimatedPrice -> purchasestockbody_FEstimatedPrice
    int purchasestockbody_FMaterialCode -> purchasestockbody_FMaterialCode
    int purchasestockbody_FModel -> purchasestockbody_FModel
    int purchasestockbody_FNote -> purchasestockbody_FNote
    int purchasestockbody_FNumber -> purchasestockbody_FNumber
    int purchasestockbody_FRdDate -> purchasestockbody_FRdDate
    int purchasestockbody_FUnit -> purchasestockbody_FUnit
    int reject_title -> reject_title
    int reload -> reload
    int search_hint -> search_hint
    int sms_invite_button -> sms_invite_button
    int sms_invite_error -> sms_invite_error
    int sms_invite_failure -> sms_invite_failure
    int sms_invite_illegal_mobile -> sms_invite_illegal_mobile
    int sms_invite_search -> sms_invite_search
    int sms_invite_success -> sms_invite_success
    int sms_invite_text -> sms_invite_text
    int sms_invite_title -> sms_invite_title
    int sms_sent_failure_generic -> sms_sent_failure_generic
    int sms_sent_failure_no_service -> sms_sent_failure_no_service
    int sms_sent_failure_null_pdu -> sms_sent_failure_null_pdu
    int sms_sent_failure_radio_off -> sms_sent_failure_radio_off
    int sms_sent_success -> sms_sent_success
    int socket_exception_error -> socket_exception_error
    int soft_update_cancel -> soft_update_cancel
    int soft_update_cannotget -> soft_update_cannotget
    int soft_update_later -> soft_update_later
    int soft_update_no -> soft_update_no
    int soft_update_sdcard -> soft_update_sdcard
    int soft_update_sure -> soft_update_sure
    int soft_update_title -> soft_update_title
    int soft_update_updatebtn -> soft_update_updatebtn
    int soft_updating -> soft_updating
    int spinner_cancle -> spinner_cancle
    int spinner_reject_prompt -> spinner_reject_prompt
    int spinner_sure -> spinner_sure
    int spinner_week_prompt -> spinner_week_prompt
    int spinner_year_prompt -> spinner_year_prompt
    int submit_report -> submit_report
    int sure -> sure
    int svnpermission_FApplyDept -> svnpermission_FApplyDept
    int svnpermission_FSvnShow -> svnpermission_FSvnShow
    int svnpermission_netparseerror -> svnpermission_netparseerror
    int svnpermission_title -> svnpermission_title
    int svnpermissiontbody_FAddress -> svnpermissiontbody_FAddress
    int svnpermissiontbody_FReadOrWrite -> svnpermissiontbody_FReadOrWrite
    int svnpermissiontbody_FReason -> svnpermissiontbody_FReason
    int svnpermissiontbody_FResponsible -> svnpermissiontbody_FResponsible
    int system_setting -> system_setting
    int system_setting_checkupdate -> system_setting_checkupdate
    int system_setting_help -> system_setting_help
    int system_setting_notice -> system_setting_notice
    int system_setting_upload -> system_setting_upload
    int system_setting_version -> system_setting_version
    int tasklist_fsender -> tasklist_fsender
    int tasklist_fsendtime -> tasklist_fsendtime
    int tasklist_ftitle -> tasklist_ftitle
    int tasklist_history -> tasklist_history
    int tasklist_history_netparseerror -> tasklist_history_netparseerror
    int tasklist_list -> tasklist_list
    int tasklist_list_netparseerror -> tasklist_list_netparseerror
    int tasklist_main -> tasklist_main
    int tasklist_notfind -> tasklist_notfind
    int tasklist_search -> tasklist_search
    int tdborrow_FApplyDept -> tdborrow_FApplyDept
    int tdborrow_FDocumentType -> tdborrow_FDocumentType
    int tdborrow_FSecrecyDate -> tdborrow_FSecrecyDate
    int tdborrow_netparseerror -> tdborrow_netparseerror
    int tdborrow_title -> tdborrow_title
    int tdborrowbody_FDocumentName -> tdborrowbody_FDocumentName
    int tdborrowbody_FDocumentUse -> tdborrowbody_FDocumentUse
    int tdborrowbody_FNote -> tdborrowbody_FNote
    int tdborrowbody_FSupportType -> tdborrowbody_FSupportType
    int tdborrowbody_FVersion -> tdborrowbody_FVersion
    int tdpermission_FAfterAmount -> tdpermission_FAfterAmount
    int tdpermission_FAfterTitle -> tdpermission_FAfterTitle
    int tdpermission_FApplyDept -> tdpermission_FApplyDept
    int tdpermission_FBeforeAmount -> tdpermission_FBeforeAmount
    int tdpermission_FBeforeTitle -> tdpermission_FBeforeTitle
    int tdpermission_FPersonType -> tdpermission_FPersonType
    int tdpermission_FTel -> tdpermission_FTel
    int tdpermission_netparseerror -> tdpermission_netparseerror
    int tdpermission_title -> tdpermission_title
    int tdpermissionbody_after_FApplyDept -> tdpermissionbody_after_FApplyDept
    int tdpermissionbody_after_FApplyName -> tdpermissionbody_after_FApplyName
    int tdpermissionbody_after_FCodeAndName -> tdpermissionbody_after_FCodeAndName
    int tdpermissionbody_after_FDevelopPermission -> tdpermissionbody_after_FDevelopPermission
    int tdpermissionbody_after_FEmail -> tdpermissionbody_after_FEmail
    int tdpermissionbody_after_FManagerPermission -> tdpermissionbody_after_FManagerPermission
    int tdpermissionbody_after_FProductName -> tdpermissionbody_after_FProductName
    int tdpermissionbody_after_FProductType -> tdpermissionbody_after_FProductType
    int tdpermissionbody_after_FReadOnly -> tdpermissionbody_after_FReadOnly
    int tdpermissionbody_after_FTestPermission -> tdpermissionbody_after_FTestPermission
    int tdpermissionbody_before_FApplyDept -> tdpermissionbody_before_FApplyDept
    int tdpermissionbody_before_FApplyName -> tdpermissionbody_before_FApplyName
    int tdpermissionbody_before_FCodeAndName -> tdpermissionbody_before_FCodeAndName
    int tdpermissionbody_before_FEmail -> tdpermissionbody_before_FEmail
    int tdpermissionbody_before_FManager -> tdpermissionbody_before_FManager
    int tdpermissionbody_before_FProjectPermission -> tdpermissionbody_before_FProjectPermission
    int tdpermissionbody_before_FTdDomain -> tdpermissionbody_before_FTdDomain
    int tdpermissionbody_before_FTdProject -> tdpermissionbody_before_FTdProject
    int traincomputer_FApplyDept -> traincomputer_FApplyDept
    int traincomputer_FTel -> traincomputer_FTel
    int traincomputer_netparseerror -> traincomputer_netparseerror
    int traincomputer_title -> traincomputer_title
    int traincomputerbody_FApplyDesc -> traincomputerbody_FApplyDesc
    int traincomputerbody_FEndTime -> traincomputerbody_FEndTime
    int traincomputerbody_FNote -> traincomputerbody_FNote
    int traincomputerbody_FStartTime -> traincomputerbody_FStartTime
    int travelapproval_FApplyDept -> travelapproval_FApplyDept
    int travelapproval_FArrangement -> travelapproval_FArrangement
    int travelapproval_FBackTime -> travelapproval_FBackTime
    int travelapproval_FClientName -> travelapproval_FClientName
    int travelapproval_FStartTime -> travelapproval_FStartTime
    int travelapproval_FTravelAddress -> travelapproval_FTravelAddress
    int travelapproval_FTravelCause -> travelapproval_FTravelCause
    int travelapproval_FTravelDays -> travelapproval_FTravelDays
    int travelapproval_FTravelReport -> travelapproval_FTravelReport
    int travelapproval_netparseerror -> travelapproval_netparseerror
    int travelapproval_title -> travelapproval_title
    int useinfo_login -> useinfo_login
    int useinfo_login_account -> useinfo_login_account
    int useinfo_login_cancle -> useinfo_login_cancle
    int useinfo_login_detail -> useinfo_login_detail
    int useinfo_login_faile -> useinfo_login_faile
    int useinfo_login_isremember -> useinfo_login_isremember
    int useinfo_login_password -> useinfo_login_password
    int useinfo_login_submit -> useinfo_login_submit
    int useinfo_login_success -> useinfo_login_success
    int useinfo_login_tippassword -> useinfo_login_tippassword
    int useinfo_login_tipusername -> useinfo_login_tipusername
    int workflow_been_title -> workflow_been_title
    int workflow_netparseerror -> workflow_netparseerror
    int workflow_paramerror -> workflow_paramerror
    int workflow_pass -> workflow_pass
    int workflow_pass_false -> workflow_pass_false
    int workflow_reject -> workflow_reject
    int workflow_reject_false -> workflow_reject_false
    int workflow_reject_notEmpty -> workflow_reject_notEmpty
    int workflow_title -> workflow_title
    int xlistview_footer_hint_finish -> xlistview_footer_hint_finish
    int xlistview_footer_hint_normal -> xlistview_footer_hint_normal
    int xlistview_footer_hint_ready -> xlistview_footer_hint_ready
    int xlistview_header_hint_loading -> xlistview_header_hint_loading
    int xlistview_header_hint_normal -> xlistview_header_hint_normal
    int xlistview_header_hint_ready -> xlistview_header_hint_ready
    int xlistview_header_last_time -> xlistview_header_last_time
    int xml_parser_failed -> xml_parser_failed
com.dahuatech.app.R$style -> com.dahuatech.app.R$style:
    int ActionSheet -> ActionSheet
    int ActionSheetAnimation -> ActionSheetAnimation
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
    int CheckBox -> CheckBox
    int CheckBox_item -> CheckBox_item
    int CustomActionBarTheme -> CustomActionBarTheme
    int Dialog -> Dialog
    int MyActionBar -> MyActionBar
    int Radiobutton -> Radiobutton
    int Result -> Result
    int SearchActionBarTheme -> SearchActionBarTheme
    int Sherlock___TextAppearance_Small -> Sherlock___TextAppearance_Small
    int Sherlock___Theme -> Sherlock___Theme
    int Sherlock___Theme_DarkActionBar -> Sherlock___Theme_DarkActionBar
    int Sherlock___Theme_Light -> Sherlock___Theme_Light
    int Sherlock___Widget_ActionBar -> Sherlock___Widget_ActionBar
    int Sherlock___Widget_ActionMode -> Sherlock___Widget_ActionMode
    int Sherlock___Widget_ActivityChooserView -> Sherlock___Widget_ActivityChooserView
    int Sherlock___Widget_Holo_DropDownItem -> Sherlock___Widget_Holo_DropDownItem
    int Sherlock___Widget_Holo_ListView -> Sherlock___Widget_Holo_ListView
    int Sherlock___Widget_Holo_Spinner -> Sherlock___Widget_Holo_Spinner
    int Sherlock___Widget_SearchAutoCompleteTextView -> Sherlock___Widget_SearchAutoCompleteTextView
    int TextAppearance_Sherlock -> TextAppearance_Sherlock
    int TextAppearance_Sherlock_Light_SearchResult -> TextAppearance_Sherlock_Light_SearchResult
    int TextAppearance_Sherlock_Light_SearchResult_Subtitle -> TextAppearance_Sherlock_Light_SearchResult_Subtitle
    int TextAppearance_Sherlock_Light_SearchResult_Title -> TextAppearance_Sherlock_Light_SearchResult_Title
    int TextAppearance_Sherlock_Light_Small -> TextAppearance_Sherlock_Light_Small
    int TextAppearance_Sherlock_Light_Widget_PopupMenu_Large -> TextAppearance_Sherlock_Light_Widget_PopupMenu_Large
    int TextAppearance_Sherlock_Light_Widget_PopupMenu_Small -> TextAppearance_Sherlock_Light_Widget_PopupMenu_Small
    int TextAppearance_Sherlock_SearchResult -> TextAppearance_Sherlock_SearchResult
    int TextAppearance_Sherlock_SearchResult_Subtitle -> TextAppearance_Sherlock_SearchResult_Subtitle
    int TextAppearance_Sherlock_SearchResult_Title -> TextAppearance_Sherlock_SearchResult_Title
    int TextAppearance_Sherlock_Small -> TextAppearance_Sherlock_Small
    int TextAppearance_Sherlock_Widget_ActionBar_Menu -> TextAppearance_Sherlock_Widget_ActionBar_Menu
    int TextAppearance_Sherlock_Widget_ActionBar_Subtitle -> TextAppearance_Sherlock_Widget_ActionBar_Subtitle
    int TextAppearance_Sherlock_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_Sherlock_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_Sherlock_Widget_ActionBar_Title -> TextAppearance_Sherlock_Widget_ActionBar_Title
    int TextAppearance_Sherlock_Widget_ActionBar_Title_Inverse -> TextAppearance_Sherlock_Widget_ActionBar_Title_Inverse
    int TextAppearance_Sherlock_Widget_ActionMode_Subtitle -> TextAppearance_Sherlock_Widget_ActionMode_Subtitle
    int TextAppearance_Sherlock_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_Sherlock_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_Sherlock_Widget_ActionMode_Title -> TextAppearance_Sherlock_Widget_ActionMode_Title
    int TextAppearance_Sherlock_Widget_ActionMode_Title_Inverse -> TextAppearance_Sherlock_Widget_ActionMode_Title_Inverse
    int TextAppearance_Sherlock_Widget_DropDownHint -> TextAppearance_Sherlock_Widget_DropDownHint
    int TextAppearance_Sherlock_Widget_DropDownItem -> TextAppearance_Sherlock_Widget_DropDownItem
    int TextAppearance_Sherlock_Widget_PopupMenu -> TextAppearance_Sherlock_Widget_PopupMenu
    int TextAppearance_Sherlock_Widget_PopupMenu_Large -> TextAppearance_Sherlock_Widget_PopupMenu_Large
    int TextAppearance_Sherlock_Widget_PopupMenu_Small -> TextAppearance_Sherlock_Widget_PopupMenu_Small
    int TextAppearance_Sherlock_Widget_TextView_SpinnerItem -> TextAppearance_Sherlock_Widget_TextView_SpinnerItem
    int Theme_Sherlock -> Theme_Sherlock
    int Theme_Sherlock_Light -> Theme_Sherlock_Light
    int Theme_Sherlock_Light_DarkActionBar -> Theme_Sherlock_Light_DarkActionBar
    int Theme_Sherlock_Light_NoActionBar -> Theme_Sherlock_Light_NoActionBar
    int Theme_Sherlock_Light_WindowFullscreen -> Theme_Sherlock_Light_WindowFullscreen
    int Theme_Sherlock_NoActionBar -> Theme_Sherlock_NoActionBar
    int Widget -> Widget
    int Widget_Sherlock_ActionBar -> Widget_Sherlock_ActionBar
    int Widget_Sherlock_ActionBar_Solid -> Widget_Sherlock_ActionBar_Solid
    int Widget_Sherlock_ActionBar_TabBar -> Widget_Sherlock_ActionBar_TabBar
    int Widget_Sherlock_ActionBar_TabText -> Widget_Sherlock_ActionBar_TabText
    int Widget_Sherlock_ActionBar_TabView -> Widget_Sherlock_ActionBar_TabView
    int Widget_Sherlock_ActionButton -> Widget_Sherlock_ActionButton
    int Widget_Sherlock_ActionButton_CloseMode -> Widget_Sherlock_ActionButton_CloseMode
    int Widget_Sherlock_ActionButton_Overflow -> Widget_Sherlock_ActionButton_Overflow
    int Widget_Sherlock_ActionMode -> Widget_Sherlock_ActionMode
    int Widget_Sherlock_ActivityChooserView -> Widget_Sherlock_ActivityChooserView
    int Widget_Sherlock_Button_Small -> Widget_Sherlock_Button_Small
    int Widget_Sherlock_DropDownItem_Spinner -> Widget_Sherlock_DropDownItem_Spinner
    int Widget_Sherlock_Light_ActionBar -> Widget_Sherlock_Light_ActionBar
    int Widget_Sherlock_Light_ActionBar_Solid -> Widget_Sherlock_Light_ActionBar_Solid
    int Widget_Sherlock_Light_ActionBar_Solid_Inverse -> Widget_Sherlock_Light_ActionBar_Solid_Inverse
    int Widget_Sherlock_Light_ActionBar_TabBar -> Widget_Sherlock_Light_ActionBar_TabBar
    int Widget_Sherlock_Light_ActionBar_TabBar_Inverse -> Widget_Sherlock_Light_ActionBar_TabBar_Inverse
    int Widget_Sherlock_Light_ActionBar_TabText -> Widget_Sherlock_Light_ActionBar_TabText
    int Widget_Sherlock_Light_ActionBar_TabText_Inverse -> Widget_Sherlock_Light_ActionBar_TabText_Inverse
    int Widget_Sherlock_Light_ActionBar_TabView -> Widget_Sherlock_Light_ActionBar_TabView
    int Widget_Sherlock_Light_ActionBar_TabView_Inverse -> Widget_Sherlock_Light_ActionBar_TabView_Inverse
    int Widget_Sherlock_Light_ActionButton -> Widget_Sherlock_Light_ActionButton
    int Widget_Sherlock_Light_ActionButton_CloseMode -> Widget_Sherlock_Light_ActionButton_CloseMode
    int Widget_Sherlock_Light_ActionButton_Overflow -> Widget_Sherlock_Light_ActionButton_Overflow
    int Widget_Sherlock_Light_ActionMode -> Widget_Sherlock_Light_ActionMode
    int Widget_Sherlock_Light_ActionMode_Inverse -> Widget_Sherlock_Light_ActionMode_Inverse
    int Widget_Sherlock_Light_ActivityChooserView -> Widget_Sherlock_Light_ActivityChooserView
    int Widget_Sherlock_Light_Button_Small -> Widget_Sherlock_Light_Button_Small
    int Widget_Sherlock_Light_DropDownItem_Spinner -> Widget_Sherlock_Light_DropDownItem_Spinner
    int Widget_Sherlock_Light_ListPopupWindow -> Widget_Sherlock_Light_ListPopupWindow
    int Widget_Sherlock_Light_ListView_DropDown -> Widget_Sherlock_Light_ListView_DropDown
    int Widget_Sherlock_Light_PopupMenu -> Widget_Sherlock_Light_PopupMenu
    int Widget_Sherlock_Light_PopupWindow_ActionMode -> Widget_Sherlock_Light_PopupWindow_ActionMode
    int Widget_Sherlock_Light_ProgressBar -> Widget_Sherlock_Light_ProgressBar
    int Widget_Sherlock_Light_ProgressBar_Horizontal -> Widget_Sherlock_Light_ProgressBar_Horizontal
    int Widget_Sherlock_Light_SearchAutoCompleteTextView -> Widget_Sherlock_Light_SearchAutoCompleteTextView
    int Widget_Sherlock_Light_Spinner_DropDown_ActionBar -> Widget_Sherlock_Light_Spinner_DropDown_ActionBar
    int Widget_Sherlock_ListPopupWindow -> Widget_Sherlock_ListPopupWindow
    int Widget_Sherlock_ListView_DropDown -> Widget_Sherlock_ListView_DropDown
    int Widget_Sherlock_PopupMenu -> Widget_Sherlock_PopupMenu
    int Widget_Sherlock_PopupWindow_ActionMode -> Widget_Sherlock_PopupWindow_ActionMode
    int Widget_Sherlock_ProgressBar -> Widget_Sherlock_ProgressBar
    int Widget_Sherlock_ProgressBar_Horizontal -> Widget_Sherlock_ProgressBar_Horizontal
    int Widget_Sherlock_SearchAutoCompleteTextView -> Widget_Sherlock_SearchAutoCompleteTextView
    int Widget_Sherlock_Spinner_DropDown_ActionBar -> Widget_Sherlock_Spinner_DropDown_ActionBar
    int Widget_Sherlock_TextView_SpinnerItem -> Widget_Sherlock_TextView_SpinnerItem
    int button_text -> button_text
    int calendar_day -> calendar_day
    int calendar_hour -> calendar_hour
    int calendar_item -> calendar_item
    int calendar_item_detail -> calendar_item_detail
    int calendar_no -> calendar_no
    int calendar_time -> calendar_time
    int calendar_week -> calendar_week
    int checkbox_button -> checkbox_button
    int cot_search -> cot_search
    int dh_item_add -> dh_item_add
    int dh_project_name -> dh_project_name
    int dh_project_no -> dh_project_no
    int guide_viewpager_blue -> guide_viewpager_blue
    int icons -> icons
    int icons_white -> icons_white
    int iconsamount -> iconsamount
    int iconscontent -> iconscontent
    int iconsgreen -> iconsgreen
    int iconsred -> iconsred
    int iconstel -> iconstel
    int iconstext -> iconstext
    int iconstitle -> iconstitle
    int iconstitlered -> iconstitlered
    int iconswhite -> iconswhite
    int items_title -> items_title
    int list_del -> list_del
    int listiconsamount -> listiconsamount
    int listiconsitem -> listiconsitem
    int listiconstitle -> listiconstitle
    int listiconswhere -> listiconswhere
    int listiconswho -> listiconswho
    int main_icon -> main_icon
    int main_message -> main_message
    int market_product -> market_product
    int market_product_line -> market_product_line
    int market_product_name -> market_product_name
    int meeting_content -> meeting_content
    int meeting_name -> meeting_name
    int meeting_states -> meeting_states
    int meeting_tabs_left -> meeting_tabs_left
    int meeting_tabs_left_active -> meeting_tabs_left_active
    int meeting_tabs_right -> meeting_tabs_right
    int meeting_tabs_right_active -> meeting_tabs_right_active
    int meeting_title -> meeting_title
    int meetingtitle -> meetingtitle
    int menu_title -> menu_title
    int pluscopy_CheckBox -> pluscopy_CheckBox
    int record_dateline -> record_dateline
    int record_time -> record_time
    int record_timeline -> record_timeline
    int record_timetext -> record_timetext
    int search -> search
    int searchTextView -> searchTextView
    int sidebar_button -> sidebar_button
    int sidebar_right_button -> sidebar_right_button
    int tabs_active -> tabs_active
    int tabs_default -> tabs_default
    int tabs_default_active_white -> tabs_default_active_white
    int tabs_default_left -> tabs_default_left
    int tabs_default_left_active_white -> tabs_default_left_active_white
    int tabs_default_left_white -> tabs_default_left_white
    int tabs_default_right -> tabs_default_right
    int tabs_default_right_active_white -> tabs_default_right_active_white
    int tabs_default_right_white -> tabs_default_right_white
    int tabs_default_white -> tabs_default_white
    int time_Radiobutton -> time_Radiobutton
    int time_hour -> time_hour
    int time_user -> time_user
com.dahuatech.app.R$styleable -> com.dahuatech.app.R$styleable:
    int[] PullToRefresh -> PullToRefresh
    int PullToRefresh_ptrAdapterViewBackground -> PullToRefresh_ptrAdapterViewBackground
    int PullToRefresh_ptrAnimationStyle -> PullToRefresh_ptrAnimationStyle
    int PullToRefresh_ptrDrawable -> PullToRefresh_ptrDrawable
    int PullToRefresh_ptrDrawableBottom -> PullToRefresh_ptrDrawableBottom
    int PullToRefresh_ptrDrawableEnd -> PullToRefresh_ptrDrawableEnd
    int PullToRefresh_ptrDrawableStart -> PullToRefresh_ptrDrawableStart
    int PullToRefresh_ptrDrawableTop -> PullToRefresh_ptrDrawableTop
    int PullToRefresh_ptrHeaderBackground -> PullToRefresh_ptrHeaderBackground
    int PullToRefresh_ptrHeaderSubTextColor -> PullToRefresh_ptrHeaderSubTextColor
    int PullToRefresh_ptrHeaderTextAppearance -> PullToRefresh_ptrHeaderTextAppearance
    int PullToRefresh_ptrHeaderTextColor -> PullToRefresh_ptrHeaderTextColor
    int PullToRefresh_ptrListViewExtrasEnabled -> PullToRefresh_ptrListViewExtrasEnabled
    int PullToRefresh_ptrMode -> PullToRefresh_ptrMode
    int PullToRefresh_ptrOverScroll -> PullToRefresh_ptrOverScroll
    int PullToRefresh_ptrRefreshableViewBackground -> PullToRefresh_ptrRefreshableViewBackground
    int PullToRefresh_ptrRotateDrawableWhilePulling -> PullToRefresh_ptrRotateDrawableWhilePulling
    int PullToRefresh_ptrScrollingWhileRefreshingEnabled -> PullToRefresh_ptrScrollingWhileRefreshingEnabled
    int PullToRefresh_ptrShowIndicator -> PullToRefresh_ptrShowIndicator
    int PullToRefresh_ptrSubHeaderTextAppearance -> PullToRefresh_ptrSubHeaderTextAppearance
    int[] SherlockActionBar -> SherlockActionBar
    int SherlockActionBar_background -> SherlockActionBar_background
    int SherlockActionBar_backgroundSplit -> SherlockActionBar_backgroundSplit
    int SherlockActionBar_backgroundStacked -> SherlockActionBar_backgroundStacked
    int SherlockActionBar_customNavigationLayout -> SherlockActionBar_customNavigationLayout
    int SherlockActionBar_displayOptions -> SherlockActionBar_displayOptions
    int SherlockActionBar_divider -> SherlockActionBar_divider
    int SherlockActionBar_height -> SherlockActionBar_height
    int SherlockActionBar_homeLayout -> SherlockActionBar_homeLayout
    int SherlockActionBar_icon -> SherlockActionBar_icon
    int SherlockActionBar_indeterminateProgressStyle -> SherlockActionBar_indeterminateProgressStyle
    int SherlockActionBar_itemPadding -> SherlockActionBar_itemPadding
    int SherlockActionBar_logo -> SherlockActionBar_logo
    int SherlockActionBar_navigationMode -> SherlockActionBar_navigationMode
    int SherlockActionBar_progressBarPadding -> SherlockActionBar_progressBarPadding
    int SherlockActionBar_progressBarStyle -> SherlockActionBar_progressBarStyle
    int SherlockActionBar_subtitle -> SherlockActionBar_subtitle
    int SherlockActionBar_subtitleTextStyle -> SherlockActionBar_subtitleTextStyle
    int SherlockActionBar_title -> SherlockActionBar_title
    int SherlockActionBar_titleTextStyle -> SherlockActionBar_titleTextStyle
    int[] SherlockActionMenuItemView -> SherlockActionMenuItemView
    int SherlockActionMenuItemView_android_minWidth -> SherlockActionMenuItemView_android_minWidth
    int[] SherlockActionMode -> SherlockActionMode
    int SherlockActionMode_background -> SherlockActionMode_background
    int SherlockActionMode_backgroundSplit -> SherlockActionMode_backgroundSplit
    int SherlockActionMode_height -> SherlockActionMode_height
    int SherlockActionMode_subtitleTextStyle -> SherlockActionMode_subtitleTextStyle
    int SherlockActionMode_titleTextStyle -> SherlockActionMode_titleTextStyle
    int[] SherlockActivityChooserView -> SherlockActivityChooserView
    int SherlockActivityChooserView_android_background -> SherlockActivityChooserView_android_background
    int SherlockActivityChooserView_expandActivityOverflowButtonDrawable -> SherlockActivityChooserView_expandActivityOverflowButtonDrawable
    int SherlockActivityChooserView_initialActivityCount -> SherlockActivityChooserView_initialActivityCount
    int[] SherlockMenuGroup -> SherlockMenuGroup
    int SherlockMenuGroup_android_checkableBehavior -> SherlockMenuGroup_android_checkableBehavior
    int SherlockMenuGroup_android_enabled -> SherlockMenuGroup_android_enabled
    int SherlockMenuGroup_android_id -> SherlockMenuGroup_android_id
    int SherlockMenuGroup_android_menuCategory -> SherlockMenuGroup_android_menuCategory
    int SherlockMenuGroup_android_orderInCategory -> SherlockMenuGroup_android_orderInCategory
    int SherlockMenuGroup_android_visible -> SherlockMenuGroup_android_visible
    int[] SherlockMenuItem -> SherlockMenuItem
    int SherlockMenuItem_android_actionLayout -> SherlockMenuItem_android_actionLayout
    int SherlockMenuItem_android_actionProviderClass -> SherlockMenuItem_android_actionProviderClass
    int SherlockMenuItem_android_actionViewClass -> SherlockMenuItem_android_actionViewClass
    int SherlockMenuItem_android_alphabeticShortcut -> SherlockMenuItem_android_alphabeticShortcut
    int SherlockMenuItem_android_checkable -> SherlockMenuItem_android_checkable
    int SherlockMenuItem_android_checked -> SherlockMenuItem_android_checked
    int SherlockMenuItem_android_enabled -> SherlockMenuItem_android_enabled
    int SherlockMenuItem_android_icon -> SherlockMenuItem_android_icon
    int SherlockMenuItem_android_id -> SherlockMenuItem_android_id
    int SherlockMenuItem_android_menuCategory -> SherlockMenuItem_android_menuCategory
    int SherlockMenuItem_android_numericShortcut -> SherlockMenuItem_android_numericShortcut
    int SherlockMenuItem_android_onClick -> SherlockMenuItem_android_onClick
    int SherlockMenuItem_android_orderInCategory -> SherlockMenuItem_android_orderInCategory
    int SherlockMenuItem_android_showAsAction -> SherlockMenuItem_android_showAsAction
    int SherlockMenuItem_android_title -> SherlockMenuItem_android_title
    int SherlockMenuItem_android_titleCondensed -> SherlockMenuItem_android_titleCondensed
    int SherlockMenuItem_android_visible -> SherlockMenuItem_android_visible
    int[] SherlockMenuView -> SherlockMenuView
    int SherlockMenuView_headerBackground -> SherlockMenuView_headerBackground
    int SherlockMenuView_horizontalDivider -> SherlockMenuView_horizontalDivider
    int SherlockMenuView_itemBackground -> SherlockMenuView_itemBackground
    int SherlockMenuView_itemIconDisabledAlpha -> SherlockMenuView_itemIconDisabledAlpha
    int SherlockMenuView_itemTextAppearance -> SherlockMenuView_itemTextAppearance
    int SherlockMenuView_preserveIconSpacing -> SherlockMenuView_preserveIconSpacing
    int SherlockMenuView_verticalDivider -> SherlockMenuView_verticalDivider
    int SherlockMenuView_windowAnimationStyle -> SherlockMenuView_windowAnimationStyle
    int[] SherlockSearchView -> SherlockSearchView
    int SherlockSearchView_android_imeOptions -> SherlockSearchView_android_imeOptions
    int SherlockSearchView_android_inputType -> SherlockSearchView_android_inputType
    int SherlockSearchView_android_maxWidth -> SherlockSearchView_android_maxWidth
    int SherlockSearchView_iconifiedByDefault -> SherlockSearchView_iconifiedByDefault
    int SherlockSearchView_queryHint -> SherlockSearchView_queryHint
    int[] SherlockSpinner -> SherlockSpinner
    int SherlockSpinner_android_dropDownHorizontalOffset -> SherlockSpinner_android_dropDownHorizontalOffset
    int SherlockSpinner_android_dropDownSelector -> SherlockSpinner_android_dropDownSelector
    int SherlockSpinner_android_dropDownVerticalOffset -> SherlockSpinner_android_dropDownVerticalOffset
    int SherlockSpinner_android_dropDownWidth -> SherlockSpinner_android_dropDownWidth
    int SherlockSpinner_android_gravity -> SherlockSpinner_android_gravity
    int SherlockSpinner_android_popupBackground -> SherlockSpinner_android_popupBackground
    int SherlockSpinner_android_popupPromptView -> SherlockSpinner_android_popupPromptView
    int SherlockSpinner_android_prompt -> SherlockSpinner_android_prompt
    int[] SherlockTheme -> SherlockTheme
    int SherlockTheme_actionBarDivider -> SherlockTheme_actionBarDivider
    int SherlockTheme_actionBarItemBackground -> SherlockTheme_actionBarItemBackground
    int SherlockTheme_actionBarSize -> SherlockTheme_actionBarSize
    int SherlockTheme_actionBarSplitStyle -> SherlockTheme_actionBarSplitStyle
    int SherlockTheme_actionBarStyle -> SherlockTheme_actionBarStyle
    int SherlockTheme_actionBarTabBarStyle -> SherlockTheme_actionBarTabBarStyle
    int SherlockTheme_actionBarTabStyle -> SherlockTheme_actionBarTabStyle
    int SherlockTheme_actionBarTabTextStyle -> SherlockTheme_actionBarTabTextStyle
    int SherlockTheme_actionBarWidgetTheme -> SherlockTheme_actionBarWidgetTheme
    int SherlockTheme_actionButtonStyle -> SherlockTheme_actionButtonStyle
    int SherlockTheme_actionDropDownStyle -> SherlockTheme_actionDropDownStyle
    int SherlockTheme_actionMenuTextAppearance -> SherlockTheme_actionMenuTextAppearance
    int SherlockTheme_actionMenuTextColor -> SherlockTheme_actionMenuTextColor
    int SherlockTheme_actionModeBackground -> SherlockTheme_actionModeBackground
    int SherlockTheme_actionModeCloseButtonStyle -> SherlockTheme_actionModeCloseButtonStyle
    int SherlockTheme_actionModeCloseDrawable -> SherlockTheme_actionModeCloseDrawable
    int SherlockTheme_actionModePopupWindowStyle -> SherlockTheme_actionModePopupWindowStyle
    int SherlockTheme_actionModeShareDrawable -> SherlockTheme_actionModeShareDrawable
    int SherlockTheme_actionModeSplitBackground -> SherlockTheme_actionModeSplitBackground
    int SherlockTheme_actionModeStyle -> SherlockTheme_actionModeStyle
    int SherlockTheme_actionOverflowButtonStyle -> SherlockTheme_actionOverflowButtonStyle
    int SherlockTheme_actionSpinnerItemStyle -> SherlockTheme_actionSpinnerItemStyle
    int SherlockTheme_activatedBackgroundIndicator -> SherlockTheme_activatedBackgroundIndicator
    int SherlockTheme_activityChooserViewStyle -> SherlockTheme_activityChooserViewStyle
    int SherlockTheme_buttonStyleSmall -> SherlockTheme_buttonStyleSmall
    int SherlockTheme_dividerVertical -> SherlockTheme_dividerVertical
    int SherlockTheme_dropDownHintAppearance -> SherlockTheme_dropDownHintAppearance
    int SherlockTheme_dropDownListViewStyle -> SherlockTheme_dropDownListViewStyle
    int SherlockTheme_dropdownListPreferredItemHeight -> SherlockTheme_dropdownListPreferredItemHeight
    int SherlockTheme_homeAsUpIndicator -> SherlockTheme_homeAsUpIndicator
    int SherlockTheme_listPopupWindowStyle -> SherlockTheme_listPopupWindowStyle
    int SherlockTheme_listPreferredItemHeightSmall -> SherlockTheme_listPreferredItemHeightSmall
    int SherlockTheme_listPreferredItemPaddingLeft -> SherlockTheme_listPreferredItemPaddingLeft
    int SherlockTheme_listPreferredItemPaddingRight -> SherlockTheme_listPreferredItemPaddingRight
    int SherlockTheme_popupMenuStyle -> SherlockTheme_popupMenuStyle
    int SherlockTheme_searchAutoCompleteTextView -> SherlockTheme_searchAutoCompleteTextView
    int SherlockTheme_searchDropdownBackground -> SherlockTheme_searchDropdownBackground
    int SherlockTheme_searchResultListItemHeight -> SherlockTheme_searchResultListItemHeight
    int SherlockTheme_searchViewCloseIcon -> SherlockTheme_searchViewCloseIcon
    int SherlockTheme_searchViewEditQuery -> SherlockTheme_searchViewEditQuery
    int SherlockTheme_searchViewEditQueryBackground -> SherlockTheme_searchViewEditQueryBackground
    int SherlockTheme_searchViewGoIcon -> SherlockTheme_searchViewGoIcon
    int SherlockTheme_searchViewSearchIcon -> SherlockTheme_searchViewSearchIcon
    int SherlockTheme_searchViewTextField -> SherlockTheme_searchViewTextField
    int SherlockTheme_searchViewTextFieldRight -> SherlockTheme_searchViewTextFieldRight
    int SherlockTheme_searchViewVoiceIcon -> SherlockTheme_searchViewVoiceIcon
    int SherlockTheme_selectableItemBackground -> SherlockTheme_selectableItemBackground
    int SherlockTheme_spinnerDropDownItemStyle -> SherlockTheme_spinnerDropDownItemStyle
    int SherlockTheme_spinnerItemStyle -> SherlockTheme_spinnerItemStyle
    int SherlockTheme_textAppearanceLargePopupMenu -> SherlockTheme_textAppearanceLargePopupMenu
    int SherlockTheme_textAppearanceListItemSmall -> SherlockTheme_textAppearanceListItemSmall
    int SherlockTheme_textAppearanceSearchResultSubtitle -> SherlockTheme_textAppearanceSearchResultSubtitle
    int SherlockTheme_textAppearanceSearchResultTitle -> SherlockTheme_textAppearanceSearchResultTitle
    int SherlockTheme_textAppearanceSmall -> SherlockTheme_textAppearanceSmall
    int SherlockTheme_textAppearanceSmallPopupMenu -> SherlockTheme_textAppearanceSmallPopupMenu
    int SherlockTheme_textColorPrimary -> SherlockTheme_textColorPrimary
    int SherlockTheme_textColorPrimaryDisableOnly -> SherlockTheme_textColorPrimaryDisableOnly
    int SherlockTheme_textColorPrimaryInverse -> SherlockTheme_textColorPrimaryInverse
    int SherlockTheme_textColorSearchUrl -> SherlockTheme_textColorSearchUrl
    int SherlockTheme_windowActionBar -> SherlockTheme_windowActionBar
    int SherlockTheme_windowActionBarOverlay -> SherlockTheme_windowActionBarOverlay
    int SherlockTheme_windowActionModeOverlay -> SherlockTheme_windowActionModeOverlay
    int SherlockTheme_windowContentOverlay -> SherlockTheme_windowContentOverlay
    int SherlockTheme_windowMinWidthMajor -> SherlockTheme_windowMinWidthMajor
    int SherlockTheme_windowMinWidthMinor -> SherlockTheme_windowMinWidthMinor
    int SherlockTheme_windowNoTitle -> SherlockTheme_windowNoTitle
    int SherlockTheme_windowSplitActionBar -> SherlockTheme_windowSplitActionBar
    int[] SherlockView -> SherlockView
    int SherlockView_android_focusable -> SherlockView_android_focusable
    int[] SlidingMenu -> SlidingMenu
    int SlidingMenu_behindOffset -> SlidingMenu_behindOffset
    int SlidingMenu_behindScrollScale -> SlidingMenu_behindScrollScale
    int SlidingMenu_behindWidth -> SlidingMenu_behindWidth
    int SlidingMenu_fadeDegree -> SlidingMenu_fadeDegree
    int SlidingMenu_fadeEnabled -> SlidingMenu_fadeEnabled
    int SlidingMenu_mode -> SlidingMenu_mode
    int SlidingMenu_selectorDrawable -> SlidingMenu_selectorDrawable
    int SlidingMenu_selectorEnabled -> SlidingMenu_selectorEnabled
    int SlidingMenu_shadowDrawable -> SlidingMenu_shadowDrawable
    int SlidingMenu_shadowWidth -> SlidingMenu_shadowWidth
    int SlidingMenu_touchModeAbove -> SlidingMenu_touchModeAbove
    int SlidingMenu_touchModeBehind -> SlidingMenu_touchModeBehind
    int SlidingMenu_viewAbove -> SlidingMenu_viewAbove
    int SlidingMenu_viewBehind -> SlidingMenu_viewBehind
com.dahuatech.app.R$xml -> com.dahuatech.app.R$xml:
    int configfile -> configfile
    int searchable -> searchable
com.dahuatech.app.adapter.AttendanceListAdapter -> com.dahuatech.app.adapter.AttendanceListAdapter:
    com.dahuatech.app.adapter.AttendanceListAdapter$AttendanceListView adListView -> a
    void refreshView() -> refreshView
    void refreshView(java.util.List) -> refreshView
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dahuatech.app.adapter.AttendanceListAdapter$AttendanceListView -> cv:
    android.widget.RelativeLayout ad_fRelativeLayout -> a
    android.widget.TextView ad_fAttendanceDate -> b
    android.widget.TextView ad_fType -> c
    android.widget.TextView ad_fCheckInTime -> d
    android.widget.TextView ad_fCheckOutTime -> e
    android.widget.TextView ad_fAmResult -> f
    android.widget.TextView ad_fPmResult -> g
com.dahuatech.app.adapter.ContactsAdapter -> com.dahuatech.app.adapter.ContactsAdapter:
    com.dahuatech.app.common.DbManager mDbHelper -> a
    int TYPE_COUNT -> b
    int CONTACT_TYPE -> c
    int INVITATION_TYPE -> d
    int CLEAR_TYPE -> e
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    void makeCall(android.content.Context,com.dahuatech.app.bean.ContactInfo) -> a
    void backToSms(android.content.Context,com.dahuatech.app.bean.ContactInfo) -> b
    void insertContacts(android.content.Context,com.dahuatech.app.bean.ContactInfo) -> c
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    com.dahuatech.app.common.DbManager access$0(com.dahuatech.app.adapter.ContactsAdapter) -> a
    void access$1(com.dahuatech.app.adapter.ContactsAdapter,android.content.Context,com.dahuatech.app.bean.ContactInfo) -> a
    void access$2(com.dahuatech.app.adapter.ContactsAdapter,android.content.Context,com.dahuatech.app.bean.ContactInfo) -> b
    void access$3(com.dahuatech.app.adapter.ContactsAdapter,android.content.Context,com.dahuatech.app.bean.ContactInfo) -> c
com.dahuatech.app.adapter.ContactsAdapter$1 -> cw:
    com.dahuatech.app.adapter.ContactsAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.adapter.ContactsAdapter$2 -> cx:
    com.dahuatech.app.adapter.ContactsAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.adapter.ContactsAdapter$3 -> cy:
    com.dahuatech.app.adapter.ContactsAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.adapter.ContactsAdapter$4 -> cz:
    com.dahuatech.app.adapter.ContactsAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.adapter.ContactsAdapter$5 -> da:
    com.dahuatech.app.adapter.ContactsAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.adapter.ContactsAdapter$6 -> db:
    com.dahuatech.app.adapter.ContactsAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.adapter.ContactsAdapter$7 -> dc:
    com.dahuatech.app.adapter.ContactsAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.adapter.ContactsAdapter$ContactsItemView -> dd:
    android.widget.ImageButton ct_fItemsIconVisit -> a
    android.widget.ImageButton ct_fItemsIconMsg -> b
    android.widget.ImageButton ct_fItemsIconCal -> c
    android.widget.TextView ct_fItemNumber -> d
    android.widget.TextView ct_fItemName -> e
    android.widget.TextView ct_fCornet -> f
    android.widget.TextView ct_fDepartment -> g
    android.widget.TextView ct_fClear -> h
com.dahuatech.app.adapter.DHComfirmListPersonAdapter -> com.dahuatech.app.adapter.DHComfirmListPersonAdapter:
    java.util.List listData -> a
    android.view.LayoutInflater inflater -> b
    int pResource -> c
    int tResource -> d
    com.dahuatech.app.adapter.DHComfirmListPersonAdapter$DHListPersonRoot rootHoder -> e
    com.dahuatech.app.adapter.DHComfirmListPersonAdapter$DHListPersonChild childHoder -> f
    void refreshView() -> refreshView
    void refreshView(java.util.List) -> refreshView
    java.lang.Object getChild(int,int) -> getChild
    long getChildId(int,int) -> getChildId
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getGroup(int) -> getGroup
    int getGroupCount() -> getGroupCount
    long getGroupId(int) -> getGroupId
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    boolean hasStableIds() -> hasStableIds
    boolean isChildSelectable(int,int) -> isChildSelectable
com.dahuatech.app.adapter.DHComfirmListPersonAdapter$DHListPersonChild -> de:
    android.widget.TextView dc_fWeekDay -> a
    android.widget.TextView dc_fHours -> b
com.dahuatech.app.adapter.DHComfirmListPersonAdapter$DHListPersonRoot -> df:
    android.widget.TextView dr_fTypeName -> a
    android.widget.TextView dr_fHours -> b
com.dahuatech.app.adapter.DHConfirmListAdapter -> com.dahuatech.app.adapter.DHConfirmListAdapter:
    java.util.List listData -> a
    android.view.LayoutInflater inflater -> b
    int viewRootResource -> c
    int viewChildResource -> d
    com.dahuatech.app.adapter.DHConfirmListAdapter$RootGroupHolder rootGroupHolder -> e
    com.dahuatech.app.adapter.DHConfirmListAdapter$ChildViewHolder childViewHolder -> f
    void refreshView() -> refreshView
    java.lang.Object getChild(int,int) -> getChild
    long getChildId(int,int) -> getChildId
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getGroup(int) -> getGroup
    int getGroupCount() -> getGroupCount
    long getGroupId(int) -> getGroupId
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    boolean hasStableIds() -> hasStableIds
    boolean isChildSelectable(int,int) -> isChildSelectable
com.dahuatech.app.adapter.DHConfirmListAdapter$1 -> dg:
    com.dahuatech.app.adapter.DHConfirmListAdapter this$0 -> a
    com.dahuatech.app.bean.develophour.DHConfirmChildInfo val$childInfo -> b
    void onClick(android.view.View) -> onClick
com.dahuatech.app.adapter.DHConfirmListAdapter$2 -> dh:
    com.dahuatech.app.adapter.DHConfirmListAdapter this$0 -> a
    com.dahuatech.app.bean.develophour.DHConfirmRootInfo val$dRootInfo -> b
    void onClick(android.view.View) -> onClick
com.dahuatech.app.adapter.DHConfirmListAdapter$ChildViewHolder -> di:
    android.widget.RelativeLayout child_fRelativeLayout -> a
    android.widget.CheckBox child_fCheckBox -> b
    android.widget.TextView child_fItemName -> c
com.dahuatech.app.adapter.DHConfirmListAdapter$RootGroupHolder -> dj:
    android.widget.CheckBox root_fCheckBox -> a
    android.widget.TextView root_fProjectName -> b
com.dahuatech.app.adapter.DHListAdapter -> com.dahuatech.app.adapter.DHListAdapter:
    java.lang.String fItemNumber -> a
    com.dahuatech.app.adapter.DHListAdapter$DHListViewHoder dHoder -> b
    void refreshView() -> refreshView
    void refreshView(java.util.List) -> refreshView
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.dahuatech.app.adapter.DHListAdapter$DHListViewHoder access$0(com.dahuatech.app.adapter.DHListAdapter) -> a
    java.lang.String access$1(com.dahuatech.app.adapter.DHListAdapter) -> b
com.dahuatech.app.adapter.DHListAdapter$DHListViewHoder -> dk:
    android.widget.TextView dv_fWeekTitle -> a
    android.widget.TextView dv_fWeekDate -> b
    android.widget.TextView dv_fWeekHours -> c
    android.widget.RelativeLayout dv_fMonLayout -> d
    android.widget.TextView dv_fMonItem -> e
    android.widget.TextView dv_fMonHours -> f
    android.widget.ImageButton dv_fMonImage -> g
    android.widget.RelativeLayout dv_fTueLayout -> h
    android.widget.TextView dv_fTueItem -> i
    android.widget.TextView dv_fTueHours -> j
    android.widget.ImageButton dv_fTueImage -> k
    android.widget.RelativeLayout dv_fWedLayout -> l
    android.widget.TextView dv_fWedItem -> m
    android.widget.TextView dv_fWedHours -> n
    android.widget.ImageButton dv_fWedImage -> o
    android.widget.RelativeLayout dv_fThurLayout -> p
    android.widget.TextView dv_fThurItem -> q
    android.widget.TextView dv_fThurHours -> r
    android.widget.ImageButton dv_fThurImage -> s
    android.widget.RelativeLayout dv_fFriLayout -> t
    android.widget.TextView dv_fFriItem -> u
    android.widget.TextView dv_fFriHours -> v
    android.widget.ImageButton dv_fFriImage -> w
    android.widget.RelativeLayout dv_fSatLayout -> x
    android.widget.TextView dv_fSatItem -> y
    android.widget.TextView dv_fSatHours -> z
    android.widget.ImageButton dv_fSatImage -> A
    android.widget.RelativeLayout dv_fSunLayout -> B
    android.widget.TextView dv_fSunItem -> C
    android.widget.TextView dv_fSunHours -> D
    android.widget.ImageButton dv_fSunImage -> E
com.dahuatech.app.adapter.DHListAdapter$ImageBtnListener -> dl:
    com.dahuatech.app.bean.develophour.DHListInfo dListInfo -> b
    com.dahuatech.app.adapter.DHListAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.adapter.DHListAdapter$LayoutListener -> dm:
    com.dahuatech.app.bean.develophour.DHListInfo dListInfo -> b
    com.dahuatech.app.adapter.DHListAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.adapter.DHListProjectAdapter -> com.dahuatech.app.adapter.DHListProjectAdapter:
    android.content.Context context -> a
    java.lang.Integer fBillId -> b
    java.lang.String fItemNumber -> c
    java.lang.String fWeekDate -> d
    java.lang.String fWeekValue -> e
    java.util.List listData -> f
    android.view.LayoutInflater inflater -> g
    int pResource -> h
    int tResource -> i
    int parentItem -> j
    int childItem -> k
    com.dahuatech.app.adapter.DHListProjectAdapter$DHProjectViewHoder pViewHoder -> l
    com.dahuatech.app.adapter.DHListProjectAdapter$DHTypeViewHoder tViewHoder -> m
    void setParentItem(int) -> setParentItem
    void setChildItem(int) -> setChildItem
    void refreshView() -> refreshView
    void refreshView(java.util.List) -> refreshView
    java.lang.Object getChild(int,int) -> getChild
    long getChildId(int,int) -> getChildId
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getGroup(int) -> getGroup
    int getGroupCount() -> getGroupCount
    long getGroupId(int) -> getGroupId
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    boolean hasStableIds() -> hasStableIds
    boolean isChildSelectable(int,int) -> isChildSelectable
    com.dahuatech.app.adapter.DHListProjectAdapter$DHTypeViewHoder access$0(com.dahuatech.app.adapter.DHListProjectAdapter) -> a
    android.content.Context access$1(com.dahuatech.app.adapter.DHListProjectAdapter) -> b
    java.lang.Integer access$2(com.dahuatech.app.adapter.DHListProjectAdapter) -> c
    java.lang.String access$3(com.dahuatech.app.adapter.DHListProjectAdapter) -> d
    java.lang.String access$4(com.dahuatech.app.adapter.DHListProjectAdapter) -> e
    java.lang.String access$5(com.dahuatech.app.adapter.DHListProjectAdapter) -> f
com.dahuatech.app.adapter.DHListProjectAdapter$ButtonListener -> dn:
    int bPosition -> b
    com.dahuatech.app.adapter.DHListProjectAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.adapter.DHListProjectAdapter$DHProjectViewHoder -> do:
    android.widget.TextView dv_fProjectName -> a
    android.widget.TextView dv_fHours -> b
com.dahuatech.app.adapter.DHListProjectAdapter$DHTypeViewHoder -> dp:
    android.widget.TextView dv_fTypeName -> a
    android.widget.TextView dv_fHours -> b
    android.widget.RelativeLayout dv_fTypeReLayout -> c
    android.widget.Button dv_fTypeAdd -> d
com.dahuatech.app.adapter.DHProjectAdapter -> com.dahuatech.app.adapter.DHProjectAdapter:
    com.dahuatech.app.adapter.DHProjectAdapter$DHProjectViewHolder dProjectViewHolder -> a
    void refreshView() -> refreshView
    void refreshView(java.util.List) -> refreshView
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dahuatech.app.adapter.DHProjectAdapter$DHProjectViewHolder -> dq:
    android.widget.RelativeLayout dv_fRelativeLayout -> a
    android.widget.TextView dv_fProjectCode -> b
    android.widget.TextView dv_fProjectName -> c
com.dahuatech.app.adapter.DHTypeAdapter -> com.dahuatech.app.adapter.DHTypeAdapter:
    com.dahuatech.app.adapter.DHTypeAdapter$DHTypeViewHolder dTypeViewHolder -> a
    void refreshView() -> refreshView
    void refreshView(java.util.List) -> refreshView
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dahuatech.app.adapter.DHTypeAdapter$DHTypeViewHolder -> dr:
    android.widget.RelativeLayout dv_fRelativeLayout -> a
    android.widget.TextView dv_fTypeId -> b
    android.widget.TextView dv_fTypeName -> c
com.dahuatech.app.adapter.ExpandableListAdapter -> com.dahuatech.app.adapter.ExpandableListAdapter:
    java.lang.String[] fTravelLabelArray -> a
    java.lang.String[] fSocializeLabelArray -> b
    java.lang.String[] fTravelValueArray -> c
    java.lang.String[] fSocializeValueArray -> d
    android.content.Context context -> e
    java.util.List listDataHeader -> f
    java.util.HashMap listDataChild -> g
    java.lang.String fItemNumber -> h
    int parentItem -> i
    int childItem -> j
    com.dahuatech.app.adapter.ExpandableListAdapter$ChildViewHolder cViewHolder -> k
    com.dahuatech.app.adapter.ExpandableListAdapter$GroupViewHolder gviewHolder -> l
    void setParentItem(int) -> setParentItem
    void setChildItem(int) -> setChildItem
    void refreshView() -> refreshView
    void refreshView(java.util.HashMap) -> refreshView
    java.lang.Object getChild(int,int) -> getChild
    long getChildId(int,int) -> getChildId
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    java.lang.String getExpendType(java.lang.String,java.lang.String) -> a
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getGroup(int) -> getGroup
    int getGroupCount() -> getGroupCount
    long getGroupId(int) -> getGroupId
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    boolean hasStableIds() -> hasStableIds
    boolean isChildSelectable(int,int) -> isChildSelectable
    com.dahuatech.app.adapter.ExpandableListAdapter$GroupViewHolder access$0(com.dahuatech.app.adapter.ExpandableListAdapter) -> a
    android.content.Context access$1(com.dahuatech.app.adapter.ExpandableListAdapter) -> b
    java.lang.String access$2(com.dahuatech.app.adapter.ExpandableListAdapter) -> c
com.dahuatech.app.adapter.ExpandableListAdapter$ChildViewHolder -> ds:
    android.widget.TextView cv_fExpendType -> a
    android.widget.TextView cv_fExpendAddress -> b
    android.widget.TextView cv_fExpendAmount -> c
    android.widget.TextView cv_fCause -> d
com.dahuatech.app.adapter.ExpandableListAdapter$GroupBtnListener -> dt:
    com.dahuatech.app.adapter.ExpandableListAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.adapter.ExpandableListAdapter$GroupViewHolder -> du:
    android.widget.TextView gv_title -> a
    android.widget.Button gv_btnAdd -> b
com.dahuatech.app.adapter.ExpenseFlowItemAdapter -> com.dahuatech.app.adapter.ExpenseFlowItemAdapter:
    int selectItem -> a
    com.dahuatech.app.adapter.ExpenseFlowItemAdapter$ExpenseFlowItemView eFlowItemView -> b
    void setSelectItem(int) -> setSelectItem
    void refreshView() -> refreshView
    void refreshView(java.util.List) -> refreshView
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dahuatech.app.adapter.ExpenseFlowItemAdapter$ExpenseFlowItemView -> dv:
    android.widget.RelativeLayout ef_fRelativeLayout -> a
    android.widget.TextView ef_fId -> b
    android.widget.TextView ef_fItemName -> c
com.dahuatech.app.adapter.ExpenseFlowLocalAdapter -> com.dahuatech.app.adapter.ExpenseFlowLocalAdapter:
    java.lang.String[] fTravelLabelArray -> a
    java.lang.String[] fSocializeLabelArray -> b
    java.lang.String[] fTravelValueArray -> c
    java.lang.String[] fSocializeValueArray -> d
    int selectItem -> e
    android.util.SparseArray isSelected -> f
    com.dahuatech.app.adapter.ExpenseFlowLocalAdapter$ExpenseFlowLocalView eFlowLocalView -> g
    void initDate() -> initDate
    void setSelectItem(int) -> setSelectItem
    android.util.SparseArray getIsSelected() -> getIsSelected
    void setIsSelected(android.util.SparseArray) -> setIsSelected
    void refreshView(java.util.List) -> refreshView
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.String getExpendType(java.lang.String,java.lang.String) -> a
com.dahuatech.app.adapter.ExpenseFlowLocalAdapter$1 -> dw:
    com.dahuatech.app.adapter.ExpenseFlowLocalAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.dahuatech.app.adapter.ExpenseFlowLocalAdapter$ExpenseFlowLocalView -> dx:
    android.widget.RelativeLayout ef_fRelativeLayout -> a
    android.widget.TextView ef_fExpendTime -> b
    android.widget.TextView ef_fExpendType -> c
    android.widget.TextView ef_fCause -> d
    android.widget.TextView ef_fExpendAddress -> e
    android.widget.TextView ef_fExpendAmount -> f
    android.widget.CheckBox ef_fChkBox -> g
com.dahuatech.app.adapter.ExpensePrivateTBodyAdapter -> com.dahuatech.app.adapter.ExpensePrivateTBodyAdapter:
    com.dahuatech.app.adapter.ExpensePrivateTBodyAdapter$ExpensePrivateTBodyView listItemView -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
com.dahuatech.app.adapter.ExpensePrivateTBodyAdapter$ExpensePrivateTBodyView -> dy:
    android.widget.TextView ep_fConSmDate -> a
    android.widget.TextView ep_fConSmType -> b
    android.widget.TextView ep_fAmount -> c
    android.widget.TextView ep_fProjectName -> d
    android.widget.TextView ep_fClientName -> e
    android.widget.TextView ep_fUse -> f
com.dahuatech.app.adapter.ExpenseSpecialTBodyAdapter -> com.dahuatech.app.adapter.ExpenseSpecialTBodyAdapter:
    com.dahuatech.app.adapter.ExpenseSpecialTBodyAdapter$ExpenseSpecialTBodyView listItemView -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
com.dahuatech.app.adapter.ExpenseSpecialTBodyAdapter$ExpenseSpecialTBodyView -> dz:
    android.widget.TextView ep_fConSmDate -> a
    android.widget.TextView ep_fConSmType -> b
    android.widget.TextView ep_fAmount -> c
    android.widget.TextView ep_fProjectName -> d
    android.widget.TextView ep_fClientName -> e
    android.widget.TextView ep_fUse -> f
com.dahuatech.app.adapter.ExpenseTaxiListAdapter -> com.dahuatech.app.adapter.ExpenseTaxiListAdapter:
    com.dahuatech.app.inter.IOnDeleteListioner mOnDeleteListioner -> a
    int selectItem -> b
    android.util.SparseArray isSelected -> c
    com.dahuatech.app.adapter.ExpenseTaxiListAdapter$ExpenseTaxiListView expenseTaxiListView -> d
    void initDate() -> initDate
    void setOnDeleteListioner(com.dahuatech.app.inter.IOnDeleteListioner) -> setOnDeleteListioner
    void setSelectItem(int) -> setSelectItem
    android.util.SparseArray getIsSelected() -> getIsSelected
    void setIsSelected(android.util.SparseArray) -> setIsSelected
    void swapItems(java.util.List) -> swapItems
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.dahuatech.app.inter.IOnDeleteListioner access$0(com.dahuatech.app.adapter.ExpenseTaxiListAdapter) -> a
com.dahuatech.app.adapter.ExpenseTaxiListAdapter$1 -> ea:
    com.dahuatech.app.adapter.ExpenseTaxiListAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.dahuatech.app.adapter.ExpenseTaxiListAdapter$2 -> eb:
    com.dahuatech.app.adapter.ExpenseTaxiListAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.dahuatech.app.adapter.ExpenseTaxiListAdapter$ExpenseTaxiListView -> ec:
    android.widget.TextView endAddress -> a
    android.widget.TextView startTime -> b
    android.widget.TextView endTime -> c
    android.widget.TextView deleteAction -> d
    android.widget.CheckBox chkBox -> e
com.dahuatech.app.adapter.GPSDbAdapter -> com.dahuatech.app.adapter.GPSDbAdapter:
    java.lang.String KEY_ROWID -> KEY_ROWID
    java.lang.String KEY_IME -> KEY_IME
    java.lang.String KEY_PATH -> KEY_PATH
    java.lang.String KEY_STARTTIME -> KEY_STARTTIME
    java.lang.String KEY_ENDTIME -> KEY_ENDTIME
    java.lang.String KEY_STARTLOCATION -> KEY_STARTLOCATION
    java.lang.String KEY_ENDLOCATION -> KEY_ENDLOCATION
    java.lang.String KEY_STARTADDRESS -> KEY_STARTADDRESS
    java.lang.String KEY_ENDADDRESS -> KEY_ENDADDRESS
    java.lang.String KEY_UPLOADFLAG -> KEY_UPLOADFLAG
    java.lang.String KEY_AUTOFLAG -> KEY_AUTOFLAG
    java.lang.String KEY_CAUSE -> KEY_CAUSE
    java.lang.String KEY_AMOUNT -> KEY_AMOUNT
    com.dahuatech.app.common.DBUtils mDbHelper -> a
    android.database.sqlite.SQLiteDatabase mDb -> b
    android.content.Context mCtx -> c
    com.dahuatech.app.adapter.GPSDbAdapter openSqlLite() -> openSqlLite
    void closeSqlLite() -> closeSqlLite
    int manualEntry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> manualEntry
    int createGpsdb(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> createGpsdb
    boolean deleteGpsdb(int) -> deleteGpsdb
    boolean deleteGpsdbByUpload(java.lang.String) -> deleteGpsdbByUpload
    boolean updateGpsdb(java.lang.String) -> updateGpsdb
    boolean updateGpsdb(int,java.lang.String) -> updateGpsdb
    boolean updateGpsdb(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> updateGpsdb
    boolean updateGpsdb(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> updateGpsdb
    android.database.Cursor getAllNotes() -> getAllNotes
    android.database.Cursor getGpsdb(int) -> getGpsdb
    android.database.Cursor getGpsdbByUploadFlag(java.lang.String) -> getGpsdbByUploadFlag
    int getGpsdbByUploadFlagCount(java.lang.String) -> getGpsdbByUploadFlagCount
com.dahuatech.app.adapter.MarketBidAdapter -> com.dahuatech.app.adapter.MarketBidAdapter:
    com.dahuatech.app.common.DbManager mDbHelper -> a
    com.dahuatech.app.bean.market.MarketBidHistoryInfo marketBidHistory -> b
    java.lang.String fItemNumber -> c
    com.dahuatech.app.adapter.MarketBidAdapter$MarketBidViewHolder mBidViewHolder -> d
    void refreshView() -> refreshView
    void refreshView(java.util.List) -> refreshView
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.dahuatech.app.adapter.MarketBidAdapter$MarketBidViewHolder access$0(com.dahuatech.app.adapter.MarketBidAdapter) -> a
    com.dahuatech.app.bean.market.MarketBidHistoryInfo access$1(com.dahuatech.app.adapter.MarketBidAdapter) -> b
    com.dahuatech.app.common.DbManager access$2(com.dahuatech.app.adapter.MarketBidAdapter) -> c
    java.lang.String access$3(com.dahuatech.app.adapter.MarketBidAdapter) -> d
com.dahuatech.app.adapter.MarketBidAdapter$ImageBtnListener -> ed:
    com.dahuatech.app.bean.market.MarketBidInfo bidInfo -> b
    com.dahuatech.app.adapter.MarketBidAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.adapter.MarketBidAdapter$MarketBidViewHolder -> ee:
    android.widget.RelativeLayout mb_FRelativeLayout -> a
    android.widget.TextView mb_FCustomerName -> b
    android.widget.TextView mb_FBidCode -> c
    android.widget.TextView mb_FNodeName_Label -> d
    android.widget.TextView mb_FNodeName -> e
    android.widget.TextView mb_FTasker_Label -> f
    android.widget.TextView mb_FTasker -> g
    android.widget.ImageButton mb_FImageButton -> h
com.dahuatech.app.adapter.MarketContractAdapter -> com.dahuatech.app.adapter.MarketContractAdapter:
    com.dahuatech.app.common.DbManager mDbHelper -> a
    com.dahuatech.app.bean.market.MarketContractHistoryInfo marketContractHistory -> b
    java.lang.String fItemNumber -> c
    com.dahuatech.app.adapter.MarketContractAdapter$MarketContractViewHolder mContractViewHolder -> d
    void refreshView() -> refreshView
    void refreshView(java.util.List) -> refreshView
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.dahuatech.app.adapter.MarketContractAdapter$MarketContractViewHolder access$0(com.dahuatech.app.adapter.MarketContractAdapter) -> a
    com.dahuatech.app.bean.market.MarketContractHistoryInfo access$1(com.dahuatech.app.adapter.MarketContractAdapter) -> b
    com.dahuatech.app.common.DbManager access$2(com.dahuatech.app.adapter.MarketContractAdapter) -> c
    java.lang.String access$3(com.dahuatech.app.adapter.MarketContractAdapter) -> d
com.dahuatech.app.adapter.MarketContractAdapter$ImageBtnListener -> ef:
    com.dahuatech.app.bean.market.MarketContractInfo contractInfo -> b
    com.dahuatech.app.adapter.MarketContractAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.adapter.MarketContractAdapter$MarketContractViewHolder -> eg:
    android.widget.RelativeLayout mc_FRelativeLayout -> a
    android.widget.TextView mc_FCustomerName -> b
    android.widget.TextView mc_FContractCode -> c
    android.widget.TextView mc_FNodeName_Label -> d
    android.widget.TextView mc_FNodeName -> e
    android.widget.TextView mc_FTasker_Label -> f
    android.widget.TextView mc_FTasker -> g
    android.widget.ImageButton mc_FImageButton -> h
com.dahuatech.app.adapter.MarketProductAdapter -> com.dahuatech.app.adapter.MarketProductAdapter:
    com.dahuatech.app.adapter.MarketProductAdapter$MarketProductViewHolder mProductViewHolder -> a
    void refreshView() -> refreshView
    void refreshView(java.util.List) -> refreshView
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dahuatech.app.adapter.MarketProductAdapter$MarketProductViewHolder -> eh:
    android.widget.RelativeLayout mp_FRelativeLayout -> a
    android.widget.TextView mp_FModel -> b
    android.widget.TextView mp_FName -> c
    android.widget.TextView mp_FFirstLine -> d
    android.widget.TextView mp_FSecLine -> e
    android.widget.TextView mp_FStandPrice -> f
com.dahuatech.app.adapter.MarketWorkFlowAdapter -> com.dahuatech.app.adapter.MarketWorkFlowAdapter:
    com.dahuatech.app.adapter.MarketWorkFlowAdapter$MarketWorkFlowItemView listItemView -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
com.dahuatech.app.adapter.MarketWorkFlowAdapter$1 -> ei:
    com.dahuatech.app.adapter.MarketWorkFlowAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.adapter.MarketWorkFlowAdapter$MarketWorkFlowItemView -> ej:
    android.widget.TextView mw_fStepFlagName -> a
    android.widget.TextView mw_fUpdateTime -> b
    android.widget.TextView mw_fItemName -> c
    android.widget.TextView mw_fShortTel -> d
    android.widget.TextView mw_fStatusResult -> e
    android.widget.TextView mw_fComment -> f
com.dahuatech.app.adapter.MeetingListAdapter -> com.dahuatech.app.adapter.MeetingListAdapter:
    int selectItem -> a
    com.dahuatech.app.adapter.MeetingListAdapter$MeetingListView meetingListView -> b
    void setSelectItem(int) -> setSelectItem
    void refreshView() -> refreshView
    void refreshView(java.util.List) -> refreshView
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.dahuatech.app.adapter.MeetingListAdapter$MeetingListView access$0(com.dahuatech.app.adapter.MeetingListAdapter) -> a
com.dahuatech.app.adapter.MeetingListAdapter$ButtonListener -> ek:
    int bPos -> b
    com.dahuatech.app.business.MeetingBusiness mBusiness -> c
    com.dahuatech.app.adapter.MeetingListAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
    com.dahuatech.app.bean.ResultMessage cancleByPost(java.lang.String) -> a
    com.dahuatech.app.bean.ResultMessage access$0(com.dahuatech.app.adapter.MeetingListAdapter$ButtonListener,java.lang.String) -> a
    int access$1(com.dahuatech.app.adapter.MeetingListAdapter$ButtonListener) -> a
    com.dahuatech.app.adapter.MeetingListAdapter access$2(com.dahuatech.app.adapter.MeetingListAdapter$ButtonListener) -> b
com.dahuatech.app.adapter.MeetingListAdapter$ButtonListener$cancleMeetingAsync -> el:
    com.dahuatech.app.adapter.MeetingListAdapter$ButtonListener this$1 -> a
    com.dahuatech.app.bean.ResultMessage doInBackground(java.lang.String[]) -> a
    void onPostExecute(com.dahuatech.app.bean.ResultMessage) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.dahuatech.app.adapter.MeetingListAdapter$ButtonListener access$3(com.dahuatech.app.adapter.MeetingListAdapter$ButtonListener$cancleMeetingAsync) -> a
com.dahuatech.app.adapter.MeetingListAdapter$ButtonListener$cancleMeetingAsync$1 -> em:
    com.dahuatech.app.adapter.MeetingListAdapter$ButtonListener$cancleMeetingAsync this$2 -> a
    void run() -> run
com.dahuatech.app.adapter.MeetingListAdapter$MeetingListView -> en:
    android.widget.RelativeLayout ml_fRelativeLayout -> a
    android.widget.TextView ml_fMeetingDate -> b
    android.widget.TextView ml_fMeetingStart -> c
    android.widget.TextView ml_fMeetingEnd -> d
    android.widget.TextView ml_fMeetingName -> e
    android.widget.TextView ml_fCreate -> f
    android.widget.ImageButton ml_btnCancle -> g
com.dahuatech.app.adapter.MeetingPersonAdapter -> com.dahuatech.app.adapter.MeetingPersonAdapter:
    int selectItem -> a
    android.util.SparseArray isSelected -> b
    com.dahuatech.app.adapter.MeetingPersonAdapter$MeetingPersonView meetingPersonView -> c
    void initDate(java.lang.Boolean) -> initDate
    void setSelectItem(int) -> setSelectItem
    android.util.SparseArray getIsSelected() -> getIsSelected
    void setIsSelected(android.util.SparseArray) -> setIsSelected
    void refreshView() -> refreshView
    void refreshView(java.util.List) -> refreshView
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dahuatech.app.adapter.MeetingPersonAdapter$1 -> eo:
    com.dahuatech.app.adapter.MeetingPersonAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.dahuatech.app.adapter.MeetingPersonAdapter$MeetingPersonView -> ep:
    android.widget.RelativeLayout mp_fRelativeLayout -> a
    android.widget.TextView mp_fItemNumber -> b
    android.widget.TextView mp_fItemName -> c
    android.widget.TextView mp_fDeptName -> d
    android.widget.CheckBox mp_fChkBox -> e
com.dahuatech.app.adapter.MeetingRoomAdapter -> com.dahuatech.app.adapter.MeetingRoomAdapter:
    com.dahuatech.app.adapter.MeetingRoomAdapter$MeetingRoomView meetingRoomView -> a
    void refreshView() -> refreshView
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dahuatech.app.adapter.MeetingRoomAdapter$MeetingRoomView -> eq:
    android.widget.TextView mr_fRoomId -> a
    android.widget.TextView mr_fRoomName -> b
    android.widget.TextView mr_fRoomIp -> c
    android.widget.TextView mr_fType -> d
com.dahuatech.app.adapter.MyBaseAdapter -> com.dahuatech.app.adapter.MyBaseAdapter:
    android.content.Context context -> context
    java.util.List listItems -> listItems
    android.view.LayoutInflater listContainer -> listContainer
    int itemViewResource -> itemViewResource
    java.util.List getListItems() -> getListItems
    void setListItems(java.util.List) -> setListItems
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
com.dahuatech.app.adapter.PlusCopyPersonAdapter -> com.dahuatech.app.adapter.PlusCopyPersonAdapter:
    android.util.SparseArray isSelected -> a
    com.dahuatech.app.adapter.PlusCopyPersonAdapter$PlusCopyPersonView plusCopyPersonView -> b
    void initDate(java.lang.Boolean) -> initDate
    android.util.SparseArray getIsSelected() -> getIsSelected
    void setIsSelected(android.util.SparseArray) -> setIsSelected
    void refreshView() -> refreshView
    void refreshView(java.util.List) -> refreshView
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dahuatech.app.adapter.PlusCopyPersonAdapter$1 -> er:
    com.dahuatech.app.adapter.PlusCopyPersonAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.dahuatech.app.adapter.PlusCopyPersonAdapter$PlusCopyPersonView -> es:
    android.widget.TextView pc_fItemNumber -> a
    android.widget.TextView pc_fItemName -> b
    android.widget.CheckBox pc_fChkBox -> c
com.dahuatech.app.adapter.SpinnerArray -> com.dahuatech.app.adapter.SpinnerArray:
    android.content.Context context -> a
    com.dahuatech.app.bean.SpinnerEntity[] entitys -> b
    int getCount() -> getCount
    com.dahuatech.app.bean.SpinnerEntity getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    java.lang.Object getItem(int) -> getItem
com.dahuatech.app.adapter.SuggestionsAdapter -> com.dahuatech.app.adapter.SuggestionsAdapter:
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
com.dahuatech.app.adapter.TaskListAdapter -> com.dahuatech.app.adapter.TaskListAdapter:
    com.dahuatech.app.adapter.TaskListAdapter$TaskListItemView listItemView -> a
    java.lang.String fStatus -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.String access$0(com.dahuatech.app.adapter.TaskListAdapter) -> a
com.dahuatech.app.adapter.TaskListAdapter$1 -> et:
    com.dahuatech.app.adapter.TaskListAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.adapter.TaskListAdapter$TaskListItemView -> eu:
    android.widget.ImageButton tl_fitemsIcon -> a
    android.widget.TextView tl_fClassTypeName -> b
    android.widget.TextView tl_fTitle -> c
    android.widget.TextView tl_fSendTime -> d
    android.widget.TextView tl_fSender -> e
com.dahuatech.app.adapter.WorkFlowAdapter -> com.dahuatech.app.adapter.WorkFlowAdapter:
    com.dahuatech.app.adapter.WorkFlowAdapter$WorkFlowItemView listItemView -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
com.dahuatech.app.adapter.WorkFlowAdapter$WorkFlowItemView -> ev:
    android.widget.TextView wf_fStepFlagName -> a
    android.widget.TextView wf_fUpdateTime -> b
    android.widget.TextView wf_fItemName -> c
    android.widget.TextView wf_fStatusResult -> d
    android.widget.TextView wf_fComment -> e
com.dahuatech.app.api.ApiClient -> com.dahuatech.app.api.ApiClient:
    java.lang.String appCookie -> a
    java.lang.String appUserAgent -> b
    java.util.ArrayList params -> c
    java.util.ArrayList headers -> d
    com.dahuatech.app.AppException appException -> e
    android.content.Context context -> f
    java.lang.String serviceUrl -> g
    int responseCode -> h
    java.lang.String errorMessage -> i
    java.lang.String responseMessage -> j
    boolean bare -> k
    org.apache.http.client.HttpClient httpClient -> l
    org.apache.http.HttpResponse httpResponse -> m
    com.dahuatech.app.api.ApiClient apiClient -> n
    int[] $SWITCH_TABLE$com$dahuatech$app$bean$RequestMethod -> o
    com.dahuatech.app.AppException getAppException() -> getAppException
    void setAppException(com.dahuatech.app.AppException) -> setAppException
    android.content.Context getContext() -> getContext
    void setContext(android.content.Context) -> setContext
    java.lang.String getResponseMessage() -> getResponseMessage
    java.lang.String getErrorMessage() -> getErrorMessage
    int getResponseCode() -> getResponseCode
    boolean isBare() -> isBare
    java.util.ArrayList getParams() -> getParams
    void setParams(java.util.ArrayList) -> setParams
    java.util.ArrayList getHeaders() -> getHeaders
    void setHeaders(java.util.ArrayList) -> setHeaders
    java.lang.String getServiceUrl() -> getServiceUrl
    void setServiceUrl(java.lang.String) -> setServiceUrl
    void setBare(boolean) -> setBare
    void setResponseCode(int) -> setResponseCode
    void setErrorMessage(java.lang.String) -> setErrorMessage
    void setResponseMessage(java.lang.String) -> setResponseMessage
    com.dahuatech.app.api.ApiClient getApiClient(android.content.Context) -> getApiClient
    com.dahuatech.app.api.ApiClient getApiClient(android.content.Context,java.lang.String) -> getApiClient
    com.dahuatech.app.api.ApiClient getApiClient(android.content.Context,java.lang.String,boolean) -> getApiClient
    void AddParam(java.lang.String,java.lang.String) -> AddParam
    void AddHeader(java.lang.String,java.lang.String) -> AddHeader
    org.apache.http.client.HttpClient getHttpClient() -> b
    void closeHttpClient() -> closeHttpClient
    void Execute(com.dahuatech.app.bean.RequestMethod) -> Execute
    void executeRequest(org.apache.http.client.methods.HttpUriRequest) -> a
    java.lang.String retrieveInputStream(int,java.io.InputStreamReader) -> a
    android.graphics.Bitmap getNetBitmap(java.lang.String) -> getNetBitmap
    void cleanCookie() -> cleanCookie
    java.lang.String getCookie(com.dahuatech.app.AppContext) -> getCookie
    java.lang.String getUserAgent(com.dahuatech.app.AppContext) -> getUserAgent
    int[] $SWITCH_TABLE$com$dahuatech$app$bean$RequestMethod() -> a
com.dahuatech.app.api.HttpConnectionManager -> com.dahuatech.app.api.HttpConnectionManager:
    org.apache.http.impl.client.DefaultHttpClient defaultHttpClient -> a
    org.apache.http.conn.ClientConnectionManager connectionManager -> b
    org.apache.http.params.HttpParams httpParams -> c
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> d
    int MAX_TOTAL_CONNECTIONS -> MAX_TOTAL_CONNECTIONS
    int WAIT_TIMEOUT -> WAIT_TIMEOUT
    int MAX_ROUTE_CONNECTIONS -> MAX_ROUTE_CONNECTIONS
    int CONNECT_TIMEOUT -> CONNECT_TIMEOUT
    int READ_TIMEOUT -> READ_TIMEOUT
    org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
com.dahuatech.app.api.InvokeApi -> com.dahuatech.app.api.InvokeApi:
    com.dahuatech.app.bean.ResponseMessage responseMessage -> a
    com.dahuatech.app.api.ApiClient apiClient -> b
    com.dahuatech.app.api.ApiClient getApiClient(android.content.Context) -> getApiClient
    com.dahuatech.app.api.ApiClient getApiClient(android.content.Context,java.lang.String) -> getApiClient
    com.dahuatech.app.api.ApiClient getApiClient(android.content.Context,java.lang.String,boolean) -> getApiClient
    void closeHttpClient() -> closeHttpClient
    com.dahuatech.app.bean.ResponseMessage getResponse(com.dahuatech.app.api.ApiClient,com.dahuatech.app.bean.RequestMethod) -> getResponse
    java.lang.String jsonTokener(java.lang.String) -> a
com.dahuatech.app.bean.Base -> com.dahuatech.app.bean.Base:
    long serialVersionUID -> serialVersionUID
com.dahuatech.app.bean.ContactInfo -> com.dahuatech.app.bean.ContactInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FItemNumber -> FItemNumber
    java.lang.String FItemName -> FItemName
    java.lang.String FEmail -> FEmail
    java.lang.String FCornet -> FCornet
    java.lang.String FDepartment -> FDepartment
    java.lang.String getFItemNumber() -> getFItemNumber
    void setFItemNumber(java.lang.String) -> setFItemNumber
    java.lang.String getFItemName() -> getFItemName
    void setFItemName(java.lang.String) -> setFItemName
    java.lang.String getFEmail() -> getFEmail
    void setFEmail(java.lang.String) -> setFEmail
    java.lang.String getFCornet() -> getFCornet
    void setFCornet(java.lang.String) -> setFCornet
    java.lang.String getFDepartment() -> getFDepartment
    void setFDepartment(java.lang.String) -> setFDepartment
com.dahuatech.app.bean.ContactInfo$ContactResultInfo -> com.dahuatech.app.bean.ContactInfo$ContactResultInfo:
    java.util.List contactList -> contactList
    java.lang.String resultStr -> resultStr
com.dahuatech.app.bean.Entity -> com.dahuatech.app.bean.Entity:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    int getFID() -> getFID
com.dahuatech.app.bean.LogsRecordInfo -> com.dahuatech.app.bean.LogsRecordInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FItemNumber -> FItemNumber
    java.lang.String FAccessTime -> FAccessTime
    java.lang.String FModuleName -> FModuleName
    java.lang.String FActionName -> FActionName
    java.lang.String FNote -> FNote
    java.lang.String getFItemNumber() -> getFItemNumber
    void setFItemNumber(java.lang.String) -> setFItemNumber
    java.lang.String getFAccessTime() -> getFAccessTime
    void setFAccessTime(java.lang.String) -> setFAccessTime
    java.lang.String getFModuleName() -> getFModuleName
    void setFModuleName(java.lang.String) -> setFModuleName
    java.lang.String getFActionName() -> getFActionName
    void setFActionName(java.lang.String) -> setFActionName
    java.lang.String getFNote() -> getFNote
    void setFNote(java.lang.String) -> setFNote
    com.dahuatech.app.bean.LogsRecordInfo getLogsRecordInfo() -> getLogsRecordInfo
    java.lang.String ConvertToJson(com.dahuatech.app.bean.LogsRecordInfo) -> ConvertToJson
com.dahuatech.app.bean.LogsRecordInfo$singletonHolder -> ew:
    com.dahuatech.app.bean.LogsRecordInfo instance -> a
    com.dahuatech.app.bean.LogsRecordInfo access$0() -> a
com.dahuatech.app.bean.RepositoryInfo -> com.dahuatech.app.bean.RepositoryInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String ClassType -> ClassType
    java.lang.String IsTest -> IsTest
    java.lang.String ServiceName -> ServiceName
    java.lang.String ServiceType -> ServiceType
    boolean SqlType -> SqlType
    boolean IsCahce -> IsCahce
    java.lang.String FItemNumber -> FItemNumber
    java.lang.String getClassType() -> getClassType
    void setClassType(java.lang.String) -> setClassType
    java.lang.String getIsTest() -> getIsTest
    void setIsTest(java.lang.String) -> setIsTest
    java.lang.String getServiceName() -> getServiceName
    void setServiceName(java.lang.String) -> setServiceName
    java.lang.String getServiceType() -> getServiceType
    void setServiceType(java.lang.String) -> setServiceType
    boolean isSqlType() -> isSqlType
    void setSqlType(boolean) -> setSqlType
    boolean isIsCahce() -> isIsCahce
    void setIsCahce(boolean) -> setIsCahce
    java.lang.String getFItemNumber() -> getFItemNumber
    void setFItemNumber(java.lang.String) -> setFItemNumber
    com.dahuatech.app.bean.RepositoryInfo getRepositoryInfo() -> getRepositoryInfo
    java.lang.String ConvertToJson(com.dahuatech.app.bean.RepositoryInfo) -> ConvertToJson
com.dahuatech.app.bean.RepositoryInfo$singletonHolder -> ex:
    com.dahuatech.app.bean.RepositoryInfo instance -> a
    com.dahuatech.app.bean.RepositoryInfo access$0() -> a
com.dahuatech.app.bean.RequestMethod -> com.dahuatech.app.bean.RequestMethod:
    com.dahuatech.app.bean.RequestMethod GET -> GET
    com.dahuatech.app.bean.RequestMethod POST -> POST
    com.dahuatech.app.bean.RequestMethod[] ENUM$VALUES -> a
    com.dahuatech.app.bean.RequestMethod[] values() -> values
    com.dahuatech.app.bean.RequestMethod valueOf(java.lang.String) -> valueOf
com.dahuatech.app.bean.ResponseMessage -> com.dahuatech.app.bean.ResponseMessage:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer responseCode -> responseCode
    java.lang.String responseMessage -> responseMessage
    java.lang.String responseErrorMessage -> responseErrorMessage
    java.lang.Integer getResponseCode() -> getResponseCode
    void setResponseCode(java.lang.Integer) -> setResponseCode
    java.lang.String getResponseMessage() -> getResponseMessage
    void setResponseMessage(java.lang.String) -> setResponseMessage
    java.lang.String getResponseErrorMessage() -> getResponseErrorMessage
    void setResponseErrorMessage(java.lang.String) -> setResponseErrorMessage
com.dahuatech.app.bean.ResultMessage -> com.dahuatech.app.bean.ResultMessage:
    long serialVersionUID -> serialVersionUID
    boolean IsSuccess -> IsSuccess
    java.lang.String Result -> Result
    boolean isIsSuccess() -> isIsSuccess
    void setIsSuccess(boolean) -> setIsSuccess
    java.lang.String getResult() -> getResult
    void setResult(java.lang.String) -> setResult
com.dahuatech.app.bean.SpinnerEntity -> com.dahuatech.app.bean.SpinnerEntity:
    long serialVersionUID -> serialVersionUID
    java.lang.String FKey -> FKey
    java.lang.String FValue -> FValue
    java.lang.String getFKey() -> getFKey
    void setFKey(java.lang.String) -> setFKey
    java.lang.String getFValue() -> getFValue
    void setFValue(java.lang.String) -> setFValue
com.dahuatech.app.bean.SqlParametersInfo -> com.dahuatech.app.bean.SqlParametersInfo:
    long serialVersionUID -> serialVersionUID
    int ParameterCount -> ParameterCount
    java.lang.String Parameter1 -> Parameter1
    java.lang.String Parameter2 -> Parameter2
    java.lang.String Parameter3 -> Parameter3
    java.lang.String Parameter4 -> Parameter4
    java.lang.String Parameter5 -> Parameter5
    int getParameterCount() -> getParameterCount
    void setParameterCount(int) -> setParameterCount
    java.lang.String getParameter1() -> getParameter1
    void setParameter1(java.lang.String) -> setParameter1
    java.lang.String getParameter2() -> getParameter2
    void setParameter2(java.lang.String) -> setParameter2
    java.lang.String getParameter3() -> getParameter3
    void setParameter3(java.lang.String) -> setParameter3
    java.lang.String getParameter4() -> getParameter4
    void setParameter4(java.lang.String) -> setParameter4
    java.lang.String getParameter5() -> getParameter5
    void setParameter5(java.lang.String) -> setParameter5
    com.dahuatech.app.bean.SqlParametersInfo getSqlParametersInfo() -> getSqlParametersInfo
    java.lang.String ConvertToJson(java.util.List) -> ConvertToJson
    java.lang.String ConvertToJson(com.dahuatech.app.bean.SqlParametersInfo) -> ConvertToJson
com.dahuatech.app.bean.SqlParametersInfo$singletonHolder -> ey:
    com.dahuatech.app.bean.SqlParametersInfo instance -> a
    com.dahuatech.app.bean.SqlParametersInfo access$0() -> a
com.dahuatech.app.bean.StorageParameterInfo -> com.dahuatech.app.bean.StorageParameterInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String Key -> Key
    java.lang.String Value -> Value
    java.lang.String SqlDbType -> SqlDbType
    int ValueLength -> ValueLength
    boolean IsOutput -> IsOutput
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    java.lang.String getSqlDbType() -> getSqlDbType
    void setSqlDbType(java.lang.String) -> setSqlDbType
    int getValueLength() -> getValueLength
    void setValueLength(int) -> setValueLength
    boolean isIsOutput() -> isIsOutput
    void setIsOutput(boolean) -> setIsOutput
    java.lang.String ConvertToJson(java.util.List) -> ConvertToJson
    java.lang.String ConvertToJson(com.dahuatech.app.bean.StorageParameterInfo) -> ConvertToJson
com.dahuatech.app.bean.UpdateInfo -> com.dahuatech.app.bean.UpdateInfo:
    long serialVersionUID -> serialVersionUID
    int VersionCode -> VersionCode
    java.lang.String VersionName -> VersionName
    java.lang.String DownloadUrl -> DownloadUrl
    java.lang.String UpdateLog -> UpdateLog
    int getVersionCode() -> getVersionCode
    void setVersionCode(int) -> setVersionCode
    java.lang.String getVersionName() -> getVersionName
    void setVersionName(java.lang.String) -> setVersionName
    java.lang.String getDownloadUrl() -> getDownloadUrl
    void setDownloadUrl(java.lang.String) -> setDownloadUrl
    java.lang.String getUpdateLog() -> getUpdateLog
    void setUpdateLog(java.lang.String) -> setUpdateLog
    com.dahuatech.app.bean.UpdateInfo getUpdate() -> getUpdate
    java.lang.String ConvertToJson(com.dahuatech.app.bean.UpdateInfo) -> ConvertToJson
com.dahuatech.app.bean.UpdateInfo$singletonHolder -> ez:
    com.dahuatech.app.bean.UpdateInfo instance -> a
    com.dahuatech.app.bean.UpdateInfo access$0() -> a
com.dahuatech.app.bean.UserInfo -> com.dahuatech.app.bean.UserInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FItemNumber -> FItemNumber
    java.lang.String FItemName -> FItemName
    java.lang.String FPassword -> FPassword
    boolean IsRememberMe -> IsRememberMe
    com.dahuatech.app.bean.UserInfo userInfo -> a
    java.lang.String getFItemNumber() -> getFItemNumber
    void setFItemNumber(java.lang.String) -> setFItemNumber
    java.lang.String getFItemName() -> getFItemName
    void setFItemName(java.lang.String) -> setFItemName
    java.lang.String getFPassword() -> getFPassword
    void setFPassword(java.lang.String) -> setFPassword
    boolean isIsRememberMe() -> isIsRememberMe
    void setIsRememberMe(boolean) -> setIsRememberMe
    com.dahuatech.app.bean.UserInfo getUserInfo() -> getUserInfo
    com.dahuatech.app.bean.UserInfo getUserInfo(java.lang.String,java.lang.String,boolean) -> getUserInfo
    java.lang.String ConvertToJson(com.dahuatech.app.bean.UserInfo) -> ConvertToJson
com.dahuatech.app.bean.UserInfo$singletonHolder -> fa:
    com.dahuatech.app.bean.UserInfo instance -> a
    com.dahuatech.app.bean.UserInfo access$0() -> a
com.dahuatech.app.bean.ValidLogin -> com.dahuatech.app.bean.ValidLogin:
    long serialVersionUID -> serialVersionUID
    java.lang.String FItemNumber -> FItemNumber
    java.lang.String FItemName -> FItemName
    int FIsValid -> FIsValid
    java.lang.String getFItemNumber() -> getFItemNumber
    void setFItemNumber(java.lang.String) -> setFItemNumber
    java.lang.String getFItemName() -> getFItemName
    void setFItemName(java.lang.String) -> setFItemName
    int getFIsValid() -> getFIsValid
    void setFIsValid(int) -> setFIsValid
com.dahuatech.app.bean.attendance.AdAmapInfo -> com.dahuatech.app.bean.attendance.AdAmapInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FAddressType -> FAddressType
    java.lang.String FAddress -> FAddress
    java.lang.String FLatitude -> FLatitude
    java.lang.String FLongitude -> FLongitude
    java.lang.String FRadius -> FRadius
    java.lang.String getFAddressType() -> getFAddressType
    void setFAddressType(java.lang.String) -> setFAddressType
    java.lang.String getFAddress() -> getFAddress
    void setFAddress(java.lang.String) -> setFAddress
    java.lang.String getFLatitude() -> getFLatitude
    void setFLatitude(java.lang.String) -> setFLatitude
    java.lang.String getFLongitude() -> getFLongitude
    void setFLongitude(java.lang.String) -> setFLongitude
    java.lang.String getFRadius() -> getFRadius
    void setFRadius(java.lang.String) -> setFRadius
com.dahuatech.app.bean.attendance.AdAmapListInfo -> com.dahuatech.app.bean.attendance.AdAmapListInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FCacheKey -> FCacheKey
    java.lang.String FAmapList -> FAmapList
    java.lang.String getFCacheKey() -> getFCacheKey
    void setFCacheKey(java.lang.String) -> setFCacheKey
    java.lang.String getFAmapList() -> getFAmapList
    void setFAmapList(java.lang.String) -> setFAmapList
    com.dahuatech.app.bean.attendance.AdAmapListInfo getAdAmapListInfo() -> getAdAmapListInfo
com.dahuatech.app.bean.attendance.AdAmapListInfo$SingletonHolder -> fb:
    com.dahuatech.app.bean.attendance.AdAmapListInfo instance -> a
    com.dahuatech.app.bean.attendance.AdAmapListInfo access$0() -> a
com.dahuatech.app.bean.attendance.AdCheckInfo -> com.dahuatech.app.bean.attendance.AdCheckInfo:
    long serialVersionUID -> serialVersionUID
    int FAttendId -> FAttendId
    int FAttendStatus -> FAttendStatus
    java.lang.String FItemNumber -> FItemNumber
    java.lang.String FItemName -> FItemName
    java.lang.String FLatitude -> FLatitude
    java.lang.String FLongitude -> FLongitude
    java.lang.String FAddress -> FAddress
    int getFAttendId() -> getFAttendId
    void setFAttendId(int) -> setFAttendId
    int getFAttendStatus() -> getFAttendStatus
    void setFAttendStatus(int) -> setFAttendStatus
    java.lang.String getFItemNumber() -> getFItemNumber
    void setFItemNumber(java.lang.String) -> setFItemNumber
    java.lang.String getFItemName() -> getFItemName
    void setFItemName(java.lang.String) -> setFItemName
    java.lang.String getFLatitude() -> getFLatitude
    void setFLatitude(java.lang.String) -> setFLatitude
    java.lang.String getFLongitude() -> getFLongitude
    void setFLongitude(java.lang.String) -> setFLongitude
    java.lang.String getFAddress() -> getFAddress
    void setFAddress(java.lang.String) -> setFAddress
    com.dahuatech.app.bean.attendance.AdCheckInfo getAdCheckInfo() -> getAdCheckInfo
    java.lang.String ConvertToJson(com.dahuatech.app.bean.attendance.AdCheckInfo) -> ConvertToJson
com.dahuatech.app.bean.attendance.AdCheckInfo$SingletonHolder -> fc:
    com.dahuatech.app.bean.attendance.AdCheckInfo instance -> a
    com.dahuatech.app.bean.attendance.AdCheckInfo access$0() -> a
com.dahuatech.app.bean.attendance.AdCheckStatusInfo -> com.dahuatech.app.bean.attendance.AdCheckStatusInfo:
    long serialVersionUID -> serialVersionUID
    int FStatus -> FStatus
    int FAttendId -> FAttendId
    java.lang.String FCheckInTime -> FCheckInTime
    java.lang.String FCheckOutTime -> FCheckOutTime
    int getFStatus() -> getFStatus
    void setFStatus(int) -> setFStatus
    int getFAttendId() -> getFAttendId
    void setFAttendId(int) -> setFAttendId
    java.lang.String getFCheckInTime() -> getFCheckInTime
    void setFCheckInTime(java.lang.String) -> setFCheckInTime
    java.lang.String getFCheckOutTime() -> getFCheckOutTime
    void setFCheckOutTime(java.lang.String) -> setFCheckOutTime
    com.dahuatech.app.bean.attendance.AdCheckStatusInfo getAdCheckStatusInfo() -> getAdCheckStatusInfo
com.dahuatech.app.bean.attendance.AdCheckStatusInfo$SingletonHolder -> fd:
    com.dahuatech.app.bean.attendance.AdCheckStatusInfo instance -> a
    com.dahuatech.app.bean.attendance.AdCheckStatusInfo access$0() -> a
com.dahuatech.app.bean.attendance.AdListInfo -> com.dahuatech.app.bean.attendance.AdListInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FAttendanceDate -> FAttendanceDate
    java.lang.String FType -> FType
    java.lang.String FAmCheckInTime -> FAmCheckInTime
    java.lang.String FPmCheckOutTime -> FPmCheckOutTime
    java.lang.String FAmResult -> FAmResult
    java.lang.String FPmResult -> FPmResult
    java.lang.String getFAttendanceDate() -> getFAttendanceDate
    void setFAttendanceDate(java.lang.String) -> setFAttendanceDate
    java.lang.String getFType() -> getFType
    void setFType(java.lang.String) -> setFType
    java.lang.String getFAmCheckInTime() -> getFAmCheckInTime
    void setFAmCheckInTime(java.lang.String) -> setFAmCheckInTime
    java.lang.String getFPmCheckOutTime() -> getFPmCheckOutTime
    void setFPmCheckOutTime(java.lang.String) -> setFPmCheckOutTime
    java.lang.String getFAmResult() -> getFAmResult
    void setFAmResult(java.lang.String) -> setFAmResult
    java.lang.String getFPmResult() -> getFPmResult
    void setFPmResult(java.lang.String) -> setFPmResult
com.dahuatech.app.bean.develophour.DHConfirmChildInfo -> com.dahuatech.app.bean.develophour.DHConfirmChildInfo:
    java.lang.String FItemNumber -> a
    java.lang.String FItemName -> b
    boolean isChecked -> c
    java.lang.String getFItemNumber() -> getFItemNumber
    void setFItemNumber(java.lang.String) -> setFItemNumber
    java.lang.String getFItemName() -> getFItemName
    void setFItemName(java.lang.String) -> setFItemName
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    void changeChecked() -> changeChecked
    void update(java.util.Observable,java.lang.Object) -> update
com.dahuatech.app.bean.develophour.DHConfirmJsonInfo -> com.dahuatech.app.bean.develophour.DHConfirmJsonInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FProjectCode -> FProjectCode
    java.lang.String FProjectName -> FProjectName
    java.lang.String FSubChilds -> FSubChilds
    java.lang.String getFProjectCode() -> getFProjectCode
    void setFProjectCode(java.lang.String) -> setFProjectCode
    java.lang.String getFProjectName() -> getFProjectName
    void setFProjectName(java.lang.String) -> setFProjectName
    java.lang.String getFSubChilds() -> getFSubChilds
    void setFSubChilds(java.lang.String) -> setFSubChilds
com.dahuatech.app.bean.develophour.DHConfirmListChildInfo -> com.dahuatech.app.bean.develophour.DHConfirmListChildInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FWeekDay -> FWeekDay
    java.lang.String FHours -> FHours
    java.lang.String getFWeekDay() -> getFWeekDay
    void setFWeekDay(java.lang.String) -> setFWeekDay
    java.lang.String getFHours() -> getFHours
    void setFHours(java.lang.String) -> setFHours
com.dahuatech.app.bean.develophour.DHConfirmListPersonJsonInfo -> com.dahuatech.app.bean.develophour.DHConfirmListPersonJsonInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FTypeId -> FTypeId
    java.lang.String FTypeName -> FTypeName
    java.lang.String FHours -> FHours
    java.lang.String FSubChilds -> FSubChilds
    java.lang.String getFTypeId() -> getFTypeId
    void setFTypeId(java.lang.String) -> setFTypeId
    java.lang.String getFTypeName() -> getFTypeName
    void setFTypeName(java.lang.String) -> setFTypeName
    java.lang.String getFHours() -> getFHours
    void setFHours(java.lang.String) -> setFHours
    java.lang.String getFSubChilds() -> getFSubChilds
    void setFSubChilds(java.lang.String) -> setFSubChilds
com.dahuatech.app.bean.develophour.DHConfirmListPersonParamInfo -> com.dahuatech.app.bean.develophour.DHConfirmListPersonParamInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FProjectNumber -> FProjectNumber
    int FWeekIndex -> FWeekIndex
    int FYear -> FYear
    java.lang.String FProjectCode -> FProjectCode
    java.lang.String FConfrimNumber -> FConfrimNumber
    java.lang.String getFProjectNumber() -> getFProjectNumber
    void setFProjectNumber(java.lang.String) -> setFProjectNumber
    int getFWeekIndex() -> getFWeekIndex
    void setFWeekIndex(int) -> setFWeekIndex
    int getFYear() -> getFYear
    void setFYear(int) -> setFYear
    java.lang.String getFProjectCode() -> getFProjectCode
    void setFProjectCode(java.lang.String) -> setFProjectCode
    java.lang.String getFConfrimNumber() -> getFConfrimNumber
    void setFConfrimNumber(java.lang.String) -> setFConfrimNumber
    com.dahuatech.app.bean.develophour.DHConfirmListPersonParamInfo getDHConfirmListPersonParamInfo() -> getDHConfirmListPersonParamInfo
    java.lang.String ConvertToJson(com.dahuatech.app.bean.develophour.DHConfirmListPersonParamInfo) -> ConvertToJson
com.dahuatech.app.bean.develophour.DHConfirmListPersonParamInfo$singletonHolder -> fe:
    com.dahuatech.app.bean.develophour.DHConfirmListPersonParamInfo instance -> a
    com.dahuatech.app.bean.develophour.DHConfirmListPersonParamInfo access$0() -> a
com.dahuatech.app.bean.develophour.DHConfirmListRootInfo -> com.dahuatech.app.bean.develophour.DHConfirmListRootInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FTypeId -> FTypeId
    java.lang.String FTypeName -> FTypeName
    java.lang.String FHours -> FHours
    java.util.List FChildren -> FChildren
    java.lang.String getFTypeId() -> getFTypeId
    void setFTypeId(java.lang.String) -> setFTypeId
    java.lang.String getFTypeName() -> getFTypeName
    void setFTypeName(java.lang.String) -> setFTypeName
    java.lang.String getFHours() -> getFHours
    void setFHours(java.lang.String) -> setFHours
    java.util.List getFChildren() -> getFChildren
    void setFChildren(java.util.List) -> setFChildren
com.dahuatech.app.bean.develophour.DHConfirmParamInfo -> com.dahuatech.app.bean.develophour.DHConfirmParamInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FItemNumber -> FItemNumber
    int FWeekIndex -> FWeekIndex
    int FYear -> FYear
    java.lang.String getFItemNumber() -> getFItemNumber
    void setFItemNumber(java.lang.String) -> setFItemNumber
    int getFWeekIndex() -> getFWeekIndex
    void setFWeekIndex(int) -> setFWeekIndex
    int getFYear() -> getFYear
    void setFYear(int) -> setFYear
    com.dahuatech.app.bean.develophour.DHConfirmParamInfo getDHParamInfo() -> getDHParamInfo
    java.lang.String ConvertToJson(com.dahuatech.app.bean.develophour.DHConfirmParamInfo) -> ConvertToJson
com.dahuatech.app.bean.develophour.DHConfirmParamInfo$singletonHolder -> ff:
    com.dahuatech.app.bean.develophour.DHConfirmParamInfo instance -> a
    com.dahuatech.app.bean.develophour.DHConfirmParamInfo access$0() -> a
com.dahuatech.app.bean.develophour.DHConfirmRootInfo -> com.dahuatech.app.bean.develophour.DHConfirmRootInfo:
    java.lang.String FProjectCode -> FProjectCode
    java.lang.String FProjectName -> FProjectName
    java.util.List FChildren -> FChildren
    boolean isChecked -> a
    java.lang.String getFProjectCode() -> getFProjectCode
    void setFProjectCode(java.lang.String) -> setFProjectCode
    java.lang.String getFProjectName() -> getFProjectName
    void setFProjectName(java.lang.String) -> setFProjectName
    java.util.List getFChildren() -> getFChildren
    void setFChildren(java.util.List) -> setFChildren
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    void changeChecked() -> changeChecked
    void update(java.util.Observable,java.lang.Object) -> update
com.dahuatech.app.bean.develophour.DHConfirmSubClassInfo -> com.dahuatech.app.bean.develophour.DHConfirmSubClassInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FItemNumber -> FItemNumber
    java.lang.String FItemName -> FItemName
    java.lang.String getFItemNumber() -> getFItemNumber
    void setFItemNumber(java.lang.String) -> setFItemNumber
    java.lang.String getFItemName() -> getFItemName
    void setFItemName(java.lang.String) -> setFItemName
com.dahuatech.app.bean.develophour.DHDetailInfo -> com.dahuatech.app.bean.develophour.DHDetailInfo:
    long serialVersionUID -> serialVersionUID
    int FBillId -> FBillId
    java.lang.String FItemNumber -> FItemNumber
    java.lang.String FWeekDate -> FWeekDate
    java.lang.String FProjectCode -> FProjectCode
    java.lang.String FProjectName -> FProjectName
    java.lang.String FTypeId -> FTypeId
    java.lang.String FTypeName -> FTypeName
    java.lang.String FHours -> FHours
    java.lang.String FNote -> FNote
    int getFBillId() -> getFBillId
    void setFBillId(int) -> setFBillId
    java.lang.String getFItemNumber() -> getFItemNumber
    void setFItemNumber(java.lang.String) -> setFItemNumber
    java.lang.String getFWeekDate() -> getFWeekDate
    void setFWeekDate(java.lang.String) -> setFWeekDate
    java.lang.String getFProjectCode() -> getFProjectCode
    void setFProjectCode(java.lang.String) -> setFProjectCode
    java.lang.String getFProjectName() -> getFProjectName
    void setFProjectName(java.lang.String) -> setFProjectName
    java.lang.String getFTypeId() -> getFTypeId
    void setFTypeId(java.lang.String) -> setFTypeId
    java.lang.String getFTypeName() -> getFTypeName
    void setFTypeName(java.lang.String) -> setFTypeName
    java.lang.String getFHours() -> getFHours
    void setFHours(java.lang.String) -> setFHours
    java.lang.String getFNote() -> getFNote
    void setFNote(java.lang.String) -> setFNote
    com.dahuatech.app.bean.develophour.DHDetailInfo getDHDetailInfo() -> getDHDetailInfo
    java.lang.String ConvertToJson(com.dahuatech.app.bean.develophour.DHDetailInfo) -> ConvertToJson
com.dahuatech.app.bean.develophour.DHDetailInfo$SingletonHolder -> fg:
    com.dahuatech.app.bean.develophour.DHDetailInfo instance -> a
    com.dahuatech.app.bean.develophour.DHDetailInfo access$0() -> a
com.dahuatech.app.bean.develophour.DHDetailParamInfo -> com.dahuatech.app.bean.develophour.DHDetailParamInfo:
    long serialVersionUID -> serialVersionUID
    int FBillId -> FBillId
    java.lang.String FWeekDate -> FWeekDate
    java.lang.String FProjectCode -> FProjectCode
    java.lang.String FTypeId -> FTypeId
    int getFBillId() -> getFBillId
    void setFBillId(int) -> setFBillId
    java.lang.String getFWeekDate() -> getFWeekDate
    void setFWeekDate(java.lang.String) -> setFWeekDate
    java.lang.String getFProjectCode() -> getFProjectCode
    void setFProjectCode(java.lang.String) -> setFProjectCode
    java.lang.String getFTypeId() -> getFTypeId
    void setFTypeId(java.lang.String) -> setFTypeId
    com.dahuatech.app.bean.develophour.DHDetailParamInfo getDHDetailParamInfo() -> getDHDetailParamInfo
    java.lang.String ConvertToJson(com.dahuatech.app.bean.develophour.DHDetailParamInfo) -> ConvertToJson
com.dahuatech.app.bean.develophour.DHDetailParamInfo$SingletonHolder -> fh:
    com.dahuatech.app.bean.develophour.DHDetailParamInfo instance -> a
    com.dahuatech.app.bean.develophour.DHDetailParamInfo access$0() -> a
com.dahuatech.app.bean.develophour.DHListInfo -> com.dahuatech.app.bean.develophour.DHListInfo:
    long serialVersionUID -> serialVersionUID
    int FBillId -> FBillId
    java.lang.String FWeekIndex -> FWeekIndex
    java.lang.String FWeekDate -> FWeekDate
    java.lang.String FWeekHours -> FWeekHours
    java.lang.String FMonValue -> FMonValue
    java.lang.String FMonDate -> FMonDate
    java.lang.String FMonHours -> FMonHours
    java.lang.String FTueValue -> FTueValue
    java.lang.String FTueDate -> FTueDate
    java.lang.String FTueHours -> FTueHours
    java.lang.String FWedValue -> FWedValue
    java.lang.String FWedDate -> FWedDate
    java.lang.String FWedHours -> FWedHours
    java.lang.String FThurValue -> FThurValue
    java.lang.String FThurDate -> FThurDate
    java.lang.String FThurHours -> FThurHours
    java.lang.String FFriValue -> FFriValue
    java.lang.String FFriDate -> FFriDate
    java.lang.String FFriHours -> FFriHours
    java.lang.String FSatValue -> FSatValue
    java.lang.String FSatDate -> FSatDate
    java.lang.String FSatHours -> FSatHours
    java.lang.String FSunValue -> FSunValue
    java.lang.String FSunDate -> FSunDate
    java.lang.String FSunHours -> FSunHours
    int getFBillId() -> getFBillId
    void setFBillId(int) -> setFBillId
    java.lang.String getFWeekIndex() -> getFWeekIndex
    void setFWeekIndex(java.lang.String) -> setFWeekIndex
    java.lang.String getFWeekDate() -> getFWeekDate
    void setFWeekDate(java.lang.String) -> setFWeekDate
    java.lang.String getFWeekHours() -> getFWeekHours
    void setFWeekHours(java.lang.String) -> setFWeekHours
    java.lang.String getFMonValue() -> getFMonValue
    void setFMonValue(java.lang.String) -> setFMonValue
    java.lang.String getFMonHours() -> getFMonHours
    void setFMonHours(java.lang.String) -> setFMonHours
    java.lang.String getFTueValue() -> getFTueValue
    void setFTueValue(java.lang.String) -> setFTueValue
    java.lang.String getFTueHours() -> getFTueHours
    void setFTueHours(java.lang.String) -> setFTueHours
    java.lang.String getFWedValue() -> getFWedValue
    void setFWedValue(java.lang.String) -> setFWedValue
    java.lang.String getFWedHours() -> getFWedHours
    void setFWedHours(java.lang.String) -> setFWedHours
    java.lang.String getFThurValue() -> getFThurValue
    void setFThurValue(java.lang.String) -> setFThurValue
    java.lang.String getFThurHours() -> getFThurHours
    void setFThurHours(java.lang.String) -> setFThurHours
    java.lang.String getFFriValue() -> getFFriValue
    void setFFriValue(java.lang.String) -> setFFriValue
    java.lang.String getFFriHours() -> getFFriHours
    void setFFriHours(java.lang.String) -> setFFriHours
    java.lang.String getFSatValue() -> getFSatValue
    void setFSatValue(java.lang.String) -> setFSatValue
    java.lang.String getFSatHours() -> getFSatHours
    void setFSatHours(java.lang.String) -> setFSatHours
    java.lang.String getFSunValue() -> getFSunValue
    void setFSunValue(java.lang.String) -> setFSunValue
    java.lang.String getFSunHours() -> getFSunHours
    void setFSunHours(java.lang.String) -> setFSunHours
    java.lang.String getFMonDate() -> getFMonDate
    void setFMonDate(java.lang.String) -> setFMonDate
    java.lang.String getFTueDate() -> getFTueDate
    void setFTueDate(java.lang.String) -> setFTueDate
    java.lang.String getFWedDate() -> getFWedDate
    void setFWedDate(java.lang.String) -> setFWedDate
    java.lang.String getFThurDate() -> getFThurDate
    void setFThurDate(java.lang.String) -> setFThurDate
    java.lang.String getFFriDate() -> getFFriDate
    void setFFriDate(java.lang.String) -> setFFriDate
    java.lang.String getFSatDate() -> getFSatDate
    void setFSatDate(java.lang.String) -> setFSatDate
    java.lang.String getFSunDate() -> getFSunDate
    void setFSunDate(java.lang.String) -> setFSunDate
com.dahuatech.app.bean.develophour.DHListParamInfo -> com.dahuatech.app.bean.develophour.DHListParamInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FItemNumber -> FItemNumber
    int FWeekIndex -> FWeekIndex
    int FYear -> FYear
    java.lang.String getFItemNumber() -> getFItemNumber
    void setFItemNumber(java.lang.String) -> setFItemNumber
    int getFWeekIndex() -> getFWeekIndex
    void setFWeekIndex(int) -> setFWeekIndex
    int getFYear() -> getFYear
    void setFYear(int) -> setFYear
    com.dahuatech.app.bean.develophour.DHListParamInfo getDHListParamInfo() -> getDHListParamInfo
    java.lang.String ConvertToJson(com.dahuatech.app.bean.develophour.DHListParamInfo) -> ConvertToJson
com.dahuatech.app.bean.develophour.DHListParamInfo$singletonHolder -> fi:
    com.dahuatech.app.bean.develophour.DHListParamInfo instance -> a
    com.dahuatech.app.bean.develophour.DHListParamInfo access$0() -> a
com.dahuatech.app.bean.develophour.DHListProjectInfo -> com.dahuatech.app.bean.develophour.DHListProjectInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FHours -> FHours
    java.util.List dListTypeInfo -> dListTypeInfo
    java.lang.String getFHours() -> getFHours
    void setFHours(java.lang.String) -> setFHours
    java.util.List getdListTypeInfo() -> getdListTypeInfo
    void setdListTypeInfo(java.util.List) -> setdListTypeInfo
com.dahuatech.app.bean.develophour.DHListProjectJsonInfo -> com.dahuatech.app.bean.develophour.DHListProjectJsonInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FHours -> FHours
    java.lang.String FSubEntrys -> FSubEntrys
    java.lang.String getFHours() -> getFHours
    void setFHours(java.lang.String) -> setFHours
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
com.dahuatech.app.bean.develophour.DHListProjectParamInfo -> com.dahuatech.app.bean.develophour.DHListProjectParamInfo:
    long serialVersionUID -> serialVersionUID
    int FBillId -> FBillId
    java.lang.String FWeekValue -> FWeekValue
    com.dahuatech.app.bean.develophour.DHListProjectParamInfo dHListProjectParamInfo -> a
    int getFBillId() -> getFBillId
    void setFBillId(int) -> setFBillId
    java.lang.String getFWeekValue() -> getFWeekValue
    void setFWeekValue(java.lang.String) -> setFWeekValue
    com.dahuatech.app.bean.develophour.DHListProjectParamInfo getDHListProjectParamInfo() -> getDHListProjectParamInfo
    java.lang.String ConvertToJson(com.dahuatech.app.bean.develophour.DHListProjectParamInfo) -> ConvertToJson
com.dahuatech.app.bean.develophour.DHListTypeInfo -> com.dahuatech.app.bean.develophour.DHListTypeInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FHours -> FHours
    java.lang.String getFHours() -> getFHours
    void setFHours(java.lang.String) -> setFHours
com.dahuatech.app.bean.develophour.DHProjectInfo -> com.dahuatech.app.bean.develophour.DHProjectInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FProjectCode -> FProjectCode
    java.lang.String FProjectName -> FProjectName
    java.lang.String getFProjectCode() -> getFProjectCode
    void setFProjectCode(java.lang.String) -> setFProjectCode
    java.lang.String getFProjectName() -> getFProjectName
    void setFProjectName(java.lang.String) -> setFProjectName
com.dahuatech.app.bean.develophour.DHProjectParamInfo -> com.dahuatech.app.bean.develophour.DHProjectParamInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FQueryText -> FQueryText
    int FPageIndex -> FPageIndex
    int FPageSize -> FPageSize
    java.lang.String getFQueryText() -> getFQueryText
    void setFQueryText(java.lang.String) -> setFQueryText
    int getFPageIndex() -> getFPageIndex
    void setFPageIndex(int) -> setFPageIndex
    int getFPageSize() -> getFPageSize
    void setFPageSize(int) -> setFPageSize
    com.dahuatech.app.bean.develophour.DHProjectParamInfo getDHProjectParamInfo() -> getDHProjectParamInfo
    java.lang.String ConvertToJson(com.dahuatech.app.bean.develophour.DHProjectParamInfo) -> ConvertToJson
com.dahuatech.app.bean.develophour.DHProjectParamInfo$SingletonHolder -> fj:
    com.dahuatech.app.bean.develophour.DHProjectParamInfo instance -> a
    com.dahuatech.app.bean.develophour.DHProjectParamInfo access$0() -> a
com.dahuatech.app.bean.develophour.DHTypeInfo -> com.dahuatech.app.bean.develophour.DHTypeInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FTypeId -> FTypeId
    java.lang.String FTypeName -> FTypeName
    java.lang.String getFTypeId() -> getFTypeId
    void setFTypeId(java.lang.String) -> setFTypeId
    java.lang.String getFTypeName() -> getFTypeName
    void setFTypeName(java.lang.String) -> setFTypeName
com.dahuatech.app.bean.develophour.DHUploadConfirmInfo -> com.dahuatech.app.bean.develophour.DHUploadConfirmInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FItemNumber -> FItemNumber
    java.lang.String FItemName -> FItemName
    int FYear -> FYear
    int FWeekIndex -> FWeekIndex
    java.lang.String getFItemNumber() -> getFItemNumber
    void setFItemNumber(java.lang.String) -> setFItemNumber
    java.lang.String getFItemName() -> getFItemName
    void setFItemName(java.lang.String) -> setFItemName
    int getFYear() -> getFYear
    void setFYear(int) -> setFYear
    int getFWeekIndex() -> getFWeekIndex
    void setFWeekIndex(int) -> setFWeekIndex
    com.dahuatech.app.bean.develophour.DHUploadConfirmInfo getDHUploadConfirmInfo() -> getDHUploadConfirmInfo
    java.lang.String ConvertToJson(com.dahuatech.app.bean.develophour.DHUploadConfirmInfo) -> ConvertToJson
com.dahuatech.app.bean.develophour.DHUploadConfirmInfo$SingletonHolder -> fk:
    com.dahuatech.app.bean.develophour.DHUploadConfirmInfo instance -> a
    com.dahuatech.app.bean.develophour.DHUploadConfirmInfo access$0() -> a
com.dahuatech.app.bean.develophour.DHUploadConfirmPersonInfo -> com.dahuatech.app.bean.develophour.DHUploadConfirmPersonInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FProjectCode -> FProjectCode
    java.lang.String FConfirmNumber -> FConfirmNumber
    java.lang.String getFProjectCode() -> getFProjectCode
    void setFProjectCode(java.lang.String) -> setFProjectCode
    java.lang.String getFConfirmNumber() -> getFConfirmNumber
    void setFConfirmNumber(java.lang.String) -> setFConfirmNumber
    java.lang.String ConvertToJson(java.util.List) -> ConvertToJson
com.dahuatech.app.bean.develophour.DHWeekInfo -> com.dahuatech.app.bean.develophour.DHWeekInfo:
    long serialVersionUID -> serialVersionUID
    int FYear -> FYear
    int FIndex -> FIndex
    java.lang.String FStartDate -> FStartDate
    java.lang.String FEndDate -> FEndDate
    int getFYear() -> getFYear
    void setFYear(int) -> setFYear
    int getFIndex() -> getFIndex
    void setFIndex(int) -> setFIndex
    java.lang.String getFStartDate() -> getFStartDate
    void setFStartDate(java.lang.String) -> setFStartDate
    java.lang.String getFEndDate() -> getFEndDate
    void setFEndDate(java.lang.String) -> setFEndDate
com.dahuatech.app.bean.expense.ExpandableInfo -> com.dahuatech.app.bean.expense.ExpandableInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FGroupTitle -> FGroupTitle
    java.lang.String FSubEntrys -> FSubEntrys
    java.lang.String getFGroupTitle() -> getFGroupTitle
    void setFGroupTitle(java.lang.String) -> setFGroupTitle
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
com.dahuatech.app.bean.expense.ExpenseFlowDetailInfo -> com.dahuatech.app.bean.expense.ExpenseFlowDetailInfo:
    long serialVersionUID -> serialVersionUID
    int FLocalId -> FLocalId
    int FServerId -> FServerId
    java.lang.String FPayType -> FPayType
    java.lang.String FItemNumber -> FItemNumber
    java.lang.String FExpendTime -> FExpendTime
    java.lang.String FExpendTypeParent -> FExpendTypeParent
    java.lang.String FExpendTypeChild -> FExpendTypeChild
    java.lang.String FExpendAddress -> FExpendAddress
    java.lang.String FExpendAmount -> FExpendAmount
    java.lang.String FCause -> FCause
    java.lang.String FClientId -> FClientId
    java.lang.String FClient -> FClient
    java.lang.String FProjectId -> FProjectId
    java.lang.String FProject -> FProject
    java.lang.String FAccompany -> FAccompany
    java.lang.String FAccompanyReason -> FAccompanyReason
    java.lang.String FStart -> FStart
    java.lang.String FDestination -> FDestination
    java.lang.String FBusinessLevel -> FBusinessLevel
    java.lang.String FStartTime -> FStartTime
    java.lang.String FEndTime -> FEndTime
    java.lang.String FReason -> FReason
    java.lang.String FDescription -> FDescription
    java.lang.String FUploadFlag -> FUploadFlag
    int getFLocalId() -> getFLocalId
    void setFLocalId(int) -> setFLocalId
    int getFServerId() -> getFServerId
    void setFServerId(int) -> setFServerId
    java.lang.String getFPayType() -> getFPayType
    void setFPayType(java.lang.String) -> setFPayType
    java.lang.String getFItemNumber() -> getFItemNumber
    void setFItemNumber(java.lang.String) -> setFItemNumber
    java.lang.String getFExpendTime() -> getFExpendTime
    void setFExpendTime(java.lang.String) -> setFExpendTime
    java.lang.String getFExpendTypeParent() -> getFExpendTypeParent
    void setFExpendTypeParent(java.lang.String) -> setFExpendTypeParent
    java.lang.String getFExpendTypeChild() -> getFExpendTypeChild
    void setFExpendTypeChild(java.lang.String) -> setFExpendTypeChild
    java.lang.String getFExpendAddress() -> getFExpendAddress
    void setFExpendAddress(java.lang.String) -> setFExpendAddress
    java.lang.String getFExpendAmount() -> getFExpendAmount
    void setFExpendAmount(java.lang.String) -> setFExpendAmount
    java.lang.String getFCause() -> getFCause
    void setFCause(java.lang.String) -> setFCause
    java.lang.String getFClientId() -> getFClientId
    void setFClientId(java.lang.String) -> setFClientId
    java.lang.String getFClient() -> getFClient
    void setFClient(java.lang.String) -> setFClient
    java.lang.String getFProjectId() -> getFProjectId
    void setFProjectId(java.lang.String) -> setFProjectId
    java.lang.String getFProject() -> getFProject
    void setFProject(java.lang.String) -> setFProject
    java.lang.String getFAccompany() -> getFAccompany
    void setFAccompany(java.lang.String) -> setFAccompany
    java.lang.String getFAccompanyReason() -> getFAccompanyReason
    void setFAccompanyReason(java.lang.String) -> setFAccompanyReason
    java.lang.String getFStart() -> getFStart
    void setFStart(java.lang.String) -> setFStart
    java.lang.String getFDestination() -> getFDestination
    void setFDestination(java.lang.String) -> setFDestination
    java.lang.String getFBusinessLevel() -> getFBusinessLevel
    void setFBusinessLevel(java.lang.String) -> setFBusinessLevel
    java.lang.String getFStartTime() -> getFStartTime
    void setFStartTime(java.lang.String) -> setFStartTime
    java.lang.String getFEndTime() -> getFEndTime
    void setFEndTime(java.lang.String) -> setFEndTime
    java.lang.String getFReason() -> getFReason
    void setFReason(java.lang.String) -> setFReason
    java.lang.String getFDescription() -> getFDescription
    void setFDescription(java.lang.String) -> setFDescription
    java.lang.String getFUploadFlag() -> getFUploadFlag
    void setFUploadFlag(java.lang.String) -> setFUploadFlag
    com.dahuatech.app.bean.expense.ExpenseFlowDetailInfo getExpenseFlowDetailInfo() -> getExpenseFlowDetailInfo
    java.lang.String ConvertToJson(java.util.List) -> ConvertToJson
com.dahuatech.app.bean.expense.ExpenseFlowDetailInfo$singletonHolder -> fl:
    com.dahuatech.app.bean.expense.ExpenseFlowDetailInfo instance -> a
    com.dahuatech.app.bean.expense.ExpenseFlowDetailInfo access$0() -> a
com.dahuatech.app.bean.expense.ExpenseFlowItemInfo -> com.dahuatech.app.bean.expense.ExpenseFlowItemInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FId -> FId
    java.lang.String FItemName -> FItemName
    java.lang.String getFId() -> getFId
    void setFId(java.lang.String) -> setFId
    java.lang.String getFItemName() -> getFItemName
    void setFItemName(java.lang.String) -> setFItemName
com.dahuatech.app.bean.expense.FlowParamInfo -> com.dahuatech.app.bean.expense.FlowParamInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FItemNumber -> FItemNumber
    java.lang.String FQueryText -> FQueryText
    java.lang.String FCurrentDate -> FCurrentDate
    int FPageIndex -> FPageIndex
    int FPageSize -> FPageSize
    java.lang.String getFItemNumber() -> getFItemNumber
    void setFItemNumber(java.lang.String) -> setFItemNumber
    java.lang.String getFQueryText() -> getFQueryText
    void setFQueryText(java.lang.String) -> setFQueryText
    java.lang.String getFCurrentDate() -> getFCurrentDate
    void setFCurrentDate(java.lang.String) -> setFCurrentDate
    int getFPageIndex() -> getFPageIndex
    void setFPageIndex(int) -> setFPageIndex
    int getFPageSize() -> getFPageSize
    void setFPageSize(int) -> setFPageSize
    com.dahuatech.app.bean.expense.FlowParamInfo getFlowParamInfo() -> getFlowParamInfo
    java.lang.String ConvertToJson(com.dahuatech.app.bean.expense.FlowParamInfo) -> ConvertToJson
com.dahuatech.app.bean.expense.FlowParamInfo$singletonHolder -> fm:
    com.dahuatech.app.bean.expense.FlowParamInfo instance -> a
    com.dahuatech.app.bean.expense.FlowParamInfo access$0() -> a
com.dahuatech.app.bean.expense.FlowSearchParamInfo -> com.dahuatech.app.bean.expense.FlowSearchParamInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FItemNumber -> FItemNumber
    java.lang.String FQueryItem -> FQueryItem
    java.lang.String fQueryType -> fQueryType
    int FPageIndex -> FPageIndex
    int FPageSize -> FPageSize
    java.lang.String getFItemNumber() -> getFItemNumber
    void setFItemNumber(java.lang.String) -> setFItemNumber
    java.lang.String getFQueryItem() -> getFQueryItem
    void setFQueryItem(java.lang.String) -> setFQueryItem
    java.lang.String getfQueryType() -> getfQueryType
    void setfQueryType(java.lang.String) -> setfQueryType
    int getFPageIndex() -> getFPageIndex
    void setFPageIndex(int) -> setFPageIndex
    int getFPageSize() -> getFPageSize
    void setFPageSize(int) -> setFPageSize
    com.dahuatech.app.bean.expense.FlowSearchParamInfo getFlowSearchParamInfo() -> getFlowSearchParamInfo
    java.lang.String ConvertToJson(com.dahuatech.app.bean.expense.FlowSearchParamInfo) -> ConvertToJson
com.dahuatech.app.bean.expense.FlowSearchParamInfo$singletonHolder -> fn:
    com.dahuatech.app.bean.expense.FlowSearchParamInfo instance -> a
    com.dahuatech.app.bean.expense.FlowSearchParamInfo access$0() -> a
com.dahuatech.app.bean.expense.GpsInfo -> com.dahuatech.app.bean.expense.GpsInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String userId -> userId
    java.lang.String startTime -> startTime
    java.lang.String endTime -> endTime
    java.lang.String startLocation -> startLocation
    java.lang.String endLocation -> endLocation
    java.lang.String startPlace -> startPlace
    java.lang.String endPlace -> endPlace
    java.lang.String cause -> cause
    java.lang.String autoFlag -> autoFlag
    java.lang.String amount -> amount
    java.lang.String getUserId() -> getUserId
    void setUserId(java.lang.String) -> setUserId
    java.lang.String getStartTime() -> getStartTime
    void setStartTime(java.lang.String) -> setStartTime
    java.lang.String getEndTime() -> getEndTime
    void setEndTime(java.lang.String) -> setEndTime
    java.lang.String getStartLocation() -> getStartLocation
    void setStartLocation(java.lang.String) -> setStartLocation
    java.lang.String getEndLocation() -> getEndLocation
    void setEndLocation(java.lang.String) -> setEndLocation
    java.lang.String getStartPlace() -> getStartPlace
    void setStartPlace(java.lang.String) -> setStartPlace
    java.lang.String getEndPlace() -> getEndPlace
    void setEndPlace(java.lang.String) -> setEndPlace
    java.lang.String getCause() -> getCause
    void setCause(java.lang.String) -> setCause
    java.lang.String getAutoFlag() -> getAutoFlag
    void setAutoFlag(java.lang.String) -> setAutoFlag
    java.lang.String getAmount() -> getAmount
    void setAmount(java.lang.String) -> setAmount
    java.lang.String ConvertToJson(com.dahuatech.app.bean.expense.GpsInfo) -> ConvertToJson
com.dahuatech.app.bean.expense.GpsRowIdInfo -> com.dahuatech.app.bean.expense.GpsRowIdInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String rowId -> rowId
    java.lang.String userId -> userId
    java.lang.String startTime -> startTime
    java.lang.String endTime -> endTime
    java.lang.String startLocation -> startLocation
    java.lang.String endLocation -> endLocation
    java.lang.String startPlace -> startPlace
    java.lang.String endPlace -> endPlace
    java.lang.String cause -> cause
    java.lang.String autoFlag -> autoFlag
    java.lang.String amount -> amount
    java.lang.String getRowId() -> getRowId
    void setRowId(java.lang.String) -> setRowId
    java.lang.String getUserId() -> getUserId
    void setUserId(java.lang.String) -> setUserId
    java.lang.String getStartTime() -> getStartTime
    void setStartTime(java.lang.String) -> setStartTime
    java.lang.String getEndTime() -> getEndTime
    void setEndTime(java.lang.String) -> setEndTime
    java.lang.String getStartLocation() -> getStartLocation
    void setStartLocation(java.lang.String) -> setStartLocation
    java.lang.String getEndLocation() -> getEndLocation
    void setEndLocation(java.lang.String) -> setEndLocation
    java.lang.String getStartPlace() -> getStartPlace
    void setStartPlace(java.lang.String) -> setStartPlace
    java.lang.String getEndPlace() -> getEndPlace
    void setEndPlace(java.lang.String) -> setEndPlace
    java.lang.String getCause() -> getCause
    void setCause(java.lang.String) -> setCause
    java.lang.String getAutoFlag() -> getAutoFlag
    void setAutoFlag(java.lang.String) -> setAutoFlag
    java.lang.String getAmount() -> getAmount
    void setAmount(java.lang.String) -> setAmount
    java.lang.String ConvertToJson(java.util.List) -> ConvertToJson
com.dahuatech.app.bean.market.MarketBidHistoryInfo -> com.dahuatech.app.bean.market.MarketBidHistoryInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FCustomerName -> FCustomerName
    java.lang.String FBidCode -> FBidCode
    java.lang.String getFCustomerName() -> getFCustomerName
    void setFCustomerName(java.lang.String) -> setFCustomerName
    java.lang.String getFBidCode() -> getFBidCode
    void setFBidCode(java.lang.String) -> setFBidCode
    com.dahuatech.app.bean.market.MarketBidHistoryInfo getMarketBidHistoryInfo() -> getMarketBidHistoryInfo
    java.lang.String ConvertToJson(java.util.List) -> ConvertToJson
com.dahuatech.app.bean.market.MarketBidHistoryInfo$singletonHolder -> fo:
    com.dahuatech.app.bean.market.MarketBidHistoryInfo instance -> a
    com.dahuatech.app.bean.market.MarketBidHistoryInfo access$0() -> a
com.dahuatech.app.bean.market.MarketBidInfo -> com.dahuatech.app.bean.market.MarketBidInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FSystemType -> FSystemType
    java.lang.String FClassTypeID -> FClassTypeID
    java.lang.String FBillID -> FBillID
    java.lang.String FCustomerName -> FCustomerName
    java.lang.String FBidCode -> FBidCode
    java.lang.String FNodeName -> FNodeName
    java.lang.String FTasker -> FTasker
    java.lang.String getFSystemType() -> getFSystemType
    void setFSystemType(java.lang.String) -> setFSystemType
    java.lang.String getFClassTypeID() -> getFClassTypeID
    void setFClassTypeID(java.lang.String) -> setFClassTypeID
    java.lang.String getFBillID() -> getFBillID
    void setFBillID(java.lang.String) -> setFBillID
    java.lang.String getFCustomerName() -> getFCustomerName
    void setFCustomerName(java.lang.String) -> setFCustomerName
    java.lang.String getFBidCode() -> getFBidCode
    void setFBidCode(java.lang.String) -> setFBidCode
    java.lang.String getFNodeName() -> getFNodeName
    void setFNodeName(java.lang.String) -> setFNodeName
    java.lang.String getFTasker() -> getFTasker
    void setFTasker(java.lang.String) -> setFTasker
com.dahuatech.app.bean.market.MarketContractHistoryInfo -> com.dahuatech.app.bean.market.MarketContractHistoryInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FCustomerName -> FCustomerName
    java.lang.String FContractCode -> FContractCode
    java.lang.String getFCustomerName() -> getFCustomerName
    void setFCustomerName(java.lang.String) -> setFCustomerName
    java.lang.String getFContractCode() -> getFContractCode
    void setFContractCode(java.lang.String) -> setFContractCode
    com.dahuatech.app.bean.market.MarketContractHistoryInfo getMarketContractHistoryInfo() -> getMarketContractHistoryInfo
    java.lang.String ConvertToJson(java.util.List) -> ConvertToJson
com.dahuatech.app.bean.market.MarketContractHistoryInfo$singletonHolder -> fp:
    com.dahuatech.app.bean.market.MarketContractHistoryInfo instance -> a
    com.dahuatech.app.bean.market.MarketContractHistoryInfo access$0() -> a
com.dahuatech.app.bean.market.MarketContractInfo -> com.dahuatech.app.bean.market.MarketContractInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FSystemType -> FSystemType
    java.lang.String FClassTypeID -> FClassTypeID
    java.lang.String FBillID -> FBillID
    java.lang.String FCustomerName -> FCustomerName
    java.lang.String FContractCode -> FContractCode
    java.lang.String FNodeName -> FNodeName
    java.lang.String FTasker -> FTasker
    java.lang.String getFSystemType() -> getFSystemType
    void setFSystemType(java.lang.String) -> setFSystemType
    java.lang.String getFClassTypeID() -> getFClassTypeID
    void setFClassTypeID(java.lang.String) -> setFClassTypeID
    java.lang.String getFBillID() -> getFBillID
    void setFBillID(java.lang.String) -> setFBillID
    java.lang.String getFCustomerName() -> getFCustomerName
    void setFCustomerName(java.lang.String) -> setFCustomerName
    java.lang.String getFContractCode() -> getFContractCode
    void setFContractCode(java.lang.String) -> setFContractCode
    java.lang.String getFNodeName() -> getFNodeName
    void setFNodeName(java.lang.String) -> setFNodeName
    java.lang.String getFTasker() -> getFTasker
    void setFTasker(java.lang.String) -> setFTasker
com.dahuatech.app.bean.market.MarketProductInfo -> com.dahuatech.app.bean.market.MarketProductInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FModel -> FModel
    java.lang.String FName -> FName
    java.lang.String FFirstLine -> FFirstLine
    java.lang.String FSecLine -> FSecLine
    java.lang.String FStandPrice -> FStandPrice
    java.lang.String getFModel() -> getFModel
    void setFModel(java.lang.String) -> setFModel
    java.lang.String getFName() -> getFName
    void setFName(java.lang.String) -> setFName
    java.lang.String getFFirstLine() -> getFFirstLine
    void setFFirstLine(java.lang.String) -> setFFirstLine
    java.lang.String getFSecLine() -> getFSecLine
    void setFSecLine(java.lang.String) -> setFSecLine
    java.lang.String getFStandPrice() -> getFStandPrice
    void setFStandPrice(java.lang.String) -> setFStandPrice
com.dahuatech.app.bean.market.MarketSearchParamInfo -> com.dahuatech.app.bean.market.MarketSearchParamInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FItemNumber -> FItemNumber
    java.lang.String FQueryText -> FQueryText
    int FPageIndex -> FPageIndex
    int FPageSize -> FPageSize
    java.lang.String getFItemNumber() -> getFItemNumber
    void setFItemNumber(java.lang.String) -> setFItemNumber
    java.lang.String getFQueryText() -> getFQueryText
    void setFQueryText(java.lang.String) -> setFQueryText
    int getFPageIndex() -> getFPageIndex
    void setFPageIndex(int) -> setFPageIndex
    int getFPageSize() -> getFPageSize
    void setFPageSize(int) -> setFPageSize
    com.dahuatech.app.bean.market.MarketSearchParamInfo getMarketSearchParamInfo() -> getMarketSearchParamInfo
    java.lang.String ConvertToJson(com.dahuatech.app.bean.market.MarketSearchParamInfo) -> ConvertToJson
com.dahuatech.app.bean.market.MarketSearchParamInfo$singletonHolder -> fq:
    com.dahuatech.app.bean.market.MarketSearchParamInfo instance -> a
    com.dahuatech.app.bean.market.MarketSearchParamInfo access$0() -> a
com.dahuatech.app.bean.market.MarketWorkflowInfo -> com.dahuatech.app.bean.market.MarketWorkflowInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FTaskId -> FTaskId
    java.lang.String FID -> FID
    java.lang.String FStepFlagName -> FStepFlagName
    java.lang.String FItemName -> FItemName
    java.lang.String FShortTel -> FShortTel
    java.lang.String FComment -> FComment
    java.lang.String FStatusResult -> FStatusResult
    java.lang.String FUpdateTime -> FUpdateTime
    java.lang.String getFTaskId() -> getFTaskId
    void setFTaskId(java.lang.String) -> setFTaskId
    java.lang.String getFID() -> getFID
    void setFID(java.lang.String) -> setFID
    java.lang.String getFStepFlagName() -> getFStepFlagName
    void setFStepFlagName(java.lang.String) -> setFStepFlagName
    java.lang.String getFItemName() -> getFItemName
    void setFItemName(java.lang.String) -> setFItemName
    java.lang.String getFShortTel() -> getFShortTel
    void setFShortTel(java.lang.String) -> setFShortTel
    java.lang.String getFComment() -> getFComment
    void setFComment(java.lang.String) -> setFComment
    java.lang.String getFStatusResult() -> getFStatusResult
    void setFStatusResult(java.lang.String) -> setFStatusResult
    java.lang.String getFUpdateTime() -> getFUpdateTime
    void setFUpdateTime(java.lang.String) -> setFUpdateTime
com.dahuatech.app.bean.meeting.MeetingDetailInfo -> com.dahuatech.app.bean.meeting.MeetingDetailInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FId -> FId
    java.lang.String FApplyNumber -> FApplyNumber
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDept -> FApplyDept
    java.lang.String FMeetingName -> FMeetingName
    java.lang.String FMeetingDate -> FMeetingDate
    java.lang.String FMeetingStart -> FMeetingStart
    java.lang.String FMeetingEnd -> FMeetingEnd
    java.lang.String FMeetingMasterId -> FMeetingMasterId
    java.lang.String FMeetingMasterName -> FMeetingMasterName
    java.lang.String FMeetingRoom -> FMeetingRoom
    java.lang.String FMeetingRoomId -> FMeetingRoomId
    java.lang.String FMeetingRoomIp -> FMeetingRoomIp
    java.lang.String FSubEntrys -> FSubEntrys
    java.lang.String getFId() -> getFId
    void setFId(java.lang.String) -> setFId
    java.lang.String getFApplyNumber() -> getFApplyNumber
    void setFApplyNumber(java.lang.String) -> setFApplyNumber
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDept() -> getFApplyDept
    void setFApplyDept(java.lang.String) -> setFApplyDept
    java.lang.String getFMeetingName() -> getFMeetingName
    void setFMeetingName(java.lang.String) -> setFMeetingName
    java.lang.String getFMeetingDate() -> getFMeetingDate
    void setFMeetingDate(java.lang.String) -> setFMeetingDate
    java.lang.String getFMeetingStart() -> getFMeetingStart
    void setFMeetingStart(java.lang.String) -> setFMeetingStart
    java.lang.String getFMeetingEnd() -> getFMeetingEnd
    void setFMeetingEnd(java.lang.String) -> setFMeetingEnd
    java.lang.String getFMeetingMasterId() -> getFMeetingMasterId
    void setFMeetingMasterId(java.lang.String) -> setFMeetingMasterId
    java.lang.String getFMeetingMasterName() -> getFMeetingMasterName
    void setFMeetingMasterName(java.lang.String) -> setFMeetingMasterName
    java.lang.String getFMeetingRoom() -> getFMeetingRoom
    void setFMeetingRoom(java.lang.String) -> setFMeetingRoom
    java.lang.String getFMeetingRoomId() -> getFMeetingRoomId
    void setFMeetingRoomId(java.lang.String) -> setFMeetingRoomId
    java.lang.String getFMeetingRoomIp() -> getFMeetingRoomIp
    void setFMeetingRoomIp(java.lang.String) -> setFMeetingRoomIp
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
    com.dahuatech.app.bean.meeting.MeetingDetailInfo getMeetingDetailInfo() -> getMeetingDetailInfo
    java.lang.String ConvertToJson(com.dahuatech.app.bean.meeting.MeetingDetailInfo) -> ConvertToJson
com.dahuatech.app.bean.meeting.MeetingDetailInfo$singletonHolder -> fr:
    com.dahuatech.app.bean.meeting.MeetingDetailInfo instance -> a
    com.dahuatech.app.bean.meeting.MeetingDetailInfo access$0() -> a
com.dahuatech.app.bean.meeting.MeetingInitParamInfo -> com.dahuatech.app.bean.meeting.MeetingInitParamInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FItemNumber -> FItemNumber
    java.lang.String FRoomIdS -> FRoomIdS
    java.lang.String FSelectedDate -> FSelectedDate
    java.lang.String FSelectedStart -> FSelectedStart
    java.lang.String FSelectedEnd -> FSelectedEnd
    java.lang.String getFItemNumber() -> getFItemNumber
    void setFItemNumber(java.lang.String) -> setFItemNumber
    java.lang.String getFRoomIdS() -> getFRoomIdS
    void setFRoomIdS(java.lang.String) -> setFRoomIdS
    java.lang.String getFSelectedDate() -> getFSelectedDate
    void setFSelectedDate(java.lang.String) -> setFSelectedDate
    java.lang.String getFSelectedStart() -> getFSelectedStart
    void setFSelectedStart(java.lang.String) -> setFSelectedStart
    java.lang.String getFSelectedEnd() -> getFSelectedEnd
    void setFSelectedEnd(java.lang.String) -> setFSelectedEnd
    com.dahuatech.app.bean.meeting.MeetingInitParamInfo getMeetingInitParamInfo() -> getMeetingInitParamInfo
    java.lang.String ConvertToJson(com.dahuatech.app.bean.meeting.MeetingInitParamInfo) -> ConvertToJson
com.dahuatech.app.bean.meeting.MeetingInitParamInfo$singletonHolder -> fs:
    com.dahuatech.app.bean.meeting.MeetingInitParamInfo instance -> a
    com.dahuatech.app.bean.meeting.MeetingInitParamInfo access$0() -> a
com.dahuatech.app.bean.meeting.MeetingListInfo -> com.dahuatech.app.bean.meeting.MeetingListInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FId -> FId
    java.lang.String FStatus -> FStatus
    java.lang.String FCreate -> FCreate
    java.lang.String FMeetingName -> FMeetingName
    java.lang.String FMeetingDate -> FMeetingDate
    java.lang.String FMeetingStart -> FMeetingStart
    java.lang.String FMeetingEnd -> FMeetingEnd
    int FRecordCount -> FRecordCount
    java.lang.String getFId() -> getFId
    void setFId(java.lang.String) -> setFId
    java.lang.String getFStatus() -> getFStatus
    void setFStatus(java.lang.String) -> setFStatus
    java.lang.String getFCreate() -> getFCreate
    void setFCreate(java.lang.String) -> setFCreate
    java.lang.String getFMeetingName() -> getFMeetingName
    void setFMeetingName(java.lang.String) -> setFMeetingName
    java.lang.String getFMeetingDate() -> getFMeetingDate
    void setFMeetingDate(java.lang.String) -> setFMeetingDate
    java.lang.String getFMeetingStart() -> getFMeetingStart
    void setFMeetingStart(java.lang.String) -> setFMeetingStart
    java.lang.String getFMeetingEnd() -> getFMeetingEnd
    void setFMeetingEnd(java.lang.String) -> setFMeetingEnd
    int getFRecordCount() -> getFRecordCount
    void setFRecordCount(int) -> setFRecordCount
com.dahuatech.app.bean.meeting.MeetingListParamInfo -> com.dahuatech.app.bean.meeting.MeetingListParamInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FItemNumber -> FItemNumber
    int FPageIndex -> FPageIndex
    int FPageSize -> FPageSize
    java.lang.String getFItemNumber() -> getFItemNumber
    void setFItemNumber(java.lang.String) -> setFItemNumber
    int getFPageIndex() -> getFPageIndex
    void setFPageIndex(int) -> setFPageIndex
    int getFPageSize() -> getFPageSize
    void setFPageSize(int) -> setFPageSize
    com.dahuatech.app.bean.meeting.MeetingListParamInfo getMeetingListParamInfo() -> getMeetingListParamInfo
    java.lang.String ConvertToJson(com.dahuatech.app.bean.meeting.MeetingListParamInfo) -> ConvertToJson
com.dahuatech.app.bean.meeting.MeetingListParamInfo$singletonHolder -> ft:
    com.dahuatech.app.bean.meeting.MeetingListParamInfo instance -> a
    com.dahuatech.app.bean.meeting.MeetingListParamInfo access$0() -> a
com.dahuatech.app.bean.meeting.MeetingPersonInfo -> com.dahuatech.app.bean.meeting.MeetingPersonInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FItemNumber -> FItemNumber
    java.lang.String FItemName -> FItemName
    java.lang.String FDeptName -> FDeptName
    int FRecordCount -> FRecordCount
    java.lang.String getFItemNumber() -> getFItemNumber
    void setFItemNumber(java.lang.String) -> setFItemNumber
    java.lang.String getFItemName() -> getFItemName
    void setFItemName(java.lang.String) -> setFItemName
    java.lang.String getFDeptName() -> getFDeptName
    void setFDeptName(java.lang.String) -> setFDeptName
    int getFRecordCount() -> getFRecordCount
    void setFRecordCount(int) -> setFRecordCount
    java.lang.String ConvertToJson(java.util.List) -> ConvertToJson
com.dahuatech.app.bean.meeting.MeetingRoomInfo -> com.dahuatech.app.bean.meeting.MeetingRoomInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FRoomId -> FRoomId
    java.lang.String FRoomName -> FRoomName
    java.lang.String FRoomIp -> FRoomIp
    java.lang.String FType -> FType
    int FRecordCount -> FRecordCount
    java.lang.String getFRoomId() -> getFRoomId
    void setFRoomId(java.lang.String) -> setFRoomId
    java.lang.String getFRoomName() -> getFRoomName
    void setFRoomName(java.lang.String) -> setFRoomName
    java.lang.String getFRoomIp() -> getFRoomIp
    void setFRoomIp(java.lang.String) -> setFRoomIp
    java.lang.String getFType() -> getFType
    void setFType(java.lang.String) -> setFType
    int getFRecordCount() -> getFRecordCount
    void setFRecordCount(int) -> setFRecordCount
com.dahuatech.app.bean.meeting.MeetingSearchContactInfo -> com.dahuatech.app.bean.meeting.MeetingSearchContactInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer id -> id
    java.lang.Integer getId() -> getId
    void setId(java.lang.Integer) -> setId
com.dahuatech.app.bean.meeting.MeetingSearchParamInfo -> com.dahuatech.app.bean.meeting.MeetingSearchParamInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FItemNumber -> FItemNumber
    java.lang.String FQueryText -> FQueryText
    int FPageIndex -> FPageIndex
    int FPageSize -> FPageSize
    java.lang.String FSelectedDate -> FSelectedDate
    java.lang.String FSelectedStart -> FSelectedStart
    java.lang.String FSelectedEnd -> FSelectedEnd
    java.lang.String getFItemNumber() -> getFItemNumber
    void setFItemNumber(java.lang.String) -> setFItemNumber
    java.lang.String getFQueryText() -> getFQueryText
    void setFQueryText(java.lang.String) -> setFQueryText
    int getFPageIndex() -> getFPageIndex
    void setFPageIndex(int) -> setFPageIndex
    int getFPageSize() -> getFPageSize
    void setFPageSize(int) -> setFPageSize
    java.lang.String getFSelectedDate() -> getFSelectedDate
    void setFSelectedDate(java.lang.String) -> setFSelectedDate
    java.lang.String getFSelectedStart() -> getFSelectedStart
    void setFSelectedStart(java.lang.String) -> setFSelectedStart
    java.lang.String getFSelectedEnd() -> getFSelectedEnd
    void setFSelectedEnd(java.lang.String) -> setFSelectedEnd
    com.dahuatech.app.bean.meeting.MeetingSearchParamInfo getMeetingSearchParamInfo() -> getMeetingSearchParamInfo
    java.lang.String ConvertToJson(com.dahuatech.app.bean.meeting.MeetingSearchParamInfo) -> ConvertToJson
com.dahuatech.app.bean.meeting.MeetingSearchParamInfo$singletonHolder -> fu:
    com.dahuatech.app.bean.meeting.MeetingSearchParamInfo instance -> a
    com.dahuatech.app.bean.meeting.MeetingSearchParamInfo access$0() -> a
com.dahuatech.app.bean.mytask.ApplyDaysOffDevelopInfo -> com.dahuatech.app.bean.mytask.ApplyDaysOffDevelopInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FApplyDept -> FApplyDept
    java.lang.String FTypeName -> FTypeName
    java.lang.String FSumDays -> FSumDays
    java.lang.String FStartTime -> FStartTime
    java.lang.String FEndTime -> FEndTime
    java.lang.String FReason -> FReason
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFApplyDept() -> getFApplyDept
    void setFApplyDept(java.lang.String) -> setFApplyDept
    java.lang.String getFTypeName() -> getFTypeName
    void setFTypeName(java.lang.String) -> setFTypeName
    java.lang.String getFSumDays() -> getFSumDays
    void setFSumDays(java.lang.String) -> setFSumDays
    java.lang.String getFStartTime() -> getFStartTime
    void setFStartTime(java.lang.String) -> setFStartTime
    java.lang.String getFEndTime() -> getFEndTime
    void setFEndTime(java.lang.String) -> setFEndTime
    java.lang.String getFReason() -> getFReason
    void setFReason(java.lang.String) -> setFReason
    com.dahuatech.app.bean.mytask.ApplyDaysOffDevelopInfo getApplyDaysOffDevelopInfo() -> getApplyDaysOffDevelopInfo
com.dahuatech.app.bean.mytask.ApplyDaysOffDevelopInfo$singletonHolder -> fv:
    com.dahuatech.app.bean.mytask.ApplyDaysOffDevelopInfo instance -> a
    com.dahuatech.app.bean.mytask.ApplyDaysOffDevelopInfo access$0() -> a
com.dahuatech.app.bean.mytask.ApplyDaysOffTBodyInfo -> com.dahuatech.app.bean.mytask.ApplyDaysOffTBodyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FDate -> FDate
    java.lang.String FStartTime -> FStartTime
    java.lang.String FEndTime -> FEndTime
    java.lang.String FHours -> FHours
    java.lang.String FReason -> FReason
    java.lang.String getFDate() -> getFDate
    void setFDate(java.lang.String) -> setFDate
    java.lang.String getFStartTime() -> getFStartTime
    void setFStartTime(java.lang.String) -> setFStartTime
    java.lang.String getFEndTime() -> getFEndTime
    void setFEndTime(java.lang.String) -> setFEndTime
    java.lang.String getFHours() -> getFHours
    void setFHours(java.lang.String) -> setFHours
    java.lang.String getFReason() -> getFReason
    void setFReason(java.lang.String) -> setFReason
com.dahuatech.app.bean.mytask.ApplyDaysOffTHeaderInfo -> com.dahuatech.app.bean.mytask.ApplyDaysOffTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FApplyDept -> FApplyDept
    java.lang.String FSubEntrys -> FSubEntrys
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFApplyDept() -> getFApplyDept
    void setFApplyDept(java.lang.String) -> setFApplyDept
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
    com.dahuatech.app.bean.mytask.ApplyDaysOffTHeaderInfo getApplyDaysOffTHeaderInfo() -> getApplyDaysOffTHeaderInfo
com.dahuatech.app.bean.mytask.ApplyDaysOffTHeaderInfo$singletonHolder -> fw:
    com.dahuatech.app.bean.mytask.ApplyDaysOffTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.ApplyDaysOffTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.ApplyLeaveTBodyInfo -> com.dahuatech.app.bean.mytask.ApplyLeaveTBodyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FHolidayType -> FHolidayType
    java.lang.String FStartDate -> FStartDate
    java.lang.String FStartTime -> FStartTime
    java.lang.String FEndDate -> FEndDate
    java.lang.String FEndTime -> FEndTime
    java.lang.String FTimeLength -> FTimeLength
    java.lang.String FReason -> FReason
    java.lang.String getFHolidayType() -> getFHolidayType
    void setFHolidayType(java.lang.String) -> setFHolidayType
    java.lang.String getFStartDate() -> getFStartDate
    void setFStartDate(java.lang.String) -> setFStartDate
    java.lang.String getFStartTime() -> getFStartTime
    void setFStartTime(java.lang.String) -> setFStartTime
    java.lang.String getFEndDate() -> getFEndDate
    void setFEndDate(java.lang.String) -> setFEndDate
    java.lang.String getFEndTime() -> getFEndTime
    void setFEndTime(java.lang.String) -> setFEndTime
    java.lang.String getFTimeLength() -> getFTimeLength
    void setFTimeLength(java.lang.String) -> setFTimeLength
    java.lang.String getFReason() -> getFReason
    void setFReason(java.lang.String) -> setFReason
com.dahuatech.app.bean.mytask.ApplyLeaveTHeaderInfo -> com.dahuatech.app.bean.mytask.ApplyLeaveTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FApplyDept -> FApplyDept
    java.lang.String FSubEntrys -> FSubEntrys
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFApplyDept() -> getFApplyDept
    void setFApplyDept(java.lang.String) -> setFApplyDept
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
    com.dahuatech.app.bean.mytask.ApplyLeaveTHeaderInfo getApplyLeaveTHeaderInfo() -> getApplyLeaveTHeaderInfo
com.dahuatech.app.bean.mytask.ApplyLeaveTHeaderInfo$singletonHolder -> fx:
    com.dahuatech.app.bean.mytask.ApplyLeaveTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.ApplyLeaveTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.ApplyOverTimeTBodyInfo -> com.dahuatech.app.bean.mytask.ApplyOverTimeTBodyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FDate -> FDate
    java.lang.String FStartTime -> FStartTime
    java.lang.String FEndTime -> FEndTime
    java.lang.String FUse -> FUse
    java.lang.String FReason -> FReason
    java.lang.String FAttenTime -> FAttenTime
    java.lang.String FAttendance -> FAttendance
    java.lang.String getFDate() -> getFDate
    void setFDate(java.lang.String) -> setFDate
    java.lang.String getFStartTime() -> getFStartTime
    void setFStartTime(java.lang.String) -> setFStartTime
    java.lang.String getFEndTime() -> getFEndTime
    void setFEndTime(java.lang.String) -> setFEndTime
    java.lang.String getFUse() -> getFUse
    void setFUse(java.lang.String) -> setFUse
    java.lang.String getFReason() -> getFReason
    void setFReason(java.lang.String) -> setFReason
    java.lang.String getFAttenTime() -> getFAttenTime
    void setFAttenTime(java.lang.String) -> setFAttenTime
    java.lang.String getFAttendance() -> getFAttendance
    void setFAttendance(java.lang.String) -> setFAttendance
com.dahuatech.app.bean.mytask.ApplyOverTimeTHeaderInfo -> com.dahuatech.app.bean.mytask.ApplyOverTimeTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FOverTimeCount -> FOverTimeCount
    java.lang.String FDaysOffCount -> FDaysOffCount
    java.lang.String FSubEntrys -> FSubEntrys
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFOverTimeCount() -> getFOverTimeCount
    void setFOverTimeCount(java.lang.String) -> setFOverTimeCount
    java.lang.String getFDaysOffCount() -> getFDaysOffCount
    void setFDaysOffCount(java.lang.String) -> setFDaysOffCount
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
    com.dahuatech.app.bean.mytask.ApplyOverTimeTHeaderInfo getApplyOverTimeTHeaderInfo() -> getApplyOverTimeTHeaderInfo
com.dahuatech.app.bean.mytask.ApplyOverTimeTHeaderInfo$singletonHolder -> fy:
    com.dahuatech.app.bean.mytask.ApplyOverTimeTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.ApplyOverTimeTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.ApplyResumeTBodyInfo -> com.dahuatech.app.bean.mytask.ApplyResumeTBodyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FStartDate -> FStartDate
    java.lang.String FAmCheckTime -> FAmCheckTime
    java.lang.String FAmCheckResult -> FAmCheckResult
    java.lang.String FAmResume -> FAmResume
    java.lang.String FPmCheckTime -> FPmCheckTime
    java.lang.String FPmCheckResult -> FPmCheckResult
    java.lang.String FPmResume -> FPmResume
    java.lang.String FReason -> FReason
    java.lang.String getFStartDate() -> getFStartDate
    void setFStartDate(java.lang.String) -> setFStartDate
    java.lang.String getFAmCheckTime() -> getFAmCheckTime
    void setFAmCheckTime(java.lang.String) -> setFAmCheckTime
    java.lang.String getFAmCheckResult() -> getFAmCheckResult
    void setFAmCheckResult(java.lang.String) -> setFAmCheckResult
    java.lang.String getFAmResume() -> getFAmResume
    void setFAmResume(java.lang.String) -> setFAmResume
    java.lang.String getFPmCheckTime() -> getFPmCheckTime
    void setFPmCheckTime(java.lang.String) -> setFPmCheckTime
    java.lang.String getFPmCheckResult() -> getFPmCheckResult
    void setFPmCheckResult(java.lang.String) -> setFPmCheckResult
    java.lang.String getFPmResume() -> getFPmResume
    void setFPmResume(java.lang.String) -> setFPmResume
    java.lang.String getFReason() -> getFReason
    void setFReason(java.lang.String) -> setFReason
com.dahuatech.app.bean.mytask.ApplyResumeTHeaderInfo -> com.dahuatech.app.bean.mytask.ApplyResumeTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FApplyDept -> FApplyDept
    java.lang.String FSubEntrys -> FSubEntrys
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFApplyDept() -> getFApplyDept
    void setFApplyDept(java.lang.String) -> setFApplyDept
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
    com.dahuatech.app.bean.mytask.ApplyResumeTHeaderInfo getApplyResumeTHeaderInfo() -> getApplyResumeTHeaderInfo
com.dahuatech.app.bean.mytask.ApplyResumeTHeaderInfo$singletonHolder -> fz:
    com.dahuatech.app.bean.mytask.ApplyResumeTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.ApplyResumeTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.ContributionAwardInfo -> com.dahuatech.app.bean.mytask.ContributionAwardInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FBillerName -> FBillerName
    java.lang.String FBillerDeptName -> FBillerDeptName
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FDate -> FDate
    java.lang.String FText -> FText
    java.lang.String FAmount -> FAmount
    java.lang.String FText2 -> FText2
    java.lang.String FCheckBox -> FCheckBox
    java.lang.String FInteger -> FInteger
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFBillerName() -> getFBillerName
    void setFBillerName(java.lang.String) -> setFBillerName
    java.lang.String getFBillerDeptName() -> getFBillerDeptName
    void setFBillerDeptName(java.lang.String) -> setFBillerDeptName
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFDate() -> getFDate
    void setFDate(java.lang.String) -> setFDate
    java.lang.String getFText() -> getFText
    void setFText(java.lang.String) -> setFText
    java.lang.String getFAmount() -> getFAmount
    void setFAmount(java.lang.String) -> setFAmount
    java.lang.String getFText2() -> getFText2
    void setFText2(java.lang.String) -> setFText2
    java.lang.String getFCheckBox() -> getFCheckBox
    void setFCheckBox(java.lang.String) -> setFCheckBox
    java.lang.String getFInteger() -> getFInteger
    void setFInteger(java.lang.String) -> setFInteger
    com.dahuatech.app.bean.mytask.ContributionAwardInfo getContributionAwardInfo() -> getContributionAwardInfo
com.dahuatech.app.bean.mytask.ContributionAwardInfo$singletonHolder -> ga:
    com.dahuatech.app.bean.mytask.ContributionAwardInfo instance -> a
    com.dahuatech.app.bean.mytask.ContributionAwardInfo access$0() -> a
com.dahuatech.app.bean.mytask.DaHuaAssumeCostInfo -> com.dahuatech.app.bean.mytask.DaHuaAssumeCostInfo:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FGoodsType -> FGoodsType
    java.lang.String FPiInfo -> FPiInfo
    java.lang.String FBusinessName -> FBusinessName
    java.lang.String FFreightEstimate -> FFreightEstimate
    java.lang.String FCause -> FCause
    int getFID() -> getFID
    void setFID(int) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFGoodsType() -> getFGoodsType
    void setFGoodsType(java.lang.String) -> setFGoodsType
    java.lang.String getFPiInfo() -> getFPiInfo
    void setFPiInfo(java.lang.String) -> setFPiInfo
    java.lang.String getFBusinessName() -> getFBusinessName
    void setFBusinessName(java.lang.String) -> setFBusinessName
    java.lang.String getFFreightEstimate() -> getFFreightEstimate
    void setFFreightEstimate(java.lang.String) -> setFFreightEstimate
    java.lang.String getFCause() -> getFCause
    void setFCause(java.lang.String) -> setFCause
    com.dahuatech.app.bean.mytask.DaHuaAssumeCostInfo getDaHuaAssumeCostInfo() -> getDaHuaAssumeCostInfo
com.dahuatech.app.bean.mytask.DaHuaAssumeCostInfo$singletonHolder -> gb:
    com.dahuatech.app.bean.mytask.DaHuaAssumeCostInfo instance -> a
    com.dahuatech.app.bean.mytask.DaHuaAssumeCostInfo access$0() -> a
com.dahuatech.app.bean.mytask.DevelopInquiryTBodyInfo -> com.dahuatech.app.bean.mytask.DevelopInquiryTBodyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FMasterialName -> FMasterialName
    java.lang.String FSupplier -> FSupplier
    java.lang.String FManufacturer -> FManufacturer
    java.lang.String FOffer -> FOffer
    java.lang.String FCurrency -> FCurrency
    java.lang.String FOrderQuantityFrom -> FOrderQuantityFrom
    java.lang.String FOrderQuantityTo -> FOrderQuantityTo
    java.lang.String FUnit -> FUnit
    java.lang.String FOrderForward -> FOrderForward
    java.lang.String FMini -> FMini
    java.lang.String FMiniOrder -> FMiniOrder
    java.lang.String FPayment -> FPayment
    java.lang.String getFMasterialName() -> getFMasterialName
    void setFMasterialName(java.lang.String) -> setFMasterialName
    java.lang.String getFSupplier() -> getFSupplier
    void setFSupplier(java.lang.String) -> setFSupplier
    java.lang.String getFManufacturer() -> getFManufacturer
    void setFManufacturer(java.lang.String) -> setFManufacturer
    java.lang.String getFOffer() -> getFOffer
    void setFOffer(java.lang.String) -> setFOffer
    java.lang.String getFCurrency() -> getFCurrency
    void setFCurrency(java.lang.String) -> setFCurrency
    java.lang.String getFOrderQuantityFrom() -> getFOrderQuantityFrom
    void setFOrderQuantityFrom(java.lang.String) -> setFOrderQuantityFrom
    java.lang.String getFOrderQuantityTo() -> getFOrderQuantityTo
    void setFOrderQuantityTo(java.lang.String) -> setFOrderQuantityTo
    java.lang.String getFUnit() -> getFUnit
    void setFUnit(java.lang.String) -> setFUnit
    java.lang.String getFOrderForward() -> getFOrderForward
    void setFOrderForward(java.lang.String) -> setFOrderForward
    java.lang.String getFMini() -> getFMini
    void setFMini(java.lang.String) -> setFMini
    java.lang.String getFMiniOrder() -> getFMiniOrder
    void setFMiniOrder(java.lang.String) -> setFMiniOrder
    java.lang.String getFPayment() -> getFPayment
    void setFPayment(java.lang.String) -> setFPayment
com.dahuatech.app.bean.mytask.DevelopInquiryTHeaderInfo -> com.dahuatech.app.bean.mytask.DevelopInquiryTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FDate -> FDate
    java.lang.String FApplyerDeptName -> FApplyerDeptName
    java.lang.String FEmployeeNumber -> FEmployeeNumber
    java.lang.String FMaterialType -> FMaterialType
    java.lang.String FOfferExplain -> FOfferExplain
    java.lang.String FSubEntrys -> FSubEntrys
    int getFID() -> getFID
    void setFID(int) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFDate() -> getFDate
    void setFDate(java.lang.String) -> setFDate
    java.lang.String getFApplyerDeptName() -> getFApplyerDeptName
    void setFApplyerDeptName(java.lang.String) -> setFApplyerDeptName
    java.lang.String getFEmployeeNumber() -> getFEmployeeNumber
    void setFEmployeeNumber(java.lang.String) -> setFEmployeeNumber
    java.lang.String getFMaterialType() -> getFMaterialType
    void setFMaterialType(java.lang.String) -> setFMaterialType
    java.lang.String getFOfferExplain() -> getFOfferExplain
    void setFOfferExplain(java.lang.String) -> setFOfferExplain
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
    com.dahuatech.app.bean.mytask.DevelopInquiryTHeaderInfo getDevelopInquiryTHeaderInfo() -> getDevelopInquiryTHeaderInfo
com.dahuatech.app.bean.mytask.DevelopInquiryTHeaderInfo$singletonHolder -> gc:
    com.dahuatech.app.bean.mytask.DevelopInquiryTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.DevelopInquiryTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.DevelopTestNetworkTBodyInfo -> com.dahuatech.app.bean.mytask.DevelopTestNetworkTBodyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FApplyForIp -> FApplyForIp
    java.lang.String FPurposeIp -> FPurposeIp
    java.lang.String FStartTime -> FStartTime
    java.lang.String FEndTime -> FEndTime
    java.lang.String getFApplyForIp() -> getFApplyForIp
    void setFApplyForIp(java.lang.String) -> setFApplyForIp
    java.lang.String getFPurposeIp() -> getFPurposeIp
    void setFPurposeIp(java.lang.String) -> setFPurposeIp
    java.lang.String getFStartTime() -> getFStartTime
    void setFStartTime(java.lang.String) -> setFStartTime
    java.lang.String getFEndTime() -> getFEndTime
    void setFEndTime(java.lang.String) -> setFEndTime
com.dahuatech.app.bean.mytask.DevelopTestNetworkTHeaderInfo -> com.dahuatech.app.bean.mytask.DevelopTestNetworkTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyerDeptName -> FApplyerDeptName
    java.lang.String FDate -> FDate
    java.lang.String FApplyerPermisson -> FApplyerPermisson
    java.lang.String FTelphone -> FTelphone
    java.lang.String FPermissionRequre -> FPermissionRequre
    java.lang.String FSubEntrys -> FSubEntrys
    int getFID() -> getFID
    void setFID(int) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyerDeptName() -> getFApplyerDeptName
    void setFApplyerDeptName(java.lang.String) -> setFApplyerDeptName
    java.lang.String getFDate() -> getFDate
    void setFDate(java.lang.String) -> setFDate
    java.lang.String getFApplyerPermisson() -> getFApplyerPermisson
    void setFApplyerPermisson(java.lang.String) -> setFApplyerPermisson
    java.lang.String getFTelphone() -> getFTelphone
    void setFTelphone(java.lang.String) -> setFTelphone
    java.lang.String getFPermissionRequre() -> getFPermissionRequre
    void setFPermissionRequre(java.lang.String) -> setFPermissionRequre
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
    com.dahuatech.app.bean.mytask.DevelopTestNetworkTHeaderInfo getDevelopTestNetworkTHeaderInfo() -> getDevelopTestNetworkTHeaderInfo
com.dahuatech.app.bean.mytask.DevelopTestNetworkTHeaderInfo$singletonHolder -> gd:
    com.dahuatech.app.bean.mytask.DevelopTestNetworkTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.DevelopTestNetworkTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.DevelopTravelTBodyOneInfo -> com.dahuatech.app.bean.mytask.DevelopTravelTBodyOneInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FSchedule -> FSchedule
    java.lang.String FStartTime -> FStartTime
    java.lang.String FEndTime -> FEndTime
    java.lang.String FNote -> FNote
    java.lang.String getFSchedule() -> getFSchedule
    void setFSchedule(java.lang.String) -> setFSchedule
    java.lang.String getFStartTime() -> getFStartTime
    void setFStartTime(java.lang.String) -> setFStartTime
    java.lang.String getFEndTime() -> getFEndTime
    void setFEndTime(java.lang.String) -> setFEndTime
    java.lang.String getFNote() -> getFNote
    void setFNote(java.lang.String) -> setFNote
com.dahuatech.app.bean.mytask.DevelopTravelTBodyTwoInfo -> com.dahuatech.app.bean.mytask.DevelopTravelTBodyTwoInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FTravelName -> FTravelName
    java.lang.String FTravelDept -> FTravelDept
    java.lang.String FDeptManager -> FDeptManager
    java.lang.String FStartTime -> FStartTime
    java.lang.String FEndTime -> FEndTime
    java.lang.String getFTravelName() -> getFTravelName
    void setFTravelName(java.lang.String) -> setFTravelName
    java.lang.String getFTravelDept() -> getFTravelDept
    void setFTravelDept(java.lang.String) -> setFTravelDept
    java.lang.String getFDeptManager() -> getFDeptManager
    void setFDeptManager(java.lang.String) -> setFDeptManager
    java.lang.String getFStartTime() -> getFStartTime
    void setFStartTime(java.lang.String) -> setFStartTime
    java.lang.String getFEndTime() -> getFEndTime
    void setFEndTime(java.lang.String) -> setFEndTime
com.dahuatech.app.bean.mytask.DevelopTravelTHeaderInfo -> com.dahuatech.app.bean.mytask.DevelopTravelTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FAssumeCost -> FAssumeCost
    java.lang.String FAssumeDept -> FAssumeDept
    java.lang.String FTravelAim -> FTravelAim
    java.lang.String FTravelAddress -> FTravelAddress
    java.lang.String FTravelStartTime -> FTravelStartTime
    java.lang.String FTravelEndTime -> FTravelEndTime
    java.lang.String FProjectName -> FProjectName
    java.lang.String FProjectCode -> FProjectCode
    java.lang.String FTravelReason -> FTravelReason
    java.lang.String FTravelWay -> FTravelWay
    java.lang.String FPublicNoteBook -> FPublicNoteBook
    java.lang.String FSubEntrysOne -> FSubEntrysOne
    java.lang.String FSubEntrysTwo -> FSubEntrysTwo
    int getFID() -> getFID
    void setFID(int) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFAssumeCost() -> getFAssumeCost
    void setFAssumeCost(java.lang.String) -> setFAssumeCost
    java.lang.String getFAssumeDept() -> getFAssumeDept
    void setFAssumeDept(java.lang.String) -> setFAssumeDept
    java.lang.String getFTravelAim() -> getFTravelAim
    void setFTravelAim(java.lang.String) -> setFTravelAim
    java.lang.String getFTravelAddress() -> getFTravelAddress
    void setFTravelAddress(java.lang.String) -> setFTravelAddress
    java.lang.String getFTravelStartTime() -> getFTravelStartTime
    void setFTravelStartTime(java.lang.String) -> setFTravelStartTime
    java.lang.String getFTravelEndTime() -> getFTravelEndTime
    void setFTravelEndTime(java.lang.String) -> setFTravelEndTime
    java.lang.String getFProjectName() -> getFProjectName
    void setFProjectName(java.lang.String) -> setFProjectName
    java.lang.String getFProjectCode() -> getFProjectCode
    void setFProjectCode(java.lang.String) -> setFProjectCode
    java.lang.String getFTravelReason() -> getFTravelReason
    void setFTravelReason(java.lang.String) -> setFTravelReason
    java.lang.String getFTravelWay() -> getFTravelWay
    void setFTravelWay(java.lang.String) -> setFTravelWay
    java.lang.String getFPublicNoteBook() -> getFPublicNoteBook
    void setFPublicNoteBook(java.lang.String) -> setFPublicNoteBook
    java.lang.String getFSubEntrysOne() -> getFSubEntrysOne
    void setFSubEntrysOne(java.lang.String) -> setFSubEntrysOne
    java.lang.String getFSubEntrysTwo() -> getFSubEntrysTwo
    void setFSubEntrysTwo(java.lang.String) -> setFSubEntrysTwo
    com.dahuatech.app.bean.mytask.DevelopTravelTHeaderInfo getDevelopTravelTHeaderInfo() -> getDevelopTravelTHeaderInfo
com.dahuatech.app.bean.mytask.DevelopTravelTHeaderInfo$singletonHolder -> ge:
    com.dahuatech.app.bean.mytask.DevelopTravelTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.DevelopTravelTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.DocumentApproveTBodyInfo -> com.dahuatech.app.bean.mytask.DocumentApproveTBodyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FDocumentCode -> FDocumentCode
    java.lang.String FDocumentName -> FDocumentName
    java.lang.String FDocumentVersion -> FDocumentVersion
    java.lang.String FDocumentBelong -> FDocumentBelong
    java.lang.String getFDocumentCode() -> getFDocumentCode
    void setFDocumentCode(java.lang.String) -> setFDocumentCode
    java.lang.String getFDocumentName() -> getFDocumentName
    void setFDocumentName(java.lang.String) -> setFDocumentName
    java.lang.String getFDocumentVersion() -> getFDocumentVersion
    void setFDocumentVersion(java.lang.String) -> setFDocumentVersion
    java.lang.String getFDocumentBelong() -> getFDocumentBelong
    void setFDocumentBelong(java.lang.String) -> setFDocumentBelong
com.dahuatech.app.bean.mytask.DocumentApproveTHeaderInfo -> com.dahuatech.app.bean.mytask.DocumentApproveTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FApplyTel -> FApplyTel
    java.lang.String FPendingApp -> FPendingApp
    java.lang.String FDocumentType -> FDocumentType
    java.lang.String FDocumentStatus -> FDocumentStatus
    java.lang.String FReason -> FReason
    java.lang.String FDocumentPost -> FDocumentPost
    java.lang.String FSubEntrys -> FSubEntrys
    int getFID() -> getFID
    void setFID(int) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFApplyTel() -> getFApplyTel
    void setFApplyTel(java.lang.String) -> setFApplyTel
    java.lang.String getFPendingApp() -> getFPendingApp
    void setFPendingApp(java.lang.String) -> setFPendingApp
    java.lang.String getFDocumentType() -> getFDocumentType
    void setFDocumentType(java.lang.String) -> setFDocumentType
    java.lang.String getFDocumentStatus() -> getFDocumentStatus
    void setFDocumentStatus(java.lang.String) -> setFDocumentStatus
    java.lang.String getFReason() -> getFReason
    void setFReason(java.lang.String) -> setFReason
    java.lang.String getFDocumentPost() -> getFDocumentPost
    void setFDocumentPost(java.lang.String) -> setFDocumentPost
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
    com.dahuatech.app.bean.mytask.DocumentApproveTHeaderInfo getDocumentApproveTHeaderInfo() -> getDocumentApproveTHeaderInfo
com.dahuatech.app.bean.mytask.DocumentApproveTHeaderInfo$singletonHolder -> gf:
    com.dahuatech.app.bean.mytask.DocumentApproveTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.DocumentApproveTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.DoorPermissionTBodyInfo -> com.dahuatech.app.bean.mytask.DoorPermissionTBodyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FPosition -> FPosition
    java.lang.String FPermission -> FPermission
    java.lang.String FNote -> FNote
    java.lang.String getFPosition() -> getFPosition
    void setFPosition(java.lang.String) -> setFPosition
    java.lang.String getFPermission() -> getFPermission
    void setFPermission(java.lang.String) -> setFPermission
    java.lang.String getFNote() -> getFNote
    void setFNote(java.lang.String) -> setFNote
com.dahuatech.app.bean.mytask.DoorPermissionTHeaderInfo -> com.dahuatech.app.bean.mytask.DoorPermissionTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FApplyDept -> FApplyDept
    java.lang.String FApplyType -> FApplyType
    java.lang.String FTel -> FTel
    java.lang.String FIsOther -> FIsOther
    java.lang.String FRegion -> FRegion
    java.lang.String FSubEntrys -> FSubEntrys
    int getFID() -> getFID
    void setFID(int) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFApplyDept() -> getFApplyDept
    void setFApplyDept(java.lang.String) -> setFApplyDept
    java.lang.String getFApplyType() -> getFApplyType
    void setFApplyType(java.lang.String) -> setFApplyType
    java.lang.String getFTel() -> getFTel
    void setFTel(java.lang.String) -> setFTel
    java.lang.String getFIsOther() -> getFIsOther
    void setFIsOther(java.lang.String) -> setFIsOther
    java.lang.String getFRegion() -> getFRegion
    void setFRegion(java.lang.String) -> setFRegion
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
    com.dahuatech.app.bean.mytask.DoorPermissionTHeaderInfo getDoorPermissionTHeaderInfo() -> getDoorPermissionTHeaderInfo
com.dahuatech.app.bean.mytask.DoorPermissionTHeaderInfo$singletonHolder -> gg:
    com.dahuatech.app.bean.mytask.DoorPermissionTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.DoorPermissionTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.EmailOpenTBodyInfo -> com.dahuatech.app.bean.mytask.EmailOpenTBodyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FEmailAddress -> FEmailAddress
    java.lang.String FStartTime -> FStartTime
    java.lang.String FApplyDeadLine -> FApplyDeadLine
    java.lang.String getFEmailAddress() -> getFEmailAddress
    void setFEmailAddress(java.lang.String) -> setFEmailAddress
    java.lang.String getFStartTime() -> getFStartTime
    void setFStartTime(java.lang.String) -> setFStartTime
    java.lang.String getFApplyDeadLine() -> getFApplyDeadLine
    void setFApplyDeadLine(java.lang.String) -> setFApplyDeadLine
com.dahuatech.app.bean.mytask.EmailOpenTHeaderInfo -> com.dahuatech.app.bean.mytask.EmailOpenTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FEmailType -> FEmailType
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDept -> FApplyDept
    java.lang.String FReason -> FReason
    java.lang.String FApplyPermission -> FApplyPermission
    java.lang.String FInfoSafe -> FInfoSafe
    java.lang.String FSubEntrys -> FSubEntrys
    int getFID() -> getFID
    void setFID(int) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFEmailType() -> getFEmailType
    void setFEmailType(java.lang.String) -> setFEmailType
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDept() -> getFApplyDept
    void setFApplyDept(java.lang.String) -> setFApplyDept
    java.lang.String getFReason() -> getFReason
    void setFReason(java.lang.String) -> setFReason
    java.lang.String getFApplyPermission() -> getFApplyPermission
    void setFApplyPermission(java.lang.String) -> setFApplyPermission
    java.lang.String getFInfoSafe() -> getFInfoSafe
    void setFInfoSafe(java.lang.String) -> setFInfoSafe
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
    com.dahuatech.app.bean.mytask.EmailOpenTHeaderInfo getEmailOpenTHeaderInfo() -> getEmailOpenTHeaderInfo
com.dahuatech.app.bean.mytask.EmailOpenTHeaderInfo$singletonHolder -> gh:
    com.dahuatech.app.bean.mytask.EmailOpenTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.EmailOpenTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.EngineeringInfo -> com.dahuatech.app.bean.mytask.EngineeringInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FEngineereName -> FEngineereName
    java.lang.String FAddress -> FAddress
    java.lang.String FAmount -> FAmount
    java.lang.String FContact -> FContact
    java.lang.String FTel -> FTel
    java.lang.String FComboBox -> FComboBox
    java.lang.String FText -> FText
    java.lang.String FComboBox1 -> FComboBox1
    java.lang.String FBase1 -> FBase1
    java.lang.String FNote -> FNote
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFEngineereName() -> getFEngineereName
    void setFEngineereName(java.lang.String) -> setFEngineereName
    java.lang.String getFAddress() -> getFAddress
    void setFAddress(java.lang.String) -> setFAddress
    java.lang.String getFAmount() -> getFAmount
    void setFAmount(java.lang.String) -> setFAmount
    java.lang.String getFContact() -> getFContact
    java.lang.String getFTel() -> getFTel
    void setFTel(java.lang.String) -> setFTel
    void setFContact(java.lang.String) -> setFContact
    java.lang.String getFComboBox() -> getFComboBox
    void setFComboBox(java.lang.String) -> setFComboBox
    java.lang.String getFText() -> getFText
    void setFText(java.lang.String) -> setFText
    java.lang.String getFComboBox1() -> getFComboBox1
    void setFComboBox1(java.lang.String) -> setFComboBox1
    java.lang.String getFBase1() -> getFBase1
    void setFBase1(java.lang.String) -> setFBase1
    java.lang.String getFNote() -> getFNote
    void setFNote(java.lang.String) -> setFNote
    com.dahuatech.app.bean.mytask.EngineeringInfo getEngineeringInfo() -> getEngineeringInfo
com.dahuatech.app.bean.mytask.EngineeringInfo$singletonHolder -> gi:
    com.dahuatech.app.bean.mytask.EngineeringInfo instance -> a
    com.dahuatech.app.bean.mytask.EngineeringInfo access$0() -> a
com.dahuatech.app.bean.mytask.ExAttendanceTBodyInfo -> com.dahuatech.app.bean.mytask.ExAttendanceTBodyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FDate -> FDate
    java.lang.String FStartTime -> FStartTime
    java.lang.String FOldStartResult -> FOldStartResult
    java.lang.String FChangeStartTime -> FChangeStartTime
    java.lang.String FStartResult -> FStartResult
    java.lang.String FEndTime -> FEndTime
    java.lang.String FOldEndResult -> FOldEndResult
    java.lang.String FChangeEndTime -> FChangeEndTime
    java.lang.String FEndResult -> FEndResult
    java.lang.String FReason -> FReason
    java.lang.String getFDate() -> getFDate
    void setFDate(java.lang.String) -> setFDate
    java.lang.String getFStartTime() -> getFStartTime
    void setFStartTime(java.lang.String) -> setFStartTime
    java.lang.String getFOldStartResult() -> getFOldStartResult
    void setFOldStartResult(java.lang.String) -> setFOldStartResult
    java.lang.String getFChangeStartTime() -> getFChangeStartTime
    void setFChangeStartTime(java.lang.String) -> setFChangeStartTime
    java.lang.String getFStartResult() -> getFStartResult
    void setFStartResult(java.lang.String) -> setFStartResult
    java.lang.String getFEndTime() -> getFEndTime
    void setFEndTime(java.lang.String) -> setFEndTime
    java.lang.String getFOldEndResult() -> getFOldEndResult
    void setFOldEndResult(java.lang.String) -> setFOldEndResult
    java.lang.String getFChangeEndTime() -> getFChangeEndTime
    void setFChangeEndTime(java.lang.String) -> setFChangeEndTime
    java.lang.String getFEndResult() -> getFEndResult
    void setFEndResult(java.lang.String) -> setFEndResult
    java.lang.String getFReason() -> getFReason
    void setFReason(java.lang.String) -> setFReason
com.dahuatech.app.bean.mytask.ExAttendanceTHeaderInfo -> com.dahuatech.app.bean.mytask.ExAttendanceTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FApplyDept -> FApplyDept
    java.lang.String FSubEntrys -> FSubEntrys
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFApplyDept() -> getFApplyDept
    void setFApplyDept(java.lang.String) -> setFApplyDept
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
    com.dahuatech.app.bean.mytask.ExAttendanceTHeaderInfo getExAttendanceTHeaderInfo() -> getExAttendanceTHeaderInfo
com.dahuatech.app.bean.mytask.ExAttendanceTHeaderInfo$singletonHolder -> gj:
    com.dahuatech.app.bean.mytask.ExAttendanceTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.ExAttendanceTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.ExpenseCostTBodyInfo -> com.dahuatech.app.bean.mytask.ExpenseCostTBodyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FID -> FID
    java.lang.String FConSmType -> FConSmType
    java.lang.String FConSmDate -> FConSmDate
    java.lang.String FAppAmt -> FAppAmt
    java.lang.String FLendType -> FLendType
    java.lang.String FLDAmt -> FLDAmt
    java.lang.String FProjectName -> FProjectName
    java.lang.String FUse -> FUse
    java.lang.String getFID() -> getFID
    void setFID(java.lang.String) -> setFID
    java.lang.String getFConSmType() -> getFConSmType
    void setFConSmType(java.lang.String) -> setFConSmType
    java.lang.String getFConSmDate() -> getFConSmDate
    void setFConSmDate(java.lang.String) -> setFConSmDate
    java.lang.String getFAppAmt() -> getFAppAmt
    void setFAppAmt(java.lang.String) -> setFAppAmt
    java.lang.String getFLendType() -> getFLendType
    void setFLendType(java.lang.String) -> setFLendType
    java.lang.String getFLDAmt() -> getFLDAmt
    void setFLDAmt(java.lang.String) -> setFLDAmt
    java.lang.String getFProjectName() -> getFProjectName
    void setFProjectName(java.lang.String) -> setFProjectName
    java.lang.String getFUse() -> getFUse
    void setFUse(java.lang.String) -> setFUse
com.dahuatech.app.bean.mytask.ExpenseCostTHeaderInfo -> com.dahuatech.app.bean.mytask.ExpenseCostTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FID -> FID
    java.lang.String FGeneralType -> FGeneralType
    java.lang.String FGeneralCode -> FGeneralCode
    java.lang.String FGeneralName -> FGeneralName
    java.lang.String FBillNo -> FBillNo
    java.lang.String FConSmName -> FConSmName
    java.lang.String FCommitDate -> FCommitDate
    java.lang.String FAppAmt -> FAppAmt
    java.lang.String FLDAmt -> FLDAmt
    java.lang.String FCostType -> FCostType
    java.lang.String getFID() -> getFID
    void setFID(java.lang.String) -> setFID
    java.lang.String getFGeneralType() -> getFGeneralType
    void setFGeneralType(java.lang.String) -> setFGeneralType
    java.lang.String getFGeneralCode() -> getFGeneralCode
    void setFGeneralCode(java.lang.String) -> setFGeneralCode
    java.lang.String getFGeneralName() -> getFGeneralName
    void setFGeneralName(java.lang.String) -> setFGeneralName
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFConSmName() -> getFConSmName
    void setFConSmName(java.lang.String) -> setFConSmName
    java.lang.String getFCommitDate() -> getFCommitDate
    void setFCommitDate(java.lang.String) -> setFCommitDate
    java.lang.String getFAppAmt() -> getFAppAmt
    void setFAppAmt(java.lang.String) -> setFAppAmt
    java.lang.String getFLDAmt() -> getFLDAmt
    void setFLDAmt(java.lang.String) -> setFLDAmt
    java.lang.String getFCostType() -> getFCostType
    void setFCostType(java.lang.String) -> setFCostType
    com.dahuatech.app.bean.mytask.ExpenseCostTHeaderInfo getExpenseCostTHeaderInfo() -> getExpenseCostTHeaderInfo
com.dahuatech.app.bean.mytask.ExpenseCostTHeaderInfo$singletonHolder -> gk:
    com.dahuatech.app.bean.mytask.ExpenseCostTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.ExpenseCostTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.ExpenseCostTypeInfo -> com.dahuatech.app.bean.mytask.ExpenseCostTypeInfo:
    long serialVersionUID -> serialVersionUID
    int FCostId -> FCostId
    int FCostCode -> FCostCode
    java.lang.String FCostValue -> FCostValue
    int getFCostId() -> getFCostId
    void setFCostId(int) -> setFCostId
    int getFCostCode() -> getFCostCode
    void setFCostCode(int) -> setFCostCode
    java.lang.String getFCostValue() -> getFCostValue
    void setFCostValue(java.lang.String) -> setFCostValue
    com.dahuatech.app.bean.mytask.ExpenseCostTypeInfo getExpenseCostTypeInfo() -> getExpenseCostTypeInfo
com.dahuatech.app.bean.mytask.ExpenseCostTypeInfo$singletonHolder -> gl:
    com.dahuatech.app.bean.mytask.ExpenseCostTypeInfo instance -> a
    com.dahuatech.app.bean.mytask.ExpenseCostTypeInfo access$0() -> a
com.dahuatech.app.bean.mytask.ExpenseMarketBidTHeaderInfo -> com.dahuatech.app.bean.mytask.ExpenseMarketBidTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FConSmName -> FConSmName
    java.lang.String FCommitDate -> FCommitDate
    java.lang.String FAmountAll -> FAmountAll
    java.lang.String FRecAccName -> FRecAccName
    java.lang.String FPubPayNo -> FPubPayNo
    java.lang.String FProjectName -> FProjectName
    java.lang.String FConSmTypeName -> FConSmTypeName
    java.lang.String FCaseType -> FCaseType
    java.lang.String FSetOffType -> FSetOffType
    java.lang.String getFID() -> getFID
    void setFID(java.lang.String) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFConSmName() -> getFConSmName
    void setFConSmName(java.lang.String) -> setFConSmName
    java.lang.String getFCommitDate() -> getFCommitDate
    void setFCommitDate(java.lang.String) -> setFCommitDate
    java.lang.String getFAmountAll() -> getFAmountAll
    void setFAmountAll(java.lang.String) -> setFAmountAll
    java.lang.String getFRecAccName() -> getFRecAccName
    void setFRecAccName(java.lang.String) -> setFRecAccName
    java.lang.String getFPubPayNo() -> getFPubPayNo
    void setFPubPayNo(java.lang.String) -> setFPubPayNo
    java.lang.String getFProjectName() -> getFProjectName
    void setFProjectName(java.lang.String) -> setFProjectName
    java.lang.String getFConSmTypeName() -> getFConSmTypeName
    void setFConSmTypeName(java.lang.String) -> setFConSmTypeName
    java.lang.String getFCaseType() -> getFCaseType
    void setFCaseType(java.lang.String) -> setFCaseType
    java.lang.String getFSetOffType() -> getFSetOffType
    void setFSetOffType(java.lang.String) -> setFSetOffType
    com.dahuatech.app.bean.mytask.ExpenseMarketBidTHeaderInfo getExpenseMarketBidTHeaderInfo() -> getExpenseMarketBidTHeaderInfo
com.dahuatech.app.bean.mytask.ExpenseMarketBidTHeaderInfo$singletonHolder -> gm:
    com.dahuatech.app.bean.mytask.ExpenseMarketBidTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.ExpenseMarketBidTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.ExpenseMarketPayTHeaderInfo -> com.dahuatech.app.bean.mytask.ExpenseMarketPayTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FConSmName -> FConSmName
    java.lang.String FCommitDate -> FCommitDate
    java.lang.String FAmountAll -> FAmountAll
    java.lang.String FRecAccName -> FRecAccName
    java.lang.String FPubPayNo -> FPubPayNo
    java.lang.String FProjectName -> FProjectName
    java.lang.String FConSmTypeName -> FConSmTypeName
    java.lang.String getFID() -> getFID
    void setFID(java.lang.String) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFConSmName() -> getFConSmName
    void setFConSmName(java.lang.String) -> setFConSmName
    java.lang.String getFCommitDate() -> getFCommitDate
    void setFCommitDate(java.lang.String) -> setFCommitDate
    java.lang.String getFAmountAll() -> getFAmountAll
    void setFAmountAll(java.lang.String) -> setFAmountAll
    java.lang.String getFRecAccName() -> getFRecAccName
    void setFRecAccName(java.lang.String) -> setFRecAccName
    java.lang.String getFPubPayNo() -> getFPubPayNo
    void setFPubPayNo(java.lang.String) -> setFPubPayNo
    java.lang.String getFProjectName() -> getFProjectName
    void setFProjectName(java.lang.String) -> setFProjectName
    java.lang.String getFConSmTypeName() -> getFConSmTypeName
    void setFConSmTypeName(java.lang.String) -> setFConSmTypeName
    com.dahuatech.app.bean.mytask.ExpenseMarketPayTHeaderInfo getExpenseMarketPayTHeaderInfo() -> getExpenseMarketPayTHeaderInfo
com.dahuatech.app.bean.mytask.ExpenseMarketPayTHeaderInfo$singletonHolder -> gn:
    com.dahuatech.app.bean.mytask.ExpenseMarketPayTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.ExpenseMarketPayTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.ExpensePrivateTBodyInfo -> com.dahuatech.app.bean.mytask.ExpensePrivateTBodyInfo:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    java.lang.String FConSmDate -> FConSmDate
    java.lang.String FConSmType -> FConSmType
    java.lang.String FAmount -> FAmount
    java.lang.String FProjectName -> FProjectName
    java.lang.String FClientName -> FClientName
    java.lang.String FUse -> FUse
    int getFID() -> getFID
    void setFID(int) -> setFID
    java.lang.String getFConSmDate() -> getFConSmDate
    void setFConSmDate(java.lang.String) -> setFConSmDate
    java.lang.String getFConSmType() -> getFConSmType
    void setFConSmType(java.lang.String) -> setFConSmType
    java.lang.String getFAmount() -> getFAmount
    void setFAmount(java.lang.String) -> setFAmount
    java.lang.String getFProjectName() -> getFProjectName
    void setFProjectName(java.lang.String) -> setFProjectName
    java.lang.String getFClientName() -> getFClientName
    void setFClientName(java.lang.String) -> setFClientName
    java.lang.String getFUse() -> getFUse
    void setFUse(java.lang.String) -> setFUse
com.dahuatech.app.bean.mytask.ExpensePrivateTBodyParam -> com.dahuatech.app.bean.mytask.ExpensePrivateTBodyParam:
    long serialVersionUID -> serialVersionUID
    java.lang.String FSystemType -> FSystemType
    java.lang.String FBillID -> FBillID
    java.lang.String FCostCode -> FCostCode
    java.lang.String getFSystemType() -> getFSystemType
    void setFSystemType(java.lang.String) -> setFSystemType
    java.lang.String getFBillID() -> getFBillID
    void setFBillID(java.lang.String) -> setFBillID
    java.lang.String getFCostCode() -> getFCostCode
    void setFCostCode(java.lang.String) -> setFCostCode
    com.dahuatech.app.bean.mytask.ExpensePrivateTBodyParam getExpensePrivateTBodyParam() -> getExpensePrivateTBodyParam
    java.lang.String ConvertToJson(com.dahuatech.app.bean.mytask.ExpensePrivateTBodyParam) -> ConvertToJson
com.dahuatech.app.bean.mytask.ExpensePrivateTBodyParam$singletonHolder -> go:
    com.dahuatech.app.bean.mytask.ExpensePrivateTBodyParam instance -> a
    com.dahuatech.app.bean.mytask.ExpensePrivateTBodyParam access$0() -> a
com.dahuatech.app.bean.mytask.ExpensePrivateTHeaderInfo -> com.dahuatech.app.bean.mytask.ExpensePrivateTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FAmountAll -> FAmountAll
    java.lang.String FConSmAmountAll -> FConSmAmountAll
    java.lang.String FConSmName -> FConSmName
    java.lang.String FCommitDate -> FCommitDate
    java.lang.String FCostType -> FCostType
    java.lang.String getFID() -> getFID
    void setFID(java.lang.String) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFAmountAll() -> getFAmountAll
    void setFAmountAll(java.lang.String) -> setFAmountAll
    java.lang.String getFConSmAmountAll() -> getFConSmAmountAll
    void setFConSmAmountAll(java.lang.String) -> setFConSmAmountAll
    java.lang.String getFConSmName() -> getFConSmName
    void setFConSmName(java.lang.String) -> setFConSmName
    java.lang.String getFCommitDate() -> getFCommitDate
    void setFCommitDate(java.lang.String) -> setFCommitDate
    java.lang.String getFCostType() -> getFCostType
    void setFCostType(java.lang.String) -> setFCostType
    com.dahuatech.app.bean.mytask.ExpensePrivateTHeaderInfo getExpensePrivateTHeaderInfo() -> getExpensePrivateTHeaderInfo
com.dahuatech.app.bean.mytask.ExpensePrivateTHeaderInfo$singletonHolder -> gp:
    com.dahuatech.app.bean.mytask.ExpensePrivateTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.ExpensePrivateTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.ExpensePublicTHeaderInfo -> com.dahuatech.app.bean.mytask.ExpensePublicTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FID -> FID
    java.lang.String FGeneralType -> FGeneralType
    java.lang.String FBillNo -> FBillNo
    java.lang.String FConSmName -> FConSmName
    java.lang.String FCommitDate -> FCommitDate
    java.lang.String FAmountAll -> FAmountAll
    java.lang.String FRecAccName -> FRecAccName
    java.lang.String FContent -> FContent
    java.lang.String getFID() -> getFID
    void setFID(java.lang.String) -> setFID
    java.lang.String getFGeneralType() -> getFGeneralType
    void setFGeneralType(java.lang.String) -> setFGeneralType
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFConSmName() -> getFConSmName
    void setFConSmName(java.lang.String) -> setFConSmName
    java.lang.String getFCommitDate() -> getFCommitDate
    void setFCommitDate(java.lang.String) -> setFCommitDate
    java.lang.String getFAmountAll() -> getFAmountAll
    void setFAmountAll(java.lang.String) -> setFAmountAll
    java.lang.String getFRecAccName() -> getFRecAccName
    void setFRecAccName(java.lang.String) -> setFRecAccName
    java.lang.String getFContent() -> getFContent
    void setFContent(java.lang.String) -> setFContent
    com.dahuatech.app.bean.mytask.ExpensePublicTHeaderInfo getExpensePublicTHeaderInfo() -> getExpensePublicTHeaderInfo
com.dahuatech.app.bean.mytask.ExpensePublicTHeaderInfo$singletonHolder -> gq:
    com.dahuatech.app.bean.mytask.ExpensePublicTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.ExpensePublicTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.ExpenseSpecialTBodyInfo -> com.dahuatech.app.bean.mytask.ExpenseSpecialTBodyInfo:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    java.lang.String FConSmDate -> FConSmDate
    java.lang.String FConSmType -> FConSmType
    java.lang.String FAmount -> FAmount
    java.lang.String FProjectName -> FProjectName
    java.lang.String FClientName -> FClientName
    java.lang.String FUse -> FUse
    int getFID() -> getFID
    void setFID(int) -> setFID
    java.lang.String getFConSmDate() -> getFConSmDate
    void setFConSmDate(java.lang.String) -> setFConSmDate
    java.lang.String getFConSmType() -> getFConSmType
    void setFConSmType(java.lang.String) -> setFConSmType
    java.lang.String getFAmount() -> getFAmount
    void setFAmount(java.lang.String) -> setFAmount
    java.lang.String getFProjectName() -> getFProjectName
    void setFProjectName(java.lang.String) -> setFProjectName
    java.lang.String getFClientName() -> getFClientName
    void setFClientName(java.lang.String) -> setFClientName
    java.lang.String getFUse() -> getFUse
    void setFUse(java.lang.String) -> setFUse
com.dahuatech.app.bean.mytask.ExpenseSpecialTHeaderInfo -> com.dahuatech.app.bean.mytask.ExpenseSpecialTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FID -> FID
    java.lang.String FGeneralType -> FGeneralType
    java.lang.String FGeneralCode -> FGeneralCode
    java.lang.String FGeneralName -> FGeneralName
    java.lang.String FBillNo -> FBillNo
    java.lang.String FConSmName -> FConSmName
    java.lang.String FCommitDate -> FCommitDate
    java.lang.String FAmountAll -> FAmountAll
    java.lang.String FCostType -> FCostType
    java.lang.String getFID() -> getFID
    void setFID(java.lang.String) -> setFID
    java.lang.String getFGeneralType() -> getFGeneralType
    void setFGeneralType(java.lang.String) -> setFGeneralType
    java.lang.String getFGeneralCode() -> getFGeneralCode
    void setFGeneralCode(java.lang.String) -> setFGeneralCode
    java.lang.String getFGeneralName() -> getFGeneralName
    void setFGeneralName(java.lang.String) -> setFGeneralName
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFConSmName() -> getFConSmName
    void setFConSmName(java.lang.String) -> setFConSmName
    java.lang.String getFCommitDate() -> getFCommitDate
    void setFCommitDate(java.lang.String) -> setFCommitDate
    java.lang.String getFAmountAll() -> getFAmountAll
    void setFAmountAll(java.lang.String) -> setFAmountAll
    java.lang.String getFCostType() -> getFCostType
    void setFCostType(java.lang.String) -> setFCostType
    com.dahuatech.app.bean.mytask.ExpenseSpecialTHeaderInfo getExpenseSpecialTHeaderInfo() -> getExpenseSpecialTHeaderInfo
com.dahuatech.app.bean.mytask.ExpenseSpecialTHeaderInfo$singletonHolder -> gr:
    com.dahuatech.app.bean.mytask.ExpenseSpecialTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.ExpenseSpecialTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.ExpenseSpecialThingHeaderInfo -> com.dahuatech.app.bean.mytask.ExpenseSpecialThingHeaderInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FID -> FID
    java.lang.String FGeneralType -> FGeneralType
    java.lang.String FGeneralCode -> FGeneralCode
    java.lang.String FGeneralName -> FGeneralName
    java.lang.String FBillNo -> FBillNo
    java.lang.String FConSmName -> FConSmName
    java.lang.String FCommitDate -> FCommitDate
    java.lang.String FAmountAll -> FAmountAll
    java.lang.String FCostType -> FCostType
    java.lang.String getFID() -> getFID
    void setFID(java.lang.String) -> setFID
    java.lang.String getFGeneralType() -> getFGeneralType
    void setFGeneralType(java.lang.String) -> setFGeneralType
    java.lang.String getFGeneralCode() -> getFGeneralCode
    void setFGeneralCode(java.lang.String) -> setFGeneralCode
    java.lang.String getFGeneralName() -> getFGeneralName
    void setFGeneralName(java.lang.String) -> setFGeneralName
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFConSmName() -> getFConSmName
    void setFConSmName(java.lang.String) -> setFConSmName
    java.lang.String getFCommitDate() -> getFCommitDate
    void setFCommitDate(java.lang.String) -> setFCommitDate
    java.lang.String getFAmountAll() -> getFAmountAll
    void setFAmountAll(java.lang.String) -> setFAmountAll
    java.lang.String getFCostType() -> getFCostType
    void setFCostType(java.lang.String) -> setFCostType
    com.dahuatech.app.bean.mytask.ExpenseSpecialThingHeaderInfo getExpenseSpecialThingHeaderInfo() -> getExpenseSpecialThingHeaderInfo
com.dahuatech.app.bean.mytask.ExpenseSpecialThingHeaderInfo$singletonHolder -> gs:
    com.dahuatech.app.bean.mytask.ExpenseSpecialThingHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.ExpenseSpecialThingHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.FeDestroyTBodyInfo -> com.dahuatech.app.bean.mytask.FeDestroyTBodyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FeCode -> FeCode
    java.lang.String FeType -> FeType
    java.lang.String FeName -> FeName
    java.lang.String FCompany -> FCompany
    java.lang.String FStatus -> FStatus
    java.lang.String FKeeper -> FKeeper
    java.lang.String FKeeperDept -> FKeeperDept
    java.lang.String FKeeperArea -> FKeeperArea
    java.lang.String FDestroyTime -> FDestroyTime
    java.lang.String getFeCode() -> getFeCode
    void setFeCode(java.lang.String) -> setFeCode
    java.lang.String getFeType() -> getFeType
    void setFeType(java.lang.String) -> setFeType
    java.lang.String getFeName() -> getFeName
    void setFeName(java.lang.String) -> setFeName
    java.lang.String getFCompany() -> getFCompany
    void setFCompany(java.lang.String) -> setFCompany
    java.lang.String getFStatus() -> getFStatus
    void setFStatus(java.lang.String) -> setFStatus
    java.lang.String getFKeeper() -> getFKeeper
    void setFKeeper(java.lang.String) -> setFKeeper
    java.lang.String getFKeeperDept() -> getFKeeperDept
    void setFKeeperDept(java.lang.String) -> setFKeeperDept
    java.lang.String getFKeeperArea() -> getFKeeperArea
    void setFKeeperArea(java.lang.String) -> setFKeeperArea
    java.lang.String getFDestroyTime() -> getFDestroyTime
    void setFDestroyTime(java.lang.String) -> setFDestroyTime
com.dahuatech.app.bean.mytask.FeDestroyTHeaderInfo -> com.dahuatech.app.bean.mytask.FeDestroyTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDept -> FApplyDept
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FTel -> FTel
    java.lang.String FReason -> FReason
    java.lang.String FDestroy -> FDestroy
    java.lang.String FWitnesses -> FWitnesses
    java.lang.String FSubEntrys -> FSubEntrys
    int getFID() -> getFID
    void setFID(int) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDept() -> getFApplyDept
    void setFApplyDept(java.lang.String) -> setFApplyDept
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFTel() -> getFTel
    void setFTel(java.lang.String) -> setFTel
    java.lang.String getFReason() -> getFReason
    void setFReason(java.lang.String) -> setFReason
    java.lang.String getFDestroy() -> getFDestroy
    void setFDestroy(java.lang.String) -> setFDestroy
    java.lang.String getFWitnesses() -> getFWitnesses
    void setFWitnesses(java.lang.String) -> setFWitnesses
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
    com.dahuatech.app.bean.mytask.FeDestroyTHeaderInfo getFeDestroyTHeaderInfo() -> getFeDestroyTHeaderInfo
com.dahuatech.app.bean.mytask.FeDestroyTHeaderInfo$singletonHolder -> gt:
    com.dahuatech.app.bean.mytask.FeDestroyTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.FeDestroyTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.FeEngravingTBodyInfo -> com.dahuatech.app.bean.mytask.FeEngravingTBodyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FCompany -> FCompany
    java.lang.String FeType -> FeType
    java.lang.String FKeeper -> FKeeper
    java.lang.String FKeeperTel -> FKeeperTel
    java.lang.String FKeeperDept -> FKeeperDept
    java.lang.String FKeeperArea -> FKeeperArea
    java.lang.String FeName -> FeName
    java.lang.String FReason -> FReason
    java.lang.String FNote -> FNote
    java.lang.String getFCompany() -> getFCompany
    void setFCompany(java.lang.String) -> setFCompany
    java.lang.String getFeType() -> getFeType
    void setFeType(java.lang.String) -> setFeType
    java.lang.String getFKeeper() -> getFKeeper
    void setFKeeper(java.lang.String) -> setFKeeper
    java.lang.String getFKeeperTel() -> getFKeeperTel
    void setFKeeperTel(java.lang.String) -> setFKeeperTel
    java.lang.String getFKeeperDept() -> getFKeeperDept
    void setFKeeperDept(java.lang.String) -> setFKeeperDept
    java.lang.String getFKeeperArea() -> getFKeeperArea
    void setFKeeperArea(java.lang.String) -> setFKeeperArea
    java.lang.String getFeName() -> getFeName
    void setFeName(java.lang.String) -> setFeName
    java.lang.String getFReason() -> getFReason
    void setFReason(java.lang.String) -> setFReason
    java.lang.String getFNote() -> getFNote
    void setFNote(java.lang.String) -> setFNote
com.dahuatech.app.bean.mytask.FeEngravingTHeaderInfo -> com.dahuatech.app.bean.mytask.FeEngravingTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDept -> FApplyDept
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FTel -> FTel
    java.lang.String FAmount -> FAmount
    java.lang.String FSubEntrys -> FSubEntrys
    int getFID() -> getFID
    void setFID(int) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDept() -> getFApplyDept
    void setFApplyDept(java.lang.String) -> setFApplyDept
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFTel() -> getFTel
    void setFTel(java.lang.String) -> setFTel
    java.lang.String getFAmount() -> getFAmount
    void setFAmount(java.lang.String) -> setFAmount
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
    com.dahuatech.app.bean.mytask.FeEngravingTHeaderInfo getFeEngravingTHeaderInfo() -> getFeEngravingTHeaderInfo
com.dahuatech.app.bean.mytask.FeEngravingTHeaderInfo$singletonHolder -> gu:
    com.dahuatech.app.bean.mytask.FeEngravingTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.FeEngravingTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.FeTakeOutTHeaderInfo -> com.dahuatech.app.bean.mytask.FeTakeOutTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDept -> FApplyDept
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FTel -> FTel
    java.lang.String FeName -> FeName
    java.lang.String FeCode -> FeCode
    java.lang.String FStartTime -> FStartTime
    java.lang.String FEndTime -> FEndTime
    java.lang.String FeCarry -> FeCarry
    java.lang.String FeCarryTel -> FeCarryTel
    java.lang.String FDestination -> FDestination
    java.lang.String FProjectName -> FProjectName
    java.lang.String FSealData -> FSealData
    java.lang.String FeUseCarry -> FeUseCarry
    java.lang.String FeUseDestination -> FeUseDestination
    int getFID() -> getFID
    void setFID(int) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDept() -> getFApplyDept
    void setFApplyDept(java.lang.String) -> setFApplyDept
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFTel() -> getFTel
    void setFTel(java.lang.String) -> setFTel
    java.lang.String getFeName() -> getFeName
    void setFeName(java.lang.String) -> setFeName
    java.lang.String getFeCode() -> getFeCode
    void setFeCode(java.lang.String) -> setFeCode
    java.lang.String getFStartTime() -> getFStartTime
    void setFStartTime(java.lang.String) -> setFStartTime
    java.lang.String getFEndTime() -> getFEndTime
    void setFEndTime(java.lang.String) -> setFEndTime
    java.lang.String getFeCarry() -> getFeCarry
    void setFeCarry(java.lang.String) -> setFeCarry
    java.lang.String getFeCarryTel() -> getFeCarryTel
    void setFeCarryTel(java.lang.String) -> setFeCarryTel
    java.lang.String getFDestination() -> getFDestination
    void setFDestination(java.lang.String) -> setFDestination
    java.lang.String getFProjectName() -> getFProjectName
    void setFProjectName(java.lang.String) -> setFProjectName
    java.lang.String getFSealData() -> getFSealData
    void setFSealData(java.lang.String) -> setFSealData
    java.lang.String getFeUseCarry() -> getFeUseCarry
    void setFeUseCarry(java.lang.String) -> setFeUseCarry
    java.lang.String getFeUseDestination() -> getFeUseDestination
    void setFeUseDestination(java.lang.String) -> setFeUseDestination
    com.dahuatech.app.bean.mytask.FeTakeOutTHeaderInfo getFeTakeOutTHeaderInfo() -> getFeTakeOutTHeaderInfo
com.dahuatech.app.bean.mytask.FeTakeOutTHeaderInfo$singletonHolder -> gv:
    com.dahuatech.app.bean.mytask.FeTakeOutTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.FeTakeOutTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.FeTransferTBodyInfo -> com.dahuatech.app.bean.mytask.FeTransferTBodyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FeCode -> FeCode
    java.lang.String FeType -> FeType
    java.lang.String FeName -> FeName
    java.lang.String FCompany -> FCompany
    java.lang.String FStatus -> FStatus
    java.lang.String FKeeper -> FKeeper
    java.lang.String FKeeperDept -> FKeeperDept
    java.lang.String FKeeperArea -> FKeeperArea
    java.lang.String FReason -> FReason
    java.lang.String getFeCode() -> getFeCode
    void setFeCode(java.lang.String) -> setFeCode
    java.lang.String getFeType() -> getFeType
    void setFeType(java.lang.String) -> setFeType
    java.lang.String getFeName() -> getFeName
    void setFeName(java.lang.String) -> setFeName
    java.lang.String getFCompany() -> getFCompany
    void setFCompany(java.lang.String) -> setFCompany
    java.lang.String getFStatus() -> getFStatus
    void setFStatus(java.lang.String) -> setFStatus
    java.lang.String getFKeeper() -> getFKeeper
    void setFKeeper(java.lang.String) -> setFKeeper
    java.lang.String getFKeeperDept() -> getFKeeperDept
    void setFKeeperDept(java.lang.String) -> setFKeeperDept
    java.lang.String getFKeeperArea() -> getFKeeperArea
    void setFKeeperArea(java.lang.String) -> setFKeeperArea
    java.lang.String getFReason() -> getFReason
    void setFReason(java.lang.String) -> setFReason
com.dahuatech.app.bean.mytask.FeTransferTHeaderInfo -> com.dahuatech.app.bean.mytask.FeTransferTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDept -> FApplyDept
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FTel -> FTel
    java.lang.String FnKeeper -> FnKeeper
    java.lang.String FnKeeperTel -> FnKeeperTel
    java.lang.String FnKeeperDept -> FnKeeperDept
    java.lang.String FnKeeperArea -> FnKeeperArea
    java.lang.String FAmount -> FAmount
    java.lang.String FSubEntrys -> FSubEntrys
    int getFID() -> getFID
    void setFID(int) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDept() -> getFApplyDept
    void setFApplyDept(java.lang.String) -> setFApplyDept
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFTel() -> getFTel
    void setFTel(java.lang.String) -> setFTel
    java.lang.String getFnKeeper() -> getFnKeeper
    void setFnKeeper(java.lang.String) -> setFnKeeper
    java.lang.String getFnKeeperTel() -> getFnKeeperTel
    void setFnKeeperTel(java.lang.String) -> setFnKeeperTel
    java.lang.String getFnKeeperDept() -> getFnKeeperDept
    void setFnKeeperDept(java.lang.String) -> setFnKeeperDept
    java.lang.String getFnKeeperArea() -> getFnKeeperArea
    void setFnKeeperArea(java.lang.String) -> setFnKeeperArea
    java.lang.String getFAmount() -> getFAmount
    void setFAmount(java.lang.String) -> setFAmount
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
    com.dahuatech.app.bean.mytask.FeTransferTHeaderInfo getFeTransferTHeaderInfo() -> getFeTransferTHeaderInfo
com.dahuatech.app.bean.mytask.FeTransferTHeaderInfo$singletonHolder -> gw:
    com.dahuatech.app.bean.mytask.FeTransferTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.FeTransferTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.FeUpdateTBodyInfo -> com.dahuatech.app.bean.mytask.FeUpdateTBodyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FeCode -> FeCode
    java.lang.String FeType -> FeType
    java.lang.String FeName -> FeName
    java.lang.String FCompany -> FCompany
    java.lang.String FStatus -> FStatus
    java.lang.String FKeeper -> FKeeper
    java.lang.String FKeeperDept -> FKeeperDept
    java.lang.String FKeeperArea -> FKeeperArea
    java.lang.String FReason -> FReason
    java.lang.String getFeCode() -> getFeCode
    void setFeCode(java.lang.String) -> setFeCode
    java.lang.String getFeType() -> getFeType
    void setFeType(java.lang.String) -> setFeType
    java.lang.String getFeName() -> getFeName
    void setFeName(java.lang.String) -> setFeName
    java.lang.String getFCompany() -> getFCompany
    void setFCompany(java.lang.String) -> setFCompany
    java.lang.String getFStatus() -> getFStatus
    void setFStatus(java.lang.String) -> setFStatus
    java.lang.String getFKeeper() -> getFKeeper
    void setFKeeper(java.lang.String) -> setFKeeper
    java.lang.String getFKeeperDept() -> getFKeeperDept
    void setFKeeperDept(java.lang.String) -> setFKeeperDept
    java.lang.String getFKeeperArea() -> getFKeeperArea
    void setFKeeperArea(java.lang.String) -> setFKeeperArea
    java.lang.String getFReason() -> getFReason
    void setFReason(java.lang.String) -> setFReason
com.dahuatech.app.bean.mytask.FeUpdateTHeaderInfo -> com.dahuatech.app.bean.mytask.FeUpdateTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDept -> FApplyDept
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FTel -> FTel
    java.lang.String FDestroy -> FDestroy
    java.lang.String FDestroyWitness -> FDestroyWitness
    java.lang.String FAmount -> FAmount
    java.lang.String FSubEntrys -> FSubEntrys
    int getFID() -> getFID
    void setFID(int) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDept() -> getFApplyDept
    void setFApplyDept(java.lang.String) -> setFApplyDept
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFTel() -> getFTel
    void setFTel(java.lang.String) -> setFTel
    java.lang.String getFDestroy() -> getFDestroy
    void setFDestroy(java.lang.String) -> setFDestroy
    java.lang.String getFDestroyWitness() -> getFDestroyWitness
    void setFDestroyWitness(java.lang.String) -> setFDestroyWitness
    java.lang.String getFAmount() -> getFAmount
    void setFAmount(java.lang.String) -> setFAmount
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
    com.dahuatech.app.bean.mytask.FeUpdateTHeaderInfo getFeUpdateTHeaderInfo() -> getFeUpdateTHeaderInfo
com.dahuatech.app.bean.mytask.FeUpdateTHeaderInfo$singletonHolder -> gx:
    com.dahuatech.app.bean.mytask.FeUpdateTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.FeUpdateTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.FixedAssetsSpecialTBodyInfo -> com.dahuatech.app.bean.mytask.FixedAssetsSpecialTBodyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FName -> FName
    java.lang.String FModel -> FModel
    java.lang.String FNumber -> FNumber
    java.lang.String FDate -> FDate
    java.lang.String FPerson -> FPerson
    java.lang.String FNote -> FNote
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFName() -> getFName
    void setFName(java.lang.String) -> setFName
    java.lang.String getFModel() -> getFModel
    void setFModel(java.lang.String) -> setFModel
    java.lang.String getFNumber() -> getFNumber
    void setFNumber(java.lang.String) -> setFNumber
    java.lang.String getFDate() -> getFDate
    void setFDate(java.lang.String) -> setFDate
    java.lang.String getFPerson() -> getFPerson
    void setFPerson(java.lang.String) -> setFPerson
    java.lang.String getFNote() -> getFNote
    void setFNote(java.lang.String) -> setFNote
com.dahuatech.app.bean.mytask.FixedAssetsSpecialTHeaderInfo -> com.dahuatech.app.bean.mytask.FixedAssetsSpecialTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FApplyDept -> FApplyDept
    java.lang.String FTel -> FTel
    java.lang.String FRequireType -> FRequireType
    java.lang.String FReason -> FReason
    java.lang.String FApplyCause -> FApplyCause
    java.lang.String FSubEntrys -> FSubEntrys
    int getFID() -> getFID
    void setFID(int) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFApplyDept() -> getFApplyDept
    void setFApplyDept(java.lang.String) -> setFApplyDept
    java.lang.String getFTel() -> getFTel
    void setFTel(java.lang.String) -> setFTel
    java.lang.String getFRequireType() -> getFRequireType
    void setFRequireType(java.lang.String) -> setFRequireType
    java.lang.String getFReason() -> getFReason
    void setFReason(java.lang.String) -> setFReason
    java.lang.String getFApplyCause() -> getFApplyCause
    void setFApplyCause(java.lang.String) -> setFApplyCause
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
    com.dahuatech.app.bean.mytask.FixedAssetsSpecialTHeaderInfo getFixedAssetsSpecialTHeaderInfo() -> getFixedAssetsSpecialTHeaderInfo
com.dahuatech.app.bean.mytask.FixedAssetsSpecialTHeaderInfo$singletonHolder -> gy:
    com.dahuatech.app.bean.mytask.FixedAssetsSpecialTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.FixedAssetsSpecialTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.LowConsumableTBodyInfo -> com.dahuatech.app.bean.mytask.LowConsumableTBodyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FMaterialType -> FMaterialType
    java.lang.String FMaterialName -> FMaterialName
    java.lang.String FModel -> FModel
    java.lang.String FUnit -> FUnit
    java.lang.String FAccount -> FAccount
    java.lang.String FNote -> FNote
    java.lang.String getFMaterialType() -> getFMaterialType
    void setFMaterialType(java.lang.String) -> setFMaterialType
    java.lang.String getFMaterialName() -> getFMaterialName
    void setFMaterialName(java.lang.String) -> setFMaterialName
    java.lang.String getFModel() -> getFModel
    void setFModel(java.lang.String) -> setFModel
    java.lang.String getFUnit() -> getFUnit
    void setFUnit(java.lang.String) -> setFUnit
    java.lang.String getFAccount() -> getFAccount
    void setFAccount(java.lang.String) -> setFAccount
    java.lang.String getFNote() -> getFNote
    void setFNote(java.lang.String) -> setFNote
com.dahuatech.app.bean.mytask.LowConsumableTHeaderInfo -> com.dahuatech.app.bean.mytask.LowConsumableTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FApplyDept -> FApplyDept
    java.lang.String FTel -> FTel
    java.lang.String FBillType -> FBillType
    java.lang.String FApplyCause -> FApplyCause
    java.lang.String FSubEntrys -> FSubEntrys
    int getFID() -> getFID
    void setFID(int) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFApplyDept() -> getFApplyDept
    void setFApplyDept(java.lang.String) -> setFApplyDept
    java.lang.String getFTel() -> getFTel
    void setFTel(java.lang.String) -> setFTel
    java.lang.String getFBillType() -> getFBillType
    void setFBillType(java.lang.String) -> setFBillType
    java.lang.String getFApplyCause() -> getFApplyCause
    void setFApplyCause(java.lang.String) -> setFApplyCause
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
    com.dahuatech.app.bean.mytask.LowConsumableTHeaderInfo getLowConsumableTHeaderInfo() -> getLowConsumableTHeaderInfo
com.dahuatech.app.bean.mytask.LowConsumableTHeaderInfo$singletonHolder -> gz:
    com.dahuatech.app.bean.mytask.LowConsumableTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.LowConsumableTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.LowerNodeAppBackInfo -> com.dahuatech.app.bean.mytask.LowerNodeAppBackInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FNodeId -> FNodeId
    java.lang.String FNodeName -> FNodeName
    java.lang.String FSelectItem -> FSelectItem
    int FIsMust -> FIsMust
    java.lang.String getFNodeId() -> getFNodeId
    void setFNodeId(java.lang.String) -> setFNodeId
    java.lang.String getFNodeName() -> getFNodeName
    void setFNodeName(java.lang.String) -> setFNodeName
    java.lang.String getFSelectItem() -> getFSelectItem
    void setFSelectItem(java.lang.String) -> setFSelectItem
    int getFIsMust() -> getFIsMust
    void setFIsMust(int) -> setFIsMust
    java.lang.String ConvertToJson(java.util.List) -> ConvertToJson
com.dahuatech.app.bean.mytask.LowerNodeAppConfigInfo -> com.dahuatech.app.bean.mytask.LowerNodeAppConfigInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FAppKey -> FAppKey
    int FSystemId -> FSystemId
    java.lang.String FClassTypeId -> FClassTypeId
    java.lang.String FBillId -> FBillId
    java.lang.String FItemNumber -> FItemNumber
    java.lang.String getFAppKey() -> getFAppKey
    void setFAppKey(java.lang.String) -> setFAppKey
    int getFSystemId() -> getFSystemId
    void setFSystemId(int) -> setFSystemId
    java.lang.String getFClassTypeId() -> getFClassTypeId
    void setFClassTypeId(java.lang.String) -> setFClassTypeId
    java.lang.String getFBillId() -> getFBillId
    void setFBillId(java.lang.String) -> setFBillId
    java.lang.String getFItemNumber() -> getFItemNumber
    void setFItemNumber(java.lang.String) -> setFItemNumber
    com.dahuatech.app.bean.mytask.LowerNodeAppConfigInfo getLowerNodeAppConfigInfo() -> getLowerNodeAppConfigInfo
    java.lang.String ConvertToJson(com.dahuatech.app.bean.mytask.LowerNodeAppConfigInfo) -> ConvertToJson
com.dahuatech.app.bean.mytask.LowerNodeAppConfigInfo$singletonHolder -> ha:
    com.dahuatech.app.bean.mytask.LowerNodeAppConfigInfo instance -> a
    com.dahuatech.app.bean.mytask.LowerNodeAppConfigInfo access$0() -> a
com.dahuatech.app.bean.mytask.LowerNodeAppInfo -> com.dahuatech.app.bean.mytask.LowerNodeAppInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FNodeId -> FNodeId
    java.lang.String FNodeName -> FNodeName
    int FIsMust -> FIsMust
    int FNodeStatus -> FNodeStatus
    java.lang.String FSubEntrys -> FSubEntrys
    java.lang.String getFNodeId() -> getFNodeId
    void setFNodeId(java.lang.String) -> setFNodeId
    java.lang.String getFNodeName() -> getFNodeName
    void setFNodeName(java.lang.String) -> setFNodeName
    int getFIsMust() -> getFIsMust
    void setFIsMust(int) -> setFIsMust
    int getFNodeStatus() -> getFNodeStatus
    void setFNodeStatus(int) -> setFNodeStatus
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
com.dahuatech.app.bean.mytask.LowerNodeAppItemInfo -> com.dahuatech.app.bean.mytask.LowerNodeAppItemInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FApproveUser -> FApproveUser
    java.lang.String FApproveRole -> FApproveRole
    java.lang.String getFApproveUser() -> getFApproveUser
    void setFApproveUser(java.lang.String) -> setFApproveUser
    java.lang.String getFApproveRole() -> getFApproveRole
    void setFApproveRole(java.lang.String) -> setFApproveRole
    com.dahuatech.app.bean.mytask.LowerNodeAppItemInfo getLowerNodeAppItemInfo() -> getLowerNodeAppItemInfo
com.dahuatech.app.bean.mytask.LowerNodeAppItemInfo$singletonHolder -> hb:
    com.dahuatech.app.bean.mytask.LowerNodeAppItemInfo instance -> a
    com.dahuatech.app.bean.mytask.LowerNodeAppItemInfo access$0() -> a
com.dahuatech.app.bean.mytask.LowerNodeAppResultInfo -> com.dahuatech.app.bean.mytask.LowerNodeAppResultInfo:
    long serialVersionUID -> serialVersionUID
    int FIsMust -> FIsMust
    java.lang.String FNodeId -> FNodeId
    java.lang.String FNodeName -> FNodeName
    java.lang.String FSelectResult -> FSelectResult
    java.lang.String FShowResult -> FShowResult
    java.lang.String getFNodeId() -> getFNodeId
    void setFNodeId(java.lang.String) -> setFNodeId
    java.lang.String getFNodeName() -> getFNodeName
    void setFNodeName(java.lang.String) -> setFNodeName
    int getFIsMust() -> getFIsMust
    void setFIsMust(int) -> setFIsMust
    java.lang.String getFSelectResult() -> getFSelectResult
    void setFSelectResult(java.lang.String) -> setFSelectResult
    java.lang.String getFShowResult() -> getFShowResult
    void setFShowResult(java.lang.String) -> setFShowResult
com.dahuatech.app.bean.mytask.LowerNodeAppRoleInfo -> com.dahuatech.app.bean.mytask.LowerNodeAppRoleInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FRoleName -> FRoleName
    java.util.List FUserList -> FUserList
    java.lang.String getFRoleName() -> getFRoleName
    void setFRoleName(java.lang.String) -> setFRoleName
    java.util.List getFUserList() -> getFUserList
    void setFUserList(java.util.List) -> setFUserList
com.dahuatech.app.bean.mytask.LowerNodeAppRoleJsonInfo -> com.dahuatech.app.bean.mytask.LowerNodeAppRoleJsonInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FRoleName -> FRoleName
    java.lang.String FRoleApproveUser -> FRoleApproveUser
    java.lang.String getFRoleName() -> getFRoleName
    void setFRoleName(java.lang.String) -> setFRoleName
    java.lang.String getFRoleApproveUser() -> getFRoleApproveUser
    void setFRoleApproveUser(java.lang.String) -> setFRoleApproveUser
com.dahuatech.app.bean.mytask.LowerNodeAppSpinnerInfo -> com.dahuatech.app.bean.mytask.LowerNodeAppSpinnerInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FSpinnerType -> FSpinnerType
    int FSpinnerIndex -> FSpinnerIndex
    int FRoleSpinnerCount -> FRoleSpinnerCount
    java.lang.String FSpinnerValue -> FSpinnerValue
    java.lang.String getFSpinnerType() -> getFSpinnerType
    void setFSpinnerType(java.lang.String) -> setFSpinnerType
    int getFSpinnerIndex() -> getFSpinnerIndex
    void setFSpinnerIndex(int) -> setFSpinnerIndex
    int getFRoleSpinnerCount() -> getFRoleSpinnerCount
    void setFRoleSpinnerCount(int) -> setFRoleSpinnerCount
    java.lang.String getFSpinnerValue() -> getFSpinnerValue
    void setFSpinnerValue(java.lang.String) -> setFSpinnerValue
com.dahuatech.app.bean.mytask.LowerNodeAppUserInfo -> com.dahuatech.app.bean.mytask.LowerNodeAppUserInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FItemNumber -> FItemNumber
    java.lang.String FItemName -> FItemName
    java.lang.String getFItemNumber() -> getFItemNumber
    void setFItemNumber(java.lang.String) -> setFItemNumber
    java.lang.String getFItemName() -> getFItemName
    void setFItemName(java.lang.String) -> setFItemName
com.dahuatech.app.bean.mytask.MemRequreInfo -> com.dahuatech.app.bean.mytask.MemRequreInfo:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyerName -> FApplyerName
    java.lang.String FApplyerDeptName -> FApplyerDeptName
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FVersion -> FVersion
    java.lang.String FValidDate -> FValidDate
    java.lang.String FUpgradeReason -> FUpgradeReason
    java.lang.String FOtherReason -> FOtherReason
    java.lang.String FUpgradeNote -> FUpgradeNote
    java.lang.String FSubject -> FSubject
    java.lang.String FMemReasonNote -> FMemReasonNote
    java.lang.String FMemProduct -> FMemProduct
    java.lang.String FTechnology -> FTechnology
    java.lang.String FMemScope -> FMemScope
    java.lang.String FNote -> FNote
    int getFID() -> getFID
    void setFID(int) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyerName() -> getFApplyerName
    void setFApplyerName(java.lang.String) -> setFApplyerName
    java.lang.String getFApplyerDeptName() -> getFApplyerDeptName
    void setFApplyerDeptName(java.lang.String) -> setFApplyerDeptName
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFVersion() -> getFVersion
    void setFVersion(java.lang.String) -> setFVersion
    java.lang.String getFValidDate() -> getFValidDate
    void setFValidDate(java.lang.String) -> setFValidDate
    java.lang.String getFUpgradeReason() -> getFUpgradeReason
    void setFUpgradeReason(java.lang.String) -> setFUpgradeReason
    java.lang.String getFOtherReason() -> getFOtherReason
    void setFOtherReason(java.lang.String) -> setFOtherReason
    java.lang.String getFUpgradeNote() -> getFUpgradeNote
    void setFUpgradeNote(java.lang.String) -> setFUpgradeNote
    java.lang.String getFSubject() -> getFSubject
    void setFSubject(java.lang.String) -> setFSubject
    java.lang.String getFMemReasonNote() -> getFMemReasonNote
    void setFMemReasonNote(java.lang.String) -> setFMemReasonNote
    java.lang.String getFMemProduct() -> getFMemProduct
    void setFMemProduct(java.lang.String) -> setFMemProduct
    java.lang.String getFTechnology() -> getFTechnology
    void setFTechnology(java.lang.String) -> setFTechnology
    java.lang.String getFMemScope() -> getFMemScope
    void setFMemScope(java.lang.String) -> setFMemScope
    java.lang.String getFNote() -> getFNote
    void setFNote(java.lang.String) -> setFNote
    com.dahuatech.app.bean.mytask.MemRequreInfo getMemRequreInfo() -> getMemRequreInfo
com.dahuatech.app.bean.mytask.MemRequreInfo$singletonHolder -> hc:
    com.dahuatech.app.bean.mytask.MemRequreInfo instance -> a
    com.dahuatech.app.bean.mytask.MemRequreInfo access$0() -> a
com.dahuatech.app.bean.mytask.NetworkPermissionTBodyInfo -> com.dahuatech.app.bean.mytask.NetworkPermissionTBodyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FIpAddress -> FIpAddress
    java.lang.String FComboBox1 -> FComboBox1
    java.lang.String FComboBox3 -> FComboBox3
    java.lang.String FDate1 -> FDate1
    java.lang.String getFIpAddress() -> getFIpAddress
    void setFIpAddress(java.lang.String) -> setFIpAddress
    java.lang.String getFComboBox1() -> getFComboBox1
    void setFComboBox1(java.lang.String) -> setFComboBox1
    java.lang.String getFComboBox3() -> getFComboBox3
    void setFComboBox3(java.lang.String) -> setFComboBox3
    java.lang.String getFDate1() -> getFDate1
    void setFDate1(java.lang.String) -> setFDate1
com.dahuatech.app.bean.mytask.NetworkPermissionTHeaderInfo -> com.dahuatech.app.bean.mytask.NetworkPermissionTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyerDeptName -> FApplyerDeptName
    java.lang.String FApplyerType -> FApplyerType
    java.lang.String FDate -> FDate
    java.lang.String FComboBox4 -> FComboBox4
    java.lang.String FNote -> FNote
    java.lang.String FTelphone -> FTelphone
    java.lang.String FSubEntrys -> FSubEntrys
    int getFID() -> getFID
    void setFID(int) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyerDeptName() -> getFApplyerDeptName
    void setFApplyerDeptName(java.lang.String) -> setFApplyerDeptName
    java.lang.String getFApplyerType() -> getFApplyerType
    void setFApplyerType(java.lang.String) -> setFApplyerType
    java.lang.String getFDate() -> getFDate
    void setFDate(java.lang.String) -> setFDate
    java.lang.String getFComboBox4() -> getFComboBox4
    void setFComboBox4(java.lang.String) -> setFComboBox4
    java.lang.String getFNote() -> getFNote
    void setFNote(java.lang.String) -> setFNote
    java.lang.String getFTelphone() -> getFTelphone
    void setFTelphone(java.lang.String) -> setFTelphone
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
    com.dahuatech.app.bean.mytask.NetworkPermissionTHeaderInfo getNetworkPermissionTHeaderInfo() -> getNetworkPermissionTHeaderInfo
com.dahuatech.app.bean.mytask.NetworkPermissionTHeaderInfo$singletonHolder -> hd:
    com.dahuatech.app.bean.mytask.NetworkPermissionTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.NetworkPermissionTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.NewProductLibTBodyInfo -> com.dahuatech.app.bean.mytask.NewProductLibTBodyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FModel -> FModel
    java.lang.String FProductName -> FProductName
    java.lang.String FUnit -> FUnit
    java.lang.String FAmount -> FAmount
    java.lang.String FOutLocation -> FOutLocation
    java.lang.String FInLocation -> FInLocation
    java.lang.String FNote -> FNote
    java.lang.String getFModel() -> getFModel
    void setFModel(java.lang.String) -> setFModel
    java.lang.String getFProductName() -> getFProductName
    void setFProductName(java.lang.String) -> setFProductName
    java.lang.String getFUnit() -> getFUnit
    void setFUnit(java.lang.String) -> setFUnit
    java.lang.String getFAmount() -> getFAmount
    void setFAmount(java.lang.String) -> setFAmount
    java.lang.String getFOutLocation() -> getFOutLocation
    void setFOutLocation(java.lang.String) -> setFOutLocation
    java.lang.String getFInLocation() -> getFInLocation
    void setFInLocation(java.lang.String) -> setFInLocation
    java.lang.String getFNote() -> getFNote
    void setFNote(java.lang.String) -> setFNote
com.dahuatech.app.bean.mytask.NewProductLibTHeaderInfo -> com.dahuatech.app.bean.mytask.NewProductLibTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FApplyDept -> FApplyDept
    java.lang.String FTel -> FTel
    java.lang.String FMaterialType -> FMaterialType
    java.lang.String FProductLine -> FProductLine
    java.lang.String FDescribe -> FDescribe
    java.lang.String FReason -> FReason
    java.lang.String FSubEntrys -> FSubEntrys
    int getFID() -> getFID
    void setFID(int) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFApplyDept() -> getFApplyDept
    void setFApplyDept(java.lang.String) -> setFApplyDept
    java.lang.String getFTel() -> getFTel
    void setFTel(java.lang.String) -> setFTel
    java.lang.String getFMaterialType() -> getFMaterialType
    void setFMaterialType(java.lang.String) -> setFMaterialType
    java.lang.String getFProductLine() -> getFProductLine
    void setFProductLine(java.lang.String) -> setFProductLine
    java.lang.String getFDescribe() -> getFDescribe
    void setFDescribe(java.lang.String) -> setFDescribe
    java.lang.String getFReason() -> getFReason
    void setFReason(java.lang.String) -> setFReason
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
    com.dahuatech.app.bean.mytask.NewProductLibTHeaderInfo getNewProductLibTHeaderInfo() -> getNewProductLibTHeaderInfo
com.dahuatech.app.bean.mytask.NewProductLibTHeaderInfo$singletonHolder -> he:
    com.dahuatech.app.bean.mytask.NewProductLibTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.NewProductLibTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.NewProductReworkTBodyInfo -> com.dahuatech.app.bean.mytask.NewProductReworkTBodyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FLocation -> FLocation
    java.lang.String FType -> FType
    java.lang.String FMaterialCode -> FMaterialCode
    java.lang.String FLocationCode -> FLocationCode
    java.lang.String FMaterialName -> FMaterialName
    java.lang.String FModel -> FModel
    java.lang.String FAmount -> FAmount
    java.lang.String FContent -> FContent
    java.lang.String FRequireTime -> FRequireTime
    java.lang.String FExpectedTime -> FExpectedTime
    java.lang.String getFLocation() -> getFLocation
    void setFLocation(java.lang.String) -> setFLocation
    java.lang.String getFType() -> getFType
    void setFType(java.lang.String) -> setFType
    java.lang.String getFMaterialCode() -> getFMaterialCode
    void setFMaterialCode(java.lang.String) -> setFMaterialCode
    java.lang.String getFLocationCode() -> getFLocationCode
    void setFLocationCode(java.lang.String) -> setFLocationCode
    java.lang.String getFMaterialName() -> getFMaterialName
    void setFMaterialName(java.lang.String) -> setFMaterialName
    java.lang.String getFModel() -> getFModel
    void setFModel(java.lang.String) -> setFModel
    java.lang.String getFAmount() -> getFAmount
    void setFAmount(java.lang.String) -> setFAmount
    java.lang.String getFContent() -> getFContent
    void setFContent(java.lang.String) -> setFContent
    java.lang.String getFRequireTime() -> getFRequireTime
    void setFRequireTime(java.lang.String) -> setFRequireTime
    java.lang.String getFExpectedTime() -> getFExpectedTime
    void setFExpectedTime(java.lang.String) -> setFExpectedTime
com.dahuatech.app.bean.mytask.NewProductReworkTHeaderInfo -> com.dahuatech.app.bean.mytask.NewProductReworkTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FApplyDept -> FApplyDept
    java.lang.String FProductLine -> FProductLine
    java.lang.String FProductName -> FProductName
    java.lang.String FProductModel -> FProductModel
    java.lang.String FProjectName -> FProjectName
    java.lang.String FProjectCode -> FProjectCode
    java.lang.String FReason -> FReason
    java.lang.String FSubEntrys -> FSubEntrys
    int getFID() -> getFID
    void setFID(int) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFApplyDept() -> getFApplyDept
    void setFApplyDept(java.lang.String) -> setFApplyDept
    java.lang.String getFProductLine() -> getFProductLine
    void setFProductLine(java.lang.String) -> setFProductLine
    java.lang.String getFProductName() -> getFProductName
    void setFProductName(java.lang.String) -> setFProductName
    java.lang.String getFProductModel() -> getFProductModel
    void setFProductModel(java.lang.String) -> setFProductModel
    java.lang.String getFProjectName() -> getFProjectName
    void setFProjectName(java.lang.String) -> setFProjectName
    java.lang.String getFProjectCode() -> getFProjectCode
    void setFProjectCode(java.lang.String) -> setFProjectCode
    java.lang.String getFReason() -> getFReason
    void setFReason(java.lang.String) -> setFReason
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
    com.dahuatech.app.bean.mytask.NewProductReworkTHeaderInfo getNewProductReworkTHeaderInfo() -> getNewProductReworkTHeaderInfo
com.dahuatech.app.bean.mytask.NewProductReworkTHeaderInfo$singletonHolder -> hf:
    com.dahuatech.app.bean.mytask.NewProductReworkTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.NewProductReworkTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.PlusCopyInfo -> com.dahuatech.app.bean.mytask.PlusCopyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FAppKey -> FAppKey
    java.lang.String FSystemId -> FSystemId
    java.lang.String FClassTypeId -> FClassTypeId
    java.lang.String FBillId -> FBillId
    java.lang.String FItemNumber -> FItemNumber
    java.lang.String FType -> FType
    java.lang.String FNodeIds -> FNodeIds
    java.lang.String FPersonNumbers -> FPersonNumbers
    java.lang.String FContent -> FContent
    java.lang.String getFAppKey() -> getFAppKey
    void setFAppKey(java.lang.String) -> setFAppKey
    java.lang.String getFSystemId() -> getFSystemId
    void setFSystemId(java.lang.String) -> setFSystemId
    java.lang.String getFClassTypeId() -> getFClassTypeId
    void setFClassTypeId(java.lang.String) -> setFClassTypeId
    java.lang.String getFBillId() -> getFBillId
    void setFBillId(java.lang.String) -> setFBillId
    java.lang.String getFItemNumber() -> getFItemNumber
    void setFItemNumber(java.lang.String) -> setFItemNumber
    java.lang.String getFType() -> getFType
    void setFType(java.lang.String) -> setFType
    java.lang.String getFNodeIds() -> getFNodeIds
    void setFNodeIds(java.lang.String) -> setFNodeIds
    java.lang.String getFPersonNumbers() -> getFPersonNumbers
    void setFPersonNumbers(java.lang.String) -> setFPersonNumbers
    java.lang.String getFContent() -> getFContent
    void setFContent(java.lang.String) -> setFContent
    com.dahuatech.app.bean.mytask.PlusCopyInfo getPlusCopyInfo() -> getPlusCopyInfo
    java.lang.String ConvertToJson(com.dahuatech.app.bean.mytask.PlusCopyInfo) -> ConvertToJson
com.dahuatech.app.bean.mytask.PlusCopyInfo$singletonHolder -> hg:
    com.dahuatech.app.bean.mytask.PlusCopyInfo instance -> a
    com.dahuatech.app.bean.mytask.PlusCopyInfo access$0() -> a
com.dahuatech.app.bean.mytask.PlusCopyPersonInfo -> com.dahuatech.app.bean.mytask.PlusCopyPersonInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FItemNumber -> FItemNumber
    java.lang.String FItemName -> FItemName
    java.lang.String getFItemNumber() -> getFItemNumber
    void setFItemNumber(java.lang.String) -> setFItemNumber
    java.lang.String getFItemName() -> getFItemName
    void setFItemName(java.lang.String) -> setFItemName
    java.lang.String ConvertToJson(java.util.List) -> ConvertToJson
com.dahuatech.app.bean.mytask.ProjectReadTBodyInfo -> com.dahuatech.app.bean.mytask.ProjectReadTBodyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FApplyNumber -> FApplyNumber
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDept -> FApplyDept
    java.lang.String FEmail -> FEmail
    java.lang.String FApplyReason -> FApplyReason
    java.lang.String FApplyType -> FApplyType
    java.lang.String FProgramPublic -> FProgramPublic
    java.lang.String FStartProject -> FStartProject
    java.lang.String FEndProject -> FEndProject
    java.lang.String FProductPublic -> FProductPublic
    java.lang.String FMarketPublic -> FMarketPublic
    java.lang.String FRisk -> FRisk
    java.lang.String getFApplyNumber() -> getFApplyNumber
    void setFApplyNumber(java.lang.String) -> setFApplyNumber
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDept() -> getFApplyDept
    void setFApplyDept(java.lang.String) -> setFApplyDept
    java.lang.String getFEmail() -> getFEmail
    void setFEmail(java.lang.String) -> setFEmail
    java.lang.String getFApplyReason() -> getFApplyReason
    void setFApplyReason(java.lang.String) -> setFApplyReason
    java.lang.String getFApplyType() -> getFApplyType
    void setFApplyType(java.lang.String) -> setFApplyType
    java.lang.String getFProgramPublic() -> getFProgramPublic
    void setFProgramPublic(java.lang.String) -> setFProgramPublic
    java.lang.String getFStartProject() -> getFStartProject
    void setFStartProject(java.lang.String) -> setFStartProject
    java.lang.String getFEndProject() -> getFEndProject
    void setFEndProject(java.lang.String) -> setFEndProject
    java.lang.String getFProductPublic() -> getFProductPublic
    void setFProductPublic(java.lang.String) -> setFProductPublic
    java.lang.String getFMarketPublic() -> getFMarketPublic
    void setFMarketPublic(java.lang.String) -> setFMarketPublic
    java.lang.String getFRisk() -> getFRisk
    void setFRisk(java.lang.String) -> setFRisk
com.dahuatech.app.bean.mytask.ProjectReadTHeaderInfo -> com.dahuatech.app.bean.mytask.ProjectReadTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyNumber -> FApplyNumber
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FApplyDept -> FApplyDept
    java.lang.String FTel -> FTel
    java.lang.String FPermissionType -> FPermissionType
    java.lang.String FProjectManage -> FProjectManage
    java.lang.String FProgramPublic -> FProgramPublic
    java.lang.String FSubEntrys -> FSubEntrys
    int getFID() -> getFID
    void setFID(int) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyNumber() -> getFApplyNumber
    void setFApplyNumber(java.lang.String) -> setFApplyNumber
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFApplyDept() -> getFApplyDept
    void setFApplyDept(java.lang.String) -> setFApplyDept
    java.lang.String getFTel() -> getFTel
    void setFTel(java.lang.String) -> setFTel
    java.lang.String getFPermissionType() -> getFPermissionType
    void setFPermissionType(java.lang.String) -> setFPermissionType
    java.lang.String getFProjectManage() -> getFProjectManage
    void setFProjectManage(java.lang.String) -> setFProjectManage
    java.lang.String getFProgramPublic() -> getFProgramPublic
    void setFProgramPublic(java.lang.String) -> setFProgramPublic
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
    com.dahuatech.app.bean.mytask.ProjectReadTHeaderInfo getProjectReadTHeaderInfo() -> getProjectReadTHeaderInfo
com.dahuatech.app.bean.mytask.ProjectReadTHeaderInfo$singletonHolder -> hh:
    com.dahuatech.app.bean.mytask.ProjectReadTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.ProjectReadTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.PurchaseStockTBodyInfo -> com.dahuatech.app.bean.mytask.PurchaseStockTBodyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FMaterialCode -> FMaterialCode
    java.lang.String FMaterialName -> FMaterialName
    java.lang.String FModel -> FModel
    java.lang.String FNumber -> FNumber
    java.lang.String FUnit -> FUnit
    java.lang.String FRdDate -> FRdDate
    java.lang.String FEstimatedPrice -> FEstimatedPrice
    java.lang.String FNote -> FNote
    java.lang.String getFMaterialCode() -> getFMaterialCode
    void setFMaterialCode(java.lang.String) -> setFMaterialCode
    java.lang.String getFMaterialName() -> getFMaterialName
    void setFMaterialName(java.lang.String) -> setFMaterialName
    java.lang.String getFModel() -> getFModel
    void setFModel(java.lang.String) -> setFModel
    java.lang.String getFNumber() -> getFNumber
    void setFNumber(java.lang.String) -> setFNumber
    java.lang.String getFUnit() -> getFUnit
    void setFUnit(java.lang.String) -> setFUnit
    java.lang.String getFRdDate() -> getFRdDate
    void setFRdDate(java.lang.String) -> setFRdDate
    java.lang.String getFEstimatedPrice() -> getFEstimatedPrice
    void setFEstimatedPrice(java.lang.String) -> setFEstimatedPrice
    java.lang.String getFNote() -> getFNote
    void setFNote(java.lang.String) -> setFNote
com.dahuatech.app.bean.mytask.PurchaseStockTHeaderInfo -> com.dahuatech.app.bean.mytask.PurchaseStockTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FDept -> FDept
    java.lang.String FProjectCode -> FProjectCode
    java.lang.String FProjectName -> FProjectName
    java.lang.String FProcessName -> FProcessName
    java.lang.String FTechnologyName -> FTechnologyName
    java.lang.String FSubEntrys -> FSubEntrys
    int getFID() -> getFID
    void setFID(int) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFDept() -> getFDept
    void setFDept(java.lang.String) -> setFDept
    java.lang.String getFProjectCode() -> getFProjectCode
    void setFProjectCode(java.lang.String) -> setFProjectCode
    java.lang.String getFProjectName() -> getFProjectName
    void setFProjectName(java.lang.String) -> setFProjectName
    java.lang.String getFProcessName() -> getFProcessName
    void setFProcessName(java.lang.String) -> setFProcessName
    java.lang.String getFTechnologyName() -> getFTechnologyName
    void setFTechnologyName(java.lang.String) -> setFTechnologyName
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
    com.dahuatech.app.bean.mytask.PurchaseStockTHeaderInfo getPurchaseStockTHeaderInfo() -> getPurchaseStockTHeaderInfo
com.dahuatech.app.bean.mytask.PurchaseStockTHeaderInfo$singletonHolder -> hi:
    com.dahuatech.app.bean.mytask.PurchaseStockTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.PurchaseStockTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.RejectNodeInfo -> com.dahuatech.app.bean.mytask.RejectNodeInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FNodeKey -> FNodeKey
    java.lang.String FNodeValue -> FNodeValue
    java.lang.String getFNodeKey() -> getFNodeKey
    void setFNodeKey(java.lang.String) -> setFNodeKey
    java.lang.String getFNodeValue() -> getFNodeValue
    void setFNodeValue(java.lang.String) -> setFNodeValue
com.dahuatech.app.bean.mytask.SvnPermissionTBodyInfo -> com.dahuatech.app.bean.mytask.SvnPermissionTBodyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FAddress -> FAddress
    java.lang.String FReadOrWrite -> FReadOrWrite
    java.lang.String FResponsible -> FResponsible
    java.lang.String FReason -> FReason
    java.lang.String getFAddress() -> getFAddress
    void setFAddress(java.lang.String) -> setFAddress
    java.lang.String getFReadOrWrite() -> getFReadOrWrite
    void setFReadOrWrite(java.lang.String) -> setFReadOrWrite
    java.lang.String getFResponsible() -> getFResponsible
    void setFResponsible(java.lang.String) -> setFResponsible
    java.lang.String getFReason() -> getFReason
    void setFReason(java.lang.String) -> setFReason
com.dahuatech.app.bean.mytask.SvnPermissionTHeaderInfo -> com.dahuatech.app.bean.mytask.SvnPermissionTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDept -> FApplyDept
    java.lang.String FApplyDateStart -> FApplyDateStart
    java.lang.String FApplyDateEnd -> FApplyDateEnd
    java.lang.String FSvnShow -> FSvnShow
    java.lang.String FSubEntrys -> FSubEntrys
    int getFID() -> getFID
    void setFID(int) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDept() -> getFApplyDept
    void setFApplyDept(java.lang.String) -> setFApplyDept
    java.lang.String getFApplyDateStart() -> getFApplyDateStart
    void setFApplyDateStart(java.lang.String) -> setFApplyDateStart
    java.lang.String getFApplyDateEnd() -> getFApplyDateEnd
    void setFApplyDateEnd(java.lang.String) -> setFApplyDateEnd
    java.lang.String getFSvnShow() -> getFSvnShow
    void setFSvnShow(java.lang.String) -> setFSvnShow
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
    com.dahuatech.app.bean.mytask.SvnPermissionTHeaderInfo getSvnPermissionTHeaderInfo() -> getSvnPermissionTHeaderInfo
com.dahuatech.app.bean.mytask.SvnPermissionTHeaderInfo$singletonHolder -> hj:
    com.dahuatech.app.bean.mytask.SvnPermissionTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.SvnPermissionTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.TaskInfo -> com.dahuatech.app.bean.mytask.TaskInfo:
    long serialVersionUID -> serialVersionUID
    int FMenuID -> FMenuID
    java.lang.String FBillID -> FBillID
    java.lang.String FTitle -> FTitle
    java.lang.String FSender -> FSender
    java.lang.String FSendTime -> FSendTime
    int FClassTypeID -> FClassTypeID
    java.lang.String FClassTypeName -> FClassTypeName
    int FSystemType -> FSystemType
    int FTotalCount -> FTotalCount
    int getFMenuID() -> getFMenuID
    void setFMenuID(int) -> setFMenuID
    java.lang.String getFBillID() -> getFBillID
    void setFBillID(java.lang.String) -> setFBillID
    java.lang.String getFTitle() -> getFTitle
    void setFTitle(java.lang.String) -> setFTitle
    java.lang.String getFSender() -> getFSender
    void setFSender(java.lang.String) -> setFSender
    java.lang.String getFSendTime() -> getFSendTime
    void setFSendTime(java.lang.String) -> setFSendTime
    int getFClassTypeID() -> getFClassTypeID
    void setFClassTypeID(int) -> setFClassTypeID
    java.lang.String getFClassTypeName() -> getFClassTypeName
    void setFClassTypeName(java.lang.String) -> setFClassTypeName
    int getFSystemType() -> getFSystemType
    void setFSystemType(int) -> setFSystemType
    int getFTotalCount() -> getFTotalCount
    void setFTotalCount(int) -> setFTotalCount
    com.dahuatech.app.bean.mytask.TaskInfo getTaskInfo() -> getTaskInfo
com.dahuatech.app.bean.mytask.TaskInfo$singletonHolder -> hk:
    com.dahuatech.app.bean.mytask.TaskInfo instance -> a
    com.dahuatech.app.bean.mytask.TaskInfo access$0() -> a
com.dahuatech.app.bean.mytask.TaskParamInfo -> com.dahuatech.app.bean.mytask.TaskParamInfo:
    java.lang.String FMenuID -> a
    java.lang.String FSystemType -> b
    java.lang.String FBillID -> c
    java.lang.String getFMenuID() -> getFMenuID
    void setFMenuID(java.lang.String) -> setFMenuID
    java.lang.String getFSystemType() -> getFSystemType
    void setFSystemType(java.lang.String) -> setFSystemType
    java.lang.String getFBillID() -> getFBillID
    void setFBillID(java.lang.String) -> setFBillID
    com.dahuatech.app.bean.mytask.TaskParamInfo getTaskParamInfo() -> getTaskParamInfo
    java.lang.String ConvertToJson(com.dahuatech.app.bean.mytask.TaskParamInfo) -> ConvertToJson
com.dahuatech.app.bean.mytask.TaskParamInfo$singletonHolder -> hl:
    com.dahuatech.app.bean.mytask.TaskParamInfo instance -> a
    com.dahuatech.app.bean.mytask.TaskParamInfo access$0() -> a
com.dahuatech.app.bean.mytask.TdBorrowTBodyInfo -> com.dahuatech.app.bean.mytask.TdBorrowTBodyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FDocumentName -> FDocumentName
    java.lang.String FDocumentUse -> FDocumentUse
    java.lang.String FSupportType -> FSupportType
    java.lang.String FVersion -> FVersion
    java.lang.String FNote -> FNote
    java.lang.String getFDocumentName() -> getFDocumentName
    void setFDocumentName(java.lang.String) -> setFDocumentName
    java.lang.String getFDocumentUse() -> getFDocumentUse
    void setFDocumentUse(java.lang.String) -> setFDocumentUse
    java.lang.String getFSupportType() -> getFSupportType
    void setFSupportType(java.lang.String) -> setFSupportType
    java.lang.String getFVersion() -> getFVersion
    void setFVersion(java.lang.String) -> setFVersion
    java.lang.String getFNote() -> getFNote
    void setFNote(java.lang.String) -> setFNote
com.dahuatech.app.bean.mytask.TdBorrowTHeaderInfo -> com.dahuatech.app.bean.mytask.TdBorrowTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FApplyDept -> FApplyDept
    java.lang.String FTel -> FTel
    java.lang.String FSecrecyDate -> FSecrecyDate
    java.lang.String FDocumentType -> FDocumentType
    java.lang.String FSubEntrys -> FSubEntrys
    int getFID() -> getFID
    void setFID(int) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFApplyDept() -> getFApplyDept
    void setFApplyDept(java.lang.String) -> setFApplyDept
    java.lang.String getFTel() -> getFTel
    void setFTel(java.lang.String) -> setFTel
    java.lang.String getFSecrecyDate() -> getFSecrecyDate
    void setFSecrecyDate(java.lang.String) -> setFSecrecyDate
    java.lang.String getFDocumentType() -> getFDocumentType
    void setFDocumentType(java.lang.String) -> setFDocumentType
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
    com.dahuatech.app.bean.mytask.TdBorrowTHeaderInfo getTdBorrowTHeaderInfo() -> getTdBorrowTHeaderInfo
com.dahuatech.app.bean.mytask.TdBorrowTHeaderInfo$singletonHolder -> hm:
    com.dahuatech.app.bean.mytask.TdBorrowTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.TdBorrowTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.TdPermissionAfterTBodyInfo -> com.dahuatech.app.bean.mytask.TdPermissionAfterTBodyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FApplyNumber -> FApplyNumber
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDept -> FApplyDept
    java.lang.String FEmail -> FEmail
    java.lang.String FProductName -> FProductName
    java.lang.String FProductType -> FProductType
    java.lang.String FCodeAndName -> FCodeAndName
    java.lang.String FTestPermission -> FTestPermission
    java.lang.String FDevelopPermission -> FDevelopPermission
    java.lang.String FManagerPermission -> FManagerPermission
    java.lang.String FReadOnly -> FReadOnly
    java.lang.String getFApplyNumber() -> getFApplyNumber
    void setFApplyNumber(java.lang.String) -> setFApplyNumber
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDept() -> getFApplyDept
    void setFApplyDept(java.lang.String) -> setFApplyDept
    java.lang.String getFEmail() -> getFEmail
    void setFEmail(java.lang.String) -> setFEmail
    java.lang.String getFProductName() -> getFProductName
    void setFProductName(java.lang.String) -> setFProductName
    java.lang.String getFProductType() -> getFProductType
    void setFProductType(java.lang.String) -> setFProductType
    java.lang.String getFCodeAndName() -> getFCodeAndName
    void setFCodeAndName(java.lang.String) -> setFCodeAndName
    java.lang.String getFTestPermission() -> getFTestPermission
    void setFTestPermission(java.lang.String) -> setFTestPermission
    java.lang.String getFDevelopPermission() -> getFDevelopPermission
    void setFDevelopPermission(java.lang.String) -> setFDevelopPermission
    java.lang.String getFManagerPermission() -> getFManagerPermission
    void setFManagerPermission(java.lang.String) -> setFManagerPermission
    java.lang.String getFReadOnly() -> getFReadOnly
    void setFReadOnly(java.lang.String) -> setFReadOnly
com.dahuatech.app.bean.mytask.TdPermissionBeforeTBodyInfo -> com.dahuatech.app.bean.mytask.TdPermissionBeforeTBodyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FApplyNumber -> FApplyNumber
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDept -> FApplyDept
    java.lang.String FEmail -> FEmail
    java.lang.String FTdDomain -> FTdDomain
    java.lang.String FTdProject -> FTdProject
    java.lang.String FCodeAndName -> FCodeAndName
    java.lang.String FManager -> FManager
    java.lang.String FProjectPermission -> FProjectPermission
    java.lang.String getFApplyNumber() -> getFApplyNumber
    void setFApplyNumber(java.lang.String) -> setFApplyNumber
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDept() -> getFApplyDept
    void setFApplyDept(java.lang.String) -> setFApplyDept
    java.lang.String getFEmail() -> getFEmail
    void setFEmail(java.lang.String) -> setFEmail
    java.lang.String getFTdDomain() -> getFTdDomain
    void setFTdDomain(java.lang.String) -> setFTdDomain
    java.lang.String getFTdProject() -> getFTdProject
    void setFTdProject(java.lang.String) -> setFTdProject
    java.lang.String getFCodeAndName() -> getFCodeAndName
    void setFCodeAndName(java.lang.String) -> setFCodeAndName
    java.lang.String getFManager() -> getFManager
    void setFManager(java.lang.String) -> setFManager
    java.lang.String getFProjectPermission() -> getFProjectPermission
    void setFProjectPermission(java.lang.String) -> setFProjectPermission
com.dahuatech.app.bean.mytask.TdPermissionTHeaderInfo -> com.dahuatech.app.bean.mytask.TdPermissionTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyNumber -> FApplyNumber
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FApplyDept -> FApplyDept
    java.lang.String FTel -> FTel
    java.lang.String FPersonType -> FPersonType
    java.lang.String FBeforeAmount -> FBeforeAmount
    java.lang.String FAfterAmount -> FAfterAmount
    java.lang.String FBeforeSubEntrys -> FBeforeSubEntrys
    java.lang.String FAfterSubEntrys -> FAfterSubEntrys
    int getFID() -> getFID
    void setFID(int) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyNumber() -> getFApplyNumber
    void setFApplyNumber(java.lang.String) -> setFApplyNumber
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFApplyDept() -> getFApplyDept
    void setFApplyDept(java.lang.String) -> setFApplyDept
    java.lang.String getFTel() -> getFTel
    void setFTel(java.lang.String) -> setFTel
    java.lang.String getFPersonType() -> getFPersonType
    void setFPersonType(java.lang.String) -> setFPersonType
    java.lang.String getFBeforeAmount() -> getFBeforeAmount
    void setFBeforeAmount(java.lang.String) -> setFBeforeAmount
    java.lang.String getFAfterAmount() -> getFAfterAmount
    void setFAfterAmount(java.lang.String) -> setFAfterAmount
    java.lang.String getFBeforeSubEntrys() -> getFBeforeSubEntrys
    void setFBeforeSubEntrys(java.lang.String) -> setFBeforeSubEntrys
    java.lang.String getFAfterSubEntrys() -> getFAfterSubEntrys
    void setFAfterSubEntrys(java.lang.String) -> setFAfterSubEntrys
    com.dahuatech.app.bean.mytask.TdPermissionTHeaderInfo getTdPermissionTHeaderInfo() -> getTdPermissionTHeaderInfo
com.dahuatech.app.bean.mytask.TdPermissionTHeaderInfo$singletonHolder -> hn:
    com.dahuatech.app.bean.mytask.TdPermissionTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.TdPermissionTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.TrainComputerTBodyInfo -> com.dahuatech.app.bean.mytask.TrainComputerTBodyInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FApplyDesc -> FApplyDesc
    java.lang.String FStartTime -> FStartTime
    java.lang.String FEndTime -> FEndTime
    java.lang.String FNote -> FNote
    java.lang.String getFApplyDesc() -> getFApplyDesc
    void setFApplyDesc(java.lang.String) -> setFApplyDesc
    java.lang.String getFStartTime() -> getFStartTime
    void setFStartTime(java.lang.String) -> setFStartTime
    java.lang.String getFEndTime() -> getFEndTime
    void setFEndTime(java.lang.String) -> setFEndTime
    java.lang.String getFNote() -> getFNote
    void setFNote(java.lang.String) -> setFNote
com.dahuatech.app.bean.mytask.TrainComputerTHeaderInfo -> com.dahuatech.app.bean.mytask.TrainComputerTHeaderInfo:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FApplyDept -> FApplyDept
    java.lang.String FTel -> FTel
    java.lang.String FSubEntrys -> FSubEntrys
    int getFID() -> getFID
    void setFID(int) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFApplyDept() -> getFApplyDept
    void setFApplyDept(java.lang.String) -> setFApplyDept
    java.lang.String getFTel() -> getFTel
    void setFTel(java.lang.String) -> setFTel
    java.lang.String getFSubEntrys() -> getFSubEntrys
    void setFSubEntrys(java.lang.String) -> setFSubEntrys
    com.dahuatech.app.bean.mytask.TrainComputerTHeaderInfo getTrainComputerTHeaderInfo() -> getTrainComputerTHeaderInfo
com.dahuatech.app.bean.mytask.TrainComputerTHeaderInfo$singletonHolder -> ho:
    com.dahuatech.app.bean.mytask.TrainComputerTHeaderInfo instance -> a
    com.dahuatech.app.bean.mytask.TrainComputerTHeaderInfo access$0() -> a
com.dahuatech.app.bean.mytask.TravelApprovalInfo -> com.dahuatech.app.bean.mytask.TravelApprovalInfo:
    long serialVersionUID -> serialVersionUID
    int FID -> FID
    java.lang.String FBillNo -> FBillNo
    java.lang.String FApplyName -> FApplyName
    java.lang.String FApplyDate -> FApplyDate
    java.lang.String FApplyDept -> FApplyDept
    java.lang.String FClientName -> FClientName
    java.lang.String FStartTime -> FStartTime
    java.lang.String FBackTime -> FBackTime
    java.lang.String FTravelAddress -> FTravelAddress
    java.lang.String FTravelDays -> FTravelDays
    java.lang.String FTravelCause -> FTravelCause
    java.lang.String FArrangement -> FArrangement
    java.lang.String FTravelReport -> FTravelReport
    int getFID() -> getFID
    void setFID(int) -> setFID
    java.lang.String getFBillNo() -> getFBillNo
    void setFBillNo(java.lang.String) -> setFBillNo
    java.lang.String getFApplyName() -> getFApplyName
    void setFApplyName(java.lang.String) -> setFApplyName
    java.lang.String getFApplyDate() -> getFApplyDate
    void setFApplyDate(java.lang.String) -> setFApplyDate
    java.lang.String getFApplyDept() -> getFApplyDept
    void setFApplyDept(java.lang.String) -> setFApplyDept
    java.lang.String getFClientName() -> getFClientName
    void setFClientName(java.lang.String) -> setFClientName
    java.lang.String getFStartTime() -> getFStartTime
    void setFStartTime(java.lang.String) -> setFStartTime
    java.lang.String getFBackTime() -> getFBackTime
    void setFBackTime(java.lang.String) -> setFBackTime
    java.lang.String getFTravelAddress() -> getFTravelAddress
    void setFTravelAddress(java.lang.String) -> setFTravelAddress
    java.lang.String getFTravelDays() -> getFTravelDays
    void setFTravelDays(java.lang.String) -> setFTravelDays
    java.lang.String getFTravelCause() -> getFTravelCause
    void setFTravelCause(java.lang.String) -> setFTravelCause
    java.lang.String getFArrangement() -> getFArrangement
    void setFArrangement(java.lang.String) -> setFArrangement
    java.lang.String getFTravelReport() -> getFTravelReport
    void setFTravelReport(java.lang.String) -> setFTravelReport
    com.dahuatech.app.bean.mytask.TravelApprovalInfo getTravelApprovalInfo() -> getTravelApprovalInfo
com.dahuatech.app.bean.mytask.TravelApprovalInfo$singletonHolder -> hp:
    com.dahuatech.app.bean.mytask.TravelApprovalInfo instance -> a
    com.dahuatech.app.bean.mytask.TravelApprovalInfo access$0() -> a
com.dahuatech.app.bean.mytask.WorkFlowInfo -> com.dahuatech.app.bean.mytask.WorkFlowInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String FTaskId -> FTaskId
    java.lang.String FID -> FID
    java.lang.String FStepFlagName -> FStepFlagName
    java.lang.String FItemName -> FItemName
    java.lang.String FComment -> FComment
    java.lang.String FStatusResult -> FStatusResult
    java.lang.String FUpdateTime -> FUpdateTime
    com.dahuatech.app.bean.mytask.WorkFlowInfo workFlowInfo -> a
    java.lang.String getFTaskId() -> getFTaskId
    void setFTaskId(java.lang.String) -> setFTaskId
    java.lang.String getFID() -> getFID
    void setFID(java.lang.String) -> setFID
    java.lang.String getFStepFlagName() -> getFStepFlagName
    void setFStepFlagName(java.lang.String) -> setFStepFlagName
    java.lang.String getFItemName() -> getFItemName
    void setFItemName(java.lang.String) -> setFItemName
    java.lang.String getFComment() -> getFComment
    void setFComment(java.lang.String) -> setFComment
    java.lang.String getFStatusResult() -> getFStatusResult
    void setFStatusResult(java.lang.String) -> setFStatusResult
    java.lang.String getFUpdateTime() -> getFUpdateTime
    void setFUpdateTime(java.lang.String) -> setFUpdateTime
    com.dahuatech.app.bean.mytask.WorkFlowInfo getWorkFlowInfo() -> getWorkFlowInfo
    com.dahuatech.app.bean.mytask.WorkFlowInfo getWorkFlowInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getWorkFlowInfo
com.dahuatech.app.bean.mytask.WorkFlowInfo$singletonHolder -> hq:
    com.dahuatech.app.bean.mytask.WorkFlowInfo instance -> a
    com.dahuatech.app.bean.mytask.WorkFlowInfo access$0() -> a
com.dahuatech.app.business.ApplyDaysOffBusiness -> com.dahuatech.app.business.ApplyDaysOffBusiness:
    com.dahuatech.app.business.ApplyDaysOffBusiness applyDaysOffBusiness -> a
    com.dahuatech.app.business.ApplyDaysOffBusiness getApplyDaysOffBusiness(android.content.Context,java.lang.String) -> getApplyDaysOffBusiness
    com.dahuatech.app.bean.mytask.ApplyDaysOffTHeaderInfo getApplyDaysOffTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getApplyDaysOffTHeaderInfo
com.dahuatech.app.business.ApplyDaysOffDevelopBusiness -> com.dahuatech.app.business.ApplyDaysOffDevelopBusiness:
    com.dahuatech.app.business.ApplyDaysOffDevelopBusiness applyDaysOffDevelopBusiness -> a
    com.dahuatech.app.business.ApplyDaysOffDevelopBusiness getApplyDaysOffDevelopBusiness(android.content.Context,java.lang.String) -> getApplyDaysOffDevelopBusiness
    com.dahuatech.app.bean.mytask.ApplyDaysOffDevelopInfo getApplyDaysOffDevelopInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getApplyDaysOffDevelopInfo
com.dahuatech.app.business.ApplyLeaveBusiness -> com.dahuatech.app.business.ApplyLeaveBusiness:
    com.dahuatech.app.business.ApplyLeaveBusiness applyOverTimeBusiness -> a
    com.dahuatech.app.business.ApplyLeaveBusiness getApplyLeaveBusiness(android.content.Context,java.lang.String) -> getApplyLeaveBusiness
    com.dahuatech.app.bean.mytask.ApplyLeaveTHeaderInfo getApplyLeaveTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getApplyLeaveTHeaderInfo
com.dahuatech.app.business.ApplyOverTimeBusiness -> com.dahuatech.app.business.ApplyOverTimeBusiness:
    com.dahuatech.app.business.ApplyOverTimeBusiness applyOverTimeBusiness -> a
    com.dahuatech.app.business.ApplyOverTimeBusiness getApplyOverTimeBusiness(android.content.Context,java.lang.String) -> getApplyOverTimeBusiness
    com.dahuatech.app.bean.mytask.ApplyOverTimeTHeaderInfo getApplyOverTimeTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getApplyOverTimeTHeaderInfo
com.dahuatech.app.business.ApplyResumeBusiness -> com.dahuatech.app.business.ApplyResumeBusiness:
    com.dahuatech.app.business.ApplyResumeBusiness applyOverTimeBusiness -> a
    com.dahuatech.app.business.ApplyResumeBusiness getApplyResumeBusiness(android.content.Context,java.lang.String) -> getApplyResumeBusiness
    com.dahuatech.app.bean.mytask.ApplyResumeTHeaderInfo getApplyResumeTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getApplyResumeTHeaderInfo
com.dahuatech.app.business.AttendanceBusiness -> com.dahuatech.app.business.AttendanceBusiness:
    java.util.List arrayList -> a
    java.lang.reflect.Type listType -> b
    com.dahuatech.app.api.ApiClient apiClient -> c
    com.dahuatech.app.bean.attendance.AdCheckStatusInfo adCheckStatusInfo -> d
    com.dahuatech.app.bean.attendance.AdAmapListInfo adAmapListInfo -> e
    com.dahuatech.app.business.AttendanceBusiness attendanceBusiness -> f
    com.dahuatech.app.business.AttendanceBusiness getAttendanceBusiness(android.content.Context,java.lang.String) -> getAttendanceBusiness
    com.dahuatech.app.bean.attendance.AdCheckStatusInfo getCheckStausData(java.lang.String) -> getCheckStausData
    java.util.List getAdList(java.lang.String) -> getAdList
    com.dahuatech.app.bean.ResultMessage checkHandle(com.dahuatech.app.bean.attendance.AdCheckInfo) -> checkHandle
    com.dahuatech.app.bean.attendance.AdAmapListInfo getAmapList(java.lang.String) -> getAmapList
com.dahuatech.app.business.AttendanceBusiness$1 -> hr:
    com.dahuatech.app.business.AttendanceBusiness this$0 -> a
com.dahuatech.app.business.BaseBusiness -> com.dahuatech.app.business.BaseBusiness:
    com.google.gson.Gson gson -> gson
    android.content.Context context -> context
    org.json.JSONArray jsonArray -> jsonArray
    org.json.JSONObject jsonObject -> jsonObject
    com.dahuatech.app.bean.ResultMessage resultMessage -> resultMessage
    com.dahuatech.app.bean.ResponseMessage responseMessage -> responseMessage
    java.lang.String responseErrorMessage -> responseErrorMessage
    java.lang.String serviceUrl -> serviceUrl
    java.lang.Object t -> a
    java.lang.Object getT() -> getT
    void setT(java.lang.Object) -> setT
    java.lang.String getServiceUrl() -> getServiceUrl
    void setServiceUrl(java.lang.String) -> setServiceUrl
    android.content.Context getContext() -> getContext
    void setContext(android.content.Context) -> setContext
    java.lang.Object getEntityInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getEntityInfo
com.dahuatech.app.business.ContactsBusiness -> com.dahuatech.app.business.ContactsBusiness:
    com.dahuatech.app.bean.ContactInfo$ContactResultInfo contactResult -> a
    java.lang.reflect.Type listType -> b
    com.google.gson.Gson gson -> c
    com.dahuatech.app.business.ContactsBusiness contactsBusiness -> d
    com.dahuatech.app.business.ContactsBusiness getContactsBusiness(android.content.Context,java.lang.String) -> getContactsBusiness
    com.dahuatech.app.bean.ContactInfo$ContactResultInfo getContactsList(java.lang.String) -> getContactsList
com.dahuatech.app.business.ContactsBusiness$1 -> hs:
    com.dahuatech.app.business.ContactsBusiness this$0 -> a
com.dahuatech.app.business.ContributionAwardBusiness -> com.dahuatech.app.business.ContributionAwardBusiness:
    com.dahuatech.app.business.ContributionAwardBusiness contributionAwardBusiness -> a
    com.dahuatech.app.business.ContributionAwardBusiness getContributionAwardBusiness(android.content.Context,java.lang.String) -> getContributionAwardBusiness
    com.dahuatech.app.bean.mytask.ContributionAwardInfo getContributionAwardInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getContributionAwardInfo
com.dahuatech.app.business.DaHuaAssumeCostBusiness -> com.dahuatech.app.business.DaHuaAssumeCostBusiness:
    com.dahuatech.app.business.DaHuaAssumeCostBusiness daHuaAssumeCostBusiness -> a
    com.dahuatech.app.business.DaHuaAssumeCostBusiness getDaHuaAssumeCostBusiness(android.content.Context,java.lang.String) -> getDaHuaAssumeCostBusiness
    com.dahuatech.app.bean.mytask.DaHuaAssumeCostInfo getDaHuaAssumeCostInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getDaHuaAssumeCostInfo
com.dahuatech.app.business.DevelopHourBusiness -> com.dahuatech.app.business.DevelopHourBusiness:
    java.util.List dhList -> a
    java.util.List dhListProjectJson -> b
    java.util.List dhProjectList -> c
    java.util.List dhTypeList -> d
    java.util.List dhConfirmList -> e
    java.util.List dhConfirmListPerson -> f
    com.dahuatech.app.bean.develophour.DHDetailInfo dhDetailInfo -> g
    java.lang.reflect.Type dhListType -> h
    java.lang.reflect.Type dhListProjectJsonType -> i
    java.lang.reflect.Type dhProjectType -> j
    java.lang.reflect.Type dhType -> k
    java.lang.reflect.Type dhConfirmType -> l
    java.lang.reflect.Type dhConfirmListType -> m
    com.dahuatech.app.business.DevelopHourBusiness developHourBusiness -> n
    void setDhDetailInfo(com.dahuatech.app.bean.develophour.DHDetailInfo) -> setDhDetailInfo
    com.dahuatech.app.business.DevelopHourBusiness getDevelopHourBusiness(android.content.Context,java.lang.String) -> getDevelopHourBusiness
    java.util.List getDHList(com.dahuatech.app.bean.develophour.DHListParamInfo) -> getDHList
    java.util.List getDHListProject(com.dahuatech.app.bean.develophour.DHListProjectParamInfo) -> getDHListProject
    com.dahuatech.app.bean.develophour.DHDetailInfo getDHDetailInfo(com.dahuatech.app.bean.develophour.DHDetailParamInfo) -> getDHDetailInfo
    com.dahuatech.app.bean.ResultMessage uploadDHDetailInfo(com.dahuatech.app.bean.develophour.DHDetailInfo) -> uploadDHDetailInfo
    java.util.List getDHProject(com.dahuatech.app.bean.develophour.DHProjectParamInfo) -> getDHProject
    java.util.List getDHType(java.lang.String) -> getDHType
    java.util.List getDHConfirmList(com.dahuatech.app.bean.develophour.DHConfirmParamInfo) -> getDHConfirmList
    java.util.List getDHConfirmListPerson(com.dahuatech.app.bean.develophour.DHConfirmListPersonParamInfo) -> getDHConfirmListPerson
    com.dahuatech.app.bean.ResultMessage UploadDhConfirmData(com.dahuatech.app.bean.develophour.DHUploadConfirmInfo,java.util.List) -> UploadDhConfirmData
com.dahuatech.app.business.DevelopHourBusiness$1 -> ht:
    com.dahuatech.app.business.DevelopHourBusiness this$0 -> a
com.dahuatech.app.business.DevelopHourBusiness$2 -> hu:
    com.dahuatech.app.business.DevelopHourBusiness this$0 -> a
com.dahuatech.app.business.DevelopHourBusiness$3 -> hv:
    com.dahuatech.app.business.DevelopHourBusiness this$0 -> a
com.dahuatech.app.business.DevelopHourBusiness$4 -> hw:
    com.dahuatech.app.business.DevelopHourBusiness this$0 -> a
com.dahuatech.app.business.DevelopHourBusiness$5 -> hx:
    com.dahuatech.app.business.DevelopHourBusiness this$0 -> a
com.dahuatech.app.business.DevelopHourBusiness$6 -> hy:
    com.dahuatech.app.business.DevelopHourBusiness this$0 -> a
com.dahuatech.app.business.DevelopInquiryBusiness -> com.dahuatech.app.business.DevelopInquiryBusiness:
    java.lang.String KEY_FMASTERIALNAME -> KEY_FMASTERIALNAME
    java.lang.String KEY_FSUPPLIER -> KEY_FSUPPLIER
    java.lang.String KEY_FMANUFACTURER -> KEY_FMANUFACTURER
    java.lang.String KEY_FOFFER -> KEY_FOFFER
    java.lang.String KEY_FCURRENCY -> KEY_FCURRENCY
    java.lang.String KEY_FORDERQUANTITYFROM -> KEY_FORDERQUANTITYFROM
    java.lang.String KEY_FORDERQUANTITYTO -> KEY_FORDERQUANTITYTO
    java.lang.String KEY_FUNIT -> KEY_FUNIT
    java.lang.String KEY_FORDERFORWARD -> KEY_FORDERFORWARD
    java.lang.String KEY_FMINI -> KEY_FMINI
    java.lang.String KEY_FMINIORDER -> KEY_FMINIORDER
    java.lang.String KEY_FPAYMENT -> KEY_FPAYMENT
    com.dahuatech.app.business.DevelopInquiryBusiness developInquiryBusiness -> a
    com.dahuatech.app.business.DevelopInquiryBusiness getDevelopInquiryBusiness(android.content.Context,java.lang.String) -> getDevelopInquiryBusiness
    com.dahuatech.app.bean.mytask.DevelopInquiryTHeaderInfo getDevelopInquiryTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getDevelopInquiryTHeaderInfo
com.dahuatech.app.business.DevelopTestNetworkBusiness -> com.dahuatech.app.business.DevelopTestNetworkBusiness:
    com.dahuatech.app.business.DevelopTestNetworkBusiness developTestNetworkBusiness -> a
    com.dahuatech.app.business.DevelopTestNetworkBusiness getDevelopTestNetworkBusiness(android.content.Context,java.lang.String) -> getDevelopTestNetworkBusiness
    com.dahuatech.app.bean.mytask.DevelopTestNetworkTHeaderInfo getDevelopTestNetworkTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getDevelopTestNetworkTHeaderInfo
com.dahuatech.app.business.DevelopTravelBusiness -> com.dahuatech.app.business.DevelopTravelBusiness:
    com.dahuatech.app.business.DevelopTravelBusiness developTravelBusiness -> a
    com.dahuatech.app.business.DevelopTravelBusiness getDevelopTravelBusiness(android.content.Context,java.lang.String) -> getDevelopTravelBusiness
    com.dahuatech.app.bean.mytask.DevelopTravelTHeaderInfo getDevelopTravelTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getDevelopTravelTHeaderInfo
com.dahuatech.app.business.DocumentApproveBusiness -> com.dahuatech.app.business.DocumentApproveBusiness:
    com.dahuatech.app.business.DocumentApproveBusiness documentApproveBusiness -> a
    com.dahuatech.app.business.DocumentApproveBusiness getDocumentApproveBusiness(android.content.Context,java.lang.String) -> getDocumentApproveBusiness
    com.dahuatech.app.bean.mytask.DocumentApproveTHeaderInfo getDocumentApproveTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getDocumentApproveTHeaderInfo
com.dahuatech.app.business.DoorPermissionBusiness -> com.dahuatech.app.business.DoorPermissionBusiness:
    com.dahuatech.app.business.DoorPermissionBusiness doorPermissionBusiness -> a
    com.dahuatech.app.business.DoorPermissionBusiness getDoorPermissionBusiness(android.content.Context,java.lang.String) -> getDoorPermissionBusiness
    com.dahuatech.app.bean.mytask.DoorPermissionTHeaderInfo getDoorPermissionTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getDoorPermissionTHeaderInfo
com.dahuatech.app.business.EmailOpenBusiness -> com.dahuatech.app.business.EmailOpenBusiness:
    com.dahuatech.app.business.EmailOpenBusiness emailOpenBusiness -> a
    com.dahuatech.app.business.EmailOpenBusiness getEmailOpenBusiness(android.content.Context,java.lang.String) -> getEmailOpenBusiness
    com.dahuatech.app.bean.mytask.EmailOpenTHeaderInfo getEmailOpenTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getEmailOpenTHeaderInfo
com.dahuatech.app.business.EngineeringBusiness -> com.dahuatech.app.business.EngineeringBusiness:
    com.dahuatech.app.bean.mytask.EngineeringInfo engineeringInfo -> a
    com.dahuatech.app.business.EngineeringBusiness engineeringBusiness -> b
    com.dahuatech.app.business.EngineeringBusiness getEngineeringBusiness(android.content.Context,java.lang.String) -> getEngineeringBusiness
    com.dahuatech.app.bean.mytask.EngineeringInfo getEngineeringInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getEngineeringInfo
com.dahuatech.app.business.ExAttendanceBusiness -> com.dahuatech.app.business.ExAttendanceBusiness:
    com.dahuatech.app.business.ExAttendanceBusiness exAttendanceBusiness -> a
    com.dahuatech.app.business.ExAttendanceBusiness getExAttendanceBusiness(android.content.Context,java.lang.String) -> getExAttendanceBusiness
    com.dahuatech.app.bean.mytask.ExAttendanceTHeaderInfo getExAttendanceTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getExAttendanceTHeaderInfo
com.dahuatech.app.business.ExpandableBusiness -> com.dahuatech.app.business.ExpandableBusiness:
    java.util.List arrayList -> a
    java.lang.reflect.Type listType -> b
    com.dahuatech.app.business.ExpandableBusiness expandableBusiness -> c
    com.dahuatech.app.business.ExpandableBusiness getExpandableBusiness(android.content.Context,java.lang.String) -> getExpandableBusiness
    java.util.List getExpandableList(com.dahuatech.app.bean.expense.FlowParamInfo) -> getExpandableList
com.dahuatech.app.business.ExpandableBusiness$1 -> hz:
    com.dahuatech.app.business.ExpandableBusiness this$0 -> a
com.dahuatech.app.business.ExpenseBusiness -> com.dahuatech.app.business.ExpenseBusiness:
    com.dahuatech.app.business.ExpenseBusiness expenseBusiness -> a
    com.dahuatech.app.business.ExpenseBusiness getExpenseBusiness(android.content.Context,java.lang.String) -> getExpenseBusiness
    com.dahuatech.app.bean.ResultMessage upload(com.dahuatech.app.bean.expense.GpsInfo) -> upload
    com.dahuatech.app.bean.ResultMessage batchUpload(java.util.List) -> batchUpload
    com.dahuatech.app.bean.ResultMessage flowBatchUpload(java.util.List) -> flowBatchUpload
com.dahuatech.app.business.ExpenseCostTHeaderBusiness -> com.dahuatech.app.business.ExpenseCostTHeaderBusiness:
    com.dahuatech.app.business.ExpenseCostTHeaderBusiness expenseCostTHeaderBusiness -> a
    com.dahuatech.app.business.ExpenseCostTHeaderBusiness getExpenseCostTHeaderBusiness(android.content.Context,java.lang.String) -> getExpenseCostTHeaderBusiness
    com.dahuatech.app.bean.mytask.ExpenseCostTHeaderInfo getExpenseCostTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getExpenseCostTHeaderInfo
com.dahuatech.app.business.ExpenseFlowItemBusiness -> com.dahuatech.app.business.ExpenseFlowItemBusiness:
    java.util.List arrayList -> a
    java.lang.reflect.Type listType -> b
    com.dahuatech.app.business.ExpenseFlowItemBusiness expenseFlowItemBusiness -> c
    com.dahuatech.app.business.ExpenseFlowItemBusiness getExpenseFlowItemBusiness(android.content.Context,java.lang.String) -> getExpenseFlowItemBusiness
    java.util.List getExpenseFlowItemList(com.dahuatech.app.bean.expense.FlowSearchParamInfo) -> getExpenseFlowItemList
com.dahuatech.app.business.ExpenseFlowItemBusiness$1 -> ia:
    com.dahuatech.app.business.ExpenseFlowItemBusiness this$0 -> a
com.dahuatech.app.business.ExpenseMarketBidTHeaderBusiness -> com.dahuatech.app.business.ExpenseMarketBidTHeaderBusiness:
    com.dahuatech.app.business.ExpenseMarketBidTHeaderBusiness expenseMarketBidTHeaderBusiness -> a
    com.dahuatech.app.business.ExpenseMarketBidTHeaderBusiness getExpenseMarketBidTHeaderBusiness(android.content.Context,java.lang.String) -> getExpenseMarketBidTHeaderBusiness
    com.dahuatech.app.bean.mytask.ExpenseMarketBidTHeaderInfo getExpenseMarketBidTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getExpenseMarketBidTHeaderInfo
com.dahuatech.app.business.ExpenseMarketPayTHeaderBusiness -> com.dahuatech.app.business.ExpenseMarketPayTHeaderBusiness:
    com.dahuatech.app.business.ExpenseMarketPayTHeaderBusiness expenseMarketPayTHeaderBusiness -> a
    com.dahuatech.app.business.ExpenseMarketPayTHeaderBusiness getExpenseMarketPayTHeaderBusiness(android.content.Context,java.lang.String) -> getExpenseMarketPayTHeaderBusiness
    com.dahuatech.app.bean.mytask.ExpenseMarketPayTHeaderInfo getExpenseMarketPayTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getExpenseMarketPayTHeaderInfo
com.dahuatech.app.business.ExpensePrivateTBodyBusiness -> com.dahuatech.app.business.ExpensePrivateTBodyBusiness:
    java.util.List arrayList -> a
    java.lang.reflect.Type listType -> b
    com.dahuatech.app.business.ExpensePrivateTBodyBusiness expensePrivateTBodyBusiness -> c
    com.dahuatech.app.business.ExpensePrivateTBodyBusiness getExpensePrivateTBodyBusiness(android.content.Context,java.lang.String) -> getExpensePrivateTBodyBusiness
    java.util.List getExpensePrivateTBodyList(com.dahuatech.app.bean.mytask.ExpensePrivateTBodyParam) -> getExpensePrivateTBodyList
com.dahuatech.app.business.ExpensePrivateTBodyBusiness$1 -> ib:
    com.dahuatech.app.business.ExpensePrivateTBodyBusiness this$0 -> a
com.dahuatech.app.business.ExpensePrivateTHeaderBusiness -> com.dahuatech.app.business.ExpensePrivateTHeaderBusiness:
    com.dahuatech.app.business.ExpensePrivateTHeaderBusiness expensePrivateTHeaderBusiness -> a
    com.dahuatech.app.business.ExpensePrivateTHeaderBusiness getExpensePrivateTHeaderBusiness(android.content.Context,java.lang.String) -> getExpensePrivateTHeaderBusiness
    com.dahuatech.app.bean.mytask.ExpensePrivateTHeaderInfo getExpensePrivateTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getExpensePrivateTHeaderInfo
com.dahuatech.app.business.ExpensePublicTHeaderBusiness -> com.dahuatech.app.business.ExpensePublicTHeaderBusiness:
    com.dahuatech.app.business.ExpensePublicTHeaderBusiness expensePublicTHeaderBusiness -> a
    com.dahuatech.app.business.ExpensePublicTHeaderBusiness getExpensePublicTHeaderBusiness(android.content.Context,java.lang.String) -> getExpensePublicTHeaderBusiness
    com.dahuatech.app.bean.mytask.ExpensePublicTHeaderInfo getExpensePublicTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getExpensePublicTHeaderInfo
com.dahuatech.app.business.ExpenseSpecialTBodyBusiness -> com.dahuatech.app.business.ExpenseSpecialTBodyBusiness:
    java.util.List arrayList -> a
    java.lang.reflect.Type listType -> b
    com.dahuatech.app.business.ExpenseSpecialTBodyBusiness expenseSpecialTBodyBusiness -> c
    com.dahuatech.app.business.ExpenseSpecialTBodyBusiness getExpenseSpecialTBodyBusiness(android.content.Context,java.lang.String) -> getExpenseSpecialTBodyBusiness
    java.util.List getExpenseSpecialTBodyList(com.dahuatech.app.bean.mytask.ExpensePrivateTBodyParam) -> getExpenseSpecialTBodyList
com.dahuatech.app.business.ExpenseSpecialTBodyBusiness$1 -> ic:
    com.dahuatech.app.business.ExpenseSpecialTBodyBusiness this$0 -> a
com.dahuatech.app.business.ExpenseSpecialTHeaderBusiness -> com.dahuatech.app.business.ExpenseSpecialTHeaderBusiness:
    com.dahuatech.app.business.ExpenseSpecialTHeaderBusiness expenseSpecialTHeaderBusiness -> a
    com.dahuatech.app.business.ExpenseSpecialTHeaderBusiness getExpenseSpecialTHeaderBusiness(android.content.Context,java.lang.String) -> getExpenseSpecialTHeaderBusiness
    com.dahuatech.app.bean.mytask.ExpenseSpecialTHeaderInfo getExpenseSpecialTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getExpenseSpecialTHeaderInfo
com.dahuatech.app.business.ExpenseSpecialThingBodyBusiness -> com.dahuatech.app.business.ExpenseSpecialThingBodyBusiness:
    java.util.List arrayList -> a
    java.lang.reflect.Type listType -> b
    com.dahuatech.app.business.ExpenseSpecialThingBodyBusiness expenseSpecialThingBodyBusiness -> c
    com.dahuatech.app.business.ExpenseSpecialThingBodyBusiness getExpenseSpecialTBodyBusiness(android.content.Context,java.lang.String) -> getExpenseSpecialTBodyBusiness
    java.util.List getExpenseSpecialTBodyList(com.dahuatech.app.bean.mytask.ExpensePrivateTBodyParam) -> getExpenseSpecialTBodyList
com.dahuatech.app.business.ExpenseSpecialThingBodyBusiness$1 -> id:
    com.dahuatech.app.business.ExpenseSpecialThingBodyBusiness this$0 -> a
com.dahuatech.app.business.ExpenseSpecialThingHeaderBusiness -> com.dahuatech.app.business.ExpenseSpecialThingHeaderBusiness:
    com.dahuatech.app.business.ExpenseSpecialThingHeaderBusiness expenseSpecialThingHeaderBusiness -> a
    com.dahuatech.app.business.ExpenseSpecialThingHeaderBusiness getExpenseSpecialTHeaderBusiness(android.content.Context,java.lang.String) -> getExpenseSpecialTHeaderBusiness
    com.dahuatech.app.bean.mytask.ExpenseSpecialThingHeaderInfo getExpenseSpecialThingHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getExpenseSpecialThingHeaderInfo
com.dahuatech.app.business.FactoryBusiness -> com.dahuatech.app.business.FactoryBusiness:
    java.lang.Object t -> a
    android.content.Context context -> b
    com.dahuatech.app.business.FactoryBusiness mInstance -> c
    java.lang.Object getT() -> getT
    void setT(java.lang.Object) -> setT
    com.dahuatech.app.business.FactoryBusiness getFactoryBusiness(android.content.Context) -> getFactoryBusiness
    java.lang.Object getInstance(java.lang.String,java.lang.String) -> getInstance
com.dahuatech.app.business.FeDestroyBusiness -> com.dahuatech.app.business.FeDestroyBusiness:
    com.dahuatech.app.business.FeDestroyBusiness feDestroyBusiness -> a
    com.dahuatech.app.business.FeDestroyBusiness getFeDestroyBusiness(android.content.Context,java.lang.String) -> getFeDestroyBusiness
    com.dahuatech.app.bean.mytask.FeDestroyTHeaderInfo getFeDestroyTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getFeDestroyTHeaderInfo
com.dahuatech.app.business.FeEngravingBusiness -> com.dahuatech.app.business.FeEngravingBusiness:
    com.dahuatech.app.business.FeEngravingBusiness feEngravingBusiness -> a
    com.dahuatech.app.business.FeEngravingBusiness getFeEngravingBusiness(android.content.Context,java.lang.String) -> getFeEngravingBusiness
    com.dahuatech.app.bean.mytask.FeEngravingTHeaderInfo getFeEngravingTHeaderInfoo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getFeEngravingTHeaderInfoo
com.dahuatech.app.business.FeTakeOutBusiness -> com.dahuatech.app.business.FeTakeOutBusiness:
    com.dahuatech.app.business.FeTakeOutBusiness feTakeOutBusiness -> a
    com.dahuatech.app.business.FeTakeOutBusiness getFeTakeOutBusiness(android.content.Context,java.lang.String) -> getFeTakeOutBusiness
    com.dahuatech.app.bean.mytask.FeTakeOutTHeaderInfo getFeTakeOutTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getFeTakeOutTHeaderInfo
com.dahuatech.app.business.FeTransferBusiness -> com.dahuatech.app.business.FeTransferBusiness:
    com.dahuatech.app.business.FeTransferBusiness feTransferBusiness -> a
    com.dahuatech.app.business.FeTransferBusiness getFeTransferBusiness(android.content.Context,java.lang.String) -> getFeTransferBusiness
    com.dahuatech.app.bean.mytask.FeTransferTHeaderInfo getFeTransferTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getFeTransferTHeaderInfo
com.dahuatech.app.business.FeUpdateBusiness -> com.dahuatech.app.business.FeUpdateBusiness:
    com.dahuatech.app.business.FeUpdateBusiness feUpdateBusiness -> a
    com.dahuatech.app.business.FeUpdateBusiness getFeUpdateBusiness(android.content.Context,java.lang.String) -> getFeUpdateBusiness
    com.dahuatech.app.bean.mytask.FeUpdateTHeaderInfo getFeUpdateTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getFeUpdateTHeaderInfo
com.dahuatech.app.business.FixedAssetsSpecialBusiness -> com.dahuatech.app.business.FixedAssetsSpecialBusiness:
    com.dahuatech.app.business.FixedAssetsSpecialBusiness fixedAssetsSpecialBusiness -> a
    com.dahuatech.app.business.FixedAssetsSpecialBusiness getFixedAssetsSpecialBusiness(android.content.Context,java.lang.String) -> getFixedAssetsSpecialBusiness
    com.dahuatech.app.bean.mytask.FixedAssetsSpecialTHeaderInfo getFixedAssetsSpecialTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getFixedAssetsSpecialTHeaderInfo
com.dahuatech.app.business.LowConsumableBusiness -> com.dahuatech.app.business.LowConsumableBusiness:
    com.dahuatech.app.business.LowConsumableBusiness lowConsumableBusiness -> a
    com.dahuatech.app.business.LowConsumableBusiness getLowConsumableBusiness(android.content.Context,java.lang.String) -> getLowConsumableBusiness
    com.dahuatech.app.bean.mytask.LowConsumableTHeaderInfo getLowConsumableTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getLowConsumableTHeaderInfo
com.dahuatech.app.business.LowerNodeAppBusiness -> com.dahuatech.app.business.LowerNodeAppBusiness:
    java.util.List arrayList -> a
    java.lang.reflect.Type listType -> b
    com.dahuatech.app.api.ApiClient apiClient -> c
    com.dahuatech.app.business.LowerNodeAppBusiness lowerNodeAppBusiness -> d
    com.dahuatech.app.business.LowerNodeAppBusiness getLowerNodeAppBusiness(android.content.Context,java.lang.String) -> getLowerNodeAppBusiness
    java.util.List getLowerNodeAppInfo(com.dahuatech.app.bean.RepositoryInfo,java.lang.String) -> getLowerNodeAppInfo
    com.dahuatech.app.bean.ResultMessage passWorkFlowHandle(com.dahuatech.app.bean.mytask.LowerNodeAppConfigInfo,java.util.List) -> passWorkFlowHandle
com.dahuatech.app.business.LowerNodeAppBusiness$1 -> ie:
    com.dahuatech.app.business.LowerNodeAppBusiness this$0 -> a
com.dahuatech.app.business.MarketBusiness -> com.dahuatech.app.business.MarketBusiness:
    java.util.List bidList -> a
    java.util.List contractList -> b
    java.util.List productList -> c
    java.util.List workflowList -> d
    java.lang.reflect.Type bidListType -> e
    java.lang.reflect.Type contractListType -> f
    java.lang.reflect.Type productListType -> g
    java.lang.reflect.Type workflowListType -> h
    com.google.gson.Gson gson -> i
    com.dahuatech.app.api.ApiClient apiClient -> j
    com.dahuatech.app.business.MarketBusiness marketBusiness -> k
    com.dahuatech.app.business.MarketBusiness getMarketBusiness(android.content.Context,java.lang.String) -> getMarketBusiness
    java.util.List getMarketBidList(com.dahuatech.app.bean.market.MarketSearchParamInfo) -> getMarketBidList
    java.util.List getMarketContractList(com.dahuatech.app.bean.market.MarketSearchParamInfo) -> getMarketContractList
    java.util.List getMarketProductList(com.dahuatech.app.bean.market.MarketSearchParamInfo) -> getMarketProductList
    java.util.List getMarketWorkflowInfo(com.dahuatech.app.bean.RepositoryInfo,com.dahuatech.app.bean.SqlParametersInfo) -> getMarketWorkflowInfo
    java.util.List getMarketBidHistoryList(java.util.List) -> getMarketBidHistoryList
    java.util.List getMarketContractHistoryList(java.util.List) -> getMarketContractHistoryList
com.dahuatech.app.business.MarketBusiness$1 -> if:
    com.dahuatech.app.business.MarketBusiness this$0 -> a
com.dahuatech.app.business.MarketBusiness$2 -> ig:
    com.dahuatech.app.business.MarketBusiness this$0 -> a
com.dahuatech.app.business.MarketBusiness$3 -> ih:
    com.dahuatech.app.business.MarketBusiness this$0 -> a
com.dahuatech.app.business.MarketBusiness$4 -> ii:
    com.dahuatech.app.business.MarketBusiness this$0 -> a
com.dahuatech.app.business.MeetingBusiness -> com.dahuatech.app.business.MeetingBusiness:
    com.google.gson.Gson gson -> a
    android.content.Context context -> b
    org.json.JSONArray jsonArray -> c
    org.json.JSONObject jsonObject -> d
    com.dahuatech.app.bean.ResultMessage resultMessage -> e
    com.dahuatech.app.bean.ResponseMessage responseMessage -> f
    java.lang.String serviceUrl -> g
    com.dahuatech.app.bean.meeting.MeetingDetailInfo meetingDetailInfo -> h
    java.lang.reflect.Type meetingListType -> i
    java.lang.reflect.Type personListType -> j
    java.lang.reflect.Type roomListType -> k
    java.util.List meetingList -> l
    java.util.List personList -> m
    java.util.List roomList -> n
    com.dahuatech.app.business.MeetingBusiness meetingBusiness -> o
    void setMeetingDetailInfo(com.dahuatech.app.bean.meeting.MeetingDetailInfo) -> setMeetingDetailInfo
    java.lang.String getServiceUrl() -> getServiceUrl
    void setServiceUrl(java.lang.String) -> setServiceUrl
    android.content.Context getContext() -> getContext
    void setContext(android.content.Context) -> setContext
    com.dahuatech.app.business.MeetingBusiness getMeetingBusiness(android.content.Context,java.lang.String) -> getMeetingBusiness
    com.dahuatech.app.bean.meeting.MeetingDetailInfo getMeetingInitInfo(java.lang.String) -> getMeetingInitInfo
    com.dahuatech.app.bean.meeting.MeetingDetailInfo getMeetingDetailInfo(java.lang.String) -> getMeetingDetailInfo
    com.dahuatech.app.bean.ResultMessage uploadMeetingDetail(com.dahuatech.app.bean.meeting.MeetingDetailInfo) -> uploadMeetingDetail
    com.dahuatech.app.bean.ResultMessage removeMeetingListItem(java.lang.String) -> removeMeetingListItem
    java.util.List getMeetingList(com.dahuatech.app.bean.meeting.MeetingListParamInfo) -> getMeetingList
    java.util.List getPersonList(com.dahuatech.app.bean.meeting.MeetingSearchParamInfo) -> getPersonList
    java.util.List getRoomList(com.dahuatech.app.bean.meeting.MeetingSearchParamInfo) -> getRoomList
    java.util.List getInitRoomList(com.dahuatech.app.bean.meeting.MeetingInitParamInfo) -> getInitRoomList
com.dahuatech.app.business.MeetingBusiness$1 -> ij:
    com.dahuatech.app.business.MeetingBusiness this$0 -> a
com.dahuatech.app.business.MeetingBusiness$2 -> ik:
    com.dahuatech.app.business.MeetingBusiness this$0 -> a
com.dahuatech.app.business.MeetingBusiness$3 -> il:
    com.dahuatech.app.business.MeetingBusiness this$0 -> a
com.dahuatech.app.business.MemRequreBusiness -> com.dahuatech.app.business.MemRequreBusiness:
    com.dahuatech.app.business.MemRequreBusiness memRequreBusiness -> a
    com.dahuatech.app.business.MemRequreBusiness getMemRequreBusiness(android.content.Context,java.lang.String) -> getMemRequreBusiness
    com.dahuatech.app.bean.mytask.MemRequreInfo getMemRequreInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getMemRequreInfo
com.dahuatech.app.business.NetworkPermissionBusiness -> com.dahuatech.app.business.NetworkPermissionBusiness:
    com.dahuatech.app.business.NetworkPermissionBusiness networkPermissionBusiness -> a
    com.dahuatech.app.business.NetworkPermissionBusiness getNetworkPermissionBusiness(android.content.Context,java.lang.String) -> getNetworkPermissionBusiness
    com.dahuatech.app.bean.mytask.NetworkPermissionTHeaderInfo getNetworkPermissionTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getNetworkPermissionTHeaderInfo
com.dahuatech.app.business.NewProductLibBusiness -> com.dahuatech.app.business.NewProductLibBusiness:
    com.dahuatech.app.business.NewProductLibBusiness newProductLibBusiness -> a
    com.dahuatech.app.business.NewProductLibBusiness getNewProductLibBusiness(android.content.Context,java.lang.String) -> getNewProductLibBusiness
    com.dahuatech.app.bean.mytask.NewProductLibTHeaderInfo getNewProductLibTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getNewProductLibTHeaderInfo
com.dahuatech.app.business.NewProductReworkBusiness -> com.dahuatech.app.business.NewProductReworkBusiness:
    com.dahuatech.app.business.NewProductReworkBusiness newProductReworkBusiness -> a
    com.dahuatech.app.business.NewProductReworkBusiness getNewProductReworkBusiness(android.content.Context,java.lang.String) -> getNewProductReworkBusiness
    com.dahuatech.app.bean.mytask.NewProductReworkTHeaderInfo getNewProductReworkTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getNewProductReworkTHeaderInfo
com.dahuatech.app.business.NoticeBussiness -> com.dahuatech.app.business.NoticeBussiness:
    com.dahuatech.app.business.NoticeBussiness noticeBussiness -> a
    com.dahuatech.app.business.NoticeBussiness getNoticeBussiness(android.content.Context,java.lang.String) -> getNoticeBussiness
    java.lang.String getTaskCount(java.lang.String) -> getTaskCount
com.dahuatech.app.business.ProjectReadBusiness -> com.dahuatech.app.business.ProjectReadBusiness:
    com.dahuatech.app.business.ProjectReadBusiness projectReadBusiness -> a
    com.dahuatech.app.business.ProjectReadBusiness getProjectReadBusiness(android.content.Context,java.lang.String) -> getProjectReadBusiness
    com.dahuatech.app.bean.mytask.ProjectReadTHeaderInfo getProjectReadTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getProjectReadTHeaderInfo
com.dahuatech.app.business.PurchaseStockBusiness -> com.dahuatech.app.business.PurchaseStockBusiness:
    com.dahuatech.app.business.PurchaseStockBusiness purchaseStockBusiness -> a
    com.dahuatech.app.business.PurchaseStockBusiness getPurchaseStockBusiness(android.content.Context,java.lang.String) -> getPurchaseStockBusiness
    com.dahuatech.app.bean.mytask.PurchaseStockTHeaderInfo getPurchaseStockTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getPurchaseStockTHeaderInfo
com.dahuatech.app.business.RejectNodeBusiness -> com.dahuatech.app.business.RejectNodeBusiness:
    java.util.List arrayList -> a
    java.util.List plusCopyPersonList -> b
    java.lang.reflect.Type listType -> c
    java.lang.reflect.Type plusCopyListType -> d
    com.dahuatech.app.api.ApiClient apiClient -> e
    com.dahuatech.app.business.RejectNodeBusiness rejectNodeBusiness -> f
    com.dahuatech.app.business.RejectNodeBusiness getRejectNodeBusiness(android.content.Context,java.lang.String) -> getRejectNodeBusiness
    java.util.List getRejectNodeInfo(com.dahuatech.app.bean.RepositoryInfo,java.lang.String) -> getRejectNodeInfo
    java.util.List getPlusCopyPersonList(java.lang.String) -> getPlusCopyPersonList
    com.dahuatech.app.bean.ResultMessage plusCopyApp(com.dahuatech.app.bean.mytask.PlusCopyInfo) -> plusCopyApp
com.dahuatech.app.business.RejectNodeBusiness$1 -> im:
    com.dahuatech.app.business.RejectNodeBusiness this$0 -> a
com.dahuatech.app.business.RejectNodeBusiness$2 -> in:
    com.dahuatech.app.business.RejectNodeBusiness this$0 -> a
com.dahuatech.app.business.SettingBusiness -> com.dahuatech.app.business.SettingBusiness:
    com.dahuatech.app.business.SettingBusiness settingBusiness -> a
    com.dahuatech.app.business.SettingBusiness getSettingBusiness(android.content.Context,java.lang.String) -> getSettingBusiness
    com.dahuatech.app.bean.UpdateInfo checkVersion() -> checkVersion
    void SendLogRecord(com.dahuatech.app.bean.LogsRecordInfo) -> SendLogRecord
com.dahuatech.app.business.SvnPermissionBusiness -> com.dahuatech.app.business.SvnPermissionBusiness:
    com.dahuatech.app.business.SvnPermissionBusiness svnPermissionBusiness -> a
    com.dahuatech.app.business.SvnPermissionBusiness getSvnPermissionBusiness(android.content.Context,java.lang.String) -> getSvnPermissionBusiness
    com.dahuatech.app.bean.mytask.SvnPermissionTHeaderInfo getSvnPermissionTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getSvnPermissionTHeaderInfo
com.dahuatech.app.business.TaskListBusiness -> com.dahuatech.app.business.TaskListBusiness:
    java.util.List arrayList -> a
    java.lang.reflect.Type listType -> b
    com.dahuatech.app.business.TaskListBusiness taskListBusiness -> c
    com.dahuatech.app.business.TaskListBusiness getTaskListBusiness(android.content.Context,java.lang.String) -> getTaskListBusiness
    java.util.List getTaskList(com.dahuatech.app.bean.RepositoryInfo,java.util.List) -> getTaskList
com.dahuatech.app.business.TaskListBusiness$1 -> io:
    com.dahuatech.app.business.TaskListBusiness this$0 -> a
com.dahuatech.app.business.TdBorrowBusiness -> com.dahuatech.app.business.TdBorrowBusiness:
    com.dahuatech.app.business.TdBorrowBusiness tdBorrowBusiness -> a
    com.dahuatech.app.business.TdBorrowBusiness getTdBorrowBusiness(android.content.Context,java.lang.String) -> getTdBorrowBusiness
    com.dahuatech.app.bean.mytask.TdBorrowTHeaderInfo getTdBorrowTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getTdBorrowTHeaderInfo
com.dahuatech.app.business.TdPermissionBusiness -> com.dahuatech.app.business.TdPermissionBusiness:
    com.dahuatech.app.business.TdPermissionBusiness tdPermissionBusiness -> a
    com.dahuatech.app.business.TdPermissionBusiness getTdPermissionBusiness(android.content.Context,java.lang.String) -> getTdPermissionBusiness
    com.dahuatech.app.bean.mytask.TdPermissionTHeaderInfo getTdPermissionTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getTdPermissionTHeaderInfo
com.dahuatech.app.business.TrainComputerBusiness -> com.dahuatech.app.business.TrainComputerBusiness:
    com.dahuatech.app.business.TrainComputerBusiness trainComputerBusiness -> a
    com.dahuatech.app.business.TrainComputerBusiness getTrainComputerBusiness(android.content.Context,java.lang.String) -> getTrainComputerBusiness
    com.dahuatech.app.bean.mytask.TrainComputerTHeaderInfo getTrainComputerTHeaderInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getTrainComputerTHeaderInfo
com.dahuatech.app.business.TravelApprovalBusiness -> com.dahuatech.app.business.TravelApprovalBusiness:
    com.dahuatech.app.business.TravelApprovalBusiness travelApprovalBusiness -> a
    com.dahuatech.app.business.TravelApprovalBusiness getTravelApprovalBusiness(android.content.Context,java.lang.String) -> getTravelApprovalBusiness
    com.dahuatech.app.bean.mytask.TravelApprovalInfo getTravelApprovalInfo(com.dahuatech.app.bean.mytask.TaskParamInfo) -> getTravelApprovalInfo
com.dahuatech.app.business.UserLoginBussiness -> com.dahuatech.app.business.UserLoginBussiness:
    com.dahuatech.app.business.UserLoginBussiness userLoginBussiness -> a
    com.dahuatech.app.business.UserLoginBussiness getUserLoginBussiness(android.content.Context,java.lang.String) -> getUserLoginBussiness
    java.lang.String loginVerify(com.dahuatech.app.bean.UserInfo) -> loginVerify
    com.dahuatech.app.bean.ResultMessage verifyValid(java.lang.String) -> verifyValid
com.dahuatech.app.business.WorkFlowBusiness -> com.dahuatech.app.business.WorkFlowBusiness:
    java.util.List arrayList -> a
    java.lang.reflect.Type listType -> b
    com.dahuatech.app.api.ApiClient apiClient -> c
    com.dahuatech.app.business.WorkFlowBusiness workFlowBusiness -> d
    com.dahuatech.app.business.WorkFlowBusiness getWorkFlowBusiness(android.content.Context) -> getWorkFlowBusiness
    java.util.List getWorkFlowInfo(com.dahuatech.app.bean.RepositoryInfo,com.dahuatech.app.bean.SqlParametersInfo) -> getWorkFlowInfo
    com.dahuatech.app.bean.ResultMessage approveHandle(com.dahuatech.app.bean.RepositoryInfo,java.lang.String) -> approveHandle
com.dahuatech.app.business.WorkFlowBusiness$1 -> ip:
    com.dahuatech.app.business.WorkFlowBusiness this$0 -> a
com.dahuatech.app.common.AmapConstants -> com.dahuatech.app.common.AmapConstants:
    int ERROR -> ERROR
    com.amap.api.maps.model.LatLng COMPANY_1199 -> COMPANY_1199
    com.amap.api.maps.model.LatLng COMPANY_1187 -> COMPANY_1187
    long INTERVALFIVESECOND -> INTERVALFIVESECOND
    float FIXMETER -> FIXMETER
    float RADIUS -> RADIUS
    long EXPIRATION_TIME -> EXPIRATION_TIME
com.dahuatech.app.common.BitmapManager -> com.dahuatech.app.common.BitmapManager:
    java.util.HashMap cache -> a
    java.util.concurrent.ExecutorService pool -> b
    java.util.Map imageViews -> c
    android.graphics.Bitmap defaultBmp -> d
    android.content.Context context -> e
    com.dahuatech.app.common.BitmapManager getInstance(android.content.Context) -> getInstance
    com.dahuatech.app.common.BitmapManager getInstance(android.content.Context,android.graphics.Bitmap) -> getInstance
    void loadBitmap(java.lang.String,android.widget.ImageView) -> loadBitmap
    void loadBitmap(java.lang.String,android.widget.ImageView,android.graphics.Bitmap) -> loadBitmap
    void loadBitmap(java.lang.String,android.widget.ImageView,android.graphics.Bitmap,int,int) -> loadBitmap
    android.graphics.Bitmap getBitmapFromCache(java.lang.String) -> getBitmapFromCache
    void queueJob(java.lang.String,android.widget.ImageView,int,int) -> queueJob
    android.graphics.Bitmap downloadBitmap(java.lang.String,int,int) -> a
    java.util.Map access$2() -> a
    android.graphics.Bitmap access$3(com.dahuatech.app.common.BitmapManager,java.lang.String,int,int) -> a
com.dahuatech.app.common.BitmapManager$1 -> iq:
    com.dahuatech.app.common.BitmapManager this$0 -> a
    android.widget.ImageView val$imageView -> b
    java.lang.String val$url -> c
    void handleMessage(android.os.Message) -> handleMessage
com.dahuatech.app.common.BitmapManager$2 -> ir:
    com.dahuatech.app.common.BitmapManager this$0 -> a
    java.lang.String val$url -> b
    int val$width -> c
    int val$height -> d
    android.os.Handler val$handler -> e
    void run() -> run
com.dahuatech.app.common.BitmapManager$BitmapManagerHolder -> is:
    com.dahuatech.app.common.BitmapManager getInstanceNonParam(android.content.Context) -> b
    com.dahuatech.app.common.BitmapManager getInstanceWithParam(android.content.Context,android.graphics.Bitmap) -> b
    com.dahuatech.app.common.BitmapManager access$0(android.content.Context) -> a
    com.dahuatech.app.common.BitmapManager access$1(android.content.Context,android.graphics.Bitmap) -> a
com.dahuatech.app.common.DBUtils -> com.dahuatech.app.common.DBUtils:
    java.lang.String DATABASE_NAME -> DATABASE_NAME
    java.lang.String SD_DATABASE_NAME -> SD_DATABASE_NAME
    int DATABASE_VERSION -> DATABASE_VERSION
    java.lang.String DATABASE_TABLE -> DATABASE_TABLE
    java.lang.String DATABASE_TABLE_CLIENT_SEARCH -> DATABASE_TABLE_CLIENT_SEARCH
    java.lang.String DATABASE_TABLE_PROJECT_SEARCH -> DATABASE_TABLE_PROJECT_SEARCH
    java.lang.String DATABASE_TABLE_FLOW_DETAIL -> DATABASE_TABLE_FLOW_DETAIL
    java.lang.String DATABASE_TABLE_MEETING_ROOM_SEARCH -> DATABASE_TABLE_MEETING_ROOM_SEARCH
    java.lang.String DATABASE_TABLE_MEETING_PERSON_SEARCH -> DATABASE_TABLE_MEETING_PERSON_SEARCH
    java.lang.String DATABASE_TABLE_PLUSCOPY_PERSON_SEARCH -> DATABASE_TABLE_PLUSCOPY_PERSON_SEARCH
    java.lang.String DATABASE_TABLE_DEVELOP_HOURS_PROJECT_SEARCH -> DATABASE_TABLE_DEVELOP_HOURS_PROJECT_SEARCH
    java.lang.String DATABASE_TABLE_MARKET_BID_SEARCH -> DATABASE_TABLE_MARKET_BID_SEARCH
    java.lang.String DATABASE_TABLE_MARKET_CONTRACT_SEARCH -> DATABASE_TABLE_MARKET_CONTRACT_SEARCH
    java.lang.String DATABASE_TABLE_MARKET_CONTACT_SEARCH -> DATABASE_TABLE_MARKET_CONTACT_SEARCH
    java.lang.String DATABASE_CREATE -> DATABASE_CREATE
    java.lang.String DATABASE_CREATE_CLIENT_SEARCH -> DATABASE_CREATE_CLIENT_SEARCH
    java.lang.String DATABASE_CREATE_PROJECT_SEARCH -> DATABASE_CREATE_PROJECT_SEARCH
    java.lang.String DATABASE_CREATE_FLOW_DETAIL -> DATABASE_CREATE_FLOW_DETAIL
    java.lang.String DATABASE_CREATE_ROOM_SEARCH -> DATABASE_CREATE_ROOM_SEARCH
    java.lang.String DATABASE_CREATE_PERSON_SEARCH -> DATABASE_CREATE_PERSON_SEARCH
    java.lang.String DATABASE_CREATE_PLUSCOPY_PERSON_SEARCH -> DATABASE_CREATE_PLUSCOPY_PERSON_SEARCH
    java.lang.String DATABASE_CREATE_DEVELOP_HOURS_PROJECT_SEARCH -> DATABASE_CREATE_DEVELOP_HOURS_PROJECT_SEARCH
    java.lang.String DATABASE_CREATE_MARKET_BID_SEARCH -> DATABASE_CREATE_MARKET_BID_SEARCH
    java.lang.String DATABASE_CREATE_MARKET_CONTRACT_SEARCH -> DATABASE_CREATE_MARKET_CONTRACT_SEARCH
    java.lang.String DATABASE_CREATE_MARKET_CONTACT_SEARCH -> DATABASE_CREATE_MARKET_CONTACT_SEARCH
    java.lang.String DROP_TEMP_DATABASE_TABLE -> DROP_TEMP_DATABASE_TABLE
    java.lang.String DROP_TEMP_DATABASE_TABLE_CLIENT_SEARCH -> DROP_TEMP_DATABASE_TABLE_CLIENT_SEARCH
    java.lang.String DROP_TEMP_DATABASE_TABLE_PROJECT_SEARCH -> DROP_TEMP_DATABASE_TABLE_PROJECT_SEARCH
    java.lang.String DROP_TEMP_DATABASE_TABLE_FLOW_DETAIL -> DROP_TEMP_DATABASE_TABLE_FLOW_DETAIL
    java.lang.String DROP_TEMP_DATABASE_TABLE_ROOM_SEARCH -> DROP_TEMP_DATABASE_TABLE_ROOM_SEARCH
    java.lang.String DROP_TEMP_DATABASE_TABLE_PERSON_SEARCH -> DROP_TEMP_DATABASE_TABLE_PERSON_SEARCH
    java.lang.String DROP_TEMP_DATABASE_TABLE_PLUSCOPY_PERSON_SEARCH -> DROP_TEMP_DATABASE_TABLE_PLUSCOPY_PERSON_SEARCH
    java.lang.String DROP_TEMP_DATABASE_DEVELOP_HOURS_TABLE_CLIENT_SEARCH -> DROP_TEMP_DATABASE_DEVELOP_HOURS_TABLE_CLIENT_SEARCH
    java.lang.String DROP_TEMP_DATABASE_MARKET_BID_TABLE_SEARCH -> DROP_TEMP_DATABASE_MARKET_BID_TABLE_SEARCH
    java.lang.String DROP_TEMP_DATABASE_MARKET_CONTRACT_TABLE_SEARCH -> DROP_TEMP_DATABASE_MARKET_CONTRACT_TABLE_SEARCH
    java.lang.String DROP_TEMP_DATABASE_TABLE_CONTACT_SEARCH -> DROP_TEMP_DATABASE_TABLE_CONTACT_SEARCH
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    java.util.List GetColumns(android.database.sqlite.SQLiteDatabase,java.lang.String) -> GetColumns
com.dahuatech.app.common.DESUtils -> com.dahuatech.app.common.DESUtils:
    java.lang.String DEFAULT_KEY -> DEFAULT_KEY
    java.lang.String decrypt(java.lang.String,java.lang.String) -> decrypt
    byte[] encrypt(java.lang.String,java.lang.String) -> encrypt
    byte[] convertHexString(java.lang.String) -> convertHexString
    java.lang.String encrypt2(java.lang.String,java.lang.String) -> encrypt2
    java.lang.String decrypt2(java.lang.String,java.lang.String) -> decrypt2
    java.lang.String toHexString(byte[]) -> toHexString
com.dahuatech.app.common.DateHelper -> com.dahuatech.app.common.DateHelper:
    java.util.Date deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    int getWeekOfYear(java.util.Calendar,java.util.Date) -> getWeekOfYear
    java.lang.String getWeekOfDate(java.util.Calendar,java.util.Date) -> getWeekOfDate
    int getNumWeeksForYear(java.util.Calendar,int) -> getNumWeeksForYear
    java.util.Date getFirstDayOfWeek(java.util.Calendar,int,int) -> getFirstDayOfWeek
    java.util.Date getFirstDayOfWeek(java.util.Calendar,java.util.Date) -> getFirstDayOfWeek
    java.util.Date getLastDayOfWeek(java.util.Calendar,java.util.Date) -> getLastDayOfWeek
    java.util.Date getFirstDayOfWeek() -> getFirstDayOfWeek
    java.util.Date getLastDayOfWeek() -> getLastDayOfWeek
    java.util.Date getCurrYearFirst(int) -> getCurrYearFirst
    java.util.Date getCurrYearLast(int) -> getCurrYearLast
    java.util.List getDHWeekList(java.util.Calendar,int,int) -> getDHWeekList
    int dateCompare(java.util.Calendar,java.lang.String,java.lang.String) -> dateCompare
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.dahuatech.app.common.DbManager -> com.dahuatech.app.common.DbManager:
    java.lang.String KEY_ROWID -> KEY_ROWID
    java.lang.String KEY_CLIENTID -> KEY_CLIENTID
    java.lang.String KEY_CLIENTNAME -> KEY_CLIENTNAME
    java.lang.String KEY_PROJECTID -> KEY_PROJECTID
    java.lang.String KEY_PROJECTNAME -> KEY_PROJECTNAME
    java.lang.String KEY_DETAIL_FSERVERID -> KEY_DETAIL_FSERVERID
    java.lang.String KEY_DETAIL_FPAYTYPE -> KEY_DETAIL_FPAYTYPE
    java.lang.String KEY_DETAIL_FITEMNUMBER -> KEY_DETAIL_FITEMNUMBER
    java.lang.String KEY_DETAIL_FEXPENDTIME -> KEY_DETAIL_FEXPENDTIME
    java.lang.String KEY_DETAIL_FEXPENDTYPEPARENT -> KEY_DETAIL_FEXPENDTYPEPARENT
    java.lang.String KEY_DETAIL_FEXPENDTYCHILD -> KEY_DETAIL_FEXPENDTYCHILD
    java.lang.String KEY_DETAIL_FEXPENDADDRESS -> KEY_DETAIL_FEXPENDADDRESS
    java.lang.String KEY_DETAIL_FEXPENDAMOUNT -> KEY_DETAIL_FEXPENDAMOUNT
    java.lang.String KEY_DETAIL_FCAUSE -> KEY_DETAIL_FCAUSE
    java.lang.String KEY_DETAIL_FCLIENTID -> KEY_DETAIL_FCLIENTID
    java.lang.String KEY_DETAIL_FPROJECTID -> KEY_DETAIL_FPROJECTID
    java.lang.String KEY_DETAIL_FCLIENT -> KEY_DETAIL_FCLIENT
    java.lang.String KEY_DETAIL_FPROJECT -> KEY_DETAIL_FPROJECT
    java.lang.String KEY_DETAIL_FACCOMPANY -> KEY_DETAIL_FACCOMPANY
    java.lang.String KEY_DETAIL_FACCOMPANYREASON -> KEY_DETAIL_FACCOMPANYREASON
    java.lang.String KEY_DETAIL_FSTART -> KEY_DETAIL_FSTART
    java.lang.String KEY_DETAIL_FDESTINATION -> KEY_DETAIL_FDESTINATION
    java.lang.String KEY_DETAIL_FSTARTTIME -> KEY_DETAIL_FSTARTTIME
    java.lang.String KEY_DETAIL_FENDTIME -> KEY_DETAIL_FENDTIME
    java.lang.String KEY_DETAIL_FBUSINESSLEVEL -> KEY_DETAIL_FBUSINESSLEVEL
    java.lang.String KEY_DETAIL_FREASON -> KEY_DETAIL_FREASON
    java.lang.String KEY_DETAIL_FDESCRIPTION -> KEY_DETAIL_FDESCRIPTION
    java.lang.String KEY_DETAIL_FUPLOADFLAG -> KEY_DETAIL_FUPLOADFLAG
    java.lang.String KEY_MEETING_ROOMID -> KEY_MEETING_ROOMID
    java.lang.String KEY_MEETING_ROOMNAME -> KEY_MEETING_ROOMNAME
    java.lang.String KEY_MEETING_ROOMIP -> KEY_MEETING_ROOMIP
    java.lang.String KEY_MEETING_FITEMNUMBER -> KEY_MEETING_FITEMNUMBER
    java.lang.String KEY_MEETING_FITEMNAME -> KEY_MEETING_FITEMNAME
    java.lang.String KEY_MEETING_FDEPTNAME -> KEY_MEETING_FDEPTNAME
    java.lang.String KEY_PLUSCOPY_FITEMNUMBER -> KEY_PLUSCOPY_FITEMNUMBER
    java.lang.String KEY_PLUSCOPY_FITEMNAME -> KEY_PLUSCOPY_FITEMNAME
    java.lang.String KEY_DEVELOP_HOURS_PROJECTCODE -> KEY_DEVELOP_HOURS_PROJECTCODE
    java.lang.String KEY_DEVELOP_HOURS_PROJECTNAME -> KEY_DEVELOP_HOURS_PROJECTNAME
    java.lang.String KEY_MARKET_BID_FCUSTOMERNAME -> KEY_MARKET_BID_FCUSTOMERNAME
    java.lang.String KEY_MARKET_BID_FBIDCODE -> KEY_MARKET_BID_FBIDCODE
    java.lang.String KEY_MARKET_CONTRACT_FCUSTOMERNAME -> KEY_MARKET_CONTRACT_FCUSTOMERNAME
    java.lang.String KEY_MARKET_CONTRACT_FCONTRACTCODE -> KEY_MARKET_CONTRACT_FCONTRACTCODE
    java.lang.String KEY_MARKET_CONTACT_FCORNET -> KEY_MARKET_CONTACT_FCORNET
    java.lang.String KEY_MARKET_CONTACT_MAIL -> KEY_MARKET_CONTACT_MAIL
    com.dahuatech.app.common.DBUtils mDbHelper -> a
    android.database.sqlite.SQLiteDatabase mDb -> b
    android.content.Context mContext -> c
    com.dahuatech.app.common.DbManager openSqlLite() -> openSqlLite
    void closeSqlLite() -> closeSqlLite
    void insertClientSearch(com.dahuatech.app.bean.expense.ExpenseFlowItemInfo) -> insertClientSearch
    void insertProjectSearch(com.dahuatech.app.bean.expense.ExpenseFlowItemInfo) -> insertProjectSearch
    void deleteClientSearchAll() -> deleteClientSearchAll
    void deleteProjectSearchAll() -> deleteProjectSearchAll
    java.util.List queryLocalList(java.lang.String) -> queryLocalList
    java.util.List queryClientList(java.lang.String) -> queryClientList
    java.util.List queryProjectList(java.lang.String) -> queryProjectList
    boolean insertFlowDetail(com.dahuatech.app.bean.expense.ExpenseFlowDetailInfo) -> insertFlowDetail
    boolean updateFlowDetail(com.dahuatech.app.bean.expense.ExpenseFlowDetailInfo) -> updateFlowDetail
    java.util.List queryFlowDetailList() -> queryFlowDetailList
    android.database.Cursor queryFlowDetailAll() -> queryFlowDetailAll
    boolean deleteFlowDetail(int) -> deleteFlowDetail
    boolean batchDeleteFlowDetail(java.util.List) -> batchDeleteFlowDetail
    void updateFlag(int) -> updateFlag
    void batchUpdateFlag(java.util.List) -> batchUpdateFlag
    void insertRoomSearch(com.dahuatech.app.bean.meeting.MeetingRoomInfo) -> insertRoomSearch
    void insertPersonSearch(com.dahuatech.app.bean.meeting.MeetingPersonInfo) -> insertPersonSearch
    void deleteRoomSearchAll() -> deleteRoomSearchAll
    void deletePersonSearchAll() -> deletePersonSearchAll
    java.util.List queryRoomAllList() -> queryRoomAllList
    java.util.List queryRoomList(java.lang.String) -> queryRoomList
    java.util.List queryPersonAllList() -> queryPersonAllList
    java.util.List queryPersonList(java.lang.String) -> queryPersonList
    android.database.Cursor queryHistory(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> queryHistory
    android.database.Cursor queryPersonHistory(java.lang.String,java.lang.String,java.lang.String) -> queryPersonHistory
    void insertPlusCopyPersonSearch(com.dahuatech.app.bean.mytask.PlusCopyPersonInfo) -> insertPlusCopyPersonSearch
    void deletePlusCopyPersonSearchAll() -> deletePlusCopyPersonSearchAll
    java.util.List queryPlusCopyPersonAllList() -> queryPlusCopyPersonAllList
    java.util.List queryPlusCopyPersonList(java.lang.String) -> queryPlusCopyPersonList
    android.database.Cursor queryPlusCopyPersonHistory(java.lang.String,java.lang.String,java.lang.String) -> queryPlusCopyPersonHistory
    void insertDHProjectSearch(com.dahuatech.app.bean.develophour.DHProjectInfo) -> insertDHProjectSearch
    void deleteDHProjectSearchAll() -> deleteDHProjectSearchAll
    java.util.List queryDHProjectAllList() -> queryDHProjectAllList
    void insertMarketBidSearch(com.dahuatech.app.bean.market.MarketBidHistoryInfo) -> insertMarketBidSearch
    void deleteMarketBidSearchAll() -> deleteMarketBidSearchAll
    java.util.List queryMarketBidAllList() -> queryMarketBidAllList
    void insertMarketContractSearch(com.dahuatech.app.bean.market.MarketContractHistoryInfo) -> insertMarketContractSearch
    void deleteMarketContractSearchAll() -> deleteMarketContractSearchAll
    java.util.List queryMarketContractAllList() -> queryMarketContractAllList
    void insertContactSearch(com.dahuatech.app.bean.ContactInfo) -> insertContactSearch
    java.util.List queryContactAllList() -> queryContactAllList
    void deleteContactSearchAll() -> deleteContactSearchAll
com.dahuatech.app.common.DelSlideActionSheet -> com.dahuatech.app.common.DelSlideActionSheet:
    android.app.Dialog showSheet(android.content.Context,com.dahuatech.app.common.DelSlideActionSheet$OnActionSheetSelected,android.content.DialogInterface$OnCancelListener) -> showSheet
com.dahuatech.app.common.DelSlideActionSheet$1 -> it:
    com.dahuatech.app.common.DelSlideActionSheet$OnActionSheetSelected val$actionSheetSelected -> a
    android.app.Dialog val$dlg -> b
    void onClick(android.view.View) -> onClick
com.dahuatech.app.common.DelSlideActionSheet$2 -> iu:
    com.dahuatech.app.common.DelSlideActionSheet$OnActionSheetSelected val$actionSheetSelected -> a
    android.app.Dialog val$dlg -> b
    void onClick(android.view.View) -> onClick
com.dahuatech.app.common.DelSlideActionSheet$OnActionSheetSelected -> com.dahuatech.app.common.DelSlideActionSheet$OnActionSheetSelected:
    void onClick(int) -> onClick
com.dahuatech.app.common.FileUtils -> com.dahuatech.app.common.FileUtils:
    void write(android.content.Context,java.lang.String,java.lang.String) -> write
    java.lang.String read(android.content.Context,java.lang.String) -> read
    java.lang.String readInStream(java.io.InputStream) -> readInStream
    java.io.File createFile(java.lang.String,java.lang.String) -> createFile
    boolean writeFile(byte[],java.lang.String,java.lang.String) -> writeFile
    java.lang.String getFileName(java.lang.String) -> getFileName
    java.lang.String getFileNameNoFormat(java.lang.String) -> getFileNameNoFormat
    java.lang.String getFileFormat(java.lang.String) -> getFileFormat
    long getFileSize(java.lang.String) -> getFileSize
    java.lang.String getFileSize(long) -> getFileSize
    java.lang.String formatFileSize(long) -> formatFileSize
    long getDirSize(java.io.File) -> getDirSize
    long getFileList(java.io.File) -> getFileList
    byte[] toBytes(java.io.InputStream) -> toBytes
    boolean checkFileExists(java.lang.String) -> checkFileExists
    boolean checkFilePathExists(java.lang.String) -> checkFilePathExists
    long getFreeDiskSpace() -> getFreeDiskSpace
    boolean checkSaveLocationExists() -> checkSaveLocationExists
    boolean checkExternalSDExists() -> checkExternalSDExists
    boolean createDirectory(java.lang.String) -> createDirectory
    boolean deleteDirectory(java.lang.String) -> deleteDirectory
    boolean deleteFile(java.lang.String) -> deleteFile
    int deleteBlankPath(java.lang.String) -> deleteBlankPath
    boolean reNamePath(java.lang.String,java.lang.String) -> reNamePath
    void clearFileWithPath(java.lang.String) -> clearFileWithPath
    java.lang.String getSDRoot() -> getSDRoot
    java.lang.String getExternalSDRoot() -> getExternalSDRoot
    java.util.List listPath(java.lang.String) -> listPath
    java.util.List listPathFiles(java.lang.String) -> listPathFiles
    com.dahuatech.app.common.FileUtils$PathStatus createPath(java.lang.String) -> createPath
    java.lang.String getPathName(java.lang.String) -> getPathName
    java.lang.String getAppCache(android.content.Context,java.lang.String) -> getAppCache
    boolean packupDatabaseFile() -> packupDatabaseFile
com.dahuatech.app.common.FileUtils$PathStatus -> com.dahuatech.app.common.FileUtils$PathStatus:
    com.dahuatech.app.common.FileUtils$PathStatus SUCCESS -> SUCCESS
    com.dahuatech.app.common.FileUtils$PathStatus EXITS -> EXITS
    com.dahuatech.app.common.FileUtils$PathStatus ERROR -> ERROR
    com.dahuatech.app.common.FileUtils$PathStatus[] ENUM$VALUES -> a
    com.dahuatech.app.common.FileUtils$PathStatus[] values() -> values
    com.dahuatech.app.common.FileUtils$PathStatus valueOf(java.lang.String) -> valueOf
com.dahuatech.app.common.GsonHelper -> com.dahuatech.app.common.GsonHelper:
    com.google.gson.Gson getInstance() -> getInstance
com.dahuatech.app.common.GsonHelper$SingletonHolder -> iv:
    com.google.gson.Gson instance -> a
    com.google.gson.Gson access$0() -> a
com.dahuatech.app.common.ImageUtils -> com.dahuatech.app.common.ImageUtils:
    java.lang.String SDCARD_MNT -> SDCARD_MNT
    java.lang.String SDCARD_MAIN -> SDCARD_MAIN
    int REQUEST_CODE_GETIMAGE_BYSDCARD -> REQUEST_CODE_GETIMAGE_BYSDCARD
    int REQUEST_CODE_GETIMAGE_BYCAMERA -> REQUEST_CODE_GETIMAGE_BYCAMERA
    int REQUEST_CODE_GETIMAGE_BYCROP -> REQUEST_CODE_GETIMAGE_BYCROP
    void saveImage(android.content.Context,java.lang.String,android.graphics.Bitmap) -> saveImage
    void saveImage(android.content.Context,java.lang.String,android.graphics.Bitmap,int) -> saveImage
    void saveImageToSD(android.content.Context,java.lang.String,android.graphics.Bitmap,int) -> saveImageToSD
    void saveBackgroundImage(android.content.Context,java.lang.String,android.graphics.Bitmap,int) -> saveBackgroundImage
    void scanPhoto(android.content.Context,java.lang.String) -> a
    android.graphics.Bitmap getBitmap(android.content.Context,java.lang.String) -> getBitmap
    android.graphics.Bitmap getBitmapByPath(java.lang.String) -> getBitmapByPath
    android.graphics.Bitmap getBitmapByPath(java.lang.String,android.graphics.BitmapFactory$Options) -> getBitmapByPath
    android.graphics.Bitmap getBitmapByFile(java.io.File) -> getBitmapByFile
    java.lang.String getTempFileName() -> getTempFileName
    java.lang.String getCamerPath() -> getCamerPath
    java.lang.String getAbsolutePathFromNoStandardUri(android.net.Uri) -> getAbsolutePathFromNoStandardUri
    java.lang.String getAbsoluteImagePath(android.app.Activity,android.net.Uri) -> getAbsoluteImagePath
    android.graphics.Bitmap loadImgThumbnail(android.app.Activity,java.lang.String,int) -> loadImgThumbnail
    android.graphics.Bitmap loadImgThumbnail(java.lang.String,int,int) -> loadImgThumbnail
    java.lang.String getLatestImage(android.app.Activity) -> getLatestImage
    int[] scaleImageSize(int[],int) -> scaleImageSize
    void createImageThumbnail(android.content.Context,java.lang.String,java.lang.String,int,int) -> createImageThumbnail
    android.graphics.Bitmap zoomBitmap(android.graphics.Bitmap,int,int) -> zoomBitmap
    android.graphics.Bitmap scaleBitmap(android.graphics.Bitmap) -> scaleBitmap
    android.graphics.Bitmap reDrawBitMap(android.app.Activity,android.graphics.Bitmap) -> reDrawBitMap
    android.graphics.Bitmap drawableToBitmap(android.graphics.drawable.Drawable) -> drawableToBitmap
    android.graphics.Bitmap getRoundedCornerBitmap(android.graphics.Bitmap,float) -> getRoundedCornerBitmap
    android.graphics.Bitmap createReflectionImageWithOrigin(android.graphics.Bitmap) -> createReflectionImageWithOrigin
    android.graphics.drawable.Drawable bitmapToDrawable(android.graphics.Bitmap) -> bitmapToDrawable
    java.lang.String getImageType(java.io.File) -> getImageType
    java.lang.String getImageType(java.io.InputStream) -> getImageType
    java.lang.String getImageType(byte[]) -> getImageType
    boolean isJPEG(byte[]) -> a
    boolean isGIF(byte[]) -> b
    boolean isPNG(byte[]) -> c
    boolean isBMP(byte[]) -> d
com.dahuatech.app.common.ListHelper -> com.dahuatech.app.common.ListHelper:
    void removeDuplicates(java.util.List) -> removeDuplicates
    java.util.List rDMeetingPerson(java.util.List) -> rDMeetingPerson
    java.util.List rDPlusCopyPerson(java.util.List) -> rDPlusCopyPerson
com.dahuatech.app.common.LogUtil -> com.dahuatech.app.common.LogUtil:
    int VERBOSE -> VERBOSE
    int DEBUG -> DEBUG
    int INFO -> INFO
    int WARN -> WARN
    int ERROR -> ERROR
    int NOTHING -> NOTHING
    int LEVEL -> LEVEL
    void v(java.lang.String,java.lang.String) -> v
    void d(java.lang.String,java.lang.String) -> d
    void i(java.lang.String,java.lang.String) -> i
    void w(java.lang.String,java.lang.String) -> w
    void e(java.lang.String,java.lang.String) -> e
com.dahuatech.app.common.MethodsCompat -> com.dahuatech.app.common.MethodsCompat:
    void overridePendingTransition(android.app.Activity,int,int) -> overridePendingTransition
    android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory$Options) -> getThumbnail
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    void recreate(android.app.Activity) -> recreate
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    void setUiOptions(android.view.Window,int) -> setUiOptions
com.dahuatech.app.common.ParseXmlService -> com.dahuatech.app.common.ParseXmlService:
    java.util.HashMap parseXml(java.io.InputStream) -> parseXml
    java.util.HashMap xmlPullParser(org.xmlpull.v1.XmlPullParser,java.lang.String) -> xmlPullParser
    void getItems(org.xmlpull.v1.XmlPullParser,java.lang.String,java.util.HashMap) -> a
com.dahuatech.app.common.RegexpUtils -> com.dahuatech.app.common.RegexpUtils:
    java.lang.String replaceTag(java.lang.String) -> replaceTag
    boolean hasSpecialChars(java.lang.String) -> hasSpecialChars
    java.lang.String filterHtml(java.lang.String) -> filterHtml
    java.lang.String fiterHtmlTag(java.lang.String,java.lang.String) -> fiterHtmlTag
    java.lang.String replaceHtmlTag(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> replaceHtmlTag
    boolean isMobileNo(java.lang.String) -> isMobileNo
com.dahuatech.app.common.StringUtils -> com.dahuatech.app.common.StringUtils:
    java.lang.String STRING_EMPTY -> STRING_EMPTY
    java.util.regex.Pattern emailer -> a
    java.lang.ThreadLocal dateFormater -> b
    java.lang.ThreadLocal dateFormater2 -> c
    java.util.Date toDate(java.lang.String) -> toDate
    java.util.Date toShortDate(java.lang.String) -> toShortDate
    java.lang.String toDateString(java.util.Date) -> toDateString
    java.lang.String toShortDateString(java.util.Date) -> toShortDateString
    java.lang.String getSpecifiedDayBefore(java.util.Date) -> getSpecifiedDayBefore
    java.lang.String getSpecifiedDayAfter(java.util.Date) -> getSpecifiedDayAfter
    java.lang.String friendly_time(java.lang.String) -> friendly_time
    boolean isToday(java.lang.String) -> isToday
    long getToday() -> getToday
    boolean isEmpty(java.lang.String) -> isEmpty
    boolean isNotEmpty(java.lang.String) -> isNotEmpty
    java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    boolean isEmail(java.lang.String) -> isEmail
    int toInt(java.lang.String,int) -> toInt
    double toDouble(java.lang.String,int) -> toDouble
    java.lang.String toDoubleKeepTwo(double) -> toDoubleKeepTwo
    long toLong(java.lang.String) -> toLong
    boolean toBool(java.lang.String) -> toBool
    java.lang.String toConvertString(java.io.InputStream) -> toConvertString
    java.lang.String substringBefore(java.lang.String,java.lang.String) -> substringBefore
    java.lang.String substringAfter(java.lang.String,java.lang.String) -> substringAfter
    java.lang.String substringBeforeLast(java.lang.String,java.lang.String) -> substringBeforeLast
    java.lang.String substringAfterLast(java.lang.String,java.lang.String) -> substringAfterLast
    java.lang.String[] stringToArray(java.lang.String,java.lang.String) -> stringToArray
    java.lang.String noSpace(java.lang.String) -> noSpace
    java.lang.String join(java.util.List,java.lang.String) -> join
    java.util.List convertToList(java.lang.String,java.lang.String) -> convertToList
    java.lang.String generateTime(long) -> generateTime
com.dahuatech.app.common.StringUtils$1 -> iw:
    java.text.SimpleDateFormat initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.dahuatech.app.common.StringUtils$2 -> ix:
    java.text.SimpleDateFormat initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.dahuatech.app.common.UIHelper -> com.dahuatech.app.common.UIHelper:
    int ACTIVITY_ENGINEERING -> ACTIVITY_ENGINEERING
    int ACTIVITY_EXPENSEPRIVATE -> ACTIVITY_EXPENSEPRIVATE
    int ACTIVITY_EXPENSEPUBLIC -> ACTIVITY_EXPENSEPUBLIC
    int ACTIVITY_EXPENSEDETAIL_LOCAL -> ACTIVITY_EXPENSEDETAIL_LOCAL
    int ACTIVITY_EXPENSEDETAIL_SERVER -> ACTIVITY_EXPENSEDETAIL_SERVER
    com.dahuatech.app.common.UIHelper mInstance -> a
    android.content.Context mContext -> mContext
    com.dahuatech.app.common.UIHelper getInstance() -> getInstance
    void showGuide(android.content.Context) -> showGuide
    void showWelcome(android.content.Context) -> showWelcome
    void showExpiration(android.content.Context) -> showExpiration
    void showLogin(android.content.Context,boolean,boolean) -> showLogin
    void showLock(android.content.Context,java.lang.String,java.lang.String,boolean) -> showLock
    void showLockSetPwd(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> showLockSetPwd
    void showHome(android.content.Context) -> showHome
    void showHome(android.content.Context,java.lang.String,java.lang.String) -> showHome
    void showSetting(android.content.Context) -> showSetting
    void showSmsInvite(android.content.Context) -> showSmsInvite
    void showMyTask(android.content.Context,java.lang.String) -> showMyTask
    void showExpenseMain(android.content.Context,java.lang.String) -> showExpenseMain
    void showExpenseTaxi(android.content.Context,java.lang.String) -> showExpenseTaxi
    void showExpenseFlowList(android.content.Context,java.lang.String) -> showExpenseFlowList
    void showExpenseFlowLocalList(android.content.Context,java.lang.String) -> showExpenseFlowLocalList
    void showExpenseFlowDetail(android.content.Context,java.lang.String,java.lang.String,com.dahuatech.app.bean.expense.ExpenseFlowDetailInfo) -> showExpenseFlowDetail
    void showExpenseFlowDetail(android.content.Context,java.lang.String,java.lang.String) -> showExpenseFlowDetail
    void redirectToExpenseFlow(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> redirectToExpenseFlow
    void showExpenseFlowClientList(android.content.Context,java.lang.String) -> showExpenseFlowClientList
    void showExpenseFlowProjectList(android.content.Context,java.lang.String) -> showExpenseFlowProjectList
    void showContacts(android.content.Context,java.lang.String,java.lang.String) -> showContacts
    void showMeetingList(android.content.Context,java.lang.String) -> showMeetingList
    void showMeetingDetail(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> showMeetingDetail
    void showMeetingRoomSearch(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> showMeetingRoomSearch
    void showMeetingPersonSearch(android.content.Context,java.lang.String,java.lang.String) -> showMeetingPersonSearch
    void showMeetingMasterSearch(android.content.Context,java.lang.String,java.lang.String) -> showMeetingMasterSearch
    void showCapture(android.content.Context) -> showCapture
    void showTaskDetail(android.content.Context,com.dahuatech.app.bean.mytask.TaskInfo,java.lang.String) -> showTaskDetail
    void showIntent(android.content.Context,android.content.Intent,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void showPlusCopy(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> showPlusCopy
    void showPlusCopyPersonSearch(android.content.Context,java.lang.String) -> showPlusCopyPersonSearch
    void showLowerNodeApp(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> showLowerNodeApp
    void showDH(android.content.Context,java.lang.String) -> showDH
    void showDHList(android.content.Context,java.lang.String) -> showDHList
    void showDHProjectList(android.content.Context,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String) -> showDHProjectList
    void showDHDetail(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> showDHDetail
    void showDHListDetail(android.content.Context,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> showDHListDetail
    void showDHListProjectDetail(android.content.Context,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> showDHListProjectDetail
    void showDHProjectSearch(android.content.Context) -> showDHProjectSearch
    void showDHTypeList(android.content.Context,java.lang.String) -> showDHTypeList
    void showDHConfirmList(android.content.Context,java.lang.String) -> showDHConfirmList
    void showDHConfirmListPerson(android.content.Context,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) -> showDHConfirmListPerson
    void showAttendanceList(android.content.Context,java.lang.String) -> showAttendanceList
    void showAttendanceCheck(android.content.Context,java.lang.String) -> showAttendanceCheck
    void showMarketMain(android.content.Context,java.lang.String) -> showMarketMain
    void showMarketBidSearch(android.content.Context,java.lang.String) -> showMarketBidSearch
    void showMarketContractSearch(android.content.Context,java.lang.String) -> showMarketContractSearch
    void showMarketProductSearch(android.content.Context,java.lang.String) -> showMarketProductSearch
    void showMarketWorkflow(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> showMarketWorkflow
    void sendBroadCast(android.content.Context,int) -> sendBroadCast
    void sendLogs(android.content.Context,com.dahuatech.app.bean.LogsRecordInfo) -> sendLogs
    void Exit(android.content.Context) -> Exit
    void sendAppCrashReport(android.content.Context,java.lang.String) -> sendAppCrashReport
    void ToastMessage(android.content.Context,java.lang.String) -> ToastMessage
    void ToastMessageLong(android.content.Context,int) -> ToastMessageLong
    void ToastMessage(android.content.Context,int) -> ToastMessage
    void ToastMessage(android.content.Context,java.lang.String,int) -> ToastMessage
    android.view.View$OnClickListener finish(android.app.Activity) -> finish
    void loginOrLogout(android.app.Activity) -> loginOrLogout
    void clearAppCache(android.app.Activity) -> clearAppCache
com.dahuatech.app.common.UIHelper$1 -> iy:
    android.content.Context val$cont -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dahuatech.app.common.UIHelper$2 -> iz:
    void onClick(android.content.DialogInterface,int) -> onClick
com.dahuatech.app.common.UIHelper$3 -> ja:
    java.lang.String val$crashReport -> a
    android.content.Context val$cont -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.dahuatech.app.common.UIHelper$4 -> jb:
    android.content.Context val$cont -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dahuatech.app.common.UIHelper$5 -> jc:
    android.app.Activity val$activity -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.common.UIHelper$6 -> jd:
    com.dahuatech.app.AppContext val$ac -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dahuatech.app.common.UIHelper$7 -> je:
    com.dahuatech.app.AppContext val$ac -> a
    android.os.Handler val$handler -> b
    void run() -> run
com.dahuatech.app.common.UIHelper$logRecordAsync -> jf:
    com.dahuatech.app.common.UIHelper this$0 -> a
    java.lang.Void doInBackground(com.dahuatech.app.bean.LogsRecordInfo[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.common.UpdateManager -> com.dahuatech.app.common.UpdateManager:
    java.lang.String serviceUrl -> a
    android.content.Context mContext -> b
    android.app.Dialog noticeDialog -> c
    android.app.Dialog downloadDialog -> d
    android.app.Dialog latestOrFailDialog -> e
    android.widget.ProgressBar mProgress -> f
    android.widget.TextView mProgressText -> g
    android.app.ProgressDialog mProDialog -> h
    int progress -> i
    java.lang.Thread downLoadThread -> j
    boolean interceptFlag -> k
    java.lang.String updateMsg -> l
    java.lang.String apkUrl -> m
    java.lang.String savePath -> n
    java.lang.String apkFilePath -> o
    java.lang.String tmpFilePath -> p
    java.lang.String apkFileSize -> q
    java.lang.String tmpFileSize -> r
    java.lang.String curVersionName -> s
    int curVersionCode -> t
    com.dahuatech.app.bean.UpdateInfo mUpdate -> u
    android.os.Handler mHandler -> v
    java.lang.Runnable mdownApkRunnable -> w
    com.dahuatech.app.common.UpdateManager getUpdateManager(android.content.Context,java.lang.String) -> getUpdateManager
    void checkAppUpdate(boolean) -> checkAppUpdate
    void showLatestOrFailDialog(int) -> a
    void getCurrentVersion() -> a
    void showNoticeDialog() -> b
    void showDownloadDialog() -> c
    void downloadApk() -> d
    void installApk() -> e
    android.widget.ProgressBar access$0(com.dahuatech.app.common.UpdateManager) -> a
    int access$1(com.dahuatech.app.common.UpdateManager) -> b
    android.widget.TextView access$2(com.dahuatech.app.common.UpdateManager) -> c
    java.lang.String access$3(com.dahuatech.app.common.UpdateManager) -> d
    java.lang.String access$4(com.dahuatech.app.common.UpdateManager) -> e
    android.app.Dialog access$5(com.dahuatech.app.common.UpdateManager) -> f
    void access$6(com.dahuatech.app.common.UpdateManager) -> g
    android.content.Context access$7(com.dahuatech.app.common.UpdateManager) -> h
    com.dahuatech.app.bean.UpdateInfo access$8(com.dahuatech.app.common.UpdateManager) -> i
    void access$9(com.dahuatech.app.common.UpdateManager,java.lang.String) -> a
    java.lang.String access$10(com.dahuatech.app.common.UpdateManager) -> j
    void access$11(com.dahuatech.app.common.UpdateManager,java.lang.String) -> b
    void access$12(com.dahuatech.app.common.UpdateManager,java.lang.String) -> c
    java.lang.String access$13(com.dahuatech.app.common.UpdateManager) -> k
    android.os.Handler access$14(com.dahuatech.app.common.UpdateManager) -> l
    java.lang.String access$15(com.dahuatech.app.common.UpdateManager) -> m
    java.lang.String access$16(com.dahuatech.app.common.UpdateManager) -> n
    void access$17(com.dahuatech.app.common.UpdateManager,java.lang.String) -> d
    void access$18(com.dahuatech.app.common.UpdateManager,java.lang.String) -> e
    void access$19(com.dahuatech.app.common.UpdateManager,int) -> a
    boolean access$20(com.dahuatech.app.common.UpdateManager) -> o
    android.app.ProgressDialog access$22(com.dahuatech.app.common.UpdateManager) -> p
    void access$23(com.dahuatech.app.common.UpdateManager,android.app.ProgressDialog) -> a
    void access$24(com.dahuatech.app.common.UpdateManager,com.dahuatech.app.bean.UpdateInfo) -> a
    int access$25(com.dahuatech.app.common.UpdateManager) -> q
    void access$26(com.dahuatech.app.common.UpdateManager,java.lang.String) -> f
    void access$27(com.dahuatech.app.common.UpdateManager,java.lang.String) -> g
    void access$28(com.dahuatech.app.common.UpdateManager) -> r
    void access$29(com.dahuatech.app.common.UpdateManager,int) -> b
    java.lang.String access$30(com.dahuatech.app.common.UpdateManager) -> s
    void access$31(com.dahuatech.app.common.UpdateManager) -> t
    void access$32(com.dahuatech.app.common.UpdateManager,boolean) -> a
com.dahuatech.app.common.UpdateManager$1 -> jg:
    com.dahuatech.app.common.UpdateManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dahuatech.app.common.UpdateManager$2 -> jh:
    com.dahuatech.app.common.UpdateManager this$0 -> a
    void run() -> run
com.dahuatech.app.common.UpdateManager$3 -> ji:
    com.dahuatech.app.common.UpdateManager this$0 -> a
    boolean val$isShowMsg -> b
    void handleMessage(android.os.Message) -> handleMessage
com.dahuatech.app.common.UpdateManager$4 -> jj:
    com.dahuatech.app.common.UpdateManager this$0 -> a
    android.os.Handler val$handler -> b
    void run() -> run
com.dahuatech.app.common.UpdateManager$5 -> jk:
    com.dahuatech.app.common.UpdateManager this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dahuatech.app.common.UpdateManager$6 -> jl:
    com.dahuatech.app.common.UpdateManager this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dahuatech.app.common.UpdateManager$7 -> jm:
    com.dahuatech.app.common.UpdateManager this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dahuatech.app.common.UpdateManager$8 -> jn:
    com.dahuatech.app.common.UpdateManager this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.dahuatech.app.common.UpdateManager$SingletonHolder -> jo:
    com.dahuatech.app.common.UpdateManager instance -> a
    com.dahuatech.app.common.UpdateManager access$0() -> a
com.dahuatech.app.common.ViewIdGenerator -> com.dahuatech.app.common.ViewIdGenerator:
    java.util.concurrent.atomic.AtomicInteger sNextGeneratedId -> a
    int generateViewId() -> generateViewId
com.dahuatech.app.inter.ICheckNextNode -> com.dahuatech.app.inter.ICheckNextNode:
    void setCheckResult(com.dahuatech.app.bean.ResultMessage) -> setCheckResult
com.dahuatech.app.inter.IListViewonSingleTapUpListenner -> com.dahuatech.app.inter.IListViewonSingleTapUpListenner:
    void onSingleTapUp() -> onSingleTapUp
com.dahuatech.app.inter.IOnDeleteListioner -> com.dahuatech.app.inter.IOnDeleteListioner:
    boolean isCandelete(int) -> isCandelete
    void onDelete(int) -> onDelete
    void onBack() -> onBack
com.dahuatech.app.inter.IOnPageScrollListener -> com.dahuatech.app.inter.IOnPageScrollListener:
    void onPageChanged(int) -> onPageChanged
com.dahuatech.app.inter.ISpinnerListener -> com.dahuatech.app.inter.ISpinnerListener:
    void rejectOk(int,com.dahuatech.app.bean.mytask.RejectNodeInfo) -> rejectOk
    void dHWeekOk(int,java.lang.String,com.dahuatech.app.bean.develophour.DHWeekInfo) -> dHWeekOk
    void adAmapOk(int,com.dahuatech.app.bean.attendance.AdAmapInfo) -> adAmapOk
    void cancelled() -> cancelled
com.dahuatech.app.inter.ITaskContext -> com.dahuatech.app.inter.ITaskContext:
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
com.dahuatech.app.ui.attendance.AdCheckInActivity -> com.dahuatech.app.ui.attendance.AdCheckInActivity:
    com.dahuatech.app.ui.attendance.AdCheckInActivity mInstance -> a
    com.amap.api.maps.AMap mAMap -> b
    com.amap.api.location.LocationManagerProxy mLocationManagerProxy -> c
    android.app.PendingIntent mpIntent -> d
    com.amap.api.maps.model.Circle mCircle -> e
    com.amap.api.maps.LocationSource$OnLocationChangedListener mListener -> f
    java.util.Random mRandom -> g
    java.util.List adAmapList -> h
    java.lang.String fAddress -> i
    double fLatitude -> j
    double fLongitude -> k
    int fAttendId -> l
    int fAttendStatus -> m
    java.lang.String fCheckInTime -> n
    java.lang.String fCheckOutTime -> o
    com.dahuatech.app.business.AttendanceBusiness aBusiness -> p
    com.dahuatech.app.bean.attendance.AdCheckInfo aCheckInfo -> q
    java.lang.String fItemNumber -> r
    java.lang.String serviceUrl -> s
    java.lang.String uploadUrl -> t
    android.app.ProgressDialog uploadDialog -> u
    android.app.ProgressDialog amapDialog -> v
    android.widget.Button checkInBtn -> w
    android.widget.Button btnAdList -> x
    android.widget.TextView checkText -> y
    boolean isMockLocation -> z
    android.content.SharedPreferences aMapSp -> A
    com.dahuatech.app.AppContext appContext -> B
    int checkInCount -> C
    android.content.BroadcastReceiver mReceiver -> D
    com.dahuatech.app.ui.attendance.AdCheckInActivity getInstance() -> getInstance
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void initAdAmap() -> b
    void setViewEvent() -> c
    com.amap.api.maps.model.LatLng getLatLng(java.lang.String,java.lang.String) -> a
    void initCheckStatus() -> d
    com.dahuatech.app.bean.attendance.AdCheckStatusInfo getCheckByPost() -> e
    void renderCheckView(com.dahuatech.app.bean.attendance.AdCheckStatusInfo) -> a
    void setAttendStatus() -> f
    void initAMap() -> g
    void initMarker() -> h
    void initBroadcast() -> i
    void verifyGeo(com.amap.api.maps.model.LatLng,float) -> a
    void uploadServer() -> j
    void setModel() -> k
    com.dahuatech.app.bean.ResultMessage upload(com.dahuatech.app.bean.attendance.AdCheckInfo) -> a
    void showResult(com.dahuatech.app.bean.ResultMessage) -> a
    void activate(com.amap.api.maps.LocationSource$OnLocationChangedListener) -> activate
    void deactivate() -> deactivate
    void initLocation() -> l
    void startLocation() -> m
    void destroyLocation() -> n
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
    void sendLogs() -> o
    void onRestart() -> onRestart
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    int access$0(com.dahuatech.app.ui.attendance.AdCheckInActivity) -> a
    void access$1(com.dahuatech.app.ui.attendance.AdCheckInActivity) -> b
    android.app.ProgressDialog access$2(com.dahuatech.app.ui.attendance.AdCheckInActivity) -> c
    void access$3(com.dahuatech.app.ui.attendance.AdCheckInActivity,int) -> a
    com.dahuatech.app.bean.attendance.AdCheckStatusInfo access$4(com.dahuatech.app.ui.attendance.AdCheckInActivity) -> d
    void access$5(com.dahuatech.app.ui.attendance.AdCheckInActivity,com.dahuatech.app.bean.attendance.AdCheckStatusInfo) -> a
    com.dahuatech.app.bean.ResultMessage access$6(com.dahuatech.app.ui.attendance.AdCheckInActivity,com.dahuatech.app.bean.attendance.AdCheckInfo) -> a
    void access$7(com.dahuatech.app.ui.attendance.AdCheckInActivity,com.dahuatech.app.bean.ResultMessage) -> a
    boolean access$8(com.dahuatech.app.ui.attendance.AdCheckInActivity) -> e
    java.util.List access$9(com.dahuatech.app.ui.attendance.AdCheckInActivity) -> f
    com.amap.api.maps.model.LatLng access$10(com.dahuatech.app.ui.attendance.AdCheckInActivity,java.lang.String,java.lang.String) -> a
    void access$11(com.dahuatech.app.ui.attendance.AdCheckInActivity,com.amap.api.maps.model.LatLng,float) -> a
    java.lang.String access$12(com.dahuatech.app.ui.attendance.AdCheckInActivity) -> g
com.dahuatech.app.ui.attendance.AdCheckInActivity$1 -> jp:
    com.dahuatech.app.ui.attendance.AdCheckInActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.dahuatech.app.ui.attendance.AdCheckInActivity$2 -> jq:
    com.dahuatech.app.ui.attendance.AdCheckInActivity this$0 -> a
com.dahuatech.app.ui.attendance.AdCheckInActivity$3 -> jr:
    com.dahuatech.app.ui.attendance.AdCheckInActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.dahuatech.app.ui.attendance.AdCheckInActivity access$0(com.dahuatech.app.ui.attendance.AdCheckInActivity$3) -> a
com.dahuatech.app.ui.attendance.AdCheckInActivity$3$1 -> js:
    com.dahuatech.app.ui.attendance.AdCheckInActivity$3 this$1 -> a
    void rejectOk(int,com.dahuatech.app.bean.mytask.RejectNodeInfo) -> rejectOk
    void cancelled() -> cancelled
    void dHWeekOk(int,java.lang.String,com.dahuatech.app.bean.develophour.DHWeekInfo) -> dHWeekOk
    void adAmapOk(int,com.dahuatech.app.bean.attendance.AdAmapInfo) -> adAmapOk
com.dahuatech.app.ui.attendance.AdCheckInActivity$4 -> jt:
    com.dahuatech.app.ui.attendance.AdCheckInActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.attendance.AdCheckInActivity$getCheckAsync -> ju:
    com.dahuatech.app.ui.attendance.AdCheckInActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    com.dahuatech.app.bean.attendance.AdCheckStatusInfo doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.dahuatech.app.bean.attendance.AdCheckStatusInfo) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.attendance.AdCheckInActivity$uploadAsync -> jv:
    com.dahuatech.app.ui.attendance.AdCheckInActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    com.dahuatech.app.bean.ResultMessage doInBackground(com.dahuatech.app.bean.attendance.AdCheckInfo[]) -> a
    void onPostExecute(com.dahuatech.app.bean.ResultMessage) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.attendance.AdListActivity -> com.dahuatech.app.ui.attendance.AdListActivity:
    android.widget.ListView mListView -> a
    java.util.List mArrayList -> b
    com.dahuatech.app.business.AttendanceBusiness aBusiness -> c
    com.dahuatech.app.adapter.AttendanceListAdapter adAdapter -> d
    android.app.ProgressDialog dialog -> e
    java.lang.String fItemNumber -> f
    java.lang.String serviceUrl -> g
    com.dahuatech.app.AppContext appContext -> h
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    java.util.List getListByPost() -> b
    void renderListView(java.util.List) -> a
    void sendLogs() -> c
    void onStart() -> onStart
    void onResume() -> onResume
    void onRestart() -> onRestart
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.app.ProgressDialog access$0(com.dahuatech.app.ui.attendance.AdListActivity) -> a
    java.util.List access$1(com.dahuatech.app.ui.attendance.AdListActivity) -> b
    void access$2(com.dahuatech.app.ui.attendance.AdListActivity,java.util.List) -> a
com.dahuatech.app.ui.attendance.AdListActivity$getListAsync -> jw:
    com.dahuatech.app.ui.attendance.AdListActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.barcode.CaptureActivity -> com.dahuatech.app.ui.barcode.CaptureActivity:
    com.zxing.view.ViewfinderView viewfinderView -> a
    android.widget.TextView statusView -> b
    android.widget.ImageView btnBack -> c
    android.widget.ImageView btnFlash -> d
    android.app.ProgressDialog mProgress -> e
    android.media.MediaPlayer mediaPlayer -> f
    boolean playBeep -> g
    boolean vibrate -> h
    com.zxing.decoding.InactivityTimer inactivityTimer -> i
    com.zxing.camera.CameraManager cameraManager -> j
    boolean hasSurface -> k
    java.util.Vector decodeFormats -> l
    java.lang.String characterSet -> m
    com.zxing.decoding.CaptureActivityHandler mHandler -> n
    android.media.MediaPlayer$OnCompletionListener beepListener -> o
    com.zxing.view.ViewfinderView getViewfinderView() -> getViewfinderView
    android.os.Handler getHandler() -> getHandler
    com.zxing.camera.CameraManager getCameraManager() -> getCameraManager
    void drawViewfinder() -> drawViewfinder
    void playBeepSoundAndVibrate() -> a
    void initBeepSound() -> b
    void onCreate(android.os.Bundle) -> onCreate
    void initSetting() -> c
    void initView() -> d
    void onResume() -> onResume
    void initCamera(android.view.SurfaceHolder) -> a
    void displayFrameworkBugMessageAndExit() -> e
    void handleDecode(com.google.zxing.Result,android.graphics.Bitmap,float) -> handleDecode
    void parseBarCode(java.lang.String,com.zxing.executor.ResultHandler) -> a
    void showDialog(java.lang.String,com.zxing.executor.ResultHandler) -> b
    void onClick(android.view.View) -> onClick
    void setFlash() -> f
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void restartPreviewAfterDelay(long) -> restartPreviewAfterDelay
    void resetStatusView() -> g
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.app.ProgressDialog access$0(com.dahuatech.app.ui.barcode.CaptureActivity) -> a
com.dahuatech.app.ui.barcode.CaptureActivity$1 -> jx:
    com.dahuatech.app.ui.barcode.CaptureActivity this$0 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.dahuatech.app.ui.barcode.CaptureActivity$2 -> jy:
    com.dahuatech.app.ui.barcode.CaptureActivity this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.dahuatech.app.ui.barcode.CaptureActivity$3 -> jz:
    com.dahuatech.app.ui.barcode.CaptureActivity this$0 -> a
    com.zxing.executor.ResultHandler val$resultHandler -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.dahuatech.app.ui.barcode.CaptureActivity$4 -> ka:
    com.dahuatech.app.ui.barcode.CaptureActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dahuatech.app.ui.contacts.ContactsMainActivity -> com.dahuatech.app.ui.contacts.ContactsMainActivity:
    com.dahuatech.app.ui.contacts.ContactsMainActivity mInstance -> a
    android.app.ProgressDialog dialog -> b
    android.widget.EditText searchText -> c
    android.widget.ImageButton btnSearch -> d
    android.widget.ListView mListView -> e
    com.dahuatech.app.adapter.ContactsAdapter mAdapter -> f
    com.dahuatech.app.business.ContactsBusiness contactsBusiness -> g
    java.lang.String fItemNumber -> h
    java.lang.String fSourceType -> i
    java.lang.String serviceUrl -> j
    com.dahuatech.app.AppContext appContext -> k
    com.dahuatech.app.common.DbManager mDbHelper -> l
    com.dahuatech.app.ui.contacts.ContactsMainActivity getInstance() -> getInstance
    void onCreate(android.os.Bundle) -> onCreate
    void initContactLocalByPost() -> a
    void showSearch(java.lang.String) -> a
    com.dahuatech.app.bean.ContactInfo$ContactResultInfo getListByPost(java.lang.String) -> b
    void dataClear(android.view.View) -> dataClear
    void renderListView(com.dahuatech.app.bean.ContactInfo$ContactResultInfo) -> a
    void sendLogs(java.lang.String) -> c
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    android.app.ProgressDialog access$0(com.dahuatech.app.ui.contacts.ContactsMainActivity) -> a
    void access$1(com.dahuatech.app.ui.contacts.ContactsMainActivity,com.dahuatech.app.bean.ContactInfo$ContactResultInfo) -> a
    com.dahuatech.app.bean.ContactInfo$ContactResultInfo access$2(com.dahuatech.app.ui.contacts.ContactsMainActivity,java.lang.String) -> a
    android.widget.EditText access$3(com.dahuatech.app.ui.contacts.ContactsMainActivity) -> b
    void access$4(com.dahuatech.app.ui.contacts.ContactsMainActivity,java.lang.String) -> b
    void access$5(com.dahuatech.app.ui.contacts.ContactsMainActivity,java.lang.String) -> c
com.dahuatech.app.ui.contacts.ContactsMainActivity$1 -> kb:
    com.dahuatech.app.ui.contacts.ContactsMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.contacts.ContactsMainActivity$ContactsAsyncClient -> kc:
    com.dahuatech.app.ui.contacts.ContactsMainActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.dahuatech.app.bean.ContactInfo$ContactResultInfo) -> a
    com.dahuatech.app.bean.ContactInfo$ContactResultInfo doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.develop.hour.DHConfirmListActivity -> com.dahuatech.app.ui.develop.hour.DHConfirmListActivity:
    android.widget.EditText searchEdit -> a
    android.widget.ImageButton searchImage -> b
    android.widget.TextView fWeekIndexTView -> c
    android.widget.ExpandableListView exlistView -> d
    android.widget.Button btnSelect -> e
    android.widget.Button btnOk -> f
    android.app.ProgressDialog dialog -> g
    java.util.List dArrayList -> h
    java.util.List selectList -> i
    com.dahuatech.app.bean.develophour.DHConfirmChildInfo dConfirmChildInfo -> j
    com.dahuatech.app.adapter.DHConfirmListAdapter dAdapter -> k
    com.dahuatech.app.business.DevelopHourBusiness dBusiness -> l
    java.lang.String fItemNumber -> m
    java.lang.String fShowResult -> n
    java.lang.String serviceUrl -> o
    java.lang.String confirmUrl -> p
    com.dahuatech.app.AppContext appContext -> q
    java.util.Calendar cal -> r
    int fCurrentYear -> s
    int fWeekIndex -> t
    int fCurrentWeekIndex -> u
    java.lang.reflect.Type subClassType -> v
    com.google.gson.Gson gson -> w
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void setOnListener() -> b
    void showWeekSpinner() -> c
    void showAlertDialog() -> d
    void personDhConfirm() -> e
    com.dahuatech.app.bean.ResultMessage uploadByPost() -> f
    void showUploadResult(com.dahuatech.app.bean.ResultMessage) -> a
    java.util.List getListByPost() -> g
    void renderListView(java.util.List) -> a
    void initData(java.util.List) -> b
    void selectAll() -> h
    java.util.List getSelectList() -> i
    void sendLogs() -> j
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    com.dahuatech.app.bean.ResultMessage access$0(com.dahuatech.app.ui.develop.hour.DHConfirmListActivity) -> a
    void access$1(com.dahuatech.app.ui.develop.hour.DHConfirmListActivity,com.dahuatech.app.bean.ResultMessage) -> a
    android.app.ProgressDialog access$2(com.dahuatech.app.ui.develop.hour.DHConfirmListActivity) -> b
    java.util.List access$3(com.dahuatech.app.ui.develop.hour.DHConfirmListActivity) -> c
    void access$4(com.dahuatech.app.ui.develop.hour.DHConfirmListActivity,java.util.List) -> a
    void access$5(com.dahuatech.app.ui.develop.hour.DHConfirmListActivity) -> d
    void access$6(com.dahuatech.app.ui.develop.hour.DHConfirmListActivity) -> e
    java.util.List access$7(com.dahuatech.app.ui.develop.hour.DHConfirmListActivity) -> f
    void access$8(com.dahuatech.app.ui.develop.hour.DHConfirmListActivity,java.util.List) -> b
    java.util.List access$9(com.dahuatech.app.ui.develop.hour.DHConfirmListActivity) -> g
    void access$10(com.dahuatech.app.ui.develop.hour.DHConfirmListActivity) -> h
    android.widget.EditText access$11(com.dahuatech.app.ui.develop.hour.DHConfirmListActivity) -> i
    void access$12(com.dahuatech.app.ui.develop.hour.DHConfirmListActivity,int) -> a
    void access$13(com.dahuatech.app.ui.develop.hour.DHConfirmListActivity,int) -> b
    java.util.List access$14(com.dahuatech.app.ui.develop.hour.DHConfirmListActivity) -> j
    android.widget.TextView access$15(com.dahuatech.app.ui.develop.hour.DHConfirmListActivity) -> k
    int access$16(com.dahuatech.app.ui.develop.hour.DHConfirmListActivity) -> l
    void access$17(com.dahuatech.app.ui.develop.hour.DHConfirmListActivity) -> m
    void access$18(com.dahuatech.app.ui.develop.hour.DHConfirmListActivity,java.util.List) -> c
    void access$19(com.dahuatech.app.ui.develop.hour.DHConfirmListActivity,com.dahuatech.app.bean.develophour.DHConfirmChildInfo) -> a
    com.dahuatech.app.adapter.DHConfirmListAdapter access$20(com.dahuatech.app.ui.develop.hour.DHConfirmListActivity) -> n
    com.dahuatech.app.bean.develophour.DHConfirmChildInfo access$21(com.dahuatech.app.ui.develop.hour.DHConfirmListActivity) -> o
    java.lang.String access$22(com.dahuatech.app.ui.develop.hour.DHConfirmListActivity) -> p
    int access$23(com.dahuatech.app.ui.develop.hour.DHConfirmListActivity) -> q
com.dahuatech.app.ui.develop.hour.DHConfirmListActivity$1 -> kd:
    com.dahuatech.app.ui.develop.hour.DHConfirmListActivity this$0 -> a
com.dahuatech.app.ui.develop.hour.DHConfirmListActivity$10 -> ke:
    com.dahuatech.app.ui.develop.hour.DHConfirmListActivity this$0 -> a
    boolean onGroupClick(android.widget.ExpandableListView,android.view.View,int,long) -> onGroupClick
com.dahuatech.app.ui.develop.hour.DHConfirmListActivity$11 -> kf:
    com.dahuatech.app.ui.develop.hour.DHConfirmListActivity this$0 -> a
    void onGroupExpand(int) -> onGroupExpand
com.dahuatech.app.ui.develop.hour.DHConfirmListActivity$12 -> kg:
    com.dahuatech.app.ui.develop.hour.DHConfirmListActivity this$0 -> a
    void onGroupCollapse(int) -> onGroupCollapse
com.dahuatech.app.ui.develop.hour.DHConfirmListActivity$2 -> kh:
    com.dahuatech.app.ui.develop.hour.DHConfirmListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.develop.hour.DHConfirmListActivity$3 -> ki:
    com.dahuatech.app.ui.develop.hour.DHConfirmListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.develop.hour.DHConfirmListActivity$4 -> kj:
    com.dahuatech.app.ui.develop.hour.DHConfirmListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.develop.hour.DHConfirmListActivity$5 -> kk:
    com.dahuatech.app.ui.develop.hour.DHConfirmListActivity this$0 -> a
    void rejectOk(int,com.dahuatech.app.bean.mytask.RejectNodeInfo) -> rejectOk
    void adAmapOk(int,com.dahuatech.app.bean.attendance.AdAmapInfo) -> adAmapOk
    void cancelled() -> cancelled
    void dHWeekOk(int,java.lang.String,com.dahuatech.app.bean.develophour.DHWeekInfo) -> dHWeekOk
com.dahuatech.app.ui.develop.hour.DHConfirmListActivity$6 -> kl:
    com.dahuatech.app.ui.develop.hour.DHConfirmListActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dahuatech.app.ui.develop.hour.DHConfirmListActivity$7 -> km:
    com.dahuatech.app.ui.develop.hour.DHConfirmListActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dahuatech.app.ui.develop.hour.DHConfirmListActivity$8 -> kn:
    com.dahuatech.app.ui.develop.hour.DHConfirmListActivity this$0 -> a
    void run() -> run
com.dahuatech.app.ui.develop.hour.DHConfirmListActivity$9 -> ko:
    com.dahuatech.app.ui.develop.hour.DHConfirmListActivity this$0 -> a
    boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long) -> onChildClick
com.dahuatech.app.ui.develop.hour.DHConfirmListActivity$getListAsync -> kp:
    com.dahuatech.app.ui.develop.hour.DHConfirmListActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.develop.hour.DHConfirmListActivity$uploadConfirmAsync -> kq:
    com.dahuatech.app.ui.develop.hour.DHConfirmListActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    com.dahuatech.app.bean.ResultMessage doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.dahuatech.app.bean.ResultMessage) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.develop.hour.DHConfirmListPersonActivity -> com.dahuatech.app.ui.develop.hour.DHConfirmListPersonActivity:
    android.widget.ExpandableListView exlistView -> a
    android.app.ProgressDialog dialog -> b
    com.dahuatech.app.business.DevelopHourBusiness dBusiness -> c
    com.dahuatech.app.adapter.DHComfirmListPersonAdapter dAdapter -> d
    java.util.List dArrayList -> e
    java.lang.String serviceUrl -> f
    com.dahuatech.app.AppContext appContext -> g
    java.lang.reflect.Type listType -> h
    com.google.gson.Gson gson -> i
    java.lang.String fProjectNumber -> j
    int fWeekIndex -> k
    int fCurrentYear -> l
    java.lang.String fProjectCode -> m
    java.lang.String fConfrimNumber -> n
    void onCreate(android.os.Bundle) -> onCreate
    void initListView() -> a
    java.util.List getListByPost() -> b
    void renderListView(java.util.List) -> a
    void getPersonList(java.util.List) -> b
    void getFSubChilds(java.lang.String,com.dahuatech.app.bean.develophour.DHConfirmListRootInfo) -> a
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    android.app.ProgressDialog access$0(com.dahuatech.app.ui.develop.hour.DHConfirmListPersonActivity) -> a
    java.util.List access$1(com.dahuatech.app.ui.develop.hour.DHConfirmListPersonActivity) -> b
    void access$2(com.dahuatech.app.ui.develop.hour.DHConfirmListPersonActivity,java.util.List) -> a
    android.widget.ExpandableListView access$3(com.dahuatech.app.ui.develop.hour.DHConfirmListPersonActivity) -> c
com.dahuatech.app.ui.develop.hour.DHConfirmListPersonActivity$1 -> kr:
    com.dahuatech.app.ui.develop.hour.DHConfirmListPersonActivity this$0 -> a
com.dahuatech.app.ui.develop.hour.DHConfirmListPersonActivity$2 -> ks:
    com.dahuatech.app.ui.develop.hour.DHConfirmListPersonActivity this$0 -> a
    boolean onGroupClick(android.widget.ExpandableListView,android.view.View,int,long) -> onGroupClick
com.dahuatech.app.ui.develop.hour.DHConfirmListPersonActivity$3 -> kt:
    com.dahuatech.app.ui.develop.hour.DHConfirmListPersonActivity this$0 -> a
    boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long) -> onChildClick
com.dahuatech.app.ui.develop.hour.DHConfirmListPersonActivity$4 -> ku:
    int previousItem -> a
    com.dahuatech.app.ui.develop.hour.DHConfirmListPersonActivity this$0 -> b
    void onGroupExpand(int) -> onGroupExpand
com.dahuatech.app.ui.develop.hour.DHConfirmListPersonActivity$5 -> kv:
    com.dahuatech.app.ui.develop.hour.DHConfirmListPersonActivity this$0 -> a
    void onGroupCollapse(int) -> onGroupCollapse
com.dahuatech.app.ui.develop.hour.DHConfirmListPersonActivity$getListAsync -> kw:
    com.dahuatech.app.ui.develop.hour.DHConfirmListPersonActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.develop.hour.DHDetailActivity -> com.dahuatech.app.ui.develop.hour.DHDetailActivity:
    android.app.ProgressDialog dialog -> a
    android.app.ProgressDialog uploadDialog -> b
    android.widget.TextView fWeekDateTView -> c
    android.widget.TextView fProjectCodeTView -> d
    android.widget.TextView fProjectNameTView -> e
    android.widget.TextView fTypeIdTView -> f
    android.widget.TextView fTypeNameTView -> g
    android.widget.EditText fHoursEdit -> h
    android.widget.EditText fNoteEdit -> i
    android.widget.ImageView fWeekDateImage -> j
    android.widget.ImageView fProjectNameImage -> k
    android.widget.ImageView fTypeNameImage -> l
    android.widget.ImageView fHoursImage -> m
    android.widget.ImageView fNoteImage -> n
    android.widget.Button btnUpload -> o
    android.widget.Button btnCancle -> p
    java.lang.String fWeekDate -> q
    java.lang.String fProjectCode -> r
    java.lang.String fProjectName -> s
    java.lang.String fTypeId -> t
    java.lang.String fTypeName -> u
    java.lang.String fHours -> v
    java.lang.String fNote -> w
    com.dahuatech.app.bean.develophour.DHDetailInfo dhDetailInfo -> x
    com.dahuatech.app.business.DevelopHourBusiness dBusiness -> y
    java.lang.String fActionType -> z
    java.lang.String fAccess -> A
    java.lang.String fItemNumber -> B
    java.lang.String detailUrl -> C
    java.lang.String uploadUrl -> D
    com.dahuatech.app.AppContext appContext -> E
    android.view.inputmethod.InputMethodManager imm -> F
    java.util.Calendar cal -> G
    int fBillId -> H
    java.lang.String fWeekValue -> I
    java.lang.String fPassWeekDate -> J
    java.lang.String fPassProjectCode -> K
    java.lang.String fPassProjectName -> L
    java.lang.String fPassTypeId -> M
    android.app.DatePickerDialog$OnDateSetListener weekDateListener -> N
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void setOnListener() -> b
    void focusHoursEdit() -> c
    void bindView() -> d
    com.dahuatech.app.bean.develophour.DHDetailInfo getDetailByPost() -> e
    void renderDetailView(com.dahuatech.app.bean.develophour.DHDetailInfo) -> a
    boolean verify() -> f
    void getViewValue() -> g
    void setModel() -> h
    void uploadSave() -> i
    com.dahuatech.app.bean.ResultMessage uploadServer(com.dahuatech.app.bean.develophour.DHDetailInfo) -> b
    void showUploadResult(com.dahuatech.app.bean.ResultMessage) -> a
    void backIntent(java.lang.String,java.lang.String) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void sendLogs() -> j
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.util.Calendar access$0(com.dahuatech.app.ui.develop.hour.DHDetailActivity) -> a
    android.widget.TextView access$1(com.dahuatech.app.ui.develop.hour.DHDetailActivity) -> b
    android.app.ProgressDialog access$2(com.dahuatech.app.ui.develop.hour.DHDetailActivity) -> c
    com.dahuatech.app.bean.develophour.DHDetailInfo access$3(com.dahuatech.app.ui.develop.hour.DHDetailActivity) -> d
    void access$4(com.dahuatech.app.ui.develop.hour.DHDetailActivity,com.dahuatech.app.bean.develophour.DHDetailInfo) -> a
    android.app.ProgressDialog access$5(com.dahuatech.app.ui.develop.hour.DHDetailActivity) -> e
    com.dahuatech.app.bean.ResultMessage access$6(com.dahuatech.app.ui.develop.hour.DHDetailActivity,com.dahuatech.app.bean.develophour.DHDetailInfo) -> b
    void access$7(com.dahuatech.app.ui.develop.hour.DHDetailActivity,com.dahuatech.app.bean.ResultMessage) -> a
    android.app.DatePickerDialog$OnDateSetListener access$8(com.dahuatech.app.ui.develop.hour.DHDetailActivity) -> f
    android.widget.TextView access$9(com.dahuatech.app.ui.develop.hour.DHDetailActivity) -> g
    android.widget.TextView access$10(com.dahuatech.app.ui.develop.hour.DHDetailActivity) -> h
    void access$11(com.dahuatech.app.ui.develop.hour.DHDetailActivity) -> i
    android.widget.EditText access$12(com.dahuatech.app.ui.develop.hour.DHDetailActivity) -> j
    android.view.inputmethod.InputMethodManager access$13(com.dahuatech.app.ui.develop.hour.DHDetailActivity) -> k
    void access$14(com.dahuatech.app.ui.develop.hour.DHDetailActivity) -> l
    java.lang.String access$15(com.dahuatech.app.ui.develop.hour.DHDetailActivity) -> m
    java.lang.String access$16(com.dahuatech.app.ui.develop.hour.DHDetailActivity) -> n
    java.lang.String access$17(com.dahuatech.app.ui.develop.hour.DHDetailActivity) -> o
    java.lang.String access$18(com.dahuatech.app.ui.develop.hour.DHDetailActivity) -> p
    java.lang.String access$19(com.dahuatech.app.ui.develop.hour.DHDetailActivity) -> q
    void access$20(com.dahuatech.app.ui.develop.hour.DHDetailActivity,java.lang.String,java.lang.String) -> a
    java.lang.String access$21(com.dahuatech.app.ui.develop.hour.DHDetailActivity) -> r
com.dahuatech.app.ui.develop.hour.DHDetailActivity$1 -> kx:
    com.dahuatech.app.ui.develop.hour.DHDetailActivity this$0 -> a
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
com.dahuatech.app.ui.develop.hour.DHDetailActivity$10 -> ky:
    com.dahuatech.app.ui.develop.hour.DHDetailActivity this$0 -> a
    void run() -> run
com.dahuatech.app.ui.develop.hour.DHDetailActivity$2 -> kz:
    com.dahuatech.app.ui.develop.hour.DHDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.develop.hour.DHDetailActivity$3 -> la:
    com.dahuatech.app.ui.develop.hour.DHDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.develop.hour.DHDetailActivity$4 -> lb:
    com.dahuatech.app.ui.develop.hour.DHDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.develop.hour.DHDetailActivity$5 -> lc:
    com.dahuatech.app.ui.develop.hour.DHDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.develop.hour.DHDetailActivity$6 -> ld:
    com.dahuatech.app.ui.develop.hour.DHDetailActivity this$0 -> a
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.dahuatech.app.ui.develop.hour.DHDetailActivity$7 -> le:
    com.dahuatech.app.ui.develop.hour.DHDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.develop.hour.DHDetailActivity$8 -> lf:
    com.dahuatech.app.ui.develop.hour.DHDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.develop.hour.DHDetailActivity$9 -> lg:
    com.dahuatech.app.ui.develop.hour.DHDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.develop.hour.DHDetailActivity$getDetailAsync -> lh:
    com.dahuatech.app.ui.develop.hour.DHDetailActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    com.dahuatech.app.bean.develophour.DHDetailInfo doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.dahuatech.app.bean.develophour.DHDetailInfo) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.develop.hour.DHDetailActivity$uploadDetailAsync -> li:
    com.dahuatech.app.ui.develop.hour.DHDetailActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    com.dahuatech.app.bean.ResultMessage doInBackground(com.dahuatech.app.bean.develophour.DHDetailInfo[]) -> a
    void onPostExecute(com.dahuatech.app.bean.ResultMessage) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.develop.hour.DHListActivity -> com.dahuatech.app.ui.develop.hour.DHListActivity:
    com.dahuatech.app.ui.develop.hour.DHListActivity mInstance -> a
    android.widget.EditText searchEditText -> b
    android.widget.ImageButton searchImage -> c
    com.handmark.pulltorefresh.library.PullToRefreshListView mPullRefreshListView -> d
    android.app.ProgressDialog dialog -> e
    com.dahuatech.app.business.DevelopHourBusiness dBusiness -> f
    java.util.List dArrayList -> g
    com.dahuatech.app.adapter.DHListAdapter dAdapter -> h
    java.lang.String fItemNumber -> i
    java.lang.String serviceUrl -> j
    com.dahuatech.app.AppContext appContext -> k
    java.util.Calendar cal -> l
    int fCurrentYear -> m
    int fWeekIndex -> n
    int fCurrentWeekIndex -> o
    com.dahuatech.app.ui.develop.hour.DHListActivity getInstance() -> getInstance
    void onCreate(android.os.Bundle) -> onCreate
    void initListView() -> a
    void setListener() -> b
    void showWeekSpinner() -> c
    java.util.List getListByPost(java.lang.Integer) -> a
    void renderListView(java.util.List) -> a
    void onPullDownToRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onPullDownToRefresh
    void onPullUpToRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onPullUpToRefresh
    void onPullDownListView() -> onPullDownListView
    void onPullUpListView() -> onPullUpListView
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void sendLogs() -> d
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    android.app.ProgressDialog access$0(com.dahuatech.app.ui.develop.hour.DHListActivity) -> a
    java.util.List access$1(com.dahuatech.app.ui.develop.hour.DHListActivity,java.lang.Integer) -> a
    void access$2(com.dahuatech.app.ui.develop.hour.DHListActivity,java.util.List) -> a
    java.util.List access$3(com.dahuatech.app.ui.develop.hour.DHListActivity) -> b
    java.lang.String access$4(com.dahuatech.app.ui.develop.hour.DHListActivity) -> c
    void access$5(com.dahuatech.app.ui.develop.hour.DHListActivity,com.dahuatech.app.adapter.DHListAdapter) -> a
    com.handmark.pulltorefresh.library.PullToRefreshListView access$6(com.dahuatech.app.ui.develop.hour.DHListActivity) -> d
    com.dahuatech.app.adapter.DHListAdapter access$7(com.dahuatech.app.ui.develop.hour.DHListActivity) -> e
    void access$8(com.dahuatech.app.ui.develop.hour.DHListActivity) -> f
    android.widget.EditText access$9(com.dahuatech.app.ui.develop.hour.DHListActivity) -> g
    void access$10(com.dahuatech.app.ui.develop.hour.DHListActivity,int) -> a
    void access$11(com.dahuatech.app.ui.develop.hour.DHListActivity,int) -> b
    int access$12(com.dahuatech.app.ui.develop.hour.DHListActivity) -> h
com.dahuatech.app.ui.develop.hour.DHListActivity$1 -> lj:
    com.dahuatech.app.ui.develop.hour.DHListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.develop.hour.DHListActivity$2 -> lk:
    com.dahuatech.app.ui.develop.hour.DHListActivity this$0 -> a
    void rejectOk(int,com.dahuatech.app.bean.mytask.RejectNodeInfo) -> rejectOk
    void adAmapOk(int,com.dahuatech.app.bean.attendance.AdAmapInfo) -> adAmapOk
    void cancelled() -> cancelled
    void dHWeekOk(int,java.lang.String,com.dahuatech.app.bean.develophour.DHWeekInfo) -> dHWeekOk
com.dahuatech.app.ui.develop.hour.DHListActivity$getListAsync -> ll:
    com.dahuatech.app.ui.develop.hour.DHListActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.develop.hour.DHListActivity$pullDownRefreshAsync -> lm:
    com.dahuatech.app.ui.develop.hour.DHListActivity this$0 -> a
    java.util.List doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.develop.hour.DHListActivity$pullUpRefreshAsync -> ln:
    com.dahuatech.app.ui.develop.hour.DHListActivity this$0 -> a
    java.util.List doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.develop.hour.DHListProjectActivity -> com.dahuatech.app.ui.develop.hour.DHListProjectActivity:
    com.dahuatech.app.ui.develop.hour.DHListProjectActivity mInstance -> a
    android.widget.ExpandableListView exlistView -> b
    android.widget.ImageView fAddProject -> c
    android.app.ProgressDialog dialog -> d
    com.dahuatech.app.business.DevelopHourBusiness dBusiness -> e
    java.util.List dArrayList -> f
    com.dahuatech.app.adapter.DHListProjectAdapter dAdapter -> g
    com.dahuatech.app.bean.develophour.DHListTypeInfo dTypeInfo -> h
    int fBillId -> i
    java.lang.String fItemNumber -> j
    java.lang.String fWeekValue -> k
    java.lang.String fWeekDate -> l
    java.lang.String fType -> m
    java.lang.String serviceUrl -> n
    com.dahuatech.app.AppContext appContext -> o
    java.lang.reflect.Type dHListType -> p
    com.google.gson.Gson gson -> q
    com.dahuatech.app.ui.develop.hour.DHListProjectActivity getInstance() -> getInstance
    void onCreate(android.os.Bundle) -> onCreate
    void initListView() -> a
    void setOnlistener() -> b
    java.util.List getListByPost() -> c
    void renderListView(java.util.List) -> a
    void getProjectList(java.util.List) -> b
    void getSubEntrys(java.lang.String,com.dahuatech.app.bean.develophour.DHListProjectInfo) -> a
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    android.app.ProgressDialog access$0(com.dahuatech.app.ui.develop.hour.DHListProjectActivity) -> a
    java.util.List access$1(com.dahuatech.app.ui.develop.hour.DHListProjectActivity) -> b
    void access$2(com.dahuatech.app.ui.develop.hour.DHListProjectActivity,java.util.List) -> a
    int access$3(com.dahuatech.app.ui.develop.hour.DHListProjectActivity) -> c
    java.lang.String access$4(com.dahuatech.app.ui.develop.hour.DHListProjectActivity) -> d
    java.lang.String access$5(com.dahuatech.app.ui.develop.hour.DHListProjectActivity) -> e
    java.lang.String access$6(com.dahuatech.app.ui.develop.hour.DHListProjectActivity) -> f
    com.dahuatech.app.adapter.DHListProjectAdapter access$7(com.dahuatech.app.ui.develop.hour.DHListProjectActivity) -> g
    void access$8(com.dahuatech.app.ui.develop.hour.DHListProjectActivity,com.dahuatech.app.bean.develophour.DHListTypeInfo) -> a
    com.dahuatech.app.bean.develophour.DHListTypeInfo access$9(com.dahuatech.app.ui.develop.hour.DHListProjectActivity) -> h
    android.widget.ExpandableListView access$10(com.dahuatech.app.ui.develop.hour.DHListProjectActivity) -> i
com.dahuatech.app.ui.develop.hour.DHListProjectActivity$1 -> lo:
    com.dahuatech.app.ui.develop.hour.DHListProjectActivity this$0 -> a
com.dahuatech.app.ui.develop.hour.DHListProjectActivity$2 -> lp:
    com.dahuatech.app.ui.develop.hour.DHListProjectActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.develop.hour.DHListProjectActivity$3 -> lq:
    com.dahuatech.app.ui.develop.hour.DHListProjectActivity this$0 -> a
    boolean onGroupClick(android.widget.ExpandableListView,android.view.View,int,long) -> onGroupClick
com.dahuatech.app.ui.develop.hour.DHListProjectActivity$4 -> lr:
    com.dahuatech.app.ui.develop.hour.DHListProjectActivity this$0 -> a
    boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long) -> onChildClick
com.dahuatech.app.ui.develop.hour.DHListProjectActivity$5 -> ls:
    int previousItem -> a
    com.dahuatech.app.ui.develop.hour.DHListProjectActivity this$0 -> b
    void onGroupExpand(int) -> onGroupExpand
com.dahuatech.app.ui.develop.hour.DHListProjectActivity$6 -> lt:
    com.dahuatech.app.ui.develop.hour.DHListProjectActivity this$0 -> a
    void onGroupCollapse(int) -> onGroupCollapse
com.dahuatech.app.ui.develop.hour.DHListProjectActivity$getListAsync -> lu:
    com.dahuatech.app.ui.develop.hour.DHListProjectActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.develop.hour.DHMainActivity -> com.dahuatech.app.ui.develop.hour.DHMainActivity:
    com.dahuatech.app.ui.develop.hour.DHMainActivity mInstance -> a
    android.widget.Button btnDhDetail -> b
    android.widget.Button btnDhList -> c
    android.widget.Button btnDhConfirmList -> d
    java.lang.String fItemNumber -> e
    com.dahuatech.app.AppContext appContext -> f
    com.dahuatech.app.ui.develop.hour.DHMainActivity getInstance() -> getInstance
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.develop.hour.DHMainActivity) -> a
com.dahuatech.app.ui.develop.hour.DHMainActivity$1 -> lv:
    com.dahuatech.app.ui.develop.hour.DHMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.develop.hour.DHMainActivity$2 -> lw:
    com.dahuatech.app.ui.develop.hour.DHMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.develop.hour.DHMainActivity$3 -> lx:
    com.dahuatech.app.ui.develop.hour.DHMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity -> com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity:
    android.widget.EditText searchEditText -> a
    android.widget.ImageButton searchImageButton -> b
    com.handmark.pulltorefresh.library.PullToRefreshListView mPullRefreshListView -> c
    java.util.List dArrayList -> d
    com.dahuatech.app.common.DbManager mDbHelper -> e
    com.dahuatech.app.business.DevelopHourBusiness dBusiness -> f
    com.dahuatech.app.bean.develophour.DHProjectInfo dhProjectInfo -> g
    com.dahuatech.app.adapter.DHProjectAdapter dAdapter -> h
    android.app.ProgressDialog dialog -> i
    java.lang.String fQueryText -> j
    int fPageIndex -> k
    java.lang.String searchUrl -> l
    com.dahuatech.app.AppContext appContext -> m
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void setOnListener() -> b
    java.util.List getLocalByPost() -> c
    void renderLocalList(java.util.List) -> a
    java.util.List getServerByPost(int) -> a
    void renderServerList(java.util.List) -> b
    void onRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onRefresh
    void onPullUpListView() -> onPullUpListView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.util.List access$0(com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity) -> a
    void access$1(com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity,java.util.List) -> a
    android.app.ProgressDialog access$2(com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity) -> b
    java.util.List access$3(com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity,int) -> a
    void access$4(com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity,java.util.List) -> b
    com.handmark.pulltorefresh.library.PullToRefreshListView access$5(com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity) -> c
    java.util.List access$6(com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity) -> d
    com.dahuatech.app.adapter.DHProjectAdapter access$7(com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity) -> e
    android.widget.EditText access$8(com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity) -> f
    void access$9(com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity,java.lang.String) -> a
    java.lang.String access$10(com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity) -> g
    int access$11(com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity) -> h
    void access$12(com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity,com.dahuatech.app.bean.develophour.DHProjectInfo) -> a
    com.dahuatech.app.bean.develophour.DHProjectInfo access$13(com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity) -> i
    com.dahuatech.app.common.DbManager access$14(com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity) -> j
com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity$1 -> ly:
    com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity$2 -> lz:
    com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity$3 -> ma:
    com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity$getLocalAsync -> mb:
    com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity$getServerAsync -> mc:
    com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity$pullUpRefreshAsync -> md:
    com.dahuatech.app.ui.develop.hour.DHProjectSearchActivity this$0 -> a
    java.util.List doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.develop.hour.DHTypeListActivity -> com.dahuatech.app.ui.develop.hour.DHTypeListActivity:
    android.widget.ListView mListView -> a
    android.app.ProgressDialog dialog -> b
    com.dahuatech.app.business.DevelopHourBusiness dBusiness -> c
    com.dahuatech.app.adapter.DHTypeAdapter dAdapter -> d
    com.dahuatech.app.bean.develophour.DHTypeInfo dhTypeInfo -> e
    java.util.List dArrayList -> f
    java.lang.String fProjectCode -> g
    java.lang.String serviceUrl -> h
    com.dahuatech.app.AppContext appContext -> i
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    java.util.List getListByPost() -> b
    void renderList(java.util.List) -> a
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    android.app.ProgressDialog access$0(com.dahuatech.app.ui.develop.hour.DHTypeListActivity) -> a
    java.util.List access$1(com.dahuatech.app.ui.develop.hour.DHTypeListActivity) -> b
    void access$2(com.dahuatech.app.ui.develop.hour.DHTypeListActivity,java.util.List) -> a
    void access$3(com.dahuatech.app.ui.develop.hour.DHTypeListActivity,com.dahuatech.app.bean.develophour.DHTypeInfo) -> a
    com.dahuatech.app.bean.develophour.DHTypeInfo access$4(com.dahuatech.app.ui.develop.hour.DHTypeListActivity) -> c
com.dahuatech.app.ui.develop.hour.DHTypeListActivity$1 -> me:
    com.dahuatech.app.ui.develop.hour.DHTypeListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dahuatech.app.ui.develop.hour.DHTypeListActivity$getListAsync -> mf:
    com.dahuatech.app.ui.develop.hour.DHTypeListActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.expense.flow.ExpenseClientSearchListActivity -> com.dahuatech.app.ui.expense.flow.ExpenseClientSearchListActivity:
    com.handmark.pulltorefresh.library.PullToRefreshListView mPullRefreshListView -> a
    com.dahuatech.app.adapter.ExpenseFlowItemAdapter mAdapter -> b
    java.util.List eArrayList -> c
    com.dahuatech.app.bean.expense.ExpenseFlowItemInfo eInfo -> d
    java.util.List mQueryList -> e
    com.dahuatech.app.common.DbManager mDbHelper -> f
    com.dahuatech.app.business.ExpenseFlowItemBusiness eBusiness -> g
    android.app.ProgressDialog dialog -> h
    java.lang.String[] COLUMNS -> i
    android.database.MatrixCursor matrixCursor -> j
    com.dahuatech.app.adapter.SuggestionsAdapter mSuggestionsAdapter -> k
    com.actionbarsherlock.widget.SearchView mSearchView -> l
    com.dahuatech.app.AppContext appContext -> m
    java.lang.String fItemNumber -> n
    java.lang.String fQueryStr -> o
    java.lang.String serviceUrl -> p
    int fPageIndex -> q
    void onCreate(android.os.Bundle) -> onCreate
    void initListData() -> a
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void setupSearchView(com.actionbarsherlock.view.MenuItem) -> a
    boolean onSuggestionSelect(int) -> onSuggestionSelect
    boolean onSuggestionClick(int) -> onSuggestionClick
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
    void showSuggestions(java.lang.String) -> a
    java.util.List getClientLocalByPost() -> b
    void renderClientLocalListView(java.util.List) -> a
    java.util.List getClientListByPost(int) -> a
    void renderClientListView(java.util.List) -> b
    void onRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onRefresh
    void onPullUpListView() -> onPullUpListView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.util.List access$0(com.dahuatech.app.ui.expense.flow.ExpenseClientSearchListActivity) -> a
    void access$1(com.dahuatech.app.ui.expense.flow.ExpenseClientSearchListActivity,java.util.List) -> a
    android.app.ProgressDialog access$2(com.dahuatech.app.ui.expense.flow.ExpenseClientSearchListActivity) -> b
    java.util.List access$3(com.dahuatech.app.ui.expense.flow.ExpenseClientSearchListActivity,int) -> a
    void access$4(com.dahuatech.app.ui.expense.flow.ExpenseClientSearchListActivity,java.util.List) -> b
    com.handmark.pulltorefresh.library.PullToRefreshListView access$5(com.dahuatech.app.ui.expense.flow.ExpenseClientSearchListActivity) -> c
    java.util.List access$6(com.dahuatech.app.ui.expense.flow.ExpenseClientSearchListActivity) -> d
    com.dahuatech.app.adapter.ExpenseFlowItemAdapter access$7(com.dahuatech.app.ui.expense.flow.ExpenseClientSearchListActivity) -> e
    void access$8(com.dahuatech.app.ui.expense.flow.ExpenseClientSearchListActivity,com.dahuatech.app.bean.expense.ExpenseFlowItemInfo) -> a
    com.dahuatech.app.bean.expense.ExpenseFlowItemInfo access$9(com.dahuatech.app.ui.expense.flow.ExpenseClientSearchListActivity) -> f
    com.dahuatech.app.common.DbManager access$10(com.dahuatech.app.ui.expense.flow.ExpenseClientSearchListActivity) -> g
com.dahuatech.app.ui.expense.flow.ExpenseClientSearchListActivity$1 -> mg:
    com.dahuatech.app.ui.expense.flow.ExpenseClientSearchListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dahuatech.app.ui.expense.flow.ExpenseClientSearchListActivity$2 -> mh:
    com.dahuatech.app.ui.expense.flow.ExpenseClientSearchListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dahuatech.app.ui.expense.flow.ExpenseClientSearchListActivity$getClientLocalAsync -> mi:
    com.dahuatech.app.ui.expense.flow.ExpenseClientSearchListActivity this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.expense.flow.ExpenseClientSearchListActivity$getClientSearchAsync -> mj:
    com.dahuatech.app.ui.expense.flow.ExpenseClientSearchListActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.expense.flow.ExpenseClientSearchListActivity$pullUpRefreshAsync -> mk:
    com.dahuatech.app.ui.expense.flow.ExpenseClientSearchListActivity this$0 -> a
    java.util.List doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity -> com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity:
    android.widget.ArrayAdapter childAdapter -> a
    java.lang.String[] fTravelLabelArray -> b
    java.lang.String[] fSocializeLabelArray -> c
    java.lang.String[] fExpendTypeValueArray -> d
    java.lang.String[] fTravelValueArray -> e
    java.lang.String[] fSocializeValueArray -> f
    java.lang.String[] fBusinesslevelValueArray -> g
    java.lang.String[] fNocardValueArray -> h
    int fExpenseType -> i
    int fBindParentPosition -> j
    int fBindChildPosition -> k
    android.widget.LinearLayout fSubLinearLayout -> l
    com.dahuatech.app.AppContext appContext -> m
    java.lang.String fItemNumber -> n
    java.lang.String fPayType -> o
    java.lang.String serviceUrl -> p
    java.lang.String fDefaultExpendTime -> q
    java.lang.String fSkipSource -> r
    java.util.Calendar cal -> s
    com.dahuatech.app.business.ExpenseBusiness eBusiness -> t
    com.dahuatech.app.bean.expense.ExpenseFlowDetailInfo exDetailInfo -> u
    com.dahuatech.app.common.DbManager mDbHelper -> v
    java.lang.Boolean btnResult -> w
    java.lang.String showLocalResult -> x
    java.lang.String showUploadResult -> y
    android.app.ProgressDialog uploadDialog -> z
    android.widget.EditText fExpendTime -> A
    android.widget.EditText fExpendAmount -> B
    android.widget.EditText fExpendAddress -> C
    android.widget.EditText fCause -> D
    android.widget.EditText fAccompanyReason -> E
    android.widget.Spinner parentSpinner -> F
    android.widget.Spinner childSpinner -> G
    android.widget.TextView fClientId -> H
    android.widget.TextView fProjectId -> I
    android.widget.TextView fClient -> J
    android.widget.TextView fProject -> K
    android.widget.TextView fAccompanylabel -> L
    android.widget.RadioGroup fAccompany -> M
    android.widget.RadioButton fRadioYes -> N
    android.widget.RadioButton fRadioNo -> O
    android.widget.Button btnTemp -> P
    android.widget.Button btnUpload -> Q
    android.widget.ImageView fExpendAddressIV -> R
    android.widget.ImageView fCauseIV -> S
    android.widget.ImageView fClientIV -> T
    android.widget.ImageView fProjectIV -> U
    android.widget.ImageView fAccompanyReasonIV -> V
    android.widget.EditText fStartAddress -> W
    android.widget.EditText fStartTime -> X
    android.widget.EditText fEndAddress -> Y
    android.widget.EditText fEndTime -> Z
    android.widget.EditText fDescription -> aa
    android.widget.Spinner fBusinessLevelSpinner -> ab
    android.widget.Spinner fReasonSpinner -> ac
    android.widget.ImageView fStartAddressIV -> ad
    android.widget.ImageView fStartTimeIV -> ae
    android.widget.ImageView fEndAddressIV -> af
    android.widget.ImageView fEndTimeIV -> ag
    android.widget.ImageView fDescriptionIV -> ah
    int fLocalId -> ai
    int fServerId -> aj
    java.lang.String fExpendTimeValue -> ak
    java.lang.String fExpendAmountValue -> al
    java.lang.String fExpendAddressValue -> am
    java.lang.String fCauseValue -> an
    java.lang.String fAccompanyReasonValue -> ao
    java.lang.String fSpinnerParent -> ap
    java.lang.String fSpinnerChild -> aq
    java.lang.String fClientIdValue -> ar
    java.lang.String fProjectIdValue -> as
    java.lang.String fClientName -> at
    java.lang.String fProjectName -> au
    java.lang.String fAccompanyValue -> av
    java.lang.String fStartAddressValue -> aw
    java.lang.String fStartTimeValue -> ax
    java.lang.String fEndAddressValue -> ay
    java.lang.String fEndTimeValue -> az
    java.lang.String fDescriptionValue -> aA
    java.lang.String fBusinessLevelValue -> aB
    java.lang.String fReasonValue -> aC
    android.app.DatePickerDialog$OnDateSetListener expendTimeDateListener -> aD
    android.app.DatePickerDialog$OnDateSetListener startTimeDateListener -> aE
    android.app.DatePickerDialog$OnDateSetListener endTimeDateListener -> aF
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void setView() -> b
    void bindView() -> c
    void setParentListener() -> d
    void setChildListener() -> e
    void showInputBox(android.widget.EditText) -> a
    void addChildView() -> f
    void setChildView() -> g
    void showTravelView() -> h
    void showSocializeView() -> i
    void hiddenTravelView() -> j
    void hiddenSocializeView() -> k
    void setDate(android.widget.EditText) -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void getControlValue() -> l
    boolean verifyControlValue() -> m
    void setModel() -> n
    void tempSave() -> o
    void tempBack() -> p
    void uploadSave() -> q
    com.dahuatech.app.bean.ResultMessage uploadServer(java.util.List) -> a
    void showUploadResult(com.dahuatech.app.bean.ResultMessage) -> a
    void uploadBack() -> r
    void sendLogs() -> s
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.util.Calendar access$0(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> a
    android.widget.EditText access$1(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> b
    void access$2(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity,android.widget.EditText) -> a
    android.widget.EditText access$3(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> c
    android.widget.EditText access$4(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> d
    android.app.ProgressDialog access$5(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> e
    com.dahuatech.app.bean.ResultMessage access$6(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity,java.util.List) -> a
    void access$7(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity,com.dahuatech.app.bean.ResultMessage) -> a
    android.app.DatePickerDialog$OnDateSetListener access$8(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> f
    void access$9(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity,int) -> a
    java.lang.String[] access$10(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> g
    void access$11(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity,android.widget.ArrayAdapter) -> a
    void access$12(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> h
    void access$13(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> i
    java.lang.String[] access$14(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> j
    void access$15(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> k
    void access$16(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> l
    android.widget.Spinner access$17(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> m
    android.widget.ArrayAdapter access$18(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> n
    android.widget.Spinner access$19(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> o
    void access$20(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity,java.lang.String) -> a
    int access$21(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> p
    void access$22(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity,java.lang.String) -> b
    android.widget.RadioButton access$23(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> q
    android.widget.TextView access$24(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> r
    void access$25(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity,java.lang.String) -> c
    android.widget.RadioButton access$26(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> s
    boolean access$27(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> t
    void access$28(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> u
    void access$29(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> v
    void access$30(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> w
    void access$31(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> x
    android.widget.EditText access$32(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> y
    void access$33(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity,android.widget.EditText) -> b
    android.widget.EditText access$34(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> z
    java.lang.String access$35(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> A
    android.widget.EditText access$36(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> B
    android.widget.Spinner access$37(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> C
    void access$38(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity,java.lang.String) -> d
    android.widget.Spinner access$39(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> D
    void access$40(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity,java.lang.String) -> e
    android.widget.EditText access$41(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> E
    android.widget.EditText access$42(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> F
    android.app.DatePickerDialog$OnDateSetListener access$43(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> G
    android.app.DatePickerDialog$OnDateSetListener access$44(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> H
    android.widget.EditText access$45(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> I
    com.dahuatech.app.common.DbManager access$46(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> J
    int access$47(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> K
    java.lang.String access$48(com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity) -> L
com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity$1 -> ml:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity this$0 -> a
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity$10 -> mm:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity$11 -> mn:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity$12 -> mo:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity$13 -> mp:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity$14 -> mq:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity$15 -> mr:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity$16 -> ms:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity$17 -> mt:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity$18 -> mu:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity$19 -> mv:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity$2 -> mw:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity this$0 -> a
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity$20 -> mx:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity$21 -> my:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity$22 -> mz:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity$23 -> na:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity this$0 -> a
    void run() -> run
com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity$24 -> nb:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity this$0 -> a
    void run() -> run
com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity$3 -> nc:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity this$0 -> a
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity$4 -> nd:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity$5 -> ne:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity$6 -> nf:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity$7 -> ng:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity$8 -> nh:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity$9 -> ni:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity$detailUploadAsync -> nj:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowDetailActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    com.dahuatech.app.bean.ResultMessage doInBackground(java.util.List[]) -> a
    void onPostExecute(com.dahuatech.app.bean.ResultMessage) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity -> com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity:
    android.widget.Button btnSubmit -> a
    android.widget.Button btnUpload -> b
    android.widget.Button btnAdd -> c
    android.widget.EditText searchEdit -> d
    android.widget.ImageButton searchImageBtn -> e
    com.handmark.pulltorefresh.library.PullToRefreshExpandableListView mPullRefreshListView -> f
    com.dahuatech.app.adapter.ExpandableListAdapter listAdapter -> g
    java.util.List listDataHeader -> h
    java.util.HashMap listDataChild -> i
    com.dahuatech.app.bean.expense.ExpenseFlowDetailInfo efDetailInfo -> j
    com.dahuatech.app.business.ExpandableBusiness eBusiness -> k
    android.app.ProgressDialog dialog -> l
    java.lang.String fItemNumber -> m
    java.lang.String fQueryText -> n
    java.lang.String serviceUrl -> o
    com.dahuatech.app.AppContext appContext -> p
    int fPageIndex -> q
    java.lang.String fCurrentDate -> r
    java.util.Calendar cal -> s
    android.app.DatePickerDialog$OnDateSetListener searchDateListener -> t
    void onCreate(android.os.Bundle) -> onCreate
    void prepareListData() -> a
    void setListener() -> b
    void serverSelected() -> c
    void localSelected() -> d
    void addSelected() -> e
    java.util.List getListByPost(java.lang.Integer) -> a
    void renderListView(java.util.List) -> a
    void initListData(java.util.List) -> b
    void onPullDownToRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onPullDownToRefresh
    void onPullUpToRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onPullUpToRefresh
    void onPullDownListView() -> onPullDownListView
    void onPullUpListView() -> onPullUpListView
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void sendLogs() -> f
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.util.Calendar access$0(com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity) -> a
    android.widget.EditText access$1(com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity) -> b
    android.app.ProgressDialog access$2(com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity) -> c
    java.util.List access$3(com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity,java.lang.Integer) -> a
    void access$4(com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity,java.util.List) -> a
    com.handmark.pulltorefresh.library.PullToRefreshExpandableListView access$5(com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity) -> d
    java.util.List access$6(com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity) -> e
    java.util.HashMap access$7(com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity) -> f
    void access$8(com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity,java.util.List) -> b
    java.lang.String access$9(com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity) -> g
    void access$10(com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity,com.dahuatech.app.adapter.ExpandableListAdapter) -> a
    com.dahuatech.app.adapter.ExpandableListAdapter access$11(com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity) -> h
    void access$12(com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity) -> i
    void access$13(com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity,int) -> a
    int access$14(com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity) -> j
    void access$15(com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity) -> k
    void access$16(com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity) -> l
    android.app.DatePickerDialog$OnDateSetListener access$17(com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity) -> m
    void access$18(com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity,java.lang.String) -> a
    void access$19(com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity,com.dahuatech.app.bean.expense.ExpenseFlowDetailInfo) -> a
    com.dahuatech.app.bean.expense.ExpenseFlowDetailInfo access$20(com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity) -> n
com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity$1 -> nk:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity this$0 -> a
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity$10 -> nl:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity this$0 -> a
    void onGroupCollapse(int) -> onGroupCollapse
com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity$11 -> nm:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity this$0 -> a
com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity$2 -> nn:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity$3 -> no:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity$4 -> np:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity$5 -> nq:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity$6 -> nr:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity$7 -> ns:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity this$0 -> a
    boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long) -> onChildClick
com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity$8 -> nt:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity this$0 -> a
    boolean onGroupClick(android.widget.ExpandableListView,android.view.View,int,long) -> onGroupClick
com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity$9 -> nu:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity this$0 -> a
    void onGroupExpand(int) -> onGroupExpand
com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity$getListAsync -> nv:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity$pullDownRefreshAsync -> nw:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity this$0 -> a
    java.util.List doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity$pullUpRefreshAsync -> nx:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowListActivity this$0 -> a
    java.util.List doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity -> com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity:
    android.widget.ListView mListView -> a
    java.util.List eArrayList -> b
    java.util.List sArrayList -> c
    java.util.List localRowIdList -> d
    com.dahuatech.app.adapter.ExpenseFlowLocalAdapter mAdapter -> e
    com.dahuatech.app.bean.expense.ExpenseFlowDetailInfo eDetailInfo -> f
    com.dahuatech.app.common.DbManager mDbHelper -> g
    com.dahuatech.app.business.ExpenseBusiness eBusiness -> h
    android.app.ProgressDialog dialog -> i
    android.app.ProgressDialog uploadDialog -> j
    android.widget.Button btnBatchUpload -> k
    android.widget.Button btnBatchDelete -> l
    java.lang.String fItemNumber -> m
    java.lang.String serviceUrl -> n
    com.dahuatech.app.AppContext appContext -> o
    void onCreate(android.os.Bundle) -> onCreate
    void initListData() -> a
    java.util.List getLocalByPost() -> b
    void renderLocalListView(java.util.List) -> a
    void setButtonListener() -> c
    void uploadSelected() -> d
    void deleteSelected() -> e
    java.util.List getSelectedList() -> f
    com.dahuatech.app.bean.ResultMessage uploadServer(java.util.List) -> b
    void showUploadResult(com.dahuatech.app.bean.ResultMessage) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    android.app.ProgressDialog access$0(com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity) -> a
    java.util.List access$1(com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity) -> b
    void access$2(com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity,java.util.List) -> a
    android.app.ProgressDialog access$3(com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity) -> c
    com.dahuatech.app.bean.ResultMessage access$4(com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity,java.util.List) -> b
    void access$5(com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity,com.dahuatech.app.bean.ResultMessage) -> a
    com.dahuatech.app.adapter.ExpenseFlowLocalAdapter access$6(com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity) -> d
    void access$7(com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity,com.dahuatech.app.bean.expense.ExpenseFlowDetailInfo) -> a
    com.dahuatech.app.bean.expense.ExpenseFlowDetailInfo access$8(com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity) -> e
    java.lang.String access$9(com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity) -> f
    void access$10(com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity) -> g
    java.util.List access$11(com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity) -> h
    void access$12(com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity,java.util.List) -> c
    java.util.List access$13(com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity) -> i
    void access$14(com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity,java.util.List) -> d
    java.util.List access$15(com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity) -> j
    void access$16(com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity) -> k
    com.dahuatech.app.common.DbManager access$17(com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity) -> l
    java.util.List access$18(com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity) -> m
com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity$1 -> ny:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity$2 -> nz:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity$3 -> oa:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity access$0(com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity$3) -> a
com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity$3$1 -> ob:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity$3 this$1 -> a
    void run() -> run
com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity$4 -> oc:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity this$0 -> a
    void run() -> run
com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity$getLocalAsync -> od:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity$localUploadAsync -> oe:
    com.dahuatech.app.ui.expense.flow.ExpenseFlowLocalListActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    com.dahuatech.app.bean.ResultMessage doInBackground(java.util.List[]) -> a
    void onPostExecute(com.dahuatech.app.bean.ResultMessage) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.expense.flow.ExpenseProjectSearchListActivity -> com.dahuatech.app.ui.expense.flow.ExpenseProjectSearchListActivity:
    com.handmark.pulltorefresh.library.PullToRefreshListView mPullRefreshListView -> a
    com.dahuatech.app.adapter.ExpenseFlowItemAdapter mAdapter -> b
    java.util.List eArrayList -> c
    com.dahuatech.app.bean.expense.ExpenseFlowItemInfo eInfo -> d
    java.util.List mQueryList -> e
    com.dahuatech.app.common.DbManager mDbHelper -> f
    com.dahuatech.app.business.ExpenseFlowItemBusiness eBusiness -> g
    android.app.ProgressDialog dialog -> h
    java.lang.String[] COLUMNS -> i
    android.database.MatrixCursor matrixCursor -> j
    com.dahuatech.app.adapter.SuggestionsAdapter mSuggestionsAdapter -> k
    com.actionbarsherlock.widget.SearchView mSearchView -> l
    com.dahuatech.app.AppContext appContext -> m
    java.lang.String fItemNumber -> n
    java.lang.String fQueryStr -> o
    java.lang.String serviceUrl -> p
    int fPageIndex -> q
    void onCreate(android.os.Bundle) -> onCreate
    void initListData() -> a
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void setupSearchView(com.actionbarsherlock.view.MenuItem) -> a
    boolean onSuggestionSelect(int) -> onSuggestionSelect
    boolean onSuggestionClick(int) -> onSuggestionClick
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
    void showSuggestions(java.lang.String) -> a
    java.util.List getProjectLocalByPost() -> b
    void renderProjectLocalListView(java.util.List) -> a
    java.util.List getProjectListByPost(int) -> a
    void renderProjectListView(java.util.List) -> b
    void onRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onRefresh
    void onPullUpListView() -> onPullUpListView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.util.List access$0(com.dahuatech.app.ui.expense.flow.ExpenseProjectSearchListActivity) -> a
    void access$1(com.dahuatech.app.ui.expense.flow.ExpenseProjectSearchListActivity,java.util.List) -> a
    android.app.ProgressDialog access$2(com.dahuatech.app.ui.expense.flow.ExpenseProjectSearchListActivity) -> b
    java.util.List access$3(com.dahuatech.app.ui.expense.flow.ExpenseProjectSearchListActivity,int) -> a
    void access$4(com.dahuatech.app.ui.expense.flow.ExpenseProjectSearchListActivity,java.util.List) -> b
    com.handmark.pulltorefresh.library.PullToRefreshListView access$5(com.dahuatech.app.ui.expense.flow.ExpenseProjectSearchListActivity) -> c
    java.util.List access$6(com.dahuatech.app.ui.expense.flow.ExpenseProjectSearchListActivity) -> d
    com.dahuatech.app.adapter.ExpenseFlowItemAdapter access$7(com.dahuatech.app.ui.expense.flow.ExpenseProjectSearchListActivity) -> e
    void access$8(com.dahuatech.app.ui.expense.flow.ExpenseProjectSearchListActivity,com.dahuatech.app.bean.expense.ExpenseFlowItemInfo) -> a
    com.dahuatech.app.bean.expense.ExpenseFlowItemInfo access$9(com.dahuatech.app.ui.expense.flow.ExpenseProjectSearchListActivity) -> f
    com.dahuatech.app.common.DbManager access$10(com.dahuatech.app.ui.expense.flow.ExpenseProjectSearchListActivity) -> g
com.dahuatech.app.ui.expense.flow.ExpenseProjectSearchListActivity$1 -> of:
    com.dahuatech.app.ui.expense.flow.ExpenseProjectSearchListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dahuatech.app.ui.expense.flow.ExpenseProjectSearchListActivity$2 -> og:
    com.dahuatech.app.ui.expense.flow.ExpenseProjectSearchListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dahuatech.app.ui.expense.flow.ExpenseProjectSearchListActivity$getProjectLocalAsync -> oh:
    com.dahuatech.app.ui.expense.flow.ExpenseProjectSearchListActivity this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.expense.flow.ExpenseProjectSearchListActivity$getProjectSearchAsync -> oi:
    com.dahuatech.app.ui.expense.flow.ExpenseProjectSearchListActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.expense.flow.ExpenseProjectSearchListActivity$pullUpRefreshAsync -> oj:
    com.dahuatech.app.ui.expense.flow.ExpenseProjectSearchListActivity this$0 -> a
    java.util.List doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.expense.main.ExpenseMainActivity -> com.dahuatech.app.ui.expense.main.ExpenseMainActivity:
    com.dahuatech.app.ui.expense.main.ExpenseMainActivity mInstance -> a
    android.widget.Button btnExpenseTaxi -> b
    android.widget.Button btnExpenseFlow -> c
    java.lang.String fItemNumber -> d
    com.dahuatech.app.AppContext appContext -> e
    com.dahuatech.app.ui.expense.main.ExpenseMainActivity getInstance() -> getInstance
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.expense.main.ExpenseMainActivity) -> a
com.dahuatech.app.ui.expense.main.ExpenseMainActivity$1 -> ok:
    com.dahuatech.app.ui.expense.main.ExpenseMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.main.ExpenseMainActivity$2 -> ol:
    com.dahuatech.app.ui.expense.main.ExpenseMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiInputActivity -> com.dahuatech.app.ui.expense.taxi.ExpenseTaxiInputActivity:
    android.widget.Button btnCommit -> a
    android.widget.Button btnCancel -> b
    android.widget.EditText editStartTime -> c
    android.widget.EditText editStartPos -> d
    android.widget.EditText editEndPos -> e
    android.widget.EditText editEndTime -> f
    android.widget.EditText editAmount -> g
    com.dahuatech.app.adapter.GPSDbAdapter mDbHelper -> h
    java.lang.String ime -> i
    java.lang.String startTime -> j
    java.lang.String endTime -> k
    java.lang.String startAddress -> l
    java.lang.String endAddress -> m
    java.lang.String amount -> n
    int mRowId -> o
    java.util.Calendar cal -> p
    java.text.SimpleDateFormat df -> q
    android.app.DatePickerDialog$OnDateSetListener startDateListener -> r
    android.app.DatePickerDialog$OnDateSetListener endDateListener -> s
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    void save() -> b
    void updateDate(android.widget.EditText) -> a
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    java.util.Calendar access$0(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiInputActivity) -> a
    android.widget.EditText access$1(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiInputActivity) -> b
    void access$2(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiInputActivity,android.widget.EditText) -> a
    android.widget.EditText access$3(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiInputActivity) -> c
    android.app.DatePickerDialog$OnDateSetListener access$4(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiInputActivity) -> d
    android.app.DatePickerDialog$OnDateSetListener access$5(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiInputActivity) -> e
    void access$6(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiInputActivity) -> f
    com.dahuatech.app.adapter.GPSDbAdapter access$7(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiInputActivity) -> g
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiInputActivity$1 -> om:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiInputActivity this$0 -> a
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiInputActivity$2 -> on:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiInputActivity this$0 -> a
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiInputActivity$3 -> oo:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiInputActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiInputActivity$4 -> op:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiInputActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiInputActivity$5 -> oq:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiInputActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiInputActivity$6 -> or:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiInputActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiInputActivity$7 -> os:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiInputActivity this$0 -> a
    void run() -> run
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity -> com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity:
    int ACTIVITY_MODIFY -> a
    android.widget.Button btnUpload -> b
    android.widget.Button btnUpdate -> c
    java.lang.String id -> d
    java.lang.String startTime -> e
    java.lang.String endTime -> f
    java.lang.String uploadFlag -> g
    java.lang.String startAddress -> h
    java.lang.String endAddress -> i
    java.lang.String autoFlag -> j
    java.lang.String startLocation -> k
    java.lang.String endLocation -> l
    java.lang.String amount -> m
    java.lang.String fItemNumber -> n
    com.dahuatech.app.adapter.GPSDbAdapter mDbHelper -> o
    java.lang.String serviceUrl -> p
    android.os.Handler mHandler -> q
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    void upload() -> b
    void uploadToService(java.lang.String) -> a
    void update() -> c
    void flashItem() -> d
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    java.lang.String access$0(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity) -> a
    com.dahuatech.app.adapter.GPSDbAdapter access$1(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity) -> b
    void access$2(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity) -> c
    void access$3(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity) -> d
    java.lang.String access$4(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity) -> e
    java.lang.String access$5(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity) -> f
    java.lang.String access$6(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity) -> g
    java.lang.String access$7(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity) -> h
    java.lang.String access$8(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity) -> i
    java.lang.String access$9(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity) -> j
    java.lang.String access$10(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity) -> k
    java.lang.String access$11(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity) -> l
    java.lang.String access$12(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity) -> m
    android.os.Handler access$13(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity) -> n
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity$1 -> ot:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity access$0(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity$1) -> a
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity$1$1 -> ou:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity$1 this$1 -> a
    void run() -> run
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity$2 -> ov:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity$3 -> ow:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity$4 -> ox:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiItemViewActivity this$0 -> a
    java.lang.String val$userId -> b
    void run() -> run
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity -> com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity:
    android.widget.Button btnUpload -> a
    android.widget.Button btnList -> b
    android.widget.Button btnNew -> c
    android.widget.Button btnCheck -> d
    android.widget.Button btnCheckCancle -> e
    android.widget.Button btnBatchUpload -> f
    com.dahuatech.app.widget.DelSlideListView mDelSlideListView -> g
    java.util.List mData -> h
    com.dahuatech.app.adapter.GPSDbAdapter mDbHelper -> i
    com.dahuatech.app.adapter.ExpenseTaxiListAdapter exAdapter -> j
    android.database.Cursor mGpsCursor -> k
    int delId -> l
    java.lang.String globalUploadFlag -> m
    java.lang.String fItemNumber -> n
    java.lang.String serviceUrl -> o
    void onCreate(android.os.Bundle) -> onCreate
    void renderListView() -> a
    java.util.List getData() -> b
    void batchUpload(java.util.List) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onClick(int) -> onClick
    boolean isCandelete(int) -> isCandelete
    void onDelete(int) -> onDelete
    void onBack() -> onBack
    void onCancel(android.content.DialogInterface) -> onCancel
    void onSingleTapUp() -> onSingleTapUp
    android.widget.Button access$0(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity) -> a
    android.widget.Button access$1(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity) -> b
    void access$2(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity,java.lang.String) -> a
    void access$3(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity) -> c
    java.util.List access$4(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity) -> d
    com.dahuatech.app.adapter.ExpenseTaxiListAdapter access$5(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity) -> e
    java.lang.String access$6(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity) -> f
    java.lang.String access$7(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity) -> g
    void access$8(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity,java.util.List) -> a
    com.dahuatech.app.adapter.GPSDbAdapter access$9(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity) -> h
    java.lang.String access$10(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity) -> i
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity$1 -> oy:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity$2 -> oz:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity$3 -> pa:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity$4 -> pb:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity$5 -> pc:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity$6 -> pd:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity$7 -> pe:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity$8 -> pf:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity access$0(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity$8) -> a
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity$8$1 -> pg:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity$8 this$1 -> a
    void run() -> run
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity$9 -> ph:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiListActivity this$0 -> a
    java.util.List val$gpsRowIdInfos -> b
    android.os.Handler val$handler -> c
    void run() -> run
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity -> com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity:
    android.widget.TextView mLocationMeter -> a
    android.widget.TextView mLocationAddress -> b
    android.widget.TextView mLocationStatus -> c
    java.lang.String locationMeter -> d
    java.lang.String locationAddress -> e
    android.widget.ImageButton imgbtnJurney -> f
    java.lang.String fItemNumber -> g
    java.lang.String startTime -> h
    java.lang.String endTime -> i
    java.lang.String startAddress -> j
    java.lang.String endAddress -> k
    java.lang.String amount -> l
    android.content.SharedPreferences sp -> m
    android.content.SharedPreferences$Editor editor -> n
    com.dahuatech.app.AppContext appContext -> o
    boolean isLocation -> p
    boolean isJurney -> q
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity mInstance -> r
    com.amap.api.location.LocationManagerProxy mLocationManagerProxy -> s
    java.util.Random mRandom -> t
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity getInstance() -> getInstance
    void onCreate(android.os.Bundle) -> onCreate
    void initLocation() -> a
    void startRequestLocation() -> b
    void stopRequestLocation() -> c
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
    void initLocationView() -> d
    void showAlertDialog() -> showAlertDialog
    void newOffBtnJurney() -> e
    void redirectToFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void alertExit() -> f
    void sendLogs(java.lang.String) -> a
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void onResume() -> onResume
    void onPause() -> onPause
    void onRestart() -> onRestart
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean access$0(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity) -> b
    android.widget.ImageButton access$2(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity) -> c
    void access$3(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity,boolean) -> a
    void access$4(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity,java.lang.String) -> a
    void access$5(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity,java.lang.String) -> b
    android.content.SharedPreferences$Editor access$6(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity) -> d
    java.lang.String access$7(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity) -> e
    java.lang.String access$8(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity) -> f
    void access$9(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity,java.lang.String) -> c
    void access$10(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity) -> g
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity$1 -> pi:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity access$0(com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity$1) -> a
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity$1$1 -> pj:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity$1 this$1 -> a
    void run() -> run
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity$2 -> pk:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity this$0 -> a
    com.dahuatech.app.widget.CustomDialog$Builder val$builder -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity$3 -> pl:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity$4 -> pm:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity$5 -> pn:
    com.dahuatech.app.ui.expense.taxi.ExpenseTaxiMainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dahuatech.app.ui.main.BaseActivity -> com.dahuatech.app.ui.main.BaseActivity:
    boolean allowFullScreen -> a
    boolean allowDestroy -> b
    android.view.View view -> c
    boolean isAllowFullScreen() -> isAllowFullScreen
    void setAllowFullScreen(boolean) -> setAllowFullScreen
    boolean isAllowDestroy() -> isAllowDestroy
    void setAllowDestroy(boolean) -> setAllowDestroy
    void setAllowDestroy(boolean,android.view.View) -> setAllowDestroy
    void onCreate(android.os.Bundle) -> onCreate
    void onStop() -> onStop
    void onStart() -> onStart
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.dahuatech.app.ui.main.BaseExapandableListActivity -> com.dahuatech.app.ui.main.BaseExapandableListActivity:
    boolean allowFullScreen -> a
    boolean allowDestroy -> b
    android.view.View view -> c
    boolean isAllowFullScreen() -> isAllowFullScreen
    void setAllowFullScreen(boolean) -> setAllowFullScreen
    boolean isAllowDestroy() -> isAllowDestroy
    void setAllowDestroy(boolean) -> setAllowDestroy
    void setAllowDestroy(boolean,android.view.View) -> setAllowDestroy
    void onCreate(android.os.Bundle) -> onCreate
    void onStop() -> onStop
    void onStart() -> onStart
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.dahuatech.app.ui.main.CommonMenu -> com.dahuatech.app.ui.main.CommonMenu:
    java.lang.String sideMenuType -> a
    android.content.SharedPreferences sp -> b
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu menu -> c
    android.content.Context context -> d
    int leftDimen -> e
    android.content.Context getContext() -> getContext
    void setContext(android.content.Context) -> setContext
    com.dahuatech.app.ui.main.CommonMenu getCommonMenu(android.content.Context,android.content.SharedPreferences,com.jeremyfeinstein.slidingmenu.lib.SlidingMenu,java.lang.String,int) -> getCommonMenu
    void initSlidingMenu() -> initSlidingMenu
    int getPixelsWidth() -> getPixelsWidth
    void setMarginTouchMode() -> setMarginTouchMode
    void initLeftButton() -> initLeftButton
    void initRightButton() -> initRightButton
    void toggle() -> toggle
    void appExit() -> appExit
    void exit() -> a
    android.content.Context access$1(com.dahuatech.app.ui.main.CommonMenu) -> a
    java.lang.String access$2(com.dahuatech.app.ui.main.CommonMenu) -> b
    void access$3(com.dahuatech.app.ui.main.CommonMenu) -> c
com.dahuatech.app.ui.main.CommonMenu$1 -> po:
    com.dahuatech.app.ui.main.CommonMenu this$0 -> a
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.dahuatech.app.ui.main.CommonMenu$10 -> pp:
    com.dahuatech.app.ui.main.CommonMenu this$0 -> a
    java.lang.String val$fItemNumber -> b
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.CommonMenu$11 -> pq:
    com.dahuatech.app.ui.main.CommonMenu this$0 -> a
    java.lang.String val$fItemNumber -> b
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.CommonMenu$12 -> pr:
    com.dahuatech.app.ui.main.CommonMenu this$0 -> a
    java.lang.String val$fItemNumber -> b
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.CommonMenu$13 -> ps:
    com.dahuatech.app.ui.main.CommonMenu this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.CommonMenu$14 -> pt:
    com.dahuatech.app.ui.main.CommonMenu this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dahuatech.app.ui.main.CommonMenu$15 -> pu:
    com.dahuatech.app.ui.main.CommonMenu this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dahuatech.app.ui.main.CommonMenu$2 -> pv:
    com.dahuatech.app.ui.main.CommonMenu this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.CommonMenu$3 -> pw:
    com.dahuatech.app.ui.main.CommonMenu this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.CommonMenu$4 -> px:
    com.dahuatech.app.ui.main.CommonMenu this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.CommonMenu$5 -> py:
    com.dahuatech.app.ui.main.CommonMenu this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.CommonMenu$6 -> pz:
    com.dahuatech.app.ui.main.CommonMenu this$0 -> a
    java.lang.String val$fItemNumber -> b
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.CommonMenu$7 -> qa:
    com.dahuatech.app.ui.main.CommonMenu this$0 -> a
    java.lang.String val$fItemNumber -> b
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.CommonMenu$8 -> qb:
    com.dahuatech.app.ui.main.CommonMenu this$0 -> a
    java.lang.String val$fItemNumber -> b
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.CommonMenu$9 -> qc:
    com.dahuatech.app.ui.main.CommonMenu this$0 -> a
    java.lang.String val$fItemNumber -> b
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.CommonMenu$SingletonHolder -> qd:
    com.dahuatech.app.ui.main.CommonMenu instance -> a
    com.dahuatech.app.ui.main.CommonMenu access$0() -> a
com.dahuatech.app.ui.main.LoginActivity -> com.dahuatech.app.ui.main.LoginActivity:
    android.widget.Button btnLogin -> b
    android.widget.EditText fItemNumberEdit -> c
    android.widget.EditText fPasswordEdit -> d
    android.app.ProgressDialog dialog -> e
    java.lang.String fItemNumber -> f
    java.lang.String fPassword -> g
    java.lang.String fItemName -> h
    android.widget.CheckBox chb_rememberMe -> i
    boolean isRememberMe -> j
    boolean fLoginShowNotice -> k
    boolean isNetWork -> l
    boolean fFirstLogin -> m
    java.lang.String serviceUrl -> n
    com.dahuatech.app.AppContext appContext -> o
    android.content.SharedPreferences sp -> p
    android.view.View$OnClickListener btnLoginClick -> a
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.UserInfo loginVerify(java.lang.String,java.lang.String,java.lang.String) -> a
    boolean updateUserInfo() -> a
    void checkSoftUpdate() -> b
    void sendLogs() -> c
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean access$0(com.dahuatech.app.ui.main.LoginActivity) -> a
    android.widget.EditText access$1(com.dahuatech.app.ui.main.LoginActivity) -> b
    void access$2(com.dahuatech.app.ui.main.LoginActivity,java.lang.String) -> a
    android.widget.EditText access$3(com.dahuatech.app.ui.main.LoginActivity) -> c
    void access$4(com.dahuatech.app.ui.main.LoginActivity,java.lang.String) -> b
    android.widget.CheckBox access$5(com.dahuatech.app.ui.main.LoginActivity) -> d
    void access$6(com.dahuatech.app.ui.main.LoginActivity,boolean) -> a
    java.lang.String access$7(com.dahuatech.app.ui.main.LoginActivity) -> e
    java.lang.String access$8(com.dahuatech.app.ui.main.LoginActivity) -> f
    java.lang.String access$9(com.dahuatech.app.ui.main.LoginActivity) -> g
    android.app.ProgressDialog access$10(com.dahuatech.app.ui.main.LoginActivity) -> h
    void access$11(com.dahuatech.app.ui.main.LoginActivity,com.dahuatech.app.AppContext) -> a
    com.dahuatech.app.AppContext access$12(com.dahuatech.app.ui.main.LoginActivity) -> i
    boolean access$13(com.dahuatech.app.ui.main.LoginActivity) -> j
    void access$14(com.dahuatech.app.ui.main.LoginActivity) -> k
    boolean access$15(com.dahuatech.app.ui.main.LoginActivity) -> l
    java.lang.String access$16(com.dahuatech.app.ui.main.LoginActivity) -> m
    com.dahuatech.app.bean.UserInfo access$17(com.dahuatech.app.ui.main.LoginActivity,java.lang.String,java.lang.String,java.lang.String) -> a
com.dahuatech.app.ui.main.LoginActivity$1 -> qe:
    com.dahuatech.app.ui.main.LoginActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.LoginActivity$loginAsyncTask -> qf:
    com.dahuatech.app.ui.main.LoginActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.dahuatech.app.bean.UserInfo) -> a
    com.dahuatech.app.bean.UserInfo doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.dahuatech.app.ui.main.LoginActivity access$3(com.dahuatech.app.ui.main.LoginActivity$loginAsyncTask) -> a
com.dahuatech.app.ui.main.LoginActivity$loginAsyncTask$1 -> qg:
    com.dahuatech.app.ui.main.LoginActivity$loginAsyncTask this$1 -> a
    void run() -> run
com.dahuatech.app.ui.main.LoginLockActivity -> com.dahuatech.app.ui.main.LoginLockActivity:
    com.dahuatech.app.widget.LockPatternView lpView -> a
    java.lang.String fItemNumber -> b
    java.lang.String fItemName -> c
    boolean fFirstLogin -> d
    android.widget.TextView fManager -> e
    android.widget.TextView fJump -> f
    android.content.SharedPreferences sp -> g
    int errorCount -> h
    com.dahuatech.app.business.UserLoginBussiness userLoginBussiness -> i
    org.json.JSONObject jsonObject -> j
    java.lang.String serviceUrl -> k
    com.dahuatech.app.AppContext appContext -> l
    com.google.gson.Gson gson -> m
    void onCreate(android.os.Bundle) -> onCreate
    void loadView() -> a
    void init() -> b
    void skipToMain() -> c
    void showResult(com.dahuatech.app.bean.ResultMessage) -> a
    void checkSoftUpdate() -> d
    void alertDialog(java.lang.String) -> a
    void alertLogin() -> e
    void onStart() -> onStart
    void sendLogs() -> f
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    com.dahuatech.app.business.UserLoginBussiness access$0(com.dahuatech.app.ui.main.LoginLockActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.main.LoginLockActivity) -> b
    void access$2(com.dahuatech.app.ui.main.LoginLockActivity,com.dahuatech.app.bean.ResultMessage) -> a
    com.dahuatech.app.widget.LockPatternView access$3(com.dahuatech.app.ui.main.LoginLockActivity) -> c
    void access$4(com.dahuatech.app.ui.main.LoginLockActivity) -> d
    int access$5(com.dahuatech.app.ui.main.LoginLockActivity) -> e
    void access$6(com.dahuatech.app.ui.main.LoginLockActivity,int) -> a
    void access$7(com.dahuatech.app.ui.main.LoginLockActivity) -> f
    void access$8(com.dahuatech.app.ui.main.LoginLockActivity,java.lang.String) -> a
    android.content.SharedPreferences access$9(com.dahuatech.app.ui.main.LoginLockActivity) -> g
    java.lang.String access$10(com.dahuatech.app.ui.main.LoginLockActivity) -> h
com.dahuatech.app.ui.main.LoginLockActivity$1 -> qh:
    com.dahuatech.app.ui.main.LoginLockActivity this$0 -> a
    void onComplete(java.lang.String) -> onComplete
com.dahuatech.app.ui.main.LoginLockActivity$2 -> qi:
    com.dahuatech.app.ui.main.LoginLockActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.LoginLockActivity$3 -> qj:
    com.dahuatech.app.ui.main.LoginLockActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.LoginLockActivity$4 -> qk:
    com.dahuatech.app.ui.main.LoginLockActivity this$0 -> a
    java.lang.String val$type -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.dahuatech.app.ui.main.LoginLockActivity$5 -> ql:
    com.dahuatech.app.ui.main.LoginLockActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dahuatech.app.ui.main.LoginLockActivity$6 -> qm:
    com.dahuatech.app.ui.main.LoginLockActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dahuatech.app.ui.main.LoginLockActivity$7 -> qn:
    com.dahuatech.app.ui.main.LoginLockActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.LoginLockActivity$validAsyncTask -> qo:
    com.dahuatech.app.ui.main.LoginLockActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    com.dahuatech.app.bean.ResultMessage doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.dahuatech.app.bean.ResultMessage) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.main.LoginLockSetPwdActivity -> com.dahuatech.app.ui.main.LoginLockSetPwdActivity:
    com.dahuatech.app.widget.LockPatternView lpView -> a
    android.widget.Button btnSave -> b
    android.widget.Button btnReset -> c
    android.widget.TextView fGesturesTv -> d
    java.lang.String password -> e
    boolean needVerify -> f
    java.lang.String fItemNumber -> g
    java.lang.String fItemName -> h
    java.lang.String fType -> i
    android.content.SharedPreferences sp -> j
    void onCreate(android.os.Bundle) -> onCreate
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    java.lang.String access$0(com.dahuatech.app.ui.main.LoginLockSetPwdActivity) -> a
    com.dahuatech.app.widget.LockPatternView access$1(com.dahuatech.app.ui.main.LoginLockSetPwdActivity) -> b
    android.content.SharedPreferences access$2(com.dahuatech.app.ui.main.LoginLockSetPwdActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.main.LoginLockSetPwdActivity) -> d
    boolean access$4(com.dahuatech.app.ui.main.LoginLockSetPwdActivity) -> e
    java.lang.String access$5(com.dahuatech.app.ui.main.LoginLockSetPwdActivity) -> f
    java.lang.String access$6(com.dahuatech.app.ui.main.LoginLockSetPwdActivity) -> g
    void access$7(com.dahuatech.app.ui.main.LoginLockSetPwdActivity,java.lang.String) -> a
    android.widget.TextView access$8(com.dahuatech.app.ui.main.LoginLockSetPwdActivity) -> h
    void access$9(com.dahuatech.app.ui.main.LoginLockSetPwdActivity,boolean) -> a
com.dahuatech.app.ui.main.LoginLockSetPwdActivity$1 -> qp:
    com.dahuatech.app.ui.main.LoginLockSetPwdActivity this$0 -> a
    void onComplete(java.lang.String) -> onComplete
com.dahuatech.app.ui.main.LoginLockSetPwdActivity$mOnClickListener -> qq:
    com.dahuatech.app.ui.main.LoginLockSetPwdActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.dahuatech.app.ui.main.LoginLockSetPwdActivity access$1(com.dahuatech.app.ui.main.LoginLockSetPwdActivity$mOnClickListener) -> a
com.dahuatech.app.ui.main.LoginLockSetPwdActivity$mOnClickListener$1 -> qr:
    com.dahuatech.app.ui.main.LoginLockSetPwdActivity$mOnClickListener this$1 -> a
    void run() -> run
com.dahuatech.app.ui.main.MainActivity -> com.dahuatech.app.ui.main.MainActivity:
    android.widget.TextView txtFItemName -> a
    android.widget.TextView txtWelcome -> b
    android.widget.TextView txtWaitTaskCount -> c
    java.lang.String fItemNumber -> d
    java.lang.String fItemName -> e
    com.dahuatech.app.business.NoticeBussiness noticeBussiness -> f
    com.dahuatech.app.business.AttendanceBusiness aBusiness -> g
    android.widget.Button btnMyTask -> h
    android.widget.Button btnExpense -> i
    android.widget.Button btnMeeting -> j
    android.widget.Button btnContacts -> k
    android.widget.Button btnDevelopHour -> l
    android.widget.Button btnAttendance -> m
    android.widget.Button btnMarket -> n
    android.widget.Button btnLync -> o
    boolean fNotice -> p
    java.lang.String aMapCacheKey -> q
    com.dahuatech.app.AppContext appContext -> r
    android.content.SharedPreferences loginSp -> s
    android.content.SharedPreferences aMapSp -> t
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu menu -> u
    com.dahuatech.app.ui.main.CommonMenu commonMenu -> v
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void initBusiness() -> a
    void setBtnEvent() -> b
    int getPixelsWidth() -> c
    void alertLync() -> d
    void downLoadLync() -> e
    void sendLyncLogs(java.lang.String) -> a
    void onResume() -> onResume
    void onStart() -> onStart
    void getTaskCount() -> f
    java.lang.String getPostByTaskCount() -> g
    void getAmapAddress() -> h
    com.dahuatech.app.bean.attendance.AdAmapListInfo getPostByAmap() -> i
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.main.MainActivity) -> a
    android.widget.TextView access$1(com.dahuatech.app.ui.main.MainActivity) -> b
    com.dahuatech.app.bean.attendance.AdAmapListInfo access$2(com.dahuatech.app.ui.main.MainActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.main.MainActivity) -> d
    android.content.SharedPreferences access$4(com.dahuatech.app.ui.main.MainActivity) -> e
    java.lang.String access$5(com.dahuatech.app.ui.main.MainActivity) -> f
    void access$6(com.dahuatech.app.ui.main.MainActivity,java.lang.String) -> a
    void access$7(com.dahuatech.app.ui.main.MainActivity) -> g
    void access$8(com.dahuatech.app.ui.main.MainActivity) -> h
com.dahuatech.app.ui.main.MainActivity$1 -> qs:
    com.dahuatech.app.ui.main.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.MainActivity$10 -> qt:
    com.dahuatech.app.ui.main.MainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dahuatech.app.ui.main.MainActivity$2 -> qu:
    com.dahuatech.app.ui.main.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.MainActivity$3 -> qv:
    com.dahuatech.app.ui.main.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.MainActivity$4 -> qw:
    com.dahuatech.app.ui.main.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.MainActivity$5 -> qx:
    com.dahuatech.app.ui.main.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.MainActivity$6 -> qy:
    com.dahuatech.app.ui.main.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.MainActivity$7 -> qz:
    com.dahuatech.app.ui.main.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.MainActivity$8 -> ra:
    com.dahuatech.app.ui.main.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.MainActivity$9 -> rb:
    com.dahuatech.app.ui.main.MainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dahuatech.app.ui.main.MainActivity$AmapAddressAsync -> rc:
    com.dahuatech.app.ui.main.MainActivity this$0 -> a
    com.dahuatech.app.bean.attendance.AdAmapListInfo doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.dahuatech.app.bean.attendance.AdAmapListInfo) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.main.MainActivity$taskCountAsync -> rd:
    com.dahuatech.app.ui.main.MainActivity this$0 -> a
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.main.MenuActivity -> com.dahuatech.app.ui.main.MenuActivity:
    android.content.SharedPreferences sp -> a
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu slidingMenu -> b
    com.dahuatech.app.ui.main.CommonMenu commonMenu -> commonMenu
    com.actionbarsherlock.view.Menu absMenu -> c
    java.lang.String arrows -> d
    int rightCount -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    int getPixelsWidth() -> a
    void setMenuIcon(java.lang.String) -> a
    int access$0(com.dahuatech.app.ui.main.MenuActivity) -> a
    void access$1(com.dahuatech.app.ui.main.MenuActivity,java.lang.String) -> a
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu access$2(com.dahuatech.app.ui.main.MenuActivity) -> b
    void access$3(com.dahuatech.app.ui.main.MenuActivity,int) -> a
com.dahuatech.app.ui.main.MenuActivity$1 -> re:
    com.dahuatech.app.ui.main.MenuActivity this$0 -> a
    void onClosed() -> onClosed
com.dahuatech.app.ui.main.MenuActivity$2 -> rf:
    com.dahuatech.app.ui.main.MenuActivity this$0 -> a
    int val$leftDimen -> b
    void onOpen() -> onOpen
com.dahuatech.app.ui.main.MenuActivity$3 -> rg:
    com.dahuatech.app.ui.main.MenuActivity this$0 -> a
    int val$rightDimen -> b
    void onOpen() -> onOpen
com.dahuatech.app.ui.main.MenuExapandableListActivity -> com.dahuatech.app.ui.main.MenuExapandableListActivity:
    android.content.SharedPreferences sp -> a
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu slidingMenu -> b
    com.dahuatech.app.ui.main.CommonMenu commonMenu -> commonMenu
    com.actionbarsherlock.view.Menu absMenu -> c
    java.lang.String arrows -> d
    int rightCount -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    int getPixelsWidth() -> a
    void setMenuIcon(java.lang.String) -> a
    int access$0(com.dahuatech.app.ui.main.MenuExapandableListActivity) -> a
    void access$1(com.dahuatech.app.ui.main.MenuExapandableListActivity,java.lang.String) -> a
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu access$2(com.dahuatech.app.ui.main.MenuExapandableListActivity) -> b
    void access$3(com.dahuatech.app.ui.main.MenuExapandableListActivity,int) -> a
com.dahuatech.app.ui.main.MenuExapandableListActivity$1 -> rh:
    com.dahuatech.app.ui.main.MenuExapandableListActivity this$0 -> a
    void onClosed() -> onClosed
com.dahuatech.app.ui.main.MenuExapandableListActivity$2 -> ri:
    com.dahuatech.app.ui.main.MenuExapandableListActivity this$0 -> a
    int val$leftDimen -> b
    void onOpen() -> onOpen
com.dahuatech.app.ui.main.MenuExapandableListActivity$3 -> rj:
    com.dahuatech.app.ui.main.MenuExapandableListActivity this$0 -> a
    int val$rightDimen -> b
    void onOpen() -> onOpen
com.dahuatech.app.ui.main.SettingActivity -> com.dahuatech.app.ui.main.SettingActivity:
    android.widget.ImageView checkUpdate -> a
    android.widget.ImageView versionImage -> b
    android.widget.ImageView gesturesImage -> c
    android.widget.ToggleButton tgNotice -> d
    android.widget.ToggleButton tgGestures -> e
    java.lang.String serviceUrl -> f
    com.dahuatech.app.AppContext appContext -> g
    android.content.SharedPreferences sp -> h
    com.dahuatech.app.ui.main.SettingActivity mInstance -> i
    com.dahuatech.app.ui.main.SettingActivity getInstance() -> getInstance
    void onCreate(android.os.Bundle) -> onCreate
    void onStop() -> onStop
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void cancleNotice() -> a
    void onRestart() -> onRestart
    com.dahuatech.app.AppContext access$0(com.dahuatech.app.ui.main.SettingActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.main.SettingActivity) -> b
com.dahuatech.app.ui.main.SettingActivity$1 -> rk:
    com.dahuatech.app.ui.main.SettingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.SettingActivity$2 -> rl:
    com.dahuatech.app.ui.main.SettingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.SettingActivity$3 -> rm:
    com.dahuatech.app.ui.main.SettingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.SmsNoticeActivity -> com.dahuatech.app.ui.main.SmsNoticeActivity:
    android.widget.EditText searchTel -> a
    android.widget.ImageButton searchImage -> b
    android.widget.TextView content -> c
    android.widget.Button sms_button -> d
    android.app.ProgressDialog dialog -> e
    java.lang.String fItemNumber -> f
    android.content.SharedPreferences sp -> g
    java.lang.String SENT -> h
    java.lang.String DELIVERED -> i
    com.dahuatech.app.ui.main.SmsNoticeActivity mInstance -> j
    com.dahuatech.app.ui.main.SmsNoticeActivity getInstance() -> getInstance
    void onCreate(android.os.Bundle) -> onCreate
    void sendSms() -> a
    void sendSMS(java.lang.String,java.lang.String) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.main.SmsNoticeActivity) -> a
    void access$1(com.dahuatech.app.ui.main.SmsNoticeActivity) -> b
    android.app.ProgressDialog access$2(com.dahuatech.app.ui.main.SmsNoticeActivity) -> c
com.dahuatech.app.ui.main.SmsNoticeActivity$1 -> rn:
    com.dahuatech.app.ui.main.SmsNoticeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.SmsNoticeActivity$2 -> ro:
    com.dahuatech.app.ui.main.SmsNoticeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.main.SmsNoticeActivity$3 -> rp:
    com.dahuatech.app.ui.main.SmsNoticeActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    com.dahuatech.app.ui.main.SmsNoticeActivity access$0(com.dahuatech.app.ui.main.SmsNoticeActivity$3) -> a
com.dahuatech.app.ui.main.SmsNoticeActivity$3$1 -> rq:
    com.dahuatech.app.ui.main.SmsNoticeActivity$3 this$1 -> a
    void run() -> run
com.dahuatech.app.ui.market.MarketBidSearchActivity -> com.dahuatech.app.ui.market.MarketBidSearchActivity:
    android.widget.EditText searchText -> a
    android.widget.ImageButton btnSearch -> b
    com.handmark.pulltorefresh.library.PullToRefreshListView mPullRefreshListView -> c
    java.util.List mArrayList -> d
    com.dahuatech.app.common.DbManager mDbHelper -> e
    com.dahuatech.app.adapter.MarketBidAdapter mAdapter -> f
    com.dahuatech.app.business.MarketBusiness marketBusiness -> g
    com.dahuatech.app.bean.market.MarketBidInfo marketBidInfo -> h
    com.dahuatech.app.bean.market.MarketBidHistoryInfo marketBidHistory -> i
    android.app.ProgressDialog dialog -> j
    java.lang.String fItemNumber -> k
    java.lang.String serviceUrl -> l
    java.lang.String localUrl -> m
    com.dahuatech.app.AppContext appContext -> n
    java.lang.String fQueryText -> o
    int fPageIndex -> p
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void setOnListener() -> b
    java.util.List getLocalByPost() -> c
    void renderLocalList(java.util.List) -> a
    java.util.List getServerByPost(int) -> a
    void renderServerList(java.util.List) -> b
    void onRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onRefresh
    void onPullUpListView() -> onPullUpListView
    void sendLogs() -> d
    void onResume() -> onResume
    void onRestart() -> onRestart
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    java.util.List access$0(com.dahuatech.app.ui.market.MarketBidSearchActivity) -> a
    void access$1(com.dahuatech.app.ui.market.MarketBidSearchActivity,java.util.List) -> a
    android.app.ProgressDialog access$2(com.dahuatech.app.ui.market.MarketBidSearchActivity) -> b
    java.util.List access$3(com.dahuatech.app.ui.market.MarketBidSearchActivity,int) -> a
    void access$4(com.dahuatech.app.ui.market.MarketBidSearchActivity,java.util.List) -> b
    com.handmark.pulltorefresh.library.PullToRefreshListView access$5(com.dahuatech.app.ui.market.MarketBidSearchActivity) -> c
    java.util.List access$6(com.dahuatech.app.ui.market.MarketBidSearchActivity) -> d
    com.dahuatech.app.adapter.MarketBidAdapter access$7(com.dahuatech.app.ui.market.MarketBidSearchActivity) -> e
    android.widget.EditText access$8(com.dahuatech.app.ui.market.MarketBidSearchActivity) -> f
    void access$9(com.dahuatech.app.ui.market.MarketBidSearchActivity,java.lang.String) -> a
    java.lang.String access$10(com.dahuatech.app.ui.market.MarketBidSearchActivity) -> g
    int access$11(com.dahuatech.app.ui.market.MarketBidSearchActivity) -> h
    void access$12(com.dahuatech.app.ui.market.MarketBidSearchActivity) -> i
    void access$13(com.dahuatech.app.ui.market.MarketBidSearchActivity,com.dahuatech.app.bean.market.MarketBidInfo) -> a
    com.dahuatech.app.bean.market.MarketBidInfo access$14(com.dahuatech.app.ui.market.MarketBidSearchActivity) -> j
    com.dahuatech.app.common.DbManager access$15(com.dahuatech.app.ui.market.MarketBidSearchActivity) -> k
    java.lang.String access$16(com.dahuatech.app.ui.market.MarketBidSearchActivity) -> l
    com.dahuatech.app.bean.market.MarketBidHistoryInfo access$17(com.dahuatech.app.ui.market.MarketBidSearchActivity) -> m
com.dahuatech.app.ui.market.MarketBidSearchActivity$1 -> rr:
    com.dahuatech.app.ui.market.MarketBidSearchActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.market.MarketBidSearchActivity$2 -> rs:
    com.dahuatech.app.ui.market.MarketBidSearchActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dahuatech.app.ui.market.MarketBidSearchActivity$3 -> rt:
    com.dahuatech.app.ui.market.MarketBidSearchActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dahuatech.app.ui.market.MarketBidSearchActivity$getLocalAsync -> ru:
    com.dahuatech.app.ui.market.MarketBidSearchActivity this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.market.MarketBidSearchActivity$getServerAsync -> rv:
    com.dahuatech.app.ui.market.MarketBidSearchActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.market.MarketBidSearchActivity$pullUpRefreshAsync -> rw:
    com.dahuatech.app.ui.market.MarketBidSearchActivity this$0 -> a
    java.util.List doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.market.MarketContractSearchActivity -> com.dahuatech.app.ui.market.MarketContractSearchActivity:
    android.widget.EditText searchText -> a
    android.widget.ImageButton btnSearch -> b
    com.handmark.pulltorefresh.library.PullToRefreshListView mPullRefreshListView -> c
    java.util.List mArrayList -> d
    com.dahuatech.app.common.DbManager mDbHelper -> e
    com.dahuatech.app.adapter.MarketContractAdapter mAdapter -> f
    com.dahuatech.app.business.MarketBusiness marketBusiness -> g
    com.dahuatech.app.bean.market.MarketContractInfo marketContractInfo -> h
    com.dahuatech.app.bean.market.MarketContractHistoryInfo marketContractHistory -> i
    android.app.ProgressDialog dialog -> j
    java.lang.String fItemNumber -> k
    java.lang.String serviceUrl -> l
    java.lang.String localUrl -> m
    com.dahuatech.app.AppContext appContext -> n
    java.lang.String fQueryText -> o
    int fPageIndex -> p
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void setOnListener() -> b
    java.util.List getLocalByPost() -> c
    void renderLocalList(java.util.List) -> a
    java.util.List getServerByPost(int) -> a
    void renderServerList(java.util.List) -> b
    void onRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onRefresh
    void onPullUpListView() -> onPullUpListView
    void sendLogs() -> d
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.util.List access$0(com.dahuatech.app.ui.market.MarketContractSearchActivity) -> a
    void access$1(com.dahuatech.app.ui.market.MarketContractSearchActivity,java.util.List) -> a
    android.app.ProgressDialog access$2(com.dahuatech.app.ui.market.MarketContractSearchActivity) -> b
    java.util.List access$3(com.dahuatech.app.ui.market.MarketContractSearchActivity,int) -> a
    void access$4(com.dahuatech.app.ui.market.MarketContractSearchActivity,java.util.List) -> b
    com.handmark.pulltorefresh.library.PullToRefreshListView access$5(com.dahuatech.app.ui.market.MarketContractSearchActivity) -> c
    java.util.List access$6(com.dahuatech.app.ui.market.MarketContractSearchActivity) -> d
    com.dahuatech.app.adapter.MarketContractAdapter access$7(com.dahuatech.app.ui.market.MarketContractSearchActivity) -> e
    android.widget.EditText access$8(com.dahuatech.app.ui.market.MarketContractSearchActivity) -> f
    void access$9(com.dahuatech.app.ui.market.MarketContractSearchActivity,java.lang.String) -> a
    java.lang.String access$10(com.dahuatech.app.ui.market.MarketContractSearchActivity) -> g
    int access$11(com.dahuatech.app.ui.market.MarketContractSearchActivity) -> h
    void access$12(com.dahuatech.app.ui.market.MarketContractSearchActivity) -> i
    void access$13(com.dahuatech.app.ui.market.MarketContractSearchActivity,com.dahuatech.app.bean.market.MarketContractInfo) -> a
    com.dahuatech.app.bean.market.MarketContractInfo access$14(com.dahuatech.app.ui.market.MarketContractSearchActivity) -> j
    com.dahuatech.app.common.DbManager access$15(com.dahuatech.app.ui.market.MarketContractSearchActivity) -> k
    java.lang.String access$16(com.dahuatech.app.ui.market.MarketContractSearchActivity) -> l
    com.dahuatech.app.bean.market.MarketContractHistoryInfo access$17(com.dahuatech.app.ui.market.MarketContractSearchActivity) -> m
com.dahuatech.app.ui.market.MarketContractSearchActivity$1 -> rx:
    com.dahuatech.app.ui.market.MarketContractSearchActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.market.MarketContractSearchActivity$2 -> ry:
    com.dahuatech.app.ui.market.MarketContractSearchActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dahuatech.app.ui.market.MarketContractSearchActivity$3 -> rz:
    com.dahuatech.app.ui.market.MarketContractSearchActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dahuatech.app.ui.market.MarketContractSearchActivity$getLocalAsync -> sa:
    com.dahuatech.app.ui.market.MarketContractSearchActivity this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.market.MarketContractSearchActivity$getServerAsync -> sb:
    com.dahuatech.app.ui.market.MarketContractSearchActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.market.MarketContractSearchActivity$pullUpRefreshAsync -> sc:
    com.dahuatech.app.ui.market.MarketContractSearchActivity this$0 -> a
    java.util.List doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.market.MarketMainActivity -> com.dahuatech.app.ui.market.MarketMainActivity:
    com.dahuatech.app.ui.market.MarketMainActivity mInstance -> a
    android.widget.Button btnMarketBid -> b
    android.widget.Button btnMarketContract -> c
    android.widget.Button btnMarketProduct -> d
    java.lang.String fItemNumber -> e
    com.dahuatech.app.AppContext appContext -> f
    com.dahuatech.app.ui.market.MarketMainActivity getInstance() -> getInstance
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.market.MarketMainActivity) -> a
com.dahuatech.app.ui.market.MarketMainActivity$1 -> sd:
    com.dahuatech.app.ui.market.MarketMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.market.MarketMainActivity$2 -> se:
    com.dahuatech.app.ui.market.MarketMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.market.MarketMainActivity$3 -> sf:
    com.dahuatech.app.ui.market.MarketMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.market.MarketProductSearchActivity -> com.dahuatech.app.ui.market.MarketProductSearchActivity:
    android.widget.EditText searchText -> a
    android.widget.ImageButton btnSearch -> b
    com.handmark.pulltorefresh.library.PullToRefreshListView mPullRefreshListView -> c
    java.util.List mArrayList -> d
    com.dahuatech.app.common.DbManager mDbHelper -> e
    com.dahuatech.app.adapter.MarketProductAdapter mAdapter -> f
    com.dahuatech.app.business.MarketBusiness marketBusiness -> g
    android.app.ProgressDialog dialog -> h
    java.lang.String fItemNumber -> i
    java.lang.String serviceUrl -> j
    com.dahuatech.app.AppContext appContext -> k
    java.lang.String fQueryText -> l
    int fPageIndex -> m
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void setOnListener() -> b
    java.util.List getServerByPost(int) -> a
    void renderServerList(java.util.List) -> a
    void onRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onRefresh
    void onPullUpListView() -> onPullUpListView
    void sendLogs() -> c
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    android.app.ProgressDialog access$0(com.dahuatech.app.ui.market.MarketProductSearchActivity) -> a
    java.util.List access$1(com.dahuatech.app.ui.market.MarketProductSearchActivity,int) -> a
    void access$2(com.dahuatech.app.ui.market.MarketProductSearchActivity,java.util.List) -> a
    com.handmark.pulltorefresh.library.PullToRefreshListView access$3(com.dahuatech.app.ui.market.MarketProductSearchActivity) -> b
    java.util.List access$4(com.dahuatech.app.ui.market.MarketProductSearchActivity) -> c
    com.dahuatech.app.adapter.MarketProductAdapter access$5(com.dahuatech.app.ui.market.MarketProductSearchActivity) -> d
    android.widget.EditText access$6(com.dahuatech.app.ui.market.MarketProductSearchActivity) -> e
    void access$7(com.dahuatech.app.ui.market.MarketProductSearchActivity,java.lang.String) -> a
    java.lang.String access$8(com.dahuatech.app.ui.market.MarketProductSearchActivity) -> f
    int access$9(com.dahuatech.app.ui.market.MarketProductSearchActivity) -> g
    void access$10(com.dahuatech.app.ui.market.MarketProductSearchActivity) -> h
com.dahuatech.app.ui.market.MarketProductSearchActivity$1 -> sg:
    com.dahuatech.app.ui.market.MarketProductSearchActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.market.MarketProductSearchActivity$getServerAsync -> sh:
    com.dahuatech.app.ui.market.MarketProductSearchActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.market.MarketProductSearchActivity$pullUpRefreshAsync -> si:
    com.dahuatech.app.ui.market.MarketProductSearchActivity this$0 -> a
    java.util.List doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.market.MarketWorkflowActivity -> com.dahuatech.app.ui.market.MarketWorkflowActivity:
    java.lang.String fSystemType -> a
    java.lang.String fClassTypeID -> b
    java.lang.String fBillID -> c
    java.lang.String fItemNumber -> d
    android.widget.ListView mListView -> e
    android.app.ProgressDialog dialog -> f
    com.dahuatech.app.business.MarketBusiness marketBusiness -> g
    com.dahuatech.app.adapter.MarketWorkFlowAdapter mAdapter -> h
    java.lang.String serviceUrl -> i
    java.lang.String typeName -> j
    java.util.HashMap hashMap -> k
    com.dahuatech.app.AppContext appContext -> l
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    java.util.List getListByPost() -> b
    void setWorkFlowParam(com.dahuatech.app.bean.RepositoryInfo,com.dahuatech.app.bean.SqlParametersInfo) -> a
    void renderListView(java.util.List) -> a
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void sendLogs(java.lang.String) -> a
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    android.app.ProgressDialog access$0(com.dahuatech.app.ui.market.MarketWorkflowActivity) -> a
    void access$1(com.dahuatech.app.ui.market.MarketWorkflowActivity,java.util.List) -> a
    java.util.List access$2(com.dahuatech.app.ui.market.MarketWorkflowActivity) -> b
com.dahuatech.app.ui.market.MarketWorkflowActivity$MarketWorkflowAsync -> sj:
    com.dahuatech.app.ui.market.MarketWorkflowActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.util.List) -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.meeting.MeetingDetailActivity -> com.dahuatech.app.ui.meeting.MeetingDetailActivity:
    android.app.ProgressDialog dialog -> a
    android.widget.TextView fApplyNameTView -> b
    android.widget.TextView fApplyDeptTView -> c
    android.widget.TextView fMeetingDateTView -> d
    android.widget.TextView fMeetingStartTView -> e
    android.widget.TextView fMeetingEndTView -> f
    android.widget.TextView fMeetingMasterIdTView -> g
    android.widget.TextView fMeetingMasterNameTView -> h
    android.widget.TextView fMeetingRoomIdTView -> i
    android.widget.TextView fMeetingRoomTView -> j
    android.widget.TextView fMeetingRoomIpTView -> k
    android.widget.TextView fMeetingPersonTView -> l
    android.widget.EditText fMeetingNameEText -> m
    android.widget.ImageView fMeetingImageView -> n
    android.widget.ImageView fMasterImageView -> o
    android.widget.ImageView fRoomImageView -> p
    android.widget.ImageView fPersonImageView -> q
    android.widget.Button btnSave -> r
    android.widget.Button btnCancle -> s
    java.lang.String fOrderId -> t
    java.lang.String fApplyNumber -> u
    java.lang.String fApplyName -> v
    java.lang.String fApplyDept -> w
    java.lang.String fMeetingName -> x
    java.lang.String fMeetingDate -> y
    java.lang.String fMeetingStart -> z
    java.lang.String fMeetingEnd -> A
    java.lang.String fMeetingMasterId -> B
    java.lang.String fMeetingMasterName -> C
    java.lang.String fMeetingRoom -> D
    java.lang.String fMeetingRoomId -> E
    java.lang.String fMeetingRoomIp -> F
    java.lang.String fSubEntrys -> G
    com.dahuatech.app.business.MeetingBusiness mBusiness -> H
    com.dahuatech.app.bean.meeting.MeetingDetailInfo mDetailInfo -> I
    java.util.List personList -> J
    java.util.Calendar cal -> K
    java.lang.String fStatus -> L
    java.lang.String fItemNumber -> M
    java.lang.String serviceDetailUrl -> N
    java.lang.String serviceUploadUrl -> O
    com.dahuatech.app.AppContext appContext -> P
    android.app.DatePickerDialog$OnDateSetListener meetingDateListener -> Q
    android.app.TimePickerDialog$OnTimeSetListener meetingStartListener -> R
    android.app.TimePickerDialog$OnTimeSetListener meetingEndListener -> S
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void setListener() -> b
    void onMeetingDate(android.view.View) -> onMeetingDate
    void onMeetingStart(android.view.View) -> onMeetingStart
    void onMeetingEnd(android.view.View) -> onMeetingEnd
    void setStatus(java.lang.String) -> a
    com.dahuatech.app.bean.meeting.MeetingDetailInfo getDetailByPost(java.lang.String) -> b
    void renderDetailView(com.dahuatech.app.bean.meeting.MeetingDetailInfo) -> a
    boolean verifyRoom() -> c
    boolean verify() -> d
    void getControlValue() -> e
    void setModel() -> f
    void uploadSave() -> g
    com.dahuatech.app.bean.ResultMessage uploadServer(com.dahuatech.app.bean.meeting.MeetingDetailInfo) -> b
    void showUploadResult(com.dahuatech.app.bean.ResultMessage) -> a
    void showPersonList(java.lang.String) -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.util.List getPersonList(java.lang.String) -> d
    java.lang.String getAttendPerson(java.util.List) -> a
    void sendLogs() -> h
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.util.Calendar access$0(com.dahuatech.app.ui.meeting.MeetingDetailActivity) -> a
    android.widget.TextView access$1(com.dahuatech.app.ui.meeting.MeetingDetailActivity) -> b
    android.widget.TextView access$2(com.dahuatech.app.ui.meeting.MeetingDetailActivity) -> c
    android.widget.TextView access$3(com.dahuatech.app.ui.meeting.MeetingDetailActivity) -> d
    android.app.ProgressDialog access$4(com.dahuatech.app.ui.meeting.MeetingDetailActivity) -> e
    com.dahuatech.app.bean.meeting.MeetingDetailInfo access$5(com.dahuatech.app.ui.meeting.MeetingDetailActivity,java.lang.String) -> a
    void access$6(com.dahuatech.app.ui.meeting.MeetingDetailActivity,com.dahuatech.app.bean.meeting.MeetingDetailInfo) -> a
    com.dahuatech.app.bean.ResultMessage access$7(com.dahuatech.app.ui.meeting.MeetingDetailActivity,com.dahuatech.app.bean.meeting.MeetingDetailInfo) -> b
    void access$8(com.dahuatech.app.ui.meeting.MeetingDetailActivity,com.dahuatech.app.bean.ResultMessage) -> a
    android.widget.EditText access$9(com.dahuatech.app.ui.meeting.MeetingDetailActivity) -> f
    boolean access$10(com.dahuatech.app.ui.meeting.MeetingDetailActivity) -> g
    java.lang.String access$11(com.dahuatech.app.ui.meeting.MeetingDetailActivity) -> h
    java.util.List access$12(com.dahuatech.app.ui.meeting.MeetingDetailActivity) -> i
    void access$13(com.dahuatech.app.ui.meeting.MeetingDetailActivity) -> j
com.dahuatech.app.ui.meeting.MeetingDetailActivity$1 -> sk:
    com.dahuatech.app.ui.meeting.MeetingDetailActivity this$0 -> a
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
com.dahuatech.app.ui.meeting.MeetingDetailActivity$10 -> sl:
    com.dahuatech.app.ui.meeting.MeetingDetailActivity this$0 -> a
    void run() -> run
com.dahuatech.app.ui.meeting.MeetingDetailActivity$11 -> sm:
    com.dahuatech.app.ui.meeting.MeetingDetailActivity this$0 -> a
com.dahuatech.app.ui.meeting.MeetingDetailActivity$12 -> sn:
    com.dahuatech.app.ui.meeting.MeetingDetailActivity this$0 -> a
com.dahuatech.app.ui.meeting.MeetingDetailActivity$2 -> so:
    com.dahuatech.app.ui.meeting.MeetingDetailActivity this$0 -> a
    void onTimeSet(android.widget.TimePicker,int,int) -> onTimeSet
com.dahuatech.app.ui.meeting.MeetingDetailActivity$3 -> sp:
    com.dahuatech.app.ui.meeting.MeetingDetailActivity this$0 -> a
    void onTimeSet(android.widget.TimePicker,int,int) -> onTimeSet
com.dahuatech.app.ui.meeting.MeetingDetailActivity$4 -> sq:
    com.dahuatech.app.ui.meeting.MeetingDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.meeting.MeetingDetailActivity$5 -> sr:
    com.dahuatech.app.ui.meeting.MeetingDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.meeting.MeetingDetailActivity$6 -> ss:
    com.dahuatech.app.ui.meeting.MeetingDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.meeting.MeetingDetailActivity$7 -> st:
    com.dahuatech.app.ui.meeting.MeetingDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.meeting.MeetingDetailActivity$8 -> su:
    com.dahuatech.app.ui.meeting.MeetingDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.meeting.MeetingDetailActivity$9 -> sv:
    com.dahuatech.app.ui.meeting.MeetingDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.meeting.MeetingDetailActivity$detailUploadAsync -> sw:
    com.dahuatech.app.ui.meeting.MeetingDetailActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    com.dahuatech.app.bean.ResultMessage doInBackground(com.dahuatech.app.bean.meeting.MeetingDetailInfo[]) -> a
    void onPostExecute(com.dahuatech.app.bean.ResultMessage) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.meeting.MeetingDetailActivity$getDetailAsync -> sx:
    com.dahuatech.app.ui.meeting.MeetingDetailActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    com.dahuatech.app.bean.meeting.MeetingDetailInfo doInBackground(java.lang.String[]) -> a
    void onPostExecute(com.dahuatech.app.bean.meeting.MeetingDetailInfo) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.meeting.MeetingListActivity -> com.dahuatech.app.ui.meeting.MeetingListActivity:
    com.dahuatech.app.ui.meeting.MeetingListActivity mInstance -> a
    android.widget.Button btnMeetingList -> b
    android.widget.Button btnMeetingLaunch -> c
    com.handmark.pulltorefresh.library.PullToRefreshListView mPullRefreshListView -> d
    com.dahuatech.app.adapter.MeetingListAdapter mAdapter -> e
    java.util.List mArrayList -> f
    com.dahuatech.app.bean.meeting.MeetingListInfo mListInfo -> g
    com.dahuatech.app.business.MeetingBusiness mBusiness -> h
    android.app.ProgressDialog dialog -> i
    java.lang.String fItemNumber -> j
    java.lang.String serviceUrl -> k
    com.dahuatech.app.AppContext appContext -> l
    int fPageIndex -> m
    int fRecordCount -> n
    com.dahuatech.app.ui.meeting.MeetingListActivity getInstance() -> getInstance
    void onCreate(android.os.Bundle) -> onCreate
    void prepareListData() -> a
    void setListener() -> b
    void showListMeeting() -> c
    void showLaunchMeeting() -> d
    java.util.List getListByPost(java.lang.Integer) -> a
    void renderListView(java.util.List) -> a
    void onPullDownToRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onPullDownToRefresh
    void onPullUpToRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onPullUpToRefresh
    void onPullDownListView() -> onPullDownListView
    void onPullUpListView() -> onPullUpListView
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void sendLogs() -> e
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    android.app.ProgressDialog access$0(com.dahuatech.app.ui.meeting.MeetingListActivity) -> a
    java.util.List access$1(com.dahuatech.app.ui.meeting.MeetingListActivity,java.lang.Integer) -> a
    void access$2(com.dahuatech.app.ui.meeting.MeetingListActivity,java.util.List) -> a
    com.handmark.pulltorefresh.library.PullToRefreshListView access$3(com.dahuatech.app.ui.meeting.MeetingListActivity) -> b
    java.util.List access$4(com.dahuatech.app.ui.meeting.MeetingListActivity) -> c
    void access$5(com.dahuatech.app.ui.meeting.MeetingListActivity,com.dahuatech.app.adapter.MeetingListAdapter) -> a
    com.dahuatech.app.adapter.MeetingListAdapter access$6(com.dahuatech.app.ui.meeting.MeetingListActivity) -> d
    void access$7(com.dahuatech.app.ui.meeting.MeetingListActivity,int) -> a
    int access$8(com.dahuatech.app.ui.meeting.MeetingListActivity) -> e
    void access$9(com.dahuatech.app.ui.meeting.MeetingListActivity) -> f
    void access$10(com.dahuatech.app.ui.meeting.MeetingListActivity,int) -> b
    int access$11(com.dahuatech.app.ui.meeting.MeetingListActivity) -> g
    void access$12(com.dahuatech.app.ui.meeting.MeetingListActivity) -> h
    java.lang.String access$13(com.dahuatech.app.ui.meeting.MeetingListActivity) -> i
    void access$14(com.dahuatech.app.ui.meeting.MeetingListActivity,com.dahuatech.app.bean.meeting.MeetingListInfo) -> a
    com.dahuatech.app.bean.meeting.MeetingListInfo access$15(com.dahuatech.app.ui.meeting.MeetingListActivity) -> j
com.dahuatech.app.ui.meeting.MeetingListActivity$1 -> sy:
    com.dahuatech.app.ui.meeting.MeetingListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.meeting.MeetingListActivity$2 -> sz:
    com.dahuatech.app.ui.meeting.MeetingListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.meeting.MeetingListActivity$3 -> ta:
    com.dahuatech.app.ui.meeting.MeetingListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dahuatech.app.ui.meeting.MeetingListActivity$getListAsync -> tb:
    com.dahuatech.app.ui.meeting.MeetingListActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.meeting.MeetingListActivity$pullDownRefreshAsync -> tc:
    com.dahuatech.app.ui.meeting.MeetingListActivity this$0 -> a
    java.util.List doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.meeting.MeetingListActivity$pullUpRefreshAsync -> td:
    com.dahuatech.app.ui.meeting.MeetingListActivity this$0 -> a
    java.util.List doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.meeting.MeetingPersonListActivity -> com.dahuatech.app.ui.meeting.MeetingPersonListActivity:
    android.widget.Button btnYetSelect -> a
    android.widget.Button btnNotSelect -> b
    android.widget.Button btnCheckAll -> c
    android.widget.Button btnConfirm -> d
    com.handmark.pulltorefresh.library.PullToRefreshListView mPullRefreshListView -> e
    android.app.ProgressDialog dialog -> f
    com.dahuatech.app.adapter.MeetingPersonAdapter mAdapter -> g
    java.util.List mArrayList -> h
    java.util.List personList -> i
    java.util.List sArrayList -> j
    java.lang.String tempList -> k
    com.dahuatech.app.bean.meeting.MeetingPersonInfo mPersonInfo -> l
    java.util.List mQueryList -> m
    com.dahuatech.app.common.DbManager mDbHelper -> n
    com.dahuatech.app.business.MeetingBusiness mBusiness -> o
    java.lang.String[] COLUMNS -> p
    android.database.MatrixCursor matrixCursor -> q
    com.dahuatech.app.adapter.SuggestionsAdapter mSuggestionsAdapter -> r
    com.actionbarsherlock.widget.SearchView mSearchView -> s
    com.dahuatech.app.AppContext appContext -> t
    java.lang.String fQueryStr -> u
    java.lang.String fFlag -> v
    java.lang.String serviceUrl -> w
    int fPageIndex -> x
    int fStatus -> y
    int fRecordCount -> z
    void onCreate(android.os.Bundle) -> onCreate
    void initListData() -> a
    void showPersonList(java.lang.String) -> a
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void setupSearchView(com.actionbarsherlock.view.MenuItem) -> a
    boolean onSuggestionSelect(int) -> onSuggestionSelect
    boolean onSuggestionClick(int) -> onSuggestionClick
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
    void showSuggestions(java.lang.String) -> b
    void setListener() -> b
    void skipSelected() -> c
    void sureSelected() -> d
    java.util.List getSelectedList(java.util.List) -> a
    void setCheckAll(java.util.List) -> b
    void setCancleAll(java.util.List) -> c
    java.util.List getPersonLocalByPost() -> e
    void renderPersonLocalListView(java.util.List) -> d
    void clearPersonSearchAll(android.view.View) -> clearPersonSearchAll
    void onFItemNameClick(android.view.View) -> onFItemNameClick
    void renderPersonSelectedListView(java.util.List) -> e
    java.util.List getPersonListByPost(int) -> a
    void renderPersonListView(java.util.List) -> f
    void onRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onRefresh
    void onPullUpListView() -> onPullUpListView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.util.List access$0(com.dahuatech.app.ui.meeting.MeetingPersonListActivity) -> a
    void access$1(com.dahuatech.app.ui.meeting.MeetingPersonListActivity,java.util.List) -> a
    android.app.ProgressDialog access$2(com.dahuatech.app.ui.meeting.MeetingPersonListActivity) -> b
    java.util.List access$3(com.dahuatech.app.ui.meeting.MeetingPersonListActivity,int) -> a
    void access$4(com.dahuatech.app.ui.meeting.MeetingPersonListActivity,java.util.List) -> b
    com.handmark.pulltorefresh.library.PullToRefreshListView access$5(com.dahuatech.app.ui.meeting.MeetingPersonListActivity) -> c
    java.util.List access$6(com.dahuatech.app.ui.meeting.MeetingPersonListActivity) -> d
    void access$7(com.dahuatech.app.ui.meeting.MeetingPersonListActivity,int) -> b
    int access$8(com.dahuatech.app.ui.meeting.MeetingPersonListActivity) -> e
    com.dahuatech.app.adapter.MeetingPersonAdapter access$9(com.dahuatech.app.ui.meeting.MeetingPersonListActivity) -> f
    void access$10(com.dahuatech.app.ui.meeting.MeetingPersonListActivity) -> g
    void access$11(com.dahuatech.app.ui.meeting.MeetingPersonListActivity) -> h
    java.util.List access$12(com.dahuatech.app.ui.meeting.MeetingPersonListActivity) -> i
    void access$13(com.dahuatech.app.ui.meeting.MeetingPersonListActivity,java.util.List) -> c
    android.widget.Button access$14(com.dahuatech.app.ui.meeting.MeetingPersonListActivity) -> j
    int access$15(com.dahuatech.app.ui.meeting.MeetingPersonListActivity) -> k
    void access$16(com.dahuatech.app.ui.meeting.MeetingPersonListActivity,java.util.List) -> d
    void access$17(com.dahuatech.app.ui.meeting.MeetingPersonListActivity,java.util.List) -> e
    java.util.List access$18(com.dahuatech.app.ui.meeting.MeetingPersonListActivity,java.util.List) -> f
    void access$19(com.dahuatech.app.ui.meeting.MeetingPersonListActivity,java.util.List) -> g
    java.util.List access$20(com.dahuatech.app.ui.meeting.MeetingPersonListActivity) -> l
    java.lang.String access$21(com.dahuatech.app.ui.meeting.MeetingPersonListActivity) -> m
    void access$22(com.dahuatech.app.ui.meeting.MeetingPersonListActivity,java.util.List) -> h
    com.dahuatech.app.common.DbManager access$23(com.dahuatech.app.ui.meeting.MeetingPersonListActivity) -> n
    void access$24(com.dahuatech.app.ui.meeting.MeetingPersonListActivity,com.dahuatech.app.bean.meeting.MeetingPersonInfo) -> a
    com.dahuatech.app.bean.meeting.MeetingPersonInfo access$25(com.dahuatech.app.ui.meeting.MeetingPersonListActivity) -> o
com.dahuatech.app.ui.meeting.MeetingPersonListActivity$1 -> te:
    com.dahuatech.app.ui.meeting.MeetingPersonListActivity this$0 -> a
com.dahuatech.app.ui.meeting.MeetingPersonListActivity$2 -> tf:
    com.dahuatech.app.ui.meeting.MeetingPersonListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.meeting.MeetingPersonListActivity$3 -> tg:
    com.dahuatech.app.ui.meeting.MeetingPersonListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.meeting.MeetingPersonListActivity$4 -> th:
    com.dahuatech.app.ui.meeting.MeetingPersonListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.meeting.MeetingPersonListActivity$5 -> ti:
    com.dahuatech.app.ui.meeting.MeetingPersonListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.dahuatech.app.ui.meeting.MeetingPersonListActivity access$0(com.dahuatech.app.ui.meeting.MeetingPersonListActivity$5) -> a
com.dahuatech.app.ui.meeting.MeetingPersonListActivity$5$1 -> tj:
    com.dahuatech.app.ui.meeting.MeetingPersonListActivity$5 this$1 -> a
    void run() -> run
com.dahuatech.app.ui.meeting.MeetingPersonListActivity$6 -> tk:
    com.dahuatech.app.ui.meeting.MeetingPersonListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dahuatech.app.ui.meeting.MeetingPersonListActivity$7 -> tl:
    com.dahuatech.app.ui.meeting.MeetingPersonListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dahuatech.app.ui.meeting.MeetingPersonListActivity$getPersonLocalAsync -> tm:
    com.dahuatech.app.ui.meeting.MeetingPersonListActivity this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.meeting.MeetingPersonListActivity$getPersonSearchAsync -> tn:
    com.dahuatech.app.ui.meeting.MeetingPersonListActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.meeting.MeetingPersonListActivity$pullUpRefreshAsync -> to:
    com.dahuatech.app.ui.meeting.MeetingPersonListActivity this$0 -> a
    java.util.List doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.meeting.MeetingRoomListActivity -> com.dahuatech.app.ui.meeting.MeetingRoomListActivity:
    com.handmark.pulltorefresh.library.PullToRefreshListView mPullRefreshListView -> a
    com.dahuatech.app.adapter.MeetingRoomAdapter mAdapter -> b
    java.util.List mArrayList -> c
    java.util.List mQueryList -> d
    com.dahuatech.app.common.DbManager mDbHelper -> e
    com.dahuatech.app.business.MeetingBusiness mBusiness -> f
    android.app.ProgressDialog dialog -> g
    java.lang.String[] COLUMNS -> h
    android.database.MatrixCursor matrixCursor -> i
    com.dahuatech.app.adapter.SuggestionsAdapter mSuggestionsAdapter -> j
    com.actionbarsherlock.widget.SearchView mSearchView -> k
    com.dahuatech.app.AppContext appContext -> l
    java.lang.String fQueryStr -> m
    java.lang.String filterUrl -> n
    java.lang.String searchUrl -> o
    int fPageIndex -> p
    int fRecordCount -> q
    java.lang.String fItemNumber -> r
    java.lang.String fSelectedDate -> s
    java.lang.String FSelectedStart -> t
    java.lang.String FSelectedEnd -> u
    void onCreate(android.os.Bundle) -> onCreate
    void initListData() -> a
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void setupSearchView(com.actionbarsherlock.view.MenuItem) -> a
    boolean onSuggestionSelect(int) -> onSuggestionSelect
    boolean onSuggestionClick(int) -> onSuggestionClick
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
    void showSuggestions(java.lang.String) -> a
    java.util.List getRoomLocalByPost() -> b
    java.util.List getFilterRoomLocal(java.util.List) -> a
    void renderRoomLocalListView(java.util.List) -> b
    java.util.List getRoomListByPost(int) -> a
    void renderRoomListView(java.util.List) -> c
    void onFTypeClick(android.view.View) -> onFTypeClick
    void onRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onRefresh
    void onPullUpListView() -> onPullUpListView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.util.List access$0(com.dahuatech.app.ui.meeting.MeetingRoomListActivity) -> a
    void access$1(com.dahuatech.app.ui.meeting.MeetingRoomListActivity,java.util.List) -> a
    android.app.ProgressDialog access$2(com.dahuatech.app.ui.meeting.MeetingRoomListActivity) -> b
    java.util.List access$3(com.dahuatech.app.ui.meeting.MeetingRoomListActivity,int) -> a
    void access$4(com.dahuatech.app.ui.meeting.MeetingRoomListActivity,java.util.List) -> b
    com.handmark.pulltorefresh.library.PullToRefreshListView access$5(com.dahuatech.app.ui.meeting.MeetingRoomListActivity) -> c
    java.util.List access$6(com.dahuatech.app.ui.meeting.MeetingRoomListActivity) -> d
    void access$7(com.dahuatech.app.ui.meeting.MeetingRoomListActivity,int) -> b
    int access$8(com.dahuatech.app.ui.meeting.MeetingRoomListActivity) -> e
    com.dahuatech.app.adapter.MeetingRoomAdapter access$9(com.dahuatech.app.ui.meeting.MeetingRoomListActivity) -> f
com.dahuatech.app.ui.meeting.MeetingRoomListActivity$getRoomLocalAsync -> tp:
    com.dahuatech.app.ui.meeting.MeetingRoomListActivity this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.meeting.MeetingRoomListActivity$getRoomSearchAsync -> tq:
    com.dahuatech.app.ui.meeting.MeetingRoomListActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.meeting.MeetingRoomListActivity$pullUpRefreshAsync -> tr:
    com.dahuatech.app.ui.meeting.MeetingRoomListActivity this$0 -> a
    java.util.List doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.service.AlarmBroadCast -> com.dahuatech.app.ui.service.AlarmBroadCast:
    int waitTaskCount -> a
    android.os.PowerManager$WakeLock moWakeLock -> b
    android.net.wifi.WifiManager$WifiLock moWifiLock -> c
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void setAlarm(android.content.Context) -> setAlarm
    void cancelAlarm(android.content.Context) -> cancelAlarm
    void acquireLocks(android.content.Context) -> a
    void releaseLocks() -> a
com.dahuatech.app.ui.service.NetworkStateReceiver -> com.dahuatech.app.ui.service.NetworkStateReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    boolean isNetworkConnected(android.content.Context) -> a
com.dahuatech.app.ui.service.NoticeService -> com.dahuatech.app.ui.service.NoticeService:
    java.lang.String fItemNumber -> a
    java.lang.String serviceUrl -> b
    void onCreate() -> onCreate
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    boolean isNetworkConnected(android.content.Context) -> a
    void isStartService() -> a
    void onDestroy() -> onDestroy
    java.lang.String access$0(com.dahuatech.app.ui.service.NoticeService) -> a
com.dahuatech.app.ui.service.NoticeService$onNoticeAsync -> ts:
    com.dahuatech.app.ui.service.NoticeService this$0 -> a
    java.lang.Integer doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Integer) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.service.NotificationShow -> com.dahuatech.app.ui.service.NotificationShow:
    void showNotification(android.content.Context,int) -> showNotification
    void removeNotification(android.content.Context) -> removeNotification
com.dahuatech.app.ui.task.ApplyDaysOffActivity -> com.dahuatech.app.ui.task.ApplyDaysOffActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    android.widget.TextView fBillNo -> f
    android.widget.TextView fApplyName -> g
    android.widget.TextView fApplyDate -> h
    android.widget.TextView fApplyDept -> i
    android.widget.Button appButton -> j
    android.widget.TableLayout handleLayout -> k
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> l
    android.widget.LinearLayout fSubLinearLayout -> m
    float dip -> n
    int fixedHeight -> o
    int paddingLeft -> p
    int paddingRight -> q
    int paddingTop -> r
    int paddingBottom -> s
    int width -> t
    int layoutHeight -> u
    android.util.DisplayMetrics displaymetrics -> v
    java.lang.String serviceUrl -> w
    com.dahuatech.app.AppContext appContext -> x
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> y
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showSubEntrys(java.lang.String) -> a
    void attachRelativeLayout(com.dahuatech.app.bean.mytask.ApplyDaysOffTBodyInfo) -> a
    int getNewId() -> a
    int getPixelsWidth() -> b
    void initApprove() -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.ApplyDaysOffActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.ApplyDaysOffActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.ApplyDaysOffActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.ApplyDaysOffActivity) -> d
com.dahuatech.app.ui.task.ApplyDaysOffActivity$1 -> tt:
    com.dahuatech.app.ui.task.ApplyDaysOffActivity this$0 -> a
com.dahuatech.app.ui.task.ApplyDaysOffActivity$2 -> tu:
    com.dahuatech.app.ui.task.ApplyDaysOffActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.ApplyDaysOffDevelopActivity -> com.dahuatech.app.ui.task.ApplyDaysOffDevelopActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    android.widget.TextView fBillNo -> f
    android.widget.TextView fApplyName -> g
    android.widget.TextView fApplyDate -> h
    android.widget.TextView fApplyDept -> i
    android.widget.TextView fTypeName -> j
    android.widget.TextView fSumDays -> k
    android.widget.TextView fStartTime -> l
    android.widget.TextView fEndTime -> m
    android.widget.TextView fReason -> n
    android.app.ProgressDialog dialog -> o
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> p
    android.widget.Button btnApprove -> q
    android.widget.TableLayout handleLayout -> r
    android.widget.LinearLayout fSubLinearLayout -> s
    java.lang.String serviceUrl -> t
    com.dahuatech.app.AppContext appContext -> u
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.mytask.ApplyDaysOffDevelopInfo getDataByPost(java.lang.String) -> a
    void initApplyDaysOffDevelopInfo(com.dahuatech.app.bean.mytask.ApplyDaysOffDevelopInfo) -> a
    void initApprove() -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    android.app.ProgressDialog access$0(com.dahuatech.app.ui.task.ApplyDaysOffDevelopActivity) -> a
    void access$1(com.dahuatech.app.ui.task.ApplyDaysOffDevelopActivity,com.dahuatech.app.bean.mytask.ApplyDaysOffDevelopInfo) -> a
    com.dahuatech.app.bean.mytask.ApplyDaysOffDevelopInfo access$2(com.dahuatech.app.ui.task.ApplyDaysOffDevelopActivity,java.lang.String) -> a
    java.lang.String access$3(com.dahuatech.app.ui.task.ApplyDaysOffDevelopActivity) -> b
    java.lang.String access$4(com.dahuatech.app.ui.task.ApplyDaysOffDevelopActivity) -> c
    java.lang.String access$5(com.dahuatech.app.ui.task.ApplyDaysOffDevelopActivity) -> d
    java.lang.String access$6(com.dahuatech.app.ui.task.ApplyDaysOffDevelopActivity) -> e
com.dahuatech.app.ui.task.ApplyDaysOffDevelopActivity$1 -> tv:
    com.dahuatech.app.ui.task.ApplyDaysOffDevelopActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.ApplyDaysOffDevelopActivity$ApplyDaysOffAsync -> tw:
    com.dahuatech.app.ui.task.ApplyDaysOffDevelopActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.dahuatech.app.bean.mytask.ApplyDaysOffDevelopInfo) -> a
    com.dahuatech.app.bean.mytask.ApplyDaysOffDevelopInfo doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.task.ApplyLeaveActivity -> com.dahuatech.app.ui.task.ApplyLeaveActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    android.widget.TextView fBillNo -> f
    android.widget.TextView fApplyName -> g
    android.widget.TextView fApplyDate -> h
    android.widget.TextView fApplyDept -> i
    android.widget.Button appButton -> j
    android.widget.TableLayout handleLayout -> k
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> l
    android.widget.LinearLayout fSubLinearLayout -> m
    java.lang.String serviceUrl -> n
    com.dahuatech.app.AppContext appContext -> o
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> p
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showSubEntrys(java.lang.String) -> a
    void attachSubEntry(com.dahuatech.app.bean.mytask.ApplyLeaveTBodyInfo,int) -> a
    void initApprove() -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.ApplyLeaveActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.ApplyLeaveActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.ApplyLeaveActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.ApplyLeaveActivity) -> d
com.dahuatech.app.ui.task.ApplyLeaveActivity$1 -> tx:
    com.dahuatech.app.ui.task.ApplyLeaveActivity this$0 -> a
com.dahuatech.app.ui.task.ApplyLeaveActivity$2 -> ty:
    com.dahuatech.app.ui.task.ApplyLeaveActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.ApplyOverTimeActivity -> com.dahuatech.app.ui.task.ApplyOverTimeActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    android.widget.TextView fBillNo -> f
    android.widget.TextView fApplyName -> g
    android.widget.TextView fApplyDate -> h
    android.widget.TextView fOverTimeCount -> i
    android.widget.TextView fDaysOffCount -> j
    android.widget.Button appButton -> k
    android.widget.TableLayout handleLayout -> l
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> m
    android.widget.LinearLayout fSubLinearLayout -> n
    float dip -> o
    int fixedHeight -> p
    int paddingLeft -> q
    int paddingRight -> r
    int paddingTop -> s
    int paddingBottom -> t
    int width -> u
    int layoutHeight -> v
    android.util.DisplayMetrics displaymetrics -> w
    java.lang.String serviceUrl -> x
    com.dahuatech.app.AppContext appContext -> y
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> z
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showSubEntrys(java.lang.String) -> a
    void attachRelativeLayout(com.dahuatech.app.bean.mytask.ApplyOverTimeTBodyInfo,int) -> a
    int getNewId() -> a
    int getPixelsWidth() -> b
    void initApprove() -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.ApplyOverTimeActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.ApplyOverTimeActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.ApplyOverTimeActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.ApplyOverTimeActivity) -> d
com.dahuatech.app.ui.task.ApplyOverTimeActivity$1 -> tz:
    com.dahuatech.app.ui.task.ApplyOverTimeActivity this$0 -> a
com.dahuatech.app.ui.task.ApplyOverTimeActivity$2 -> ua:
    com.dahuatech.app.ui.task.ApplyOverTimeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.ApplyResumeActivity -> com.dahuatech.app.ui.task.ApplyResumeActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    android.widget.TextView fBillNo -> f
    android.widget.TextView fApplyName -> g
    android.widget.TextView fApplyDate -> h
    android.widget.TextView fApplyDept -> i
    android.widget.Button appButton -> j
    android.widget.TableLayout handleLayout -> k
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> l
    android.widget.LinearLayout fSubLinearLayout -> m
    java.lang.String serviceUrl -> n
    com.dahuatech.app.AppContext appContext -> o
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> p
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showSubEntrys(java.lang.String) -> a
    void attachSubEntry(com.dahuatech.app.bean.mytask.ApplyResumeTBodyInfo,int) -> a
    void initApprove() -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.ApplyResumeActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.ApplyResumeActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.ApplyResumeActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.ApplyResumeActivity) -> d
com.dahuatech.app.ui.task.ApplyResumeActivity$1 -> ub:
    com.dahuatech.app.ui.task.ApplyResumeActivity this$0 -> a
com.dahuatech.app.ui.task.ApplyResumeActivity$2 -> uc:
    com.dahuatech.app.ui.task.ApplyResumeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.AsyncTaskContext -> com.dahuatech.app.ui.task.AsyncTaskContext:
    android.content.Context context -> a
    com.dahuatech.app.inter.ITaskContext iTaskContext -> b
    android.app.ProgressDialog dialog -> c
    com.dahuatech.app.ui.task.AsyncTaskContext asyncTaskContext -> d
    android.content.Context getContext() -> getContext
    void setContext(android.content.Context) -> setContext
    com.dahuatech.app.inter.ITaskContext getiTaskContext() -> getiTaskContext
    void setiTaskContext(com.dahuatech.app.inter.ITaskContext) -> setiTaskContext
    com.dahuatech.app.ui.task.AsyncTaskContext getInstance(android.content.Context,com.dahuatech.app.inter.ITaskContext) -> getInstance
    void initDiglog() -> a
    void callAsyncTask(java.lang.String) -> callAsyncTask
    android.app.ProgressDialog access$1(com.dahuatech.app.ui.task.AsyncTaskContext) -> a
    com.dahuatech.app.inter.ITaskContext access$2(com.dahuatech.app.ui.task.AsyncTaskContext) -> b
com.dahuatech.app.ui.task.AsyncTaskContext$AsyncTaskRequest -> ud:
    com.dahuatech.app.ui.task.AsyncTaskContext this$0 -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.dahuatech.app.bean.Base) -> a
    com.dahuatech.app.bean.Base doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.task.AsyncTaskContext$singletonHolder -> ue:
    com.dahuatech.app.ui.task.AsyncTaskContext instance -> a
    com.dahuatech.app.ui.task.AsyncTaskContext access$0() -> a
com.dahuatech.app.ui.task.ContributionAwardActivity -> com.dahuatech.app.ui.task.ContributionAwardActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    java.lang.String fItemNumber -> f
    android.widget.TextView fBillNo -> g
    android.widget.TextView fBillerName -> h
    android.widget.TextView fApplyDate -> i
    android.widget.TextView fBillerDeptName -> j
    android.widget.TextView fDate -> k
    android.widget.TextView fInteger -> l
    android.widget.TextView fAmount -> m
    android.widget.TextView fText -> n
    android.widget.TextView fText2 -> o
    android.widget.TextView fCheckBox -> p
    android.widget.Button btnApprove -> q
    android.widget.TableLayout handleLayout -> r
    android.widget.LinearLayout fSubLinearLayout -> s
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> t
    java.lang.String serviceUrl -> u
    com.dahuatech.app.AppContext appContext -> v
    android.content.SharedPreferences sp -> w
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> x
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void initApprove() -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onStop() -> onStop
    void onStart() -> onStart
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onPause() -> onPause
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    java.lang.String access$0(com.dahuatech.app.ui.task.ContributionAwardActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.ContributionAwardActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.ContributionAwardActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.ContributionAwardActivity) -> d
com.dahuatech.app.ui.task.ContributionAwardActivity$1 -> uf:
    com.dahuatech.app.ui.task.ContributionAwardActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.DaHuaAssumeCostActivity -> com.dahuatech.app.ui.task.DaHuaAssumeCostActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    java.lang.String fItemNumber -> f
    android.widget.TextView fBillNo -> g
    android.widget.TextView fApplyName -> h
    android.widget.TextView fApplyDate -> i
    android.widget.TextView fGoodsType -> j
    android.widget.TextView fPiInfo -> k
    android.widget.TextView fBusinessName -> l
    android.widget.TextView fFreightEstimate -> m
    android.widget.TextView fCause -> n
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> o
    android.widget.Button btnApprove -> p
    android.widget.Button lowerButton -> q
    android.widget.TableLayout handleLayout -> r
    android.widget.LinearLayout fSubLinearLayout -> s
    java.lang.String serviceUrl -> t
    com.dahuatech.app.AppContext appContext -> u
    android.content.SharedPreferences sp -> v
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> w
    com.dahuatech.app.ui.task.LowerNodeAppCheck lowerNodeAppCheck -> x
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void initApprove() -> a
    void setCheckResult(com.dahuatech.app.bean.ResultMessage) -> setCheckResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.DaHuaAssumeCostActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.DaHuaAssumeCostActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.DaHuaAssumeCostActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.DaHuaAssumeCostActivity) -> d
    java.lang.String access$4(com.dahuatech.app.ui.task.DaHuaAssumeCostActivity) -> e
com.dahuatech.app.ui.task.DaHuaAssumeCostActivity$1 -> ug:
    com.dahuatech.app.ui.task.DaHuaAssumeCostActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.DaHuaAssumeCostActivity$2 -> uh:
    com.dahuatech.app.ui.task.DaHuaAssumeCostActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.DaHuaAssumeCostActivity$3 -> ui:
    com.dahuatech.app.ui.task.DaHuaAssumeCostActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.DevelopInquiryActivity -> com.dahuatech.app.ui.task.DevelopInquiryActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    java.lang.String fItemNumber -> f
    android.widget.TextView fBillNo -> g
    android.widget.TextView fApplyName -> h
    android.widget.TextView fDate -> i
    android.widget.TextView fApplyerDeptName -> j
    android.widget.TextView fEmployeeNumber -> k
    android.widget.TextView fMaterialType -> l
    android.widget.TextView fOfferExplain -> m
    android.widget.Button appButton -> n
    android.widget.Button lowerButton -> o
    android.widget.TableLayout handleLayout -> p
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> q
    android.widget.LinearLayout fSubLinearLayout -> r
    float dip -> s
    int fixedHeight -> t
    int paddingLeft -> u
    int paddingRight -> v
    int paddingTop -> w
    int paddingBottom -> x
    int width -> y
    int layoutHeight -> z
    android.util.DisplayMetrics displaymetrics -> A
    java.lang.String serviceUrl -> B
    com.dahuatech.app.AppContext appContext -> C
    android.content.SharedPreferences sp -> D
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> E
    com.dahuatech.app.ui.task.LowerNodeAppCheck lowerNodeAppCheck -> F
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showSubEntrys(java.lang.String) -> a
    void attachRelativeLayout(com.dahuatech.app.bean.mytask.DevelopInquiryTBodyInfo) -> a
    int getPixelsWidth() -> a
    void initApprove() -> b
    void setCheckResult(com.dahuatech.app.bean.ResultMessage) -> setCheckResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.DevelopInquiryActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.DevelopInquiryActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.DevelopInquiryActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.DevelopInquiryActivity) -> d
    java.lang.String access$4(com.dahuatech.app.ui.task.DevelopInquiryActivity) -> e
com.dahuatech.app.ui.task.DevelopInquiryActivity$1 -> uj:
    com.dahuatech.app.ui.task.DevelopInquiryActivity this$0 -> a
com.dahuatech.app.ui.task.DevelopInquiryActivity$2 -> uk:
    com.dahuatech.app.ui.task.DevelopInquiryActivity this$0 -> a
    com.dahuatech.app.bean.mytask.DevelopInquiryTBodyInfo val$tBodyInfo -> b
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.DevelopInquiryActivity$3 -> ul:
    com.dahuatech.app.ui.task.DevelopInquiryActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.DevelopInquiryActivity$4 -> um:
    com.dahuatech.app.ui.task.DevelopInquiryActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.DevelopInquiryActivity$5 -> un:
    com.dahuatech.app.ui.task.DevelopInquiryActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.DevelopInquiryLayoutActivity -> com.dahuatech.app.ui.task.DevelopInquiryLayoutActivity:
    java.lang.String fMasterialName -> a
    java.lang.String fSupplier -> b
    java.lang.String fManufacturer -> c
    java.lang.String fOffer -> d
    java.lang.String fCurrency -> e
    java.lang.String fOrderQuantityFrom -> f
    java.lang.String fOrderQuantityTo -> g
    java.lang.String fUnit -> h
    java.lang.String fOrderForward -> i
    java.lang.String fMini -> j
    java.lang.String fMiniOrder -> k
    java.lang.String fPayment -> l
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
com.dahuatech.app.ui.task.DevelopTestNetworkActivity -> com.dahuatech.app.ui.task.DevelopTestNetworkActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    java.lang.String fItemNumber -> f
    android.widget.TextView fBillNo -> g
    android.widget.TextView fApplyName -> h
    android.widget.TextView fDate -> i
    android.widget.TextView fApplyerDeptName -> j
    android.widget.TextView fTelphone -> k
    android.widget.TextView fApplyerPermisson -> l
    android.widget.TextView fPermissionRequre -> m
    android.widget.Button appButton -> n
    android.widget.Button lowerButton -> o
    android.widget.TableLayout handleLayout -> p
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> q
    android.widget.LinearLayout fSubLinearLayout -> r
    float dip -> s
    int fixedHeight -> t
    int paddingLeft -> u
    int paddingRight -> v
    int paddingTop -> w
    int paddingBottom -> x
    int width -> y
    int layoutHeight -> z
    android.util.DisplayMetrics displaymetrics -> A
    java.lang.String serviceUrl -> B
    com.dahuatech.app.AppContext appContext -> C
    android.content.SharedPreferences sp -> D
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> E
    com.dahuatech.app.ui.task.LowerNodeAppCheck lowerNodeAppCheck -> F
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showSubEntrys(java.lang.String) -> a
    void attachRelativeLayout(com.dahuatech.app.bean.mytask.DevelopTestNetworkTBodyInfo,int) -> a
    int getNewId() -> a
    int getPixelsWidth() -> b
    void initApprove() -> c
    void setCheckResult(com.dahuatech.app.bean.ResultMessage) -> setCheckResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.DevelopTestNetworkActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.DevelopTestNetworkActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.DevelopTestNetworkActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.DevelopTestNetworkActivity) -> d
    java.lang.String access$4(com.dahuatech.app.ui.task.DevelopTestNetworkActivity) -> e
com.dahuatech.app.ui.task.DevelopTestNetworkActivity$1 -> uo:
    com.dahuatech.app.ui.task.DevelopTestNetworkActivity this$0 -> a
com.dahuatech.app.ui.task.DevelopTestNetworkActivity$2 -> up:
    com.dahuatech.app.ui.task.DevelopTestNetworkActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.DevelopTestNetworkActivity$3 -> uq:
    com.dahuatech.app.ui.task.DevelopTestNetworkActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.DevelopTestNetworkActivity$4 -> ur:
    com.dahuatech.app.ui.task.DevelopTestNetworkActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.DevelopTravelActivity -> com.dahuatech.app.ui.task.DevelopTravelActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    java.lang.String fItemNumber -> f
    android.widget.TextView fBillNo -> g
    android.widget.TextView fApplyName -> h
    android.widget.TextView fApplyDate -> i
    android.widget.TextView fAssumeCost -> j
    android.widget.TextView fAssumeDept -> k
    android.widget.TextView fTravelAim -> l
    android.widget.TextView fTravelAddress -> m
    android.widget.TextView fTravelStartTime -> n
    android.widget.TextView fTravelEndTime -> o
    android.widget.TextView fProjectName -> p
    android.widget.TextView fProjectCode -> q
    android.widget.TextView fTravelReason -> r
    android.widget.TextView fTravelWay -> s
    android.widget.Button appButton -> t
    android.widget.Button lowerButton -> u
    android.widget.TableLayout handleLayout -> v
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> w
    android.widget.LinearLayout fSubLinearLayout -> x
    int fSubEntrysOneCount -> y
    java.lang.String serviceUrl -> z
    com.dahuatech.app.AppContext appContext -> A
    android.content.SharedPreferences sp -> B
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> C
    com.dahuatech.app.ui.task.LowerNodeAppCheck lowerNodeAppCheck -> D
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showSubEntrysOne(java.lang.String) -> a
    void showSubEntrysTwo(java.lang.String) -> b
    void attachSubEntryOne(com.dahuatech.app.bean.mytask.DevelopTravelTBodyOneInfo,int) -> a
    void attachSubEntryTwo(com.dahuatech.app.bean.mytask.DevelopTravelTBodyTwoInfo,int) -> a
    void initApprove() -> a
    void setCheckResult(com.dahuatech.app.bean.ResultMessage) -> setCheckResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.DevelopTravelActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.DevelopTravelActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.DevelopTravelActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.DevelopTravelActivity) -> d
    java.lang.String access$4(com.dahuatech.app.ui.task.DevelopTravelActivity) -> e
com.dahuatech.app.ui.task.DevelopTravelActivity$1 -> us:
    com.dahuatech.app.ui.task.DevelopTravelActivity this$0 -> a
com.dahuatech.app.ui.task.DevelopTravelActivity$2 -> ut:
    com.dahuatech.app.ui.task.DevelopTravelActivity this$0 -> a
com.dahuatech.app.ui.task.DevelopTravelActivity$3 -> uu:
    com.dahuatech.app.ui.task.DevelopTravelActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.DevelopTravelActivity$4 -> uv:
    com.dahuatech.app.ui.task.DevelopTravelActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.DevelopTravelActivity$5 -> uw:
    com.dahuatech.app.ui.task.DevelopTravelActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.DocumentApproveActivity -> com.dahuatech.app.ui.task.DocumentApproveActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    java.lang.String fItemNumber -> f
    android.widget.TextView fBillNo -> g
    android.widget.TextView fApplyName -> h
    android.widget.TextView fApplyDate -> i
    android.widget.TextView fPendingApp -> j
    android.widget.TextView fDocumentType -> k
    android.widget.TextView fDocumentStatus -> l
    android.widget.TextView fReason -> m
    android.widget.TextView fDocumentPost -> n
    android.widget.Button appButton -> o
    android.widget.Button lowerButton -> p
    android.widget.TableLayout handleLayout -> q
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> r
    android.widget.LinearLayout fSubLinearLayout -> s
    java.lang.String serviceUrl -> t
    com.dahuatech.app.AppContext appContext -> u
    android.content.SharedPreferences sp -> v
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> w
    com.dahuatech.app.ui.task.LowerNodeAppCheck lowerNodeAppCheck -> x
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showSubEntrys(java.lang.String) -> a
    void attachSubEntry(com.dahuatech.app.bean.mytask.DocumentApproveTBodyInfo,int) -> a
    void initApprove() -> a
    void setCheckResult(com.dahuatech.app.bean.ResultMessage) -> setCheckResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.DocumentApproveActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.DocumentApproveActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.DocumentApproveActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.DocumentApproveActivity) -> d
    java.lang.String access$4(com.dahuatech.app.ui.task.DocumentApproveActivity) -> e
com.dahuatech.app.ui.task.DocumentApproveActivity$1 -> ux:
    com.dahuatech.app.ui.task.DocumentApproveActivity this$0 -> a
com.dahuatech.app.ui.task.DocumentApproveActivity$2 -> uy:
    com.dahuatech.app.ui.task.DocumentApproveActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.DocumentApproveActivity$3 -> uz:
    com.dahuatech.app.ui.task.DocumentApproveActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.DocumentApproveActivity$4 -> va:
    com.dahuatech.app.ui.task.DocumentApproveActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.DoorPermissionActivity -> com.dahuatech.app.ui.task.DoorPermissionActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    java.lang.String fItemNumber -> f
    android.widget.TextView fBillNo -> g
    android.widget.TextView fApplyName -> h
    android.widget.TextView fApplyDate -> i
    android.widget.TextView fApplyDept -> j
    android.widget.TextView fApplyType -> k
    android.widget.TextView fTel -> l
    android.widget.TextView fIsOther -> m
    android.widget.TextView fRegion -> n
    android.widget.Button appButton -> o
    android.widget.Button lowerButton -> p
    android.widget.TableLayout handleLayout -> q
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> r
    android.widget.LinearLayout fSubLinearLayout -> s
    java.lang.String serviceUrl -> t
    com.dahuatech.app.AppContext appContext -> u
    android.content.SharedPreferences sp -> v
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> w
    com.dahuatech.app.ui.task.LowerNodeAppCheck lowerNodeAppCheck -> x
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showSubEntrys(java.lang.String) -> a
    void attachSubEntry(com.dahuatech.app.bean.mytask.DoorPermissionTBodyInfo,int) -> a
    void initApprove() -> a
    void setCheckResult(com.dahuatech.app.bean.ResultMessage) -> setCheckResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.DoorPermissionActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.DoorPermissionActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.DoorPermissionActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.DoorPermissionActivity) -> d
    java.lang.String access$4(com.dahuatech.app.ui.task.DoorPermissionActivity) -> e
com.dahuatech.app.ui.task.DoorPermissionActivity$1 -> vb:
    com.dahuatech.app.ui.task.DoorPermissionActivity this$0 -> a
com.dahuatech.app.ui.task.DoorPermissionActivity$2 -> vc:
    com.dahuatech.app.ui.task.DoorPermissionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.DoorPermissionActivity$3 -> vd:
    com.dahuatech.app.ui.task.DoorPermissionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.DoorPermissionActivity$4 -> ve:
    com.dahuatech.app.ui.task.DoorPermissionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.EmailOpenActivity -> com.dahuatech.app.ui.task.EmailOpenActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    java.lang.String fItemNumber -> f
    android.widget.TextView fBillNo -> g
    android.widget.TextView fApplyName -> h
    android.widget.TextView fApplyDate -> i
    android.widget.TextView fEmailType -> j
    android.widget.TextView fApplyDept -> k
    android.widget.TextView fReason -> l
    android.widget.TextView fApplyPermission -> m
    android.widget.TextView fInfoSafe -> n
    android.widget.Button appButton -> o
    android.widget.Button lowerButton -> p
    android.widget.TableLayout handleLayout -> q
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> r
    android.widget.LinearLayout fSubLinearLayout -> s
    java.lang.String serviceUrl -> t
    com.dahuatech.app.AppContext appContext -> u
    android.content.SharedPreferences sp -> v
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> w
    com.dahuatech.app.ui.task.LowerNodeAppCheck lowerNodeAppCheck -> x
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showSubEntrys(java.lang.String) -> a
    void attachSubEntry(com.dahuatech.app.bean.mytask.EmailOpenTBodyInfo,int) -> a
    void initApprove() -> a
    void setCheckResult(com.dahuatech.app.bean.ResultMessage) -> setCheckResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.EmailOpenActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.EmailOpenActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.EmailOpenActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.EmailOpenActivity) -> d
    java.lang.String access$4(com.dahuatech.app.ui.task.EmailOpenActivity) -> e
com.dahuatech.app.ui.task.EmailOpenActivity$1 -> vf:
    com.dahuatech.app.ui.task.EmailOpenActivity this$0 -> a
com.dahuatech.app.ui.task.EmailOpenActivity$2 -> vg:
    com.dahuatech.app.ui.task.EmailOpenActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.EmailOpenActivity$3 -> vh:
    com.dahuatech.app.ui.task.EmailOpenActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.EmailOpenActivity$4 -> vi:
    com.dahuatech.app.ui.task.EmailOpenActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.EngineeringActivity -> com.dahuatech.app.ui.task.EngineeringActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    android.widget.TextView fBillNo -> f
    android.widget.TextView fApplyName -> g
    android.widget.TextView fApplyDate -> h
    android.widget.TextView fEngineereName -> i
    android.widget.TextView fAddress -> j
    android.widget.TextView fAmount -> k
    android.widget.TextView fContact -> l
    android.widget.TextView fTel -> m
    android.widget.TextView fComboBox -> n
    android.widget.TextView fText -> o
    android.widget.TextView fComboBox1 -> p
    android.widget.TextView fBase1 -> q
    android.widget.TextView fNote -> r
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> s
    android.widget.Button btnApprove -> t
    java.lang.String serviceUrl -> u
    com.dahuatech.app.AppContext appContext -> v
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> w
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    android.widget.TextView access$0(com.dahuatech.app.ui.task.EngineeringActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.EngineeringActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.EngineeringActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.EngineeringActivity) -> d
    java.lang.String access$4(com.dahuatech.app.ui.task.EngineeringActivity) -> e
com.dahuatech.app.ui.task.EngineeringActivity$1 -> vj:
    com.dahuatech.app.ui.task.EngineeringActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.EngineeringActivity$2 -> vk:
    com.dahuatech.app.ui.task.EngineeringActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.ExAttendanceActivity -> com.dahuatech.app.ui.task.ExAttendanceActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    android.widget.TextView fBillNo -> f
    android.widget.TextView fApplyName -> g
    android.widget.TextView fApplyDate -> h
    android.widget.TextView fApplyDept -> i
    android.widget.Button appButton -> j
    android.widget.TableLayout handleLayout -> k
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> l
    android.widget.LinearLayout fSubLinearLayout -> m
    float dip -> n
    int fixedHeight -> o
    int paddingLeft -> p
    int paddingRight -> q
    int paddingTop -> r
    int paddingBottom -> s
    int width -> t
    int layoutHeight -> u
    android.util.DisplayMetrics displaymetrics -> v
    java.lang.String serviceUrl -> w
    com.dahuatech.app.AppContext appContext -> x
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> y
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showSubEntrys(java.lang.String) -> a
    void attachRelativeLayout(com.dahuatech.app.bean.mytask.ExAttendanceTBodyInfo) -> a
    int getNewId() -> a
    int getPixelsWidth() -> b
    void initApprove() -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.ExAttendanceActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.ExAttendanceActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.ExAttendanceActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.ExAttendanceActivity) -> d
com.dahuatech.app.ui.task.ExAttendanceActivity$1 -> vl:
    com.dahuatech.app.ui.task.ExAttendanceActivity this$0 -> a
com.dahuatech.app.ui.task.ExAttendanceActivity$2 -> vm:
    com.dahuatech.app.ui.task.ExAttendanceActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.ExpenseCostTHeaderActivity -> com.dahuatech.app.ui.task.ExpenseCostTHeaderActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    java.lang.String fGeneralCode -> f
    android.widget.TextView fBillNo -> g
    android.widget.TextView fConSmName -> h
    android.widget.TextView fCommitDate -> i
    android.widget.TextView fGeneralName -> j
    android.widget.TextView fAppAmt -> k
    android.widget.TextView fLDAmt -> l
    android.widget.TableLayout tb1 -> m
    android.widget.TableLayout tb2 -> n
    android.widget.Button appButton -> o
    android.widget.TableLayout handleLayout -> p
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> q
    int showFlag -> r
    android.widget.LinearLayout fCostTypeLinearLayout -> s
    float dip -> t
    int paddingLeft -> u
    int paddingRight -> v
    int paddingTop -> w
    int paddingBottom -> x
    int width -> y
    android.util.DisplayMetrics displaymetrics -> z
    java.lang.String serviceUrl -> A
    com.dahuatech.app.AppContext appContext -> B
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> C
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showCostType(java.lang.String) -> a
    void attachRelativeLayout(com.dahuatech.app.bean.mytask.ExpenseCostTBodyInfo) -> a
    int getNewId() -> a
    int getPixelsWidth() -> b
    void initApprove() -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.ExpenseCostTHeaderActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.ExpenseCostTHeaderActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.ExpenseCostTHeaderActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.ExpenseCostTHeaderActivity) -> d
com.dahuatech.app.ui.task.ExpenseCostTHeaderActivity$1 -> vn:
    com.dahuatech.app.ui.task.ExpenseCostTHeaderActivity this$0 -> a
com.dahuatech.app.ui.task.ExpenseCostTHeaderActivity$2 -> vo:
    com.dahuatech.app.ui.task.ExpenseCostTHeaderActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.ExpenseMarketBidTHeaderActivity -> com.dahuatech.app.ui.task.ExpenseMarketBidTHeaderActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    android.widget.TextView fBillNo -> f
    android.widget.TextView fConSmName -> g
    android.widget.TextView fCommitDate -> h
    android.widget.TextView fAmountAll -> i
    android.widget.TextView fPubPayNo -> j
    android.widget.TextView fRecAccName -> k
    android.widget.TextView fProjectName -> l
    android.widget.TextView fConSmTypeName -> m
    android.widget.TextView fCaseType -> n
    android.widget.TextView fSetOffType -> o
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> p
    android.widget.Button btnApprove -> q
    android.widget.TableLayout handleLayout -> r
    android.widget.LinearLayout fSubLinearLayout -> s
    java.lang.String serviceUrl -> t
    com.dahuatech.app.AppContext appContext -> u
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> v
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void initApprove() -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.ExpenseMarketBidTHeaderActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.ExpenseMarketBidTHeaderActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.ExpenseMarketBidTHeaderActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.ExpenseMarketBidTHeaderActivity) -> d
com.dahuatech.app.ui.task.ExpenseMarketBidTHeaderActivity$1 -> vp:
    com.dahuatech.app.ui.task.ExpenseMarketBidTHeaderActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.ExpenseMarketPayTHeaderActivity -> com.dahuatech.app.ui.task.ExpenseMarketPayTHeaderActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    android.widget.TextView fBillNo -> f
    android.widget.TextView fConSmName -> g
    android.widget.TextView fCommitDate -> h
    android.widget.TextView fAmountAll -> i
    android.widget.TextView fPubPayNo -> j
    android.widget.TextView fRecAccName -> k
    android.widget.TextView fProjectName -> l
    android.widget.TextView fConSmTypeName -> m
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> n
    android.widget.Button btnApprove -> o
    android.widget.TableLayout handleLayout -> p
    android.widget.LinearLayout fSubLinearLayout -> q
    java.lang.String serviceUrl -> r
    com.dahuatech.app.AppContext appContext -> s
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> t
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void initApprove() -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.ExpenseMarketPayTHeaderActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.ExpenseMarketPayTHeaderActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.ExpenseMarketPayTHeaderActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.ExpenseMarketPayTHeaderActivity) -> d
com.dahuatech.app.ui.task.ExpenseMarketPayTHeaderActivity$1 -> vq:
    com.dahuatech.app.ui.task.ExpenseMarketPayTHeaderActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.ExpensePrivateTBodyActivity -> com.dahuatech.app.ui.task.ExpensePrivateTBodyActivity:
    java.lang.String fSystemType -> a
    java.lang.String fBillID -> b
    java.lang.String fCostCode -> c
    android.widget.ListView mListView -> d
    android.app.ProgressDialog dialog -> e
    java.util.List eArrayList -> f
    com.dahuatech.app.adapter.ExpensePrivateTBodyAdapter epAdapter -> g
    java.lang.String serviceUrl -> h
    void onCreate(android.os.Bundle) -> onCreate
    void renderListView(java.util.List) -> a
    java.util.List getListByPost(java.lang.String) -> a
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    android.app.ProgressDialog access$0(com.dahuatech.app.ui.task.ExpensePrivateTBodyActivity) -> a
    void access$1(com.dahuatech.app.ui.task.ExpensePrivateTBodyActivity,java.util.List) -> a
    java.util.List access$2(com.dahuatech.app.ui.task.ExpensePrivateTBodyActivity,java.lang.String) -> a
com.dahuatech.app.ui.task.ExpensePrivateTBodyActivity$ExpensePrivateTBodyListAsync -> vr:
    com.dahuatech.app.ui.task.ExpensePrivateTBodyActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.util.List) -> a
    java.util.List doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.task.ExpensePrivateTHeaderActivity -> com.dahuatech.app.ui.task.ExpensePrivateTHeaderActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    android.widget.TextView fBillNo -> f
    android.widget.TextView fConSmName -> g
    android.widget.TextView fCommitDate -> h
    android.widget.TextView fConSmAmountAll -> i
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> j
    android.widget.LinearLayout fCostTypeLinearLayout -> k
    android.widget.Button appButton -> l
    android.widget.TableLayout handleLayout -> m
    float dip -> n
    int paddingLeft -> o
    int paddingRight -> p
    int paddingTop -> q
    int paddingBottom -> r
    int width -> s
    android.util.DisplayMetrics displaymetrics -> t
    java.lang.String serviceUrl -> u
    com.dahuatech.app.AppContext appContext -> v
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> w
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showCostType(java.lang.String) -> a
    void attachRelativeLayout(com.dahuatech.app.bean.mytask.ExpenseCostTypeInfo) -> a
    int getPixelsWidth() -> a
    void initApprove() -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    int getNewId() -> c
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.ExpensePrivateTHeaderActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.ExpensePrivateTHeaderActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.ExpensePrivateTHeaderActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.ExpensePrivateTHeaderActivity) -> d
com.dahuatech.app.ui.task.ExpensePrivateTHeaderActivity$1 -> vs:
    com.dahuatech.app.ui.task.ExpensePrivateTHeaderActivity this$0 -> a
com.dahuatech.app.ui.task.ExpensePrivateTHeaderActivity$2 -> vt:
    com.dahuatech.app.ui.task.ExpensePrivateTHeaderActivity this$0 -> a
    com.dahuatech.app.bean.mytask.ExpenseCostTypeInfo val$costTypeInfo -> b
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.ExpensePrivateTHeaderActivity$3 -> vu:
    com.dahuatech.app.ui.task.ExpensePrivateTHeaderActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.ExpensePublicTHeaderActivity -> com.dahuatech.app.ui.task.ExpensePublicTHeaderActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    android.widget.TextView fBillNo -> f
    android.widget.TextView fConSmName -> g
    android.widget.TextView fCommitDate -> h
    android.widget.TextView fAmountAll -> i
    android.widget.TextView fGeneralType -> j
    android.widget.TextView fRecAccName -> k
    android.widget.TextView fContent -> l
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> m
    android.widget.Button btnApprove -> n
    android.widget.TableLayout handleLayout -> o
    android.widget.LinearLayout fSubLinearLayout -> p
    java.lang.String serviceUrl -> q
    com.dahuatech.app.AppContext appContext -> r
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> s
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void initApprove() -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.ExpensePublicTHeaderActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.ExpensePublicTHeaderActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.ExpensePublicTHeaderActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.ExpensePublicTHeaderActivity) -> d
com.dahuatech.app.ui.task.ExpensePublicTHeaderActivity$1 -> vv:
    com.dahuatech.app.ui.task.ExpensePublicTHeaderActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.ExpenseSpecialTBodyActivity -> com.dahuatech.app.ui.task.ExpenseSpecialTBodyActivity:
    java.lang.String fSystemType -> a
    java.lang.String fBillID -> b
    java.lang.String fCostCode -> c
    android.widget.ListView mListView -> d
    android.app.ProgressDialog dialog -> e
    java.util.List eArrayList -> f
    com.dahuatech.app.adapter.ExpenseSpecialTBodyAdapter epAdapter -> g
    java.lang.String serviceUrl -> h
    void onCreate(android.os.Bundle) -> onCreate
    void renderListView(java.util.List) -> a
    java.util.List getListByPost(java.lang.String) -> a
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    android.app.ProgressDialog access$0(com.dahuatech.app.ui.task.ExpenseSpecialTBodyActivity) -> a
    void access$1(com.dahuatech.app.ui.task.ExpenseSpecialTBodyActivity,java.util.List) -> a
    java.util.List access$2(com.dahuatech.app.ui.task.ExpenseSpecialTBodyActivity,java.lang.String) -> a
com.dahuatech.app.ui.task.ExpenseSpecialTBodyActivity$ExpenseSpecialTBodyListAsync -> vw:
    com.dahuatech.app.ui.task.ExpenseSpecialTBodyActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.util.List) -> a
    java.util.List doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.task.ExpenseSpecialTHeaderActivity -> com.dahuatech.app.ui.task.ExpenseSpecialTHeaderActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    android.widget.TextView fBillNo -> f
    android.widget.TextView fConSmName -> g
    android.widget.TextView fCommitDate -> h
    android.widget.TextView fAmountAll -> i
    android.widget.TextView fGeneralName -> j
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> k
    android.widget.LinearLayout fCostTypeLinearLayout -> l
    android.widget.Button appButton -> m
    android.widget.TableLayout handleLayout -> n
    float dip -> o
    int paddingLeft -> p
    int paddingRight -> q
    int paddingTop -> r
    int paddingBottom -> s
    int width -> t
    android.util.DisplayMetrics displaymetrics -> u
    java.lang.String serviceUrl -> v
    com.dahuatech.app.AppContext appContext -> w
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> x
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showCostType(java.lang.String) -> a
    void attachRelativeLayout(com.dahuatech.app.bean.mytask.ExpenseCostTypeInfo) -> a
    int getPixelsWidth() -> a
    void initApprove() -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    int getNewId() -> c
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.ExpenseSpecialTHeaderActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.ExpenseSpecialTHeaderActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.ExpenseSpecialTHeaderActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.ExpenseSpecialTHeaderActivity) -> d
com.dahuatech.app.ui.task.ExpenseSpecialTHeaderActivity$1 -> vx:
    com.dahuatech.app.ui.task.ExpenseSpecialTHeaderActivity this$0 -> a
com.dahuatech.app.ui.task.ExpenseSpecialTHeaderActivity$2 -> vy:
    com.dahuatech.app.ui.task.ExpenseSpecialTHeaderActivity this$0 -> a
    com.dahuatech.app.bean.mytask.ExpenseCostTypeInfo val$costTypeInfo -> b
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.ExpenseSpecialTHeaderActivity$3 -> vz:
    com.dahuatech.app.ui.task.ExpenseSpecialTHeaderActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.ExpenseSpecialThingBodyActivity -> com.dahuatech.app.ui.task.ExpenseSpecialThingBodyActivity:
    java.lang.String fSystemType -> a
    java.lang.String fBillID -> b
    java.lang.String fCostCode -> c
    android.widget.ListView mListView -> d
    android.app.ProgressDialog dialog -> e
    java.util.List eArrayList -> f
    com.dahuatech.app.adapter.ExpenseSpecialTBodyAdapter epAdapter -> g
    java.lang.String serviceUrl -> h
    void onCreate(android.os.Bundle) -> onCreate
    void renderListView(java.util.List) -> a
    java.util.List getListByPost(java.lang.String) -> a
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    android.app.ProgressDialog access$0(com.dahuatech.app.ui.task.ExpenseSpecialThingBodyActivity) -> a
    void access$1(com.dahuatech.app.ui.task.ExpenseSpecialThingBodyActivity,java.util.List) -> a
    java.util.List access$2(com.dahuatech.app.ui.task.ExpenseSpecialThingBodyActivity,java.lang.String) -> a
com.dahuatech.app.ui.task.ExpenseSpecialThingBodyActivity$ExpenseSpecialTBodyListAsync -> wa:
    com.dahuatech.app.ui.task.ExpenseSpecialThingBodyActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.util.List) -> a
    java.util.List doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.task.ExpenseSpecialThingHeaderActivity -> com.dahuatech.app.ui.task.ExpenseSpecialThingHeaderActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    android.widget.TextView fBillNo -> f
    android.widget.TextView fConSmName -> g
    android.widget.TextView fCommitDate -> h
    android.widget.TextView fAmountAll -> i
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> j
    android.widget.LinearLayout fCostTypeLinearLayout -> k
    android.widget.Button appButton -> l
    android.widget.TableLayout handleLayout -> m
    float dip -> n
    int paddingLeft -> o
    int paddingRight -> p
    int paddingTop -> q
    int paddingBottom -> r
    int width -> s
    android.util.DisplayMetrics displaymetrics -> t
    java.lang.String serviceUrl -> u
    com.dahuatech.app.AppContext appContext -> v
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> w
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void initApprove() -> a
    void showCostType(java.lang.String) -> a
    int getPixelsWidth() -> b
    void attachRelativeLayout(com.dahuatech.app.bean.mytask.ExpenseCostTypeInfo) -> a
    int getNewId() -> c
    java.lang.String access$0(com.dahuatech.app.ui.task.ExpenseSpecialThingHeaderActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.ExpenseSpecialThingHeaderActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.ExpenseSpecialThingHeaderActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.ExpenseSpecialThingHeaderActivity) -> d
com.dahuatech.app.ui.task.ExpenseSpecialThingHeaderActivity$1 -> wb:
    com.dahuatech.app.ui.task.ExpenseSpecialThingHeaderActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.ExpenseSpecialThingHeaderActivity$2 -> wc:
    com.dahuatech.app.ui.task.ExpenseSpecialThingHeaderActivity this$0 -> a
com.dahuatech.app.ui.task.ExpenseSpecialThingHeaderActivity$3 -> wd:
    com.dahuatech.app.ui.task.ExpenseSpecialThingHeaderActivity this$0 -> a
    com.dahuatech.app.bean.mytask.ExpenseCostTypeInfo val$costTypeInfo -> b
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.FeDestroyActivity -> com.dahuatech.app.ui.task.FeDestroyActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    java.lang.String fItemNumber -> f
    android.widget.TextView fBillNo -> g
    android.widget.TextView fApplyName -> h
    android.widget.TextView fApplyDate -> i
    android.widget.TextView fTel -> j
    android.widget.TextView fApplyDept -> k
    android.widget.TextView fReason -> l
    android.widget.TextView fDestroy -> m
    android.widget.TextView fWitnesses -> n
    android.widget.Button appButton -> o
    android.widget.Button lowerButton -> p
    android.widget.TableLayout handleLayout -> q
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> r
    android.widget.LinearLayout fSubLinearLayout -> s
    java.lang.String serviceUrl -> t
    com.dahuatech.app.AppContext appContext -> u
    android.content.SharedPreferences sp -> v
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> w
    com.dahuatech.app.ui.task.LowerNodeAppCheck lowerNodeAppCheck -> x
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showSubEntrys(java.lang.String) -> a
    void attachSubEntry(com.dahuatech.app.bean.mytask.FeDestroyTBodyInfo,int) -> a
    void initApprove() -> a
    void setCheckResult(com.dahuatech.app.bean.ResultMessage) -> setCheckResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.FeDestroyActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.FeDestroyActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.FeDestroyActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.FeDestroyActivity) -> d
    java.lang.String access$4(com.dahuatech.app.ui.task.FeDestroyActivity) -> e
com.dahuatech.app.ui.task.FeDestroyActivity$1 -> we:
    com.dahuatech.app.ui.task.FeDestroyActivity this$0 -> a
com.dahuatech.app.ui.task.FeDestroyActivity$2 -> wf:
    com.dahuatech.app.ui.task.FeDestroyActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.FeDestroyActivity$3 -> wg:
    com.dahuatech.app.ui.task.FeDestroyActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.FeDestroyActivity$4 -> wh:
    com.dahuatech.app.ui.task.FeDestroyActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.FeEngravingActivity -> com.dahuatech.app.ui.task.FeEngravingActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    java.lang.String fItemNumber -> f
    android.widget.TextView fBillNo -> g
    android.widget.TextView fApplyName -> h
    android.widget.TextView fApplyDate -> i
    android.widget.TextView fTel -> j
    android.widget.TextView fApplyDept -> k
    android.widget.TextView fAmount -> l
    android.widget.Button appButton -> m
    android.widget.Button lowerButton -> n
    android.widget.TableLayout handleLayout -> o
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> p
    android.widget.LinearLayout fSubLinearLayout -> q
    java.lang.String serviceUrl -> r
    com.dahuatech.app.AppContext appContext -> s
    android.content.SharedPreferences sp -> t
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> u
    com.dahuatech.app.ui.task.LowerNodeAppCheck lowerNodeAppCheck -> v
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showSubEntrys(java.lang.String) -> a
    void attachSubEntry(com.dahuatech.app.bean.mytask.FeEngravingTBodyInfo,int) -> a
    void initApprove() -> a
    void setCheckResult(com.dahuatech.app.bean.ResultMessage) -> setCheckResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.FeEngravingActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.FeEngravingActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.FeEngravingActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.FeEngravingActivity) -> d
    java.lang.String access$4(com.dahuatech.app.ui.task.FeEngravingActivity) -> e
com.dahuatech.app.ui.task.FeEngravingActivity$1 -> wi:
    com.dahuatech.app.ui.task.FeEngravingActivity this$0 -> a
com.dahuatech.app.ui.task.FeEngravingActivity$2 -> wj:
    com.dahuatech.app.ui.task.FeEngravingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.FeEngravingActivity$3 -> wk:
    com.dahuatech.app.ui.task.FeEngravingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.FeEngravingActivity$4 -> wl:
    com.dahuatech.app.ui.task.FeEngravingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.FeTakeOutActivity -> com.dahuatech.app.ui.task.FeTakeOutActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    java.lang.String fItemNumber -> f
    android.widget.TextView fBillNo -> g
    android.widget.TextView fApplyName -> h
    android.widget.TextView fApplyDate -> i
    android.widget.TextView fTel -> j
    android.widget.TextView fApplyDept -> k
    android.widget.TextView feName -> l
    android.widget.TextView feCode -> m
    android.widget.TextView fStartTime -> n
    android.widget.TextView fEndTime -> o
    android.widget.TextView feCarry -> p
    android.widget.TextView feCarryTel -> q
    android.widget.TextView fDestination -> r
    android.widget.TextView fProjectName -> s
    android.widget.TextView fSealData -> t
    android.widget.TextView feUseCarry -> u
    android.widget.TextView feUseDestination -> v
    android.widget.Button appButton -> w
    android.widget.Button lowerButton -> x
    android.widget.TableLayout handleLayout -> y
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> z
    android.widget.LinearLayout fSubLinearLayout -> A
    java.lang.String serviceUrl -> B
    com.dahuatech.app.AppContext appContext -> C
    android.content.SharedPreferences sp -> D
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> E
    com.dahuatech.app.ui.task.LowerNodeAppCheck lowerNodeAppCheck -> F
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void initApprove() -> a
    void setCheckResult(com.dahuatech.app.bean.ResultMessage) -> setCheckResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.FeTakeOutActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.FeTakeOutActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.FeTakeOutActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.FeTakeOutActivity) -> d
    java.lang.String access$4(com.dahuatech.app.ui.task.FeTakeOutActivity) -> e
com.dahuatech.app.ui.task.FeTakeOutActivity$1 -> wm:
    com.dahuatech.app.ui.task.FeTakeOutActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.FeTakeOutActivity$2 -> wn:
    com.dahuatech.app.ui.task.FeTakeOutActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.FeTakeOutActivity$3 -> wo:
    com.dahuatech.app.ui.task.FeTakeOutActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.FeTransferActivity -> com.dahuatech.app.ui.task.FeTransferActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    java.lang.String fItemNumber -> f
    android.widget.TextView fBillNo -> g
    android.widget.TextView fApplyName -> h
    android.widget.TextView fApplyDate -> i
    android.widget.TextView fTel -> j
    android.widget.TextView fApplyDept -> k
    android.widget.TextView fnKeeper -> l
    android.widget.TextView fnKeeperTel -> m
    android.widget.TextView fnKeeperDept -> n
    android.widget.TextView fnKeeperArea -> o
    android.widget.TextView fAmount -> p
    android.widget.Button appButton -> q
    android.widget.Button lowerButton -> r
    android.widget.TableLayout handleLayout -> s
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> t
    android.widget.LinearLayout fSubLinearLayout -> u
    java.lang.String serviceUrl -> v
    com.dahuatech.app.AppContext appContext -> w
    android.content.SharedPreferences sp -> x
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> y
    com.dahuatech.app.ui.task.LowerNodeAppCheck lowerNodeAppCheck -> z
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showSubEntrys(java.lang.String) -> a
    void attachSubEntry(com.dahuatech.app.bean.mytask.FeTransferTBodyInfo,int) -> a
    void initApprove() -> a
    void setCheckResult(com.dahuatech.app.bean.ResultMessage) -> setCheckResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.FeTransferActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.FeTransferActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.FeTransferActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.FeTransferActivity) -> d
    java.lang.String access$4(com.dahuatech.app.ui.task.FeTransferActivity) -> e
com.dahuatech.app.ui.task.FeTransferActivity$1 -> wp:
    com.dahuatech.app.ui.task.FeTransferActivity this$0 -> a
com.dahuatech.app.ui.task.FeTransferActivity$2 -> wq:
    com.dahuatech.app.ui.task.FeTransferActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.FeTransferActivity$3 -> wr:
    com.dahuatech.app.ui.task.FeTransferActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.FeTransferActivity$4 -> ws:
    com.dahuatech.app.ui.task.FeTransferActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.FeUpdateActivity -> com.dahuatech.app.ui.task.FeUpdateActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    java.lang.String fItemNumber -> f
    android.widget.TextView fBillNo -> g
    android.widget.TextView fApplyName -> h
    android.widget.TextView fApplyDate -> i
    android.widget.TextView fTel -> j
    android.widget.TextView fApplyDept -> k
    android.widget.TextView fDestroy -> l
    android.widget.TextView fDestroyWitness -> m
    android.widget.TextView fAmount -> n
    android.widget.Button appButton -> o
    android.widget.Button lowerButton -> p
    android.widget.TableLayout handleLayout -> q
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> r
    android.widget.LinearLayout fSubLinearLayout -> s
    java.lang.String serviceUrl -> t
    com.dahuatech.app.AppContext appContext -> u
    android.content.SharedPreferences sp -> v
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> w
    com.dahuatech.app.ui.task.LowerNodeAppCheck lowerNodeAppCheck -> x
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showSubEntrys(java.lang.String) -> a
    void attachSubEntry(com.dahuatech.app.bean.mytask.FeUpdateTBodyInfo,int) -> a
    void initApprove() -> a
    void setCheckResult(com.dahuatech.app.bean.ResultMessage) -> setCheckResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.FeUpdateActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.FeUpdateActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.FeUpdateActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.FeUpdateActivity) -> d
    java.lang.String access$4(com.dahuatech.app.ui.task.FeUpdateActivity) -> e
com.dahuatech.app.ui.task.FeUpdateActivity$1 -> wt:
    com.dahuatech.app.ui.task.FeUpdateActivity this$0 -> a
com.dahuatech.app.ui.task.FeUpdateActivity$2 -> wu:
    com.dahuatech.app.ui.task.FeUpdateActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.FeUpdateActivity$3 -> wv:
    com.dahuatech.app.ui.task.FeUpdateActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.FeUpdateActivity$4 -> ww:
    com.dahuatech.app.ui.task.FeUpdateActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.FixedAssetsSpecialActivity -> com.dahuatech.app.ui.task.FixedAssetsSpecialActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    java.lang.String fItemNumber -> f
    android.widget.TextView fBillNo -> g
    android.widget.TextView fApplyName -> h
    android.widget.TextView fApplyDate -> i
    android.widget.TextView fApplyDept -> j
    android.widget.TextView fRequireType -> k
    android.widget.TextView fReason -> l
    android.widget.TextView fApplyCause -> m
    android.widget.Button appButton -> n
    android.widget.Button lowerButton -> o
    android.widget.TableLayout handleLayout -> p
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> q
    android.widget.LinearLayout fSubLinearLayout -> r
    java.lang.String serviceUrl -> s
    com.dahuatech.app.AppContext appContext -> t
    android.content.SharedPreferences sp -> u
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> v
    com.dahuatech.app.ui.task.LowerNodeAppCheck lowerNodeAppCheck -> w
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showSubEntrys(java.lang.String) -> a
    void attachSubEntry(com.dahuatech.app.bean.mytask.FixedAssetsSpecialTBodyInfo,int) -> a
    void initApprove() -> a
    void setCheckResult(com.dahuatech.app.bean.ResultMessage) -> setCheckResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.FixedAssetsSpecialActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.FixedAssetsSpecialActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.FixedAssetsSpecialActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.FixedAssetsSpecialActivity) -> d
    java.lang.String access$4(com.dahuatech.app.ui.task.FixedAssetsSpecialActivity) -> e
com.dahuatech.app.ui.task.FixedAssetsSpecialActivity$1 -> wx:
    com.dahuatech.app.ui.task.FixedAssetsSpecialActivity this$0 -> a
com.dahuatech.app.ui.task.FixedAssetsSpecialActivity$2 -> wy:
    com.dahuatech.app.ui.task.FixedAssetsSpecialActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.FixedAssetsSpecialActivity$3 -> wz:
    com.dahuatech.app.ui.task.FixedAssetsSpecialActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.FixedAssetsSpecialActivity$4 -> xa:
    com.dahuatech.app.ui.task.FixedAssetsSpecialActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.LowConsumableActivity -> com.dahuatech.app.ui.task.LowConsumableActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    java.lang.String fItemNumber -> f
    android.widget.TextView fBillNo -> g
    android.widget.TextView fApplyName -> h
    android.widget.TextView fApplyDate -> i
    android.widget.TextView fApplyDept -> j
    android.widget.TextView fBillType -> k
    android.widget.TextView fApplyCause -> l
    android.widget.Button appButton -> m
    android.widget.Button lowerButton -> n
    android.widget.TableLayout handleLayout -> o
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> p
    android.widget.LinearLayout fSubLinearLayout -> q
    java.lang.String serviceUrl -> r
    com.dahuatech.app.AppContext appContext -> s
    android.content.SharedPreferences sp -> t
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> u
    com.dahuatech.app.ui.task.LowerNodeAppCheck lowerNodeAppCheck -> v
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showSubEntrys(java.lang.String) -> a
    void attachSubEntry(com.dahuatech.app.bean.mytask.LowConsumableTBodyInfo,int) -> a
    void initApprove() -> a
    void setCheckResult(com.dahuatech.app.bean.ResultMessage) -> setCheckResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.LowConsumableActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.LowConsumableActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.LowConsumableActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.LowConsumableActivity) -> d
    java.lang.String access$4(com.dahuatech.app.ui.task.LowConsumableActivity) -> e
com.dahuatech.app.ui.task.LowConsumableActivity$1 -> xb:
    com.dahuatech.app.ui.task.LowConsumableActivity this$0 -> a
com.dahuatech.app.ui.task.LowConsumableActivity$2 -> xc:
    com.dahuatech.app.ui.task.LowConsumableActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.LowConsumableActivity$3 -> xd:
    com.dahuatech.app.ui.task.LowConsumableActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.LowConsumableActivity$4 -> xe:
    com.dahuatech.app.ui.task.LowConsumableActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.LowerNodeAppCheck -> com.dahuatech.app.ui.task.LowerNodeAppCheck:
    android.content.Context context -> a
    java.lang.String serviceUrl -> b
    java.util.HashMap checkHashMap -> c
    com.dahuatech.app.inter.ICheckNextNode iNodeAppCheck -> d
    com.dahuatech.app.ui.task.LowerNodeAppCheck lowerNodeAppCheck -> e
    com.dahuatech.app.inter.ICheckNextNode getiNodeAppCheck() -> getiNodeAppCheck
    void setiNodeAppCheck(com.dahuatech.app.inter.ICheckNextNode) -> setiNodeAppCheck
    com.dahuatech.app.ui.task.LowerNodeAppCheck getLowerNodeAppCheck(android.content.Context,com.dahuatech.app.inter.ICheckNextNode) -> getLowerNodeAppCheck
    void checkStatusAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> checkStatusAsync
    com.dahuatech.app.bean.ResultMessage workFlowHandle(java.lang.String,java.lang.String,java.lang.String) -> a
    void showNextNode(com.dahuatech.app.bean.ResultMessage,android.widget.Button,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> showNextNode
    com.dahuatech.app.inter.ICheckNextNode access$1(com.dahuatech.app.ui.task.LowerNodeAppCheck) -> a
    com.dahuatech.app.bean.ResultMessage access$2(com.dahuatech.app.ui.task.LowerNodeAppCheck,java.lang.String,java.lang.String,java.lang.String) -> a
com.dahuatech.app.ui.task.LowerNodeAppCheck$1 -> xf:
    com.dahuatech.app.ui.task.LowerNodeAppCheck this$0 -> a
    android.content.Context val$context -> b
    java.lang.String val$fSystemId -> c
    java.lang.String val$fClassTypeId -> d
    java.lang.String val$fBillId -> e
    java.lang.String val$fItemNumber -> f
    java.lang.String val$fBillName -> g
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.LowerNodeAppCheck$WorkFlowHandleAsync -> com.dahuatech.app.ui.task.LowerNodeAppCheck$WorkFlowHandleAsync:
    com.dahuatech.app.ui.task.LowerNodeAppCheck this$0 -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.dahuatech.app.bean.ResultMessage) -> onPostExecute
    com.dahuatech.app.bean.ResultMessage doInBackground(java.lang.String[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.task.LowerNodeAppCheck$singletonHolder -> xg:
    com.dahuatech.app.ui.task.LowerNodeAppCheck instance -> a
    com.dahuatech.app.ui.task.LowerNodeAppCheck access$0() -> a
com.dahuatech.app.ui.task.LowerNodeApproveActivity -> com.dahuatech.app.ui.task.LowerNodeApproveActivity:
    android.widget.LinearLayout checkBoxLayout -> a
    android.widget.LinearLayout structLayout -> b
    android.widget.CheckBox[] checkBoxArray -> c
    android.widget.TextView fResultTView -> d
    android.widget.Button fConfirm -> e
    android.widget.Button fCancle -> f
    android.app.ProgressDialog dialog -> g
    android.app.ProgressDialog appDialog -> h
    java.lang.String fSystemId -> i
    java.lang.String fBillId -> j
    java.lang.String fClassTypeId -> k
    java.lang.String fBillName -> l
    com.dahuatech.app.business.LowerNodeAppBusiness lBusiness -> m
    java.util.HashMap configHashMap -> n
    com.dahuatech.app.AppContext appContext -> o
    java.lang.String fLowerNodeAppParam -> p
    java.lang.String nodeStatusUrl -> q
    java.lang.String passWorkFlowUrl -> r
    java.lang.String fItemNumber -> s
    com.google.gson.Gson gson -> t
    java.util.Map nodeValueMap -> u
    java.util.List lBackList -> v
    com.dahuatech.app.bean.mytask.LowerNodeAppConfigInfo lConfig -> w
    java.util.List lowerNodeAppUserList -> x
    java.util.List lowerNodeAppRoleList -> y
    java.lang.String spinnerTypeIndex -> z
    java.util.Map spinnerMap -> A
    java.util.List personList -> B
    android.widget.TextView fSearchNodeName -> C
    android.widget.TextView fSearchItem -> D
    android.widget.ImageView fSearchImageView -> E
    java.util.Map getNodeValueMap() -> getNodeValueMap
    java.util.Map getSpinnerMap() -> getSpinnerMap
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void setListener() -> b
    java.util.List getLowerNodeAppByPost(java.lang.String) -> a
    void renderLowerNodeAppView(java.util.List) -> a
    void parseLowerNodeAppInfo(com.dahuatech.app.bean.mytask.LowerNodeAppInfo,int,int) -> a
    void setSubClassView(com.dahuatech.app.bean.mytask.LowerNodeAppInfo) -> a
    void getLowerNodeAppItem(java.lang.String) -> b
    java.util.List getUserStringList(java.util.List) -> b
    java.util.List parseLowerNodeAppUser(java.lang.String) -> c
    java.util.List parseLowerNodeAppRole(java.lang.String) -> d
    java.util.List getLowerNodeAppRole(java.util.List) -> c
    void initLowerNodeAppSearch(java.lang.String) -> e
    void initLoweNodeAppSpinnerUser(java.util.List,java.lang.String) -> a
    void initLoweNodeAppSpinnerRole(int,int,java.lang.String,java.util.List,java.lang.String) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.util.List getPersonList(java.lang.String) -> f
    void getAttendPerson(java.util.List) -> d
    void setSearchSelectResult(java.lang.String) -> g
    void setLowerNodeAppBack() -> c
    java.lang.String parseSelectResult(java.lang.String) -> h
    boolean verify() -> d
    com.dahuatech.app.bean.ResultMessage passWorkflowByPost(java.lang.String) -> i
    void renderPassWorkView(com.dahuatech.app.bean.ResultMessage) -> a
    void sendLogs() -> e
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    android.app.ProgressDialog access$0(com.dahuatech.app.ui.task.LowerNodeApproveActivity) -> a
    java.util.List access$1(com.dahuatech.app.ui.task.LowerNodeApproveActivity,java.lang.String) -> a
    void access$2(com.dahuatech.app.ui.task.LowerNodeApproveActivity,java.util.List) -> a
    android.widget.LinearLayout access$3(com.dahuatech.app.ui.task.LowerNodeApproveActivity) -> b
    android.widget.CheckBox[] access$4(com.dahuatech.app.ui.task.LowerNodeApproveActivity) -> c
    void access$5(com.dahuatech.app.ui.task.LowerNodeApproveActivity,com.dahuatech.app.bean.mytask.LowerNodeAppInfo) -> a
    android.app.ProgressDialog access$6(com.dahuatech.app.ui.task.LowerNodeApproveActivity) -> d
    com.dahuatech.app.bean.ResultMessage access$7(com.dahuatech.app.ui.task.LowerNodeApproveActivity,java.lang.String) -> b
    void access$8(com.dahuatech.app.ui.task.LowerNodeApproveActivity,com.dahuatech.app.bean.ResultMessage) -> a
    android.widget.TextView access$9(com.dahuatech.app.ui.task.LowerNodeApproveActivity) -> e
    void access$10(com.dahuatech.app.ui.task.LowerNodeApproveActivity) -> f
    boolean access$11(com.dahuatech.app.ui.task.LowerNodeApproveActivity) -> g
    java.lang.String access$12(com.dahuatech.app.ui.task.LowerNodeApproveActivity) -> h
    java.util.List access$13(com.dahuatech.app.ui.task.LowerNodeApproveActivity) -> i
com.dahuatech.app.ui.task.LowerNodeApproveActivity$1 -> xh:
    com.dahuatech.app.ui.task.LowerNodeApproveActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.LowerNodeApproveActivity$2 -> xi:
    com.dahuatech.app.ui.task.LowerNodeApproveActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.LowerNodeApproveActivity$3 -> xj:
    com.dahuatech.app.ui.task.LowerNodeApproveActivity this$0 -> a
com.dahuatech.app.ui.task.LowerNodeApproveActivity$4 -> xk:
    com.dahuatech.app.ui.task.LowerNodeApproveActivity this$0 -> a
com.dahuatech.app.ui.task.LowerNodeApproveActivity$5 -> xl:
    com.dahuatech.app.ui.task.LowerNodeApproveActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.LowerNodeApproveActivity$6 -> xm:
    com.dahuatech.app.ui.task.LowerNodeApproveActivity this$0 -> a
com.dahuatech.app.ui.task.LowerNodeApproveActivity$7 -> xn:
    com.dahuatech.app.ui.task.LowerNodeApproveActivity this$0 -> a
    void run() -> run
com.dahuatech.app.ui.task.LowerNodeApproveActivity$CheckedListener -> xo:
    android.widget.CheckBox chBox -> b
    com.dahuatech.app.bean.mytask.LowerNodeAppInfo lNodeAppInfo -> c
    int lnLength -> d
    com.dahuatech.app.ui.task.LowerNodeApproveActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.dahuatech.app.ui.task.LowerNodeApproveActivity$getLowerNodeAppAsync -> xp:
    com.dahuatech.app.ui.task.LowerNodeApproveActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.task.LowerNodeApproveActivity$passWorkflowAsync -> xq:
    com.dahuatech.app.ui.task.LowerNodeApproveActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    com.dahuatech.app.bean.ResultMessage doInBackground(java.lang.String[]) -> a
    void onPostExecute(com.dahuatech.app.bean.ResultMessage) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.task.MemRequreActivity -> com.dahuatech.app.ui.task.MemRequreActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    java.lang.String fItemNumber -> f
    android.widget.TextView fBillNo -> g
    android.widget.TextView fApplyerName -> h
    android.widget.TextView fApplyerDeptName -> i
    android.widget.TextView fApplyDate -> j
    android.widget.TextView fVersion -> k
    android.widget.TextView fValidDate -> l
    android.widget.TextView fUpgradeReason -> m
    android.widget.TextView fOtherReason -> n
    android.widget.TextView fUpgradeNote -> o
    android.widget.TextView fSubject -> p
    android.widget.TextView fMemReasonNote -> q
    android.widget.TextView fMemProduct -> r
    android.widget.TextView fTechnology -> s
    android.widget.TextView fMemScope -> t
    android.widget.TextView fNote -> u
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> v
    android.widget.Button btnApprove -> w
    android.widget.Button lowerButton -> x
    android.widget.TableLayout handleLayout -> y
    android.widget.LinearLayout fSubLinearLayout -> z
    java.lang.String serviceUrl -> A
    com.dahuatech.app.AppContext appContext -> B
    android.content.SharedPreferences sp -> C
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> D
    com.dahuatech.app.ui.task.LowerNodeAppCheck lowerNodeAppCheck -> E
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void initApprove() -> a
    void setCheckResult(com.dahuatech.app.bean.ResultMessage) -> setCheckResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.MemRequreActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.MemRequreActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.MemRequreActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.MemRequreActivity) -> d
    java.lang.String access$4(com.dahuatech.app.ui.task.MemRequreActivity) -> e
com.dahuatech.app.ui.task.MemRequreActivity$1 -> xr:
    com.dahuatech.app.ui.task.MemRequreActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.MemRequreActivity$2 -> xs:
    com.dahuatech.app.ui.task.MemRequreActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.MemRequreActivity$3 -> xt:
    com.dahuatech.app.ui.task.MemRequreActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.NetworkPermissionActivity -> com.dahuatech.app.ui.task.NetworkPermissionActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    java.lang.String fItemNumber -> f
    android.widget.TextView fBillNo -> g
    android.widget.TextView fApplyName -> h
    android.widget.TextView fDate -> i
    android.widget.TextView fApplyerDeptName -> j
    android.widget.TextView fApplyerType -> k
    android.widget.TextView fTelphone -> l
    android.widget.TextView fComboBox4 -> m
    android.widget.TextView fNote -> n
    android.widget.Button appButton -> o
    android.widget.Button lowerButton -> p
    android.widget.TableLayout handleLayout -> q
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> r
    android.widget.LinearLayout fSubLinearLayout -> s
    float dip -> t
    int paddingLeft -> u
    int paddingRight -> v
    int paddingTop -> w
    int paddingBottom -> x
    int width -> y
    android.util.DisplayMetrics displaymetrics -> z
    java.lang.String serviceUrl -> A
    com.dahuatech.app.AppContext appContext -> B
    android.content.SharedPreferences sp -> C
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> D
    com.dahuatech.app.ui.task.LowerNodeAppCheck lowerNodeAppCheck -> E
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showSubEntrys(java.lang.String) -> a
    void attachRelativeLayout(com.dahuatech.app.bean.mytask.NetworkPermissionTBodyInfo,int) -> a
    int getNewId() -> a
    int getPixelsWidth() -> b
    void initApprove() -> c
    void setCheckResult(com.dahuatech.app.bean.ResultMessage) -> setCheckResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.NetworkPermissionActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.NetworkPermissionActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.NetworkPermissionActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.NetworkPermissionActivity) -> d
    java.lang.String access$4(com.dahuatech.app.ui.task.NetworkPermissionActivity) -> e
com.dahuatech.app.ui.task.NetworkPermissionActivity$1 -> xu:
    com.dahuatech.app.ui.task.NetworkPermissionActivity this$0 -> a
com.dahuatech.app.ui.task.NetworkPermissionActivity$2 -> xv:
    com.dahuatech.app.ui.task.NetworkPermissionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.NetworkPermissionActivity$3 -> xw:
    com.dahuatech.app.ui.task.NetworkPermissionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.NetworkPermissionActivity$4 -> xx:
    com.dahuatech.app.ui.task.NetworkPermissionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.NewProductLibActivity -> com.dahuatech.app.ui.task.NewProductLibActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    java.lang.String fItemNumber -> f
    android.widget.TextView fBillNo -> g
    android.widget.TextView fApplyName -> h
    android.widget.TextView fApplyDate -> i
    android.widget.TextView fApplyDept -> j
    android.widget.TextView fMaterialType -> k
    android.widget.TextView fProductLine -> l
    android.widget.TextView fDescribe -> m
    android.widget.TextView fReason -> n
    android.widget.Button appButton -> o
    android.widget.Button lowerButton -> p
    android.widget.TableLayout handleLayout -> q
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> r
    android.widget.LinearLayout fSubLinearLayout -> s
    java.lang.String serviceUrl -> t
    com.dahuatech.app.AppContext appContext -> u
    android.content.SharedPreferences sp -> v
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> w
    com.dahuatech.app.ui.task.LowerNodeAppCheck lowerNodeAppCheck -> x
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showSubEntrys(java.lang.String) -> a
    void attachSubEntry(com.dahuatech.app.bean.mytask.NewProductLibTBodyInfo,int) -> a
    void initApprove() -> a
    void setCheckResult(com.dahuatech.app.bean.ResultMessage) -> setCheckResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.NewProductLibActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.NewProductLibActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.NewProductLibActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.NewProductLibActivity) -> d
    java.lang.String access$4(com.dahuatech.app.ui.task.NewProductLibActivity) -> e
com.dahuatech.app.ui.task.NewProductLibActivity$1 -> xy:
    com.dahuatech.app.ui.task.NewProductLibActivity this$0 -> a
com.dahuatech.app.ui.task.NewProductLibActivity$2 -> xz:
    com.dahuatech.app.ui.task.NewProductLibActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.NewProductLibActivity$3 -> ya:
    com.dahuatech.app.ui.task.NewProductLibActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.NewProductLibActivity$4 -> yb:
    com.dahuatech.app.ui.task.NewProductLibActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.NewProductReworkActivity -> com.dahuatech.app.ui.task.NewProductReworkActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    java.lang.String fItemNumber -> f
    android.widget.TextView fBillNo -> g
    android.widget.TextView fApplyName -> h
    android.widget.TextView fApplyDate -> i
    android.widget.TextView fApplyDept -> j
    android.widget.TextView fProductLine -> k
    android.widget.TextView fProductName -> l
    android.widget.TextView fProductModel -> m
    android.widget.TextView fProjectName -> n
    android.widget.TextView fProjectCode -> o
    android.widget.TextView fReason -> p
    android.widget.Button appButton -> q
    android.widget.Button lowerButton -> r
    android.widget.TableLayout handleLayout -> s
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> t
    android.widget.LinearLayout fSubLinearLayout -> u
    java.lang.String serviceUrl -> v
    com.dahuatech.app.AppContext appContext -> w
    android.content.SharedPreferences sp -> x
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> y
    com.dahuatech.app.ui.task.LowerNodeAppCheck lowerNodeAppCheck -> z
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showSubEntrys(java.lang.String) -> a
    void attachSubEntry(com.dahuatech.app.bean.mytask.NewProductReworkTBodyInfo,int) -> a
    void initApprove() -> a
    void setCheckResult(com.dahuatech.app.bean.ResultMessage) -> setCheckResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.NewProductReworkActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.NewProductReworkActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.NewProductReworkActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.NewProductReworkActivity) -> d
    java.lang.String access$4(com.dahuatech.app.ui.task.NewProductReworkActivity) -> e
com.dahuatech.app.ui.task.NewProductReworkActivity$1 -> yc:
    com.dahuatech.app.ui.task.NewProductReworkActivity this$0 -> a
com.dahuatech.app.ui.task.NewProductReworkActivity$2 -> yd:
    com.dahuatech.app.ui.task.NewProductReworkActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.NewProductReworkActivity$3 -> ye:
    com.dahuatech.app.ui.task.NewProductReworkActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.NewProductReworkActivity$4 -> yf:
    com.dahuatech.app.ui.task.NewProductReworkActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.PlusCopyActivity -> com.dahuatech.app.ui.task.PlusCopyActivity:
    android.widget.TextView fPlusTView -> a
    android.widget.TextView fItemNumbersTView -> b
    android.widget.TextView fItemNamesTView -> c
    android.widget.EditText fContentEText -> d
    android.widget.ImageView fInImageView -> e
    android.widget.ImageView fCIView -> f
    android.widget.Button fConfirm -> g
    android.widget.Button fCancle -> h
    android.widget.LinearLayout chkLayout -> i
    android.app.ProgressDialog dialog -> j
    android.app.ProgressDialog appDialog -> k
    java.lang.String fType -> l
    java.lang.String fSystemId -> m
    java.lang.String fBillId -> n
    java.lang.String fClassTypeId -> o
    java.lang.String fPlusCopyParam -> p
    java.util.List rArrayList -> q
    com.dahuatech.app.business.RejectNodeBusiness rBusiness -> r
    com.dahuatech.app.bean.mytask.PlusCopyInfo plusCopyInfo -> s
    java.util.List personList -> t
    java.util.HashMap plusCopyHashMap -> u
    com.dahuatech.app.AppContext appContext -> v
    java.lang.String nodeUrl -> w
    java.lang.String appUrl -> x
    java.lang.String fItemNumber -> y
    java.lang.String fBillName -> z
    java.lang.String showResult -> A
    com.google.gson.Gson gson -> B
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void setListener() -> b
    java.util.List getNodeByPost(java.lang.String) -> a
    void renderNodeView(java.util.List) -> a
    boolean verify() -> c
    void setModel() -> d
    com.dahuatech.app.bean.ResultMessage plusCopyServer(com.dahuatech.app.bean.mytask.PlusCopyInfo) -> a
    void showAppResult(com.dahuatech.app.bean.ResultMessage) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.util.List getPersonList(java.lang.String) -> b
    void getAttendPerson(java.util.List) -> b
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    android.app.ProgressDialog access$0(com.dahuatech.app.ui.task.PlusCopyActivity) -> a
    java.util.List access$1(com.dahuatech.app.ui.task.PlusCopyActivity,java.lang.String) -> a
    void access$2(com.dahuatech.app.ui.task.PlusCopyActivity,java.util.List) -> a
    android.app.ProgressDialog access$3(com.dahuatech.app.ui.task.PlusCopyActivity) -> b
    com.dahuatech.app.bean.ResultMessage access$4(com.dahuatech.app.ui.task.PlusCopyActivity,com.dahuatech.app.bean.mytask.PlusCopyInfo) -> a
    void access$5(com.dahuatech.app.ui.task.PlusCopyActivity,com.dahuatech.app.bean.ResultMessage) -> a
    java.util.List access$6(com.dahuatech.app.ui.task.PlusCopyActivity) -> c
    android.widget.EditText access$7(com.dahuatech.app.ui.task.PlusCopyActivity) -> d
    boolean access$8(com.dahuatech.app.ui.task.PlusCopyActivity) -> e
    void access$9(com.dahuatech.app.ui.task.PlusCopyActivity) -> f
    com.dahuatech.app.bean.mytask.PlusCopyInfo access$10(com.dahuatech.app.ui.task.PlusCopyActivity) -> g
    java.util.List access$11(com.dahuatech.app.ui.task.PlusCopyActivity) -> h
com.dahuatech.app.ui.task.PlusCopyActivity$1 -> yg:
    com.dahuatech.app.ui.task.PlusCopyActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.PlusCopyActivity$2 -> yh:
    com.dahuatech.app.ui.task.PlusCopyActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.PlusCopyActivity$3 -> yi:
    com.dahuatech.app.ui.task.PlusCopyActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.PlusCopyActivity$4 -> yj:
    com.dahuatech.app.ui.task.PlusCopyActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.PlusCopyActivity$5 -> yk:
    com.dahuatech.app.ui.task.PlusCopyActivity this$0 -> a
    android.widget.TextView val$fChkValue -> b
    android.widget.CheckBox val$fChkName -> c
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.dahuatech.app.ui.task.PlusCopyActivity$6 -> yl:
    com.dahuatech.app.ui.task.PlusCopyActivity this$0 -> a
    void run() -> run
com.dahuatech.app.ui.task.PlusCopyActivity$7 -> ym:
    com.dahuatech.app.ui.task.PlusCopyActivity this$0 -> a
com.dahuatech.app.ui.task.PlusCopyActivity$getNodeAsync -> yn:
    com.dahuatech.app.ui.task.PlusCopyActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.task.PlusCopyActivity$plusCopyAppAsync -> yo:
    com.dahuatech.app.ui.task.PlusCopyActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    com.dahuatech.app.bean.ResultMessage doInBackground(com.dahuatech.app.bean.mytask.PlusCopyInfo[]) -> a
    void onPostExecute(com.dahuatech.app.bean.ResultMessage) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.task.PlusCopyPersonActivity -> com.dahuatech.app.ui.task.PlusCopyPersonActivity:
    android.widget.Button btnYetSelect -> a
    android.widget.Button btnNotSelect -> b
    android.widget.Button btnCheckAll -> c
    android.widget.Button btnConfirm -> d
    android.widget.ListView pListView -> e
    android.app.ProgressDialog dialog -> f
    com.dahuatech.app.adapter.PlusCopyPersonAdapter mAdapter -> g
    java.util.List pArrayList -> h
    java.util.List personList -> i
    java.util.List sArrayList -> j
    java.lang.String tempList -> k
    java.util.List mQueryList -> l
    com.dahuatech.app.common.DbManager mDbHelper -> m
    com.dahuatech.app.business.RejectNodeBusiness rBusiness -> n
    java.lang.String[] COLUMNS -> o
    android.database.MatrixCursor matrixCursor -> p
    com.dahuatech.app.adapter.SuggestionsAdapter mSuggestionsAdapter -> q
    com.actionbarsherlock.widget.SearchView mSearchView -> r
    com.dahuatech.app.AppContext appContext -> s
    int fStatus -> t
    java.lang.String fQueryStr -> u
    java.lang.String serviceUrl -> v
    void onCreate(android.os.Bundle) -> onCreate
    void initListData() -> a
    void showPersonList(java.lang.String) -> a
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void setupSearchView(com.actionbarsherlock.view.MenuItem) -> a
    boolean onSuggestionSelect(int) -> onSuggestionSelect
    boolean onSuggestionClick(int) -> onSuggestionClick
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
    void showSuggestions(java.lang.String) -> b
    void setListener() -> b
    void skipSelected() -> c
    void sureSelected() -> d
    java.util.List getSelectedList(java.util.List) -> a
    void setCheckAll(java.util.List) -> b
    void setCancleAll(java.util.List) -> c
    java.util.List getPersonLocalByPost() -> e
    void renderPersonLocalListView(java.util.List) -> d
    void onFItemNameClick(android.view.View) -> onFItemNameClick
    void renderPersonSelectedListView(java.util.List) -> e
    java.util.List getPersonListByPost() -> f
    void renderPersonListView(java.util.List) -> f
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.util.List access$0(com.dahuatech.app.ui.task.PlusCopyPersonActivity) -> a
    void access$1(com.dahuatech.app.ui.task.PlusCopyPersonActivity,java.util.List) -> a
    android.app.ProgressDialog access$2(com.dahuatech.app.ui.task.PlusCopyPersonActivity) -> b
    java.util.List access$3(com.dahuatech.app.ui.task.PlusCopyPersonActivity) -> c
    void access$4(com.dahuatech.app.ui.task.PlusCopyPersonActivity,java.util.List) -> b
    void access$5(com.dahuatech.app.ui.task.PlusCopyPersonActivity) -> d
    java.util.List access$6(com.dahuatech.app.ui.task.PlusCopyPersonActivity) -> e
    void access$7(com.dahuatech.app.ui.task.PlusCopyPersonActivity) -> f
    java.util.List access$8(com.dahuatech.app.ui.task.PlusCopyPersonActivity) -> g
    void access$9(com.dahuatech.app.ui.task.PlusCopyPersonActivity,java.util.List) -> c
    android.widget.Button access$10(com.dahuatech.app.ui.task.PlusCopyPersonActivity) -> h
    int access$11(com.dahuatech.app.ui.task.PlusCopyPersonActivity) -> i
    void access$12(com.dahuatech.app.ui.task.PlusCopyPersonActivity,java.util.List) -> d
    void access$13(com.dahuatech.app.ui.task.PlusCopyPersonActivity,java.util.List) -> e
    java.util.List access$14(com.dahuatech.app.ui.task.PlusCopyPersonActivity,java.util.List) -> f
    void access$15(com.dahuatech.app.ui.task.PlusCopyPersonActivity,java.util.List) -> g
    java.util.List access$16(com.dahuatech.app.ui.task.PlusCopyPersonActivity) -> j
    void access$17(com.dahuatech.app.ui.task.PlusCopyPersonActivity,java.util.List) -> h
    com.dahuatech.app.common.DbManager access$18(com.dahuatech.app.ui.task.PlusCopyPersonActivity) -> k
com.dahuatech.app.ui.task.PlusCopyPersonActivity$1 -> yp:
    com.dahuatech.app.ui.task.PlusCopyPersonActivity this$0 -> a
com.dahuatech.app.ui.task.PlusCopyPersonActivity$2 -> yq:
    com.dahuatech.app.ui.task.PlusCopyPersonActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.PlusCopyPersonActivity$3 -> yr:
    com.dahuatech.app.ui.task.PlusCopyPersonActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.PlusCopyPersonActivity$4 -> ys:
    com.dahuatech.app.ui.task.PlusCopyPersonActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.PlusCopyPersonActivity$5 -> yt:
    com.dahuatech.app.ui.task.PlusCopyPersonActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.dahuatech.app.ui.task.PlusCopyPersonActivity access$0(com.dahuatech.app.ui.task.PlusCopyPersonActivity$5) -> a
com.dahuatech.app.ui.task.PlusCopyPersonActivity$5$1 -> yu:
    com.dahuatech.app.ui.task.PlusCopyPersonActivity$5 this$1 -> a
    void run() -> run
com.dahuatech.app.ui.task.PlusCopyPersonActivity$getPersonLocalAsync -> yv:
    com.dahuatech.app.ui.task.PlusCopyPersonActivity this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.task.PlusCopyPersonActivity$getPersonSearchAsync -> yw:
    com.dahuatech.app.ui.task.PlusCopyPersonActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.task.ProjectReadActivity -> com.dahuatech.app.ui.task.ProjectReadActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    java.lang.String fItemNumber -> f
    android.widget.TextView fBillNo -> g
    android.widget.TextView fApplyName -> h
    android.widget.TextView fApplyDate -> i
    android.widget.TextView fApplyDept -> j
    android.widget.TextView fTel -> k
    android.widget.TextView fPermissionType -> l
    android.widget.TextView fProjectManage -> m
    android.widget.TextView fProgramPublic -> n
    android.widget.Button appButton -> o
    android.widget.Button lowerButton -> p
    android.widget.TableLayout handleLayout -> q
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> r
    android.widget.LinearLayout fSubLinearLayout -> s
    java.lang.String serviceUrl -> t
    com.dahuatech.app.AppContext appContext -> u
    android.content.SharedPreferences sp -> v
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> w
    com.dahuatech.app.ui.task.LowerNodeAppCheck lowerNodeAppCheck -> x
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showSubEntrys(java.lang.String) -> a
    void attachSubEntry(com.dahuatech.app.bean.mytask.ProjectReadTBodyInfo,int) -> a
    void initApprove() -> a
    void setCheckResult(com.dahuatech.app.bean.ResultMessage) -> setCheckResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.ProjectReadActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.ProjectReadActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.ProjectReadActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.ProjectReadActivity) -> d
    java.lang.String access$4(com.dahuatech.app.ui.task.ProjectReadActivity) -> e
com.dahuatech.app.ui.task.ProjectReadActivity$1 -> yx:
    com.dahuatech.app.ui.task.ProjectReadActivity this$0 -> a
com.dahuatech.app.ui.task.ProjectReadActivity$2 -> yy:
    com.dahuatech.app.ui.task.ProjectReadActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.ProjectReadActivity$3 -> yz:
    com.dahuatech.app.ui.task.ProjectReadActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.ProjectReadActivity$4 -> za:
    com.dahuatech.app.ui.task.ProjectReadActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.PurchaseStockActivity -> com.dahuatech.app.ui.task.PurchaseStockActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    java.lang.String fItemNumber -> f
    android.widget.TextView fBillNo -> g
    android.widget.TextView fApplyName -> h
    android.widget.TextView fApplyDate -> i
    android.widget.TextView fDept -> j
    android.widget.TextView fProjectCode -> k
    android.widget.TextView fProjectName -> l
    android.widget.TextView fProcessName -> m
    android.widget.TextView fTechnologyName -> n
    android.widget.Button appButton -> o
    android.widget.Button lowerButton -> p
    android.widget.TableLayout handleLayout -> q
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> r
    android.widget.LinearLayout fSubLinearLayout -> s
    java.lang.String serviceUrl -> t
    com.dahuatech.app.AppContext appContext -> u
    android.content.SharedPreferences sp -> v
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> w
    com.dahuatech.app.ui.task.LowerNodeAppCheck lowerNodeAppCheck -> x
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showSubEntrys(java.lang.String) -> a
    void attachSubEntry(com.dahuatech.app.bean.mytask.PurchaseStockTBodyInfo,int) -> a
    void initApprove() -> a
    void setCheckResult(com.dahuatech.app.bean.ResultMessage) -> setCheckResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.PurchaseStockActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.PurchaseStockActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.PurchaseStockActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.PurchaseStockActivity) -> d
    java.lang.String access$4(com.dahuatech.app.ui.task.PurchaseStockActivity) -> e
com.dahuatech.app.ui.task.PurchaseStockActivity$1 -> zb:
    com.dahuatech.app.ui.task.PurchaseStockActivity this$0 -> a
com.dahuatech.app.ui.task.PurchaseStockActivity$2 -> zc:
    com.dahuatech.app.ui.task.PurchaseStockActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.PurchaseStockActivity$3 -> zd:
    com.dahuatech.app.ui.task.PurchaseStockActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.PurchaseStockActivity$4 -> ze:
    com.dahuatech.app.ui.task.PurchaseStockActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.SvnPermissionActivity -> com.dahuatech.app.ui.task.SvnPermissionActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    java.lang.String fItemNumber -> f
    android.widget.TextView fBillNo -> g
    android.widget.TextView fApplyName -> h
    android.widget.TextView fApplyDate -> i
    android.widget.TextView fApplyDept -> j
    android.widget.TextView fSvnShow -> k
    android.widget.Button appButton -> l
    android.widget.Button lowerButton -> m
    android.widget.TableLayout handleLayout -> n
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> o
    android.widget.LinearLayout fSubLinearLayout -> p
    java.lang.String serviceUrl -> q
    com.dahuatech.app.AppContext appContext -> r
    android.content.SharedPreferences sp -> s
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> t
    com.dahuatech.app.ui.task.LowerNodeAppCheck lowerNodeAppCheck -> u
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showSubEntrys(java.lang.String) -> a
    void attachSubEntry(com.dahuatech.app.bean.mytask.SvnPermissionTBodyInfo,int) -> a
    void initApprove() -> a
    void setCheckResult(com.dahuatech.app.bean.ResultMessage) -> setCheckResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.SvnPermissionActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.SvnPermissionActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.SvnPermissionActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.SvnPermissionActivity) -> d
    java.lang.String access$4(com.dahuatech.app.ui.task.SvnPermissionActivity) -> e
com.dahuatech.app.ui.task.SvnPermissionActivity$1 -> zf:
    com.dahuatech.app.ui.task.SvnPermissionActivity this$0 -> a
com.dahuatech.app.ui.task.SvnPermissionActivity$2 -> zg:
    com.dahuatech.app.ui.task.SvnPermissionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.SvnPermissionActivity$3 -> zh:
    com.dahuatech.app.ui.task.SvnPermissionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.SvnPermissionActivity$4 -> zi:
    com.dahuatech.app.ui.task.SvnPermissionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.TaskListActivity -> com.dahuatech.app.ui.task.TaskListActivity:
    com.dahuatech.app.ui.task.TaskListActivity mInstance -> a
    android.widget.ImageButton searchImageButton -> b
    android.widget.Button btnList -> c
    android.widget.Button btnHistory -> d
    android.widget.EditText searchEditText -> e
    com.dahuatech.app.widget.XListView mListView -> f
    android.app.ProgressDialog dialog -> g
    android.os.Handler mHandler -> h
    java.util.concurrent.ExecutorService executorService -> i
    int pendAppStart -> j
    int passAppStart -> k
    java.util.List tArrayList -> l
    com.dahuatech.app.adapter.TaskListAdapter mAdapter -> m
    java.lang.String serviceUrl -> n
    java.util.HashMap hashMap -> o
    com.dahuatech.app.bean.mytask.TaskInfo task -> p
    java.lang.String fSearchText -> q
    java.lang.String fItemNumber -> r
    java.lang.String fStatus -> s
    int fTotalCount -> t
    com.dahuatech.app.AppContext appContext -> u
    android.content.SharedPreferences sp -> v
    com.dahuatech.app.ui.task.TaskListActivity getInstance() -> getInstance
    void onCreate(android.os.Bundle) -> onCreate
    void renderListView(java.util.List) -> a
    java.util.List getListByPost(java.lang.String,java.lang.String,java.lang.String) -> a
    void taskListParam(com.dahuatech.app.bean.RepositoryInfo,java.util.List,java.lang.String,java.lang.String) -> a
    void onRefresh() -> onRefresh
    void onLoadMore() -> onLoadMore
    void geneItems(int) -> c
    void onLoad() -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void sendLogs() -> d
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    android.app.ProgressDialog access$0(com.dahuatech.app.ui.task.TaskListActivity) -> a
    void access$1(com.dahuatech.app.ui.task.TaskListActivity,java.util.List) -> a
    java.util.List access$2(com.dahuatech.app.ui.task.TaskListActivity,java.lang.String,java.lang.String,java.lang.String) -> a
    android.widget.Button access$3(com.dahuatech.app.ui.task.TaskListActivity) -> b
    android.widget.Button access$4(com.dahuatech.app.ui.task.TaskListActivity) -> c
    java.util.List access$5(com.dahuatech.app.ui.task.TaskListActivity) -> d
    void access$6(com.dahuatech.app.ui.task.TaskListActivity,java.lang.String) -> a
    android.widget.EditText access$7(com.dahuatech.app.ui.task.TaskListActivity) -> e
    void access$8(com.dahuatech.app.ui.task.TaskListActivity,java.lang.String) -> b
    void access$9(int) -> a
    java.lang.String access$10(com.dahuatech.app.ui.task.TaskListActivity) -> f
    int access$11() -> a
    void access$12(int) -> b
    int access$13() -> b
    java.lang.String access$14(com.dahuatech.app.ui.task.TaskListActivity) -> g
    java.lang.String access$15(com.dahuatech.app.ui.task.TaskListActivity) -> h
    void access$16(com.dahuatech.app.ui.task.TaskListActivity,com.dahuatech.app.bean.mytask.TaskInfo) -> a
    com.dahuatech.app.bean.mytask.TaskInfo access$17(com.dahuatech.app.ui.task.TaskListActivity) -> i
    android.os.Handler access$18(com.dahuatech.app.ui.task.TaskListActivity) -> j
    void access$19(com.dahuatech.app.ui.task.TaskListActivity,int) -> a
    void access$20(com.dahuatech.app.ui.task.TaskListActivity,com.dahuatech.app.adapter.TaskListAdapter) -> a
    com.dahuatech.app.widget.XListView access$21(com.dahuatech.app.ui.task.TaskListActivity) -> k
    com.dahuatech.app.adapter.TaskListAdapter access$22(com.dahuatech.app.ui.task.TaskListActivity) -> l
    void access$23(com.dahuatech.app.ui.task.TaskListActivity) -> m
com.dahuatech.app.ui.task.TaskListActivity$1 -> zj:
    com.dahuatech.app.ui.task.TaskListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.TaskListActivity$2 -> zk:
    com.dahuatech.app.ui.task.TaskListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.TaskListActivity$3 -> zl:
    com.dahuatech.app.ui.task.TaskListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.TaskListActivity$4 -> zm:
    com.dahuatech.app.ui.task.TaskListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dahuatech.app.ui.task.TaskListActivity$5 -> zn:
    com.dahuatech.app.ui.task.TaskListActivity this$0 -> a
    void run() -> run
    com.dahuatech.app.ui.task.TaskListActivity access$0(com.dahuatech.app.ui.task.TaskListActivity$5) -> a
com.dahuatech.app.ui.task.TaskListActivity$5$1 -> zo:
    com.dahuatech.app.ui.task.TaskListActivity$5 this$1 -> a
    void run() -> run
com.dahuatech.app.ui.task.TaskListActivity$6 -> zp:
    com.dahuatech.app.ui.task.TaskListActivity this$0 -> a
    void run() -> run
    com.dahuatech.app.ui.task.TaskListActivity access$0(com.dahuatech.app.ui.task.TaskListActivity$6) -> a
com.dahuatech.app.ui.task.TaskListActivity$6$1 -> zq:
    com.dahuatech.app.ui.task.TaskListActivity$6 this$1 -> a
    void run() -> run
com.dahuatech.app.ui.task.TaskListActivity$TaskListAsync -> zr:
    com.dahuatech.app.ui.task.TaskListActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.util.List) -> a
    java.util.List doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.task.TdBorrowActivity -> com.dahuatech.app.ui.task.TdBorrowActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    java.lang.String fItemNumber -> f
    android.widget.TextView fBillNo -> g
    android.widget.TextView fApplyName -> h
    android.widget.TextView fApplyDate -> i
    android.widget.TextView fApplyDept -> j
    android.widget.TextView fSecrecyDate -> k
    android.widget.TextView fDocumentType -> l
    android.widget.Button appButton -> m
    android.widget.Button lowerButton -> n
    android.widget.TableLayout handleLayout -> o
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> p
    android.widget.LinearLayout fSubLinearLayout -> q
    java.lang.String serviceUrl -> r
    com.dahuatech.app.AppContext appContext -> s
    android.content.SharedPreferences sp -> t
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> u
    com.dahuatech.app.ui.task.LowerNodeAppCheck lowerNodeAppCheck -> v
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showSubEntrys(java.lang.String) -> a
    void attachSubEntry(com.dahuatech.app.bean.mytask.TdBorrowTBodyInfo,int) -> a
    void initApprove() -> a
    void setCheckResult(com.dahuatech.app.bean.ResultMessage) -> setCheckResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.TdBorrowActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.TdBorrowActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.TdBorrowActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.TdBorrowActivity) -> d
    java.lang.String access$4(com.dahuatech.app.ui.task.TdBorrowActivity) -> e
com.dahuatech.app.ui.task.TdBorrowActivity$1 -> zs:
    com.dahuatech.app.ui.task.TdBorrowActivity this$0 -> a
com.dahuatech.app.ui.task.TdBorrowActivity$2 -> zt:
    com.dahuatech.app.ui.task.TdBorrowActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.TdBorrowActivity$3 -> zu:
    com.dahuatech.app.ui.task.TdBorrowActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.TdBorrowActivity$4 -> zv:
    com.dahuatech.app.ui.task.TdBorrowActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.TdPermissionActivity -> com.dahuatech.app.ui.task.TdPermissionActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    java.lang.String fItemNumber -> f
    android.widget.TextView fBillNo -> g
    android.widget.TextView fApplyName -> h
    android.widget.TextView fApplyDate -> i
    android.widget.TextView fApplyDept -> j
    android.widget.TextView fTel -> k
    android.widget.TextView fPersonType -> l
    android.widget.TextView fBeforeAmount -> m
    android.widget.TextView fAfterAmount -> n
    android.widget.Button appButton -> o
    android.widget.Button lowerButton -> p
    android.widget.TableLayout handleLayout -> q
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> r
    android.widget.LinearLayout fSubLinearLayout -> s
    java.lang.String serviceUrl -> t
    com.dahuatech.app.AppContext appContext -> u
    android.content.SharedPreferences sp -> v
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> w
    com.dahuatech.app.ui.task.LowerNodeAppCheck lowerNodeAppCheck -> x
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showBeforeTitle() -> a
    void showBefore(java.lang.String) -> a
    void showAfterTitle() -> b
    void showAfter(java.lang.String) -> b
    void attachBeforeSubEntry(com.dahuatech.app.bean.mytask.TdPermissionBeforeTBodyInfo,int) -> a
    void attachAfterSubEntry(com.dahuatech.app.bean.mytask.TdPermissionAfterTBodyInfo,int) -> a
    void initApprove() -> c
    void setCheckResult(com.dahuatech.app.bean.ResultMessage) -> setCheckResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.TdPermissionActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.TdPermissionActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.TdPermissionActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.TdPermissionActivity) -> d
    java.lang.String access$4(com.dahuatech.app.ui.task.TdPermissionActivity) -> e
com.dahuatech.app.ui.task.TdPermissionActivity$1 -> zw:
    com.dahuatech.app.ui.task.TdPermissionActivity this$0 -> a
com.dahuatech.app.ui.task.TdPermissionActivity$2 -> zx:
    com.dahuatech.app.ui.task.TdPermissionActivity this$0 -> a
com.dahuatech.app.ui.task.TdPermissionActivity$3 -> zy:
    com.dahuatech.app.ui.task.TdPermissionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.TdPermissionActivity$4 -> zz:
    com.dahuatech.app.ui.task.TdPermissionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.TdPermissionActivity$5 -> aaa:
    com.dahuatech.app.ui.task.TdPermissionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.TrainComputerActivity -> com.dahuatech.app.ui.task.TrainComputerActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    java.lang.String fItemNumber -> f
    android.widget.TextView fBillNo -> g
    android.widget.TextView fApplyName -> h
    android.widget.TextView fApplyDate -> i
    android.widget.TextView fApplyDept -> j
    android.widget.TextView fTel -> k
    android.widget.Button appButton -> l
    android.widget.Button lowerButton -> m
    android.widget.TableLayout handleLayout -> n
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> o
    android.widget.LinearLayout fSubLinearLayout -> p
    java.lang.String serviceUrl -> q
    com.dahuatech.app.AppContext appContext -> r
    android.content.SharedPreferences sp -> s
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> t
    com.dahuatech.app.ui.task.LowerNodeAppCheck lowerNodeAppCheck -> u
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void showSubEntrys(java.lang.String) -> a
    void attachSubEntry(com.dahuatech.app.bean.mytask.TrainComputerTBodyInfo,int) -> a
    void initApprove() -> a
    void setCheckResult(com.dahuatech.app.bean.ResultMessage) -> setCheckResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.TrainComputerActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.TrainComputerActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.TrainComputerActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.TrainComputerActivity) -> d
    java.lang.String access$4(com.dahuatech.app.ui.task.TrainComputerActivity) -> e
com.dahuatech.app.ui.task.TrainComputerActivity$1 -> aab:
    com.dahuatech.app.ui.task.TrainComputerActivity this$0 -> a
com.dahuatech.app.ui.task.TrainComputerActivity$2 -> aac:
    com.dahuatech.app.ui.task.TrainComputerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.TrainComputerActivity$3 -> aad:
    com.dahuatech.app.ui.task.TrainComputerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.TrainComputerActivity$4 -> aae:
    com.dahuatech.app.ui.task.TrainComputerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.TravelApprovalActivity -> com.dahuatech.app.ui.task.TravelApprovalActivity:
    java.lang.String fMenuID -> a
    java.lang.String fSystemType -> b
    java.lang.String fBillID -> c
    java.lang.String fClassTypeId -> d
    java.lang.String fStatus -> e
    java.lang.String fItemNumber -> f
    android.widget.TextView fBillNo -> g
    android.widget.TextView fApplyName -> h
    android.widget.TextView fApplyDate -> i
    android.widget.TextView fApplyDept -> j
    android.widget.TextView fClientName -> k
    android.widget.TextView fStartTime -> l
    android.widget.TextView fBackTime -> m
    android.widget.TextView fTravelAddress -> n
    android.widget.TextView fTravelDays -> o
    android.widget.TextView fTravelCause -> p
    android.widget.TextView fArrangement -> q
    android.widget.TextView fTravelReport -> r
    android.widget.Button btnApprove -> s
    android.widget.Button lowerButton -> t
    android.widget.TableLayout handleLayout -> u
    com.dahuatech.app.bean.mytask.TaskParamInfo taskParam -> v
    android.widget.LinearLayout fSubLinearLayout -> w
    java.lang.String serviceUrl -> x
    com.dahuatech.app.AppContext appContext -> y
    android.content.SharedPreferences sp -> z
    com.dahuatech.app.ui.task.AsyncTaskContext aTaskContext -> A
    com.dahuatech.app.ui.task.LowerNodeAppCheck lowerNodeAppCheck -> B
    void onCreate(android.os.Bundle) -> onCreate
    com.dahuatech.app.bean.Base getDataByPost(java.lang.String) -> getDataByPost
    void initBase(com.dahuatech.app.bean.Base) -> initBase
    void initApprove() -> a
    void setCheckResult(com.dahuatech.app.bean.ResultMessage) -> setCheckResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    java.lang.String access$0(com.dahuatech.app.ui.task.TravelApprovalActivity) -> a
    java.lang.String access$1(com.dahuatech.app.ui.task.TravelApprovalActivity) -> b
    java.lang.String access$2(com.dahuatech.app.ui.task.TravelApprovalActivity) -> c
    java.lang.String access$3(com.dahuatech.app.ui.task.TravelApprovalActivity) -> d
    java.lang.String access$4(com.dahuatech.app.ui.task.TravelApprovalActivity) -> e
com.dahuatech.app.ui.task.TravelApprovalActivity$1 -> aaf:
    com.dahuatech.app.ui.task.TravelApprovalActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.TravelApprovalActivity$2 -> aag:
    com.dahuatech.app.ui.task.TravelApprovalActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.TravelApprovalActivity$3 -> aah:
    com.dahuatech.app.ui.task.TravelApprovalActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.WorkFlowActivity -> com.dahuatech.app.ui.task.WorkFlowActivity:
    android.widget.ListView mListView -> a
    android.app.ProgressDialog dialog -> b
    android.app.ProgressDialog dialogPass -> c
    android.widget.Button approvePass -> d
    android.widget.Button approveReject -> e
    android.widget.EditText fEditTextComment -> f
    java.lang.String fSystemType -> g
    java.lang.String fClassTypeID -> h
    java.lang.String fBillID -> i
    java.lang.String fItemNumber -> j
    java.lang.String fComment -> k
    java.lang.String workFlowKey -> l
    java.lang.String paramStr -> m
    int fSystemNum -> n
    java.lang.String fBillName -> o
    java.util.HashMap oldHashMap -> p
    java.util.HashMap newHashMap -> q
    java.util.HashMap appHashMap -> r
    java.util.HashMap rejectNodeHashMap -> s
    com.dahuatech.app.business.WorkFlowBusiness workFlowBusiness -> t
    java.lang.String serviceUrl -> u
    java.lang.String oldWorkAppUrl -> v
    java.lang.String newWorkAppUrl -> w
    java.lang.String rejectNodeUrl -> x
    com.dahuatech.app.AppContext appContext -> y
    android.content.SharedPreferences sp -> z
    void onCreate(android.os.Bundle) -> onCreate
    void iniHasMap() -> a
    java.util.List getListByPost(java.lang.String) -> a
    void WorkFlowParam(com.dahuatech.app.bean.RepositoryInfo,com.dahuatech.app.bean.SqlParametersInfo) -> a
    void renderListView(java.util.List) -> a
    com.dahuatech.app.bean.ResultMessage workFlowHandle(java.lang.String,java.lang.String,java.lang.String) -> a
    java.util.List rejectNodeHandle(java.lang.String,java.lang.String) -> a
    void rejectNodeRender(java.util.List) -> b
    void sendLogs() -> b
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    android.app.ProgressDialog access$0(com.dahuatech.app.ui.task.WorkFlowActivity) -> a
    void access$1(com.dahuatech.app.ui.task.WorkFlowActivity,java.util.List) -> a
    java.util.List access$2(com.dahuatech.app.ui.task.WorkFlowActivity,java.lang.String) -> a
    android.app.ProgressDialog access$3(com.dahuatech.app.ui.task.WorkFlowActivity) -> b
    void access$4(com.dahuatech.app.ui.task.WorkFlowActivity) -> c
    com.dahuatech.app.bean.ResultMessage access$5(com.dahuatech.app.ui.task.WorkFlowActivity,java.lang.String,java.lang.String,java.lang.String) -> a
    void access$6(com.dahuatech.app.ui.task.WorkFlowActivity,java.util.List) -> b
    java.util.List access$7(com.dahuatech.app.ui.task.WorkFlowActivity,java.lang.String,java.lang.String) -> a
    android.widget.EditText access$8(com.dahuatech.app.ui.task.WorkFlowActivity) -> d
    void access$9(com.dahuatech.app.ui.task.WorkFlowActivity,java.lang.String) -> b
    int access$10(com.dahuatech.app.ui.task.WorkFlowActivity) -> e
    java.lang.String access$11(com.dahuatech.app.ui.task.WorkFlowActivity) -> f
    java.lang.String access$12(com.dahuatech.app.ui.task.WorkFlowActivity) -> g
    java.lang.String access$13(com.dahuatech.app.ui.task.WorkFlowActivity) -> h
    java.lang.String access$14(com.dahuatech.app.ui.task.WorkFlowActivity) -> i
    java.lang.String access$15(com.dahuatech.app.ui.task.WorkFlowActivity) -> j
    java.lang.String access$16(com.dahuatech.app.ui.task.WorkFlowActivity) -> k
    void access$17(com.dahuatech.app.ui.task.WorkFlowActivity,java.lang.String) -> c
    java.lang.String access$18(com.dahuatech.app.ui.task.WorkFlowActivity) -> l
    java.lang.String access$19(com.dahuatech.app.ui.task.WorkFlowActivity) -> m
    java.lang.String access$20(com.dahuatech.app.ui.task.WorkFlowActivity) -> n
    java.lang.String access$21(com.dahuatech.app.ui.task.WorkFlowActivity) -> o
com.dahuatech.app.ui.task.WorkFlowActivity$1 -> aai:
    com.dahuatech.app.ui.task.WorkFlowActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.WorkFlowActivity$2 -> aaj:
    com.dahuatech.app.ui.task.WorkFlowActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.ui.task.WorkFlowActivity$3 -> aak:
    com.dahuatech.app.ui.task.WorkFlowActivity this$0 -> a
    void rejectOk(int,com.dahuatech.app.bean.mytask.RejectNodeInfo) -> rejectOk
    void cancelled() -> cancelled
    void adAmapOk(int,com.dahuatech.app.bean.attendance.AdAmapInfo) -> adAmapOk
    void dHWeekOk(int,java.lang.String,com.dahuatech.app.bean.develophour.DHWeekInfo) -> dHWeekOk
com.dahuatech.app.ui.task.WorkFlowActivity$WorkFlowAsyncClient -> aal:
    com.dahuatech.app.ui.task.WorkFlowActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.util.List) -> a
    java.util.List doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.task.WorkFlowActivity$WorkFlowHandleAsync -> com.dahuatech.app.ui.task.WorkFlowActivity$WorkFlowHandleAsync:
    com.dahuatech.app.ui.task.WorkFlowActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.dahuatech.app.bean.ResultMessage) -> onPostExecute
    com.dahuatech.app.bean.ResultMessage doInBackground(java.lang.String[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.dahuatech.app.ui.task.WorkFlowActivity access$2(com.dahuatech.app.ui.task.WorkFlowActivity$WorkFlowHandleAsync) -> a
com.dahuatech.app.ui.task.WorkFlowActivity$WorkFlowHandleAsync$1 -> aam:
    com.dahuatech.app.ui.task.WorkFlowActivity$WorkFlowHandleAsync this$1 -> a
    void run() -> run
com.dahuatech.app.ui.task.WorkFlowActivity$rejectNodeAsyncClient -> aan:
    com.dahuatech.app.ui.task.WorkFlowActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.util.List) -> a
    java.util.List doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.ui.task.WorkFlowBeenActivity -> com.dahuatech.app.ui.task.WorkFlowBeenActivity:
    android.widget.ListView mListView -> a
    android.app.ProgressDialog dialog -> b
    java.lang.String FSystemType -> c
    java.lang.String fClassTypeID -> d
    java.lang.String fBillID -> e
    java.lang.String fItemNumber -> f
    java.lang.String serviceUrl -> g
    java.util.HashMap oldHashMap -> h
    java.util.HashMap newHashMap -> i
    com.dahuatech.app.business.WorkFlowBusiness workFlowBusiness -> j
    com.dahuatech.app.AppContext appContext -> k
    android.content.SharedPreferences sp -> l
    void onCreate(android.os.Bundle) -> onCreate
    void iniHasMap() -> a
    java.util.List getListByPost(java.lang.String) -> a
    void WorkFlowParam(com.dahuatech.app.bean.RepositoryInfo,com.dahuatech.app.bean.SqlParametersInfo) -> a
    void renderListView(java.util.List) -> a
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onRestart() -> onRestart
    android.app.ProgressDialog access$0(com.dahuatech.app.ui.task.WorkFlowBeenActivity) -> a
    void access$1(com.dahuatech.app.ui.task.WorkFlowBeenActivity,java.util.List) -> a
    java.util.List access$2(com.dahuatech.app.ui.task.WorkFlowBeenActivity,java.lang.String) -> a
com.dahuatech.app.ui.task.WorkFlowBeenActivity$WorkFlowBeenAsyncClient -> aao:
    com.dahuatech.app.ui.task.WorkFlowBeenActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.util.List) -> a
    java.util.List doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dahuatech.app.widget.AdAmapSpinnerDialog -> com.dahuatech.app.widget.AdAmapSpinnerDialog:
    void onCreate(android.os.Bundle) -> onCreate
com.dahuatech.app.widget.AdAmapSpinnerDialog$1 -> aap:
    com.dahuatech.app.widget.AdAmapSpinnerDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.widget.AdAmapSpinnerDialog$2 -> aaq:
    com.dahuatech.app.widget.AdAmapSpinnerDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.widget.CustomDialog -> com.dahuatech.app.widget.CustomDialog:
com.dahuatech.app.widget.CustomDialog$Builder -> com.dahuatech.app.widget.CustomDialog$Builder:
    android.content.Context context -> a
    java.lang.String title -> b
    android.widget.EditText editText -> c
    android.view.View contentView -> d
    java.lang.String positiveButtonText -> e
    java.lang.String negativeButtonText -> f
    android.content.DialogInterface$OnClickListener positiveButtonClickListener -> g
    android.content.DialogInterface$OnClickListener negativeButtonClickListener -> h
    com.dahuatech.app.widget.CustomDialog$Builder setTitle(int) -> setTitle
    com.dahuatech.app.widget.CustomDialog$Builder setTitle(java.lang.String) -> setTitle
    java.lang.String getEditTextStr() -> getEditTextStr
    com.dahuatech.app.widget.CustomDialog$Builder setConteView(android.view.View) -> setConteView
    com.dahuatech.app.widget.CustomDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    com.dahuatech.app.widget.CustomDialog$Builder setPositiveButton(java.lang.String,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    com.dahuatech.app.widget.CustomDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    com.dahuatech.app.widget.CustomDialog$Builder setNegativeButton(java.lang.String,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    com.dahuatech.app.widget.CustomDialog create() -> create
    android.content.DialogInterface$OnClickListener access$0(com.dahuatech.app.widget.CustomDialog$Builder) -> a
    android.content.DialogInterface$OnClickListener access$1(com.dahuatech.app.widget.CustomDialog$Builder) -> b
com.dahuatech.app.widget.CustomDialog$Builder$1 -> aar:
    com.dahuatech.app.widget.CustomDialog$Builder this$1 -> a
    com.dahuatech.app.widget.CustomDialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.dahuatech.app.widget.CustomDialog$Builder$2 -> aas:
    com.dahuatech.app.widget.CustomDialog$Builder this$1 -> a
    com.dahuatech.app.widget.CustomDialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.dahuatech.app.widget.DHWeekSpinnerDialog -> com.dahuatech.app.widget.DHWeekSpinnerDialog:
    int fCurrentYear -> a
    int fCurrentWeekIndex -> b
    java.util.Calendar cal -> c
    java.util.List weekInfoList -> d
    android.widget.Spinner mYearSpinner -> e
    android.widget.Spinner getmYearSpinner() -> getmYearSpinner
    void setmYearSpinner(android.widget.Spinner) -> setmYearSpinner
    void onCreate(android.os.Bundle) -> onCreate
    void yearFillData(android.widget.Spinner,int) -> a
    void weekFillData(android.widget.Spinner,java.util.List) -> a
    java.util.List access$0(com.dahuatech.app.widget.DHWeekSpinnerDialog) -> a
    int access$1(com.dahuatech.app.widget.DHWeekSpinnerDialog) -> b
    int access$2(com.dahuatech.app.widget.DHWeekSpinnerDialog) -> c
    java.util.Calendar access$3(com.dahuatech.app.widget.DHWeekSpinnerDialog) -> d
    void access$4(com.dahuatech.app.widget.DHWeekSpinnerDialog,java.util.List) -> a
    void access$5(com.dahuatech.app.widget.DHWeekSpinnerDialog,android.widget.Spinner,java.util.List) -> a
com.dahuatech.app.widget.DHWeekSpinnerDialog$1 -> aat:
    com.dahuatech.app.widget.DHWeekSpinnerDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.widget.DHWeekSpinnerDialog$2 -> aau:
    com.dahuatech.app.widget.DHWeekSpinnerDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.widget.DHWeekSpinnerDialog$3 -> aav:
    com.dahuatech.app.widget.DHWeekSpinnerDialog this$0 -> a
    android.widget.Spinner val$spinner -> b
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.dahuatech.app.widget.DelSlideListView -> com.dahuatech.app.widget.DelSlideListView:
    android.view.GestureDetector mDetector -> a
    com.dahuatech.app.inter.IOnDeleteListioner mOnDeleteListioner -> b
    com.dahuatech.app.inter.IListViewonSingleTapUpListenner thisonSingleTapUpListenner -> c
    int position -> d
    float velocityX -> e
    float velocityY -> f
    int standard_touch_target_size -> g
    float mLastMotionX -> h
    boolean deleteView -> deleteView
    com.dahuatech.app.widget.DelSlideScrollLinerLayout mScrollLinerLayout -> i
    boolean scroll -> j
    int pointToPosition -> k
    boolean listViewMoving -> l
    boolean delAll -> m
    boolean isLongPress -> isLongPress
    com.dahuatech.app.inter.IOnDeleteListioner getmOnDeleteListioner() -> getmOnDeleteListioner
    void setmOnDeleteListioner(com.dahuatech.app.inter.IOnDeleteListioner) -> setmOnDeleteListioner
    com.dahuatech.app.inter.IListViewonSingleTapUpListenner getThisonSingleTapUpListenner() -> getThisonSingleTapUpListenner
    void setThisonSingleTapUpListenner(com.dahuatech.app.inter.IListViewonSingleTapUpListenner) -> setThisonSingleTapUpListenner
    boolean isDelAll() -> isDelAll
    void setDelAll(boolean) -> setDelAll
    void setScroll(boolean) -> setScroll
    void init(android.content.Context) -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onDown(android.view.MotionEvent) -> onDown
    void onShowPress(android.view.MotionEvent) -> onShowPress
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void deleteItem() -> deleteItem
com.dahuatech.app.widget.DelSlideScrollLinerLayout -> com.dahuatech.app.widget.DelSlideScrollLinerLayout:
    android.widget.Scroller mScroller -> a
    boolean pressed -> b
    void init(android.content.Context) -> a
    void onDown() -> onDown
    void setPressed(boolean) -> setPressed
    void setSingleTapUp(boolean) -> setSingleTapUp
    void computeScroll() -> computeScroll
    int getToX() -> getToX
    void snapToScreen(int) -> snapToScreen
com.dahuatech.app.widget.LockPatternView -> com.dahuatech.app.widget.LockPatternView:
    float w -> a
    float h -> b
    boolean isCache -> c
    android.graphics.Paint mPaint -> d
    com.dahuatech.app.widget.utli.LockPoint[][] mPoints -> e
    float r -> f
    java.util.List sPoints -> g
    boolean checking -> h
    android.graphics.Bitmap lock_round_original -> i
    android.graphics.Bitmap lock_round_click -> j
    android.graphics.Bitmap lock_round_click_error -> k
    android.graphics.Bitmap lock_line -> l
    android.graphics.Bitmap lock_line_semicircle -> m
    android.graphics.Bitmap lock_line_error -> n
    android.graphics.Bitmap lock_line_semicircle_error -> o
    long CLEAR_TIME -> p
    int passwordMinLength -> q
    android.graphics.Matrix mMatrix -> r
    int lineAlpha -> s
    boolean isTouch -> t
    boolean movingNoPoint -> u
    float moveingX -> v
    float moveingY -> w
    java.util.Timer timer -> x
    java.util.TimerTask task -> y
    com.dahuatech.app.widget.LockPatternView$OnCompleteListener mCompleteListener -> z
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawToCanvas(android.graphics.Canvas) -> a
    void initCache() -> a
    void drawLine(android.graphics.Canvas,com.dahuatech.app.widget.utli.LockPoint,com.dahuatech.app.widget.utli.LockPoint) -> a
    float getDegrees(com.dahuatech.app.widget.utli.LockPoint,com.dahuatech.app.widget.utli.LockPoint) -> getDegrees
    float switchDegrees(float,float) -> a
    int[] getArrayIndex(int) -> getArrayIndex
    com.dahuatech.app.widget.utli.LockPoint checkSelectPoint(float,float) -> b
    void reset() -> b
    int crossPoint(com.dahuatech.app.widget.utli.LockPoint) -> a
    void addPoint(com.dahuatech.app.widget.utli.LockPoint) -> b
    java.lang.String toPointString() -> c
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void error() -> d
    void markError() -> markError
    void markError(long) -> markError
    void enableTouch() -> enableTouch
    void disableTouch() -> disableTouch
    void clearPassword() -> clearPassword
    void clearPassword(long) -> clearPassword
    void setOnCompleteListener(com.dahuatech.app.widget.LockPatternView$OnCompleteListener) -> setOnCompleteListener
    boolean isPasswordEmpty() -> isPasswordEmpty
    boolean verifyPassword(java.lang.String) -> verifyPassword
    java.lang.String getPassword() -> getPassword
    void setPassWord(java.lang.String) -> setPassWord
    void resetPassWord() -> resetPassWord
    int getPasswordMinLength() -> getPasswordMinLength
    void setPasswordMinLength(int) -> setPasswordMinLength
    void access$0(com.dahuatech.app.widget.LockPatternView) -> a
com.dahuatech.app.widget.LockPatternView$1 -> aaw:
    com.dahuatech.app.widget.LockPatternView this$0 -> a
    long val$time -> b
    void run() -> run
com.dahuatech.app.widget.LockPatternView$2 -> aax:
    com.dahuatech.app.widget.LockPatternView this$0 -> a
    void run() -> run
com.dahuatech.app.widget.LockPatternView$OnCompleteListener -> com.dahuatech.app.widget.LockPatternView$OnCompleteListener:
    void onComplete(java.lang.String) -> onComplete
com.dahuatech.app.widget.MultiSelectionSpinner -> com.dahuatech.app.widget.MultiSelectionSpinner:
    java.lang.String[] _items -> a
    boolean[] mSelection -> b
    android.widget.ArrayAdapter simple_adapter -> c
    com.dahuatech.app.ui.task.LowerNodeApproveActivity lNodeApprove -> d
    java.lang.String spinnerType -> e
    int spinnerIndex -> f
    int roleSpinnerCount -> g
    java.lang.String FNodeName -> h
    android.widget.TextView resultView -> i
    com.dahuatech.app.ui.task.LowerNodeApproveActivity getlNodeApprove() -> getlNodeApprove
    void setlNodeApprove(com.dahuatech.app.ui.task.LowerNodeApproveActivity) -> setlNodeApprove
    java.lang.String getSpinnerType() -> getSpinnerType
    void setSpinnerType(java.lang.String) -> setSpinnerType
    int getSpinnerIndex() -> getSpinnerIndex
    void setSpinnerIndex(int) -> setSpinnerIndex
    int getRoleSpinnerCount() -> getRoleSpinnerCount
    void setRoleSpinnerCount(int) -> setRoleSpinnerCount
    java.lang.String getFNodeName() -> getFNodeName
    void setFNodeName(java.lang.String) -> setFNodeName
    android.widget.TextView getResultView() -> getResultView
    void setResultView(android.widget.TextView) -> setResultView
    void onClick(android.content.DialogInterface,int,boolean) -> onClick
    boolean performClick() -> performClick
    java.lang.String getCurrentNodeResult(java.util.Map) -> a
    void showResultView(java.lang.String) -> a
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    void setItems(java.lang.String[]) -> setItems
    void setItems(java.util.List) -> setItems
    void setSelection(java.lang.String[]) -> setSelection
    void setSelection(java.util.List) -> setSelection
    void setSelection(int) -> setSelection
    void setSelection(int[]) -> setSelection
    java.util.List getSelectedStrings() -> getSelectedStrings
    java.util.List getSelectedIndicies() -> getSelectedIndicies
    java.lang.String buildSelectedItemString() -> a
    java.lang.String getSelectedItemsAsString() -> getSelectedItemsAsString
    java.lang.String getNodeValueMap(java.util.Map) -> getNodeValueMap
    com.dahuatech.app.ui.task.LowerNodeApproveActivity access$0(com.dahuatech.app.widget.MultiSelectionSpinner) -> a
    java.lang.String access$1(com.dahuatech.app.widget.MultiSelectionSpinner) -> b
    int access$2(com.dahuatech.app.widget.MultiSelectionSpinner) -> c
    int access$3(com.dahuatech.app.widget.MultiSelectionSpinner) -> d
    java.lang.String access$4(com.dahuatech.app.widget.MultiSelectionSpinner,java.util.Map) -> a
    void access$5(com.dahuatech.app.widget.MultiSelectionSpinner,java.lang.String) -> a
com.dahuatech.app.widget.MultiSelectionSpinner$1 -> aay:
    com.dahuatech.app.widget.MultiSelectionSpinner this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dahuatech.app.widget.MultiSelectionSpinner$2 -> aaz:
    com.dahuatech.app.widget.MultiSelectionSpinner this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dahuatech.app.widget.RejectSpinnerDialog -> com.dahuatech.app.widget.RejectSpinnerDialog:
    void onCreate(android.os.Bundle) -> onCreate
com.dahuatech.app.widget.RejectSpinnerDialog$1 -> aba:
    com.dahuatech.app.widget.RejectSpinnerDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.widget.RejectSpinnerDialog$2 -> abb:
    com.dahuatech.app.widget.RejectSpinnerDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.widget.SpinnerDialog -> com.dahuatech.app.widget.SpinnerDialog:
    java.util.List mList -> mList
    java.util.List showList -> showList
    android.content.Context mContext -> mContext
    android.widget.Spinner mSpinner -> mSpinner
    android.widget.Button buttonOK -> buttonOK
    android.widget.Button buttonCancel -> buttonCancel
    java.lang.String spinnerOk -> spinnerOk
    java.lang.String spinnerCancle -> spinnerCancle
    com.dahuatech.app.inter.ISpinnerListener mReadyListener -> mReadyListener
    java.lang.String getSpinnerOk() -> getSpinnerOk
    void setSpinnerOk(java.lang.String) -> setSpinnerOk
    java.lang.String getSpinnerCancle() -> getSpinnerCancle
    void setSpinnerCancle(java.lang.String) -> setSpinnerCancle
    void onCreate(android.os.Bundle) -> onCreate
com.dahuatech.app.widget.XListView -> com.dahuatech.app.widget.XListView:
    float mLastY -> a
    android.widget.Scroller mScroller -> b
    android.widget.AbsListView$OnScrollListener mScrollListener -> c
    com.dahuatech.app.widget.XListView$IXListViewListener mListViewListener -> d
    com.dahuatech.app.widget.XListViewHeader mHeaderView -> e
    android.widget.RelativeLayout mHeaderViewContent -> f
    android.widget.TextView mHeaderTimeView -> g
    int mHeaderViewHeight -> h
    boolean mEnablePullRefresh -> i
    boolean mPullRefreshing -> j
    com.dahuatech.app.widget.XListViewFooter mFooterView -> k
    boolean mEnablePullLoad -> l
    boolean mPullLoading -> m
    boolean mIsFooterReady -> n
    int mTotalItemCount -> o
    int mScrollBack -> p
    boolean ismPullLoading() -> ismPullLoading
    void setmPullLoading(boolean) -> setmPullLoading
    void initWithContext(android.content.Context) -> a
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setPullRefreshEnable(boolean) -> setPullRefreshEnable
    void setPullLoadEnable(boolean) -> setPullLoadEnable
    void stopRefresh() -> stopRefresh
    void stopLoadMore() -> stopLoadMore
    void stopLoadFinish() -> stopLoadFinish
    void setRefreshTime(java.lang.String) -> setRefreshTime
    void invokeOnScrolling() -> a
    void updateHeaderHeight(float) -> a
    void resetHeaderHeight() -> b
    void updateFooterHeight(float) -> b
    void resetFooterHeight() -> c
    void startLoadMore() -> d
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void computeScroll() -> computeScroll
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void setXListViewListener(com.dahuatech.app.widget.XListView$IXListViewListener) -> setXListViewListener
    android.widget.RelativeLayout access$0(com.dahuatech.app.widget.XListView) -> a
    void access$1(com.dahuatech.app.widget.XListView,int) -> a
    void access$2(com.dahuatech.app.widget.XListView) -> b
com.dahuatech.app.widget.XListView$1 -> abc:
    com.dahuatech.app.widget.XListView this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
com.dahuatech.app.widget.XListView$2 -> abd:
    com.dahuatech.app.widget.XListView this$0 -> a
    void onClick(android.view.View) -> onClick
com.dahuatech.app.widget.XListView$IXListViewListener -> com.dahuatech.app.widget.XListView$IXListViewListener:
    void onRefresh() -> onRefresh
    void onLoadMore() -> onLoadMore
com.dahuatech.app.widget.XListView$OnXScrollListener -> com.dahuatech.app.widget.XListView$OnXScrollListener:
    void onXScrolling(android.view.View) -> onXScrolling
com.dahuatech.app.widget.XListViewFooter -> com.dahuatech.app.widget.XListViewFooter:
    int STATE_NORMAL -> STATE_NORMAL
    int STATE_READY -> STATE_READY
    int STATE_LOADING -> STATE_LOADING
    int STATE_LOADFINISH -> STATE_LOADFINISH
    int FILL_PARENT -> a
    android.content.Context mContext -> b
    android.view.View mContentView -> c
    android.view.View mProgressBar -> d
    android.widget.TextView mHintView -> e
    void setState(int) -> setState
    void setBottomMargin(int) -> setBottomMargin
    int getBottomMargin() -> getBottomMargin
    void normal() -> normal
    void loading() -> loading
    void hide() -> hide
    void show() -> show
    void initView(android.content.Context) -> a
com.dahuatech.app.widget.XListViewHeader -> com.dahuatech.app.widget.XListViewHeader:
    android.widget.LinearLayout mContainer -> a
    android.widget.ImageView mArrowImageView -> b
    android.widget.ProgressBar mProgressBar -> c
    android.widget.TextView mHintTextView -> d
    int mState -> e
    android.view.animation.Animation mRotateUpAnim -> f
    android.view.animation.Animation mRotateDownAnim -> g
    int ROTATE_ANIM_DURATION -> h
    int FILL_PARENT -> i
    int STATE_NORMAL -> STATE_NORMAL
    int STATE_READY -> STATE_READY
    int STATE_REFRESHING -> STATE_REFRESHING
    void initView(android.content.Context) -> a
    void setState(int) -> setState
    void setVisiableHeight(int) -> setVisiableHeight
    int getVisiableHeight() -> getVisiableHeight
com.dahuatech.app.widget.utli.BitmapUtil -> com.dahuatech.app.widget.utli.BitmapUtil:
    android.graphics.Bitmap zoom(android.graphics.Bitmap,float) -> zoom
    android.graphics.Bitmap zoom(android.graphics.Bitmap,float,float) -> zoom
com.dahuatech.app.widget.utli.LockPoint -> com.dahuatech.app.widget.utli.LockPoint:
    int STATE_NORMAL -> STATE_NORMAL
    int STATE_CHECK -> STATE_CHECK
    int STATE_CHECK_ERROR -> STATE_CHECK_ERROR
    float x -> x
    float y -> y
    int state -> state
    int index -> index
com.dahuatech.app.widget.utli.MathUtil -> com.dahuatech.app.widget.utli.MathUtil:
    double distance(double,double,double,double) -> distance
    double pointTotoDegrees(double,double) -> pointTotoDegrees
com.dahuatech.app.widget.utli.RoundUtil -> com.dahuatech.app.widget.utli.RoundUtil:
    boolean checkInRound(float,float,float,float,float) -> checkInRound
com.google.gson.DefaultDateTypeAdapter -> com.google.gson.DefaultDateTypeAdapter:
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat localFormat -> localFormat
    java.text.DateFormat iso8601Format -> iso8601Format
    com.google.gson.JsonElement serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.util.Date deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.util.Date deserializeToDate(com.google.gson.JsonElement) -> deserializeToDate
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.ExclusionStrategy -> com.google.gson.ExclusionStrategy:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> shouldSkipField
    boolean shouldSkipClass(java.lang.Class) -> shouldSkipClass
com.google.gson.FieldAttributes -> com.google.gson.FieldAttributes:
    java.lang.reflect.Field field -> field
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.String getName() -> getName
    java.lang.reflect.Type getDeclaredType() -> getDeclaredType
    java.lang.Class getDeclaredClass() -> getDeclaredClass
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.util.Collection getAnnotations() -> getAnnotations
    boolean hasModifier(int) -> hasModifier
    java.lang.Object get(java.lang.Object) -> get
    boolean isSynthetic() -> isSynthetic
com.google.gson.FieldNamingPolicy -> com.google.gson.FieldNamingPolicy:
    com.google.gson.FieldNamingPolicy IDENTITY -> IDENTITY
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE -> UPPER_CAMEL_CASE
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES -> UPPER_CAMEL_CASE_WITH_SPACES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES -> LOWER_CASE_WITH_UNDERSCORES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES -> LOWER_CASE_WITH_DASHES
    com.google.gson.FieldNamingPolicy[] $VALUES -> $VALUES
    com.google.gson.FieldNamingPolicy[] values() -> values
    com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    java.lang.String separateCamelCase(java.lang.String,java.lang.String) -> separateCamelCase
    java.lang.String upperCaseFirstLetter(java.lang.String) -> upperCaseFirstLetter
    java.lang.String modifyString(char,java.lang.String,int) -> modifyString
    java.lang.String access$100(java.lang.String) -> access$100
    java.lang.String access$200(java.lang.String,java.lang.String) -> access$200
com.google.gson.FieldNamingPolicy$1 -> com.google.gson.FieldNamingPolicy$1:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$2 -> com.google.gson.FieldNamingPolicy$2:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$3 -> com.google.gson.FieldNamingPolicy$3:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$4 -> com.google.gson.FieldNamingPolicy$4:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$5 -> com.google.gson.FieldNamingPolicy$5:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingStrategy -> com.google.gson.FieldNamingStrategy:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.Gson -> com.google.gson.Gson:
    boolean DEFAULT_JSON_NON_EXECUTABLE -> DEFAULT_JSON_NON_EXECUTABLE
    java.lang.String JSON_NON_EXECUTABLE_PREFIX -> JSON_NON_EXECUTABLE_PREFIX
    java.lang.ThreadLocal calls -> calls
    java.util.Map typeTokenCache -> typeTokenCache
    java.util.List factories -> factories
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    boolean serializeNulls -> serializeNulls
    boolean htmlSafe -> htmlSafe
    boolean generateNonExecutableJson -> generateNonExecutableJson
    boolean prettyPrinting -> prettyPrinting
    com.google.gson.JsonDeserializationContext deserializationContext -> deserializationContext
    com.google.gson.JsonSerializationContext serializationContext -> serializationContext
    com.google.gson.TypeAdapter doubleAdapter(boolean) -> doubleAdapter
    com.google.gson.TypeAdapter floatAdapter(boolean) -> floatAdapter
    void checkValidFloatingPoint(double) -> checkValidFloatingPoint
    com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> longAdapter
    com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> getAdapter
    com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> getDelegateAdapter
    com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> getAdapter
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    com.google.gson.JsonElement toJsonTree(java.lang.Object,java.lang.reflect.Type) -> toJsonTree
    java.lang.String toJson(java.lang.Object) -> toJson
    java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> toJson
    void toJson(java.lang.Object,java.lang.Appendable) -> toJson
    void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> toJson
    void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter) -> toJson
    java.lang.String toJson(com.google.gson.JsonElement) -> toJson
    void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> toJson
    com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer) -> newJsonWriter
    void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> toJson
    java.lang.Object fromJson(java.lang.String,java.lang.Class) -> fromJson
    java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> fromJson
    java.lang.Object fromJson(java.io.Reader,java.lang.Class) -> fromJson
    java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> fromJson
    void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> assertFullConsumption
    java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> fromJson
    java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.Class) -> fromJson
    java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.reflect.Type) -> fromJson
    java.lang.String toString() -> toString
    void access$000(com.google.gson.Gson,double) -> access$000
com.google.gson.Gson$1 -> com.google.gson.Gson$1:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.google.gson.Gson$2 -> com.google.gson.Gson$2:
    com.google.gson.Gson this$0 -> this$0
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.google.gson.Gson$3 -> com.google.gson.Gson$3:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Double read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$4 -> com.google.gson.Gson$4:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Float read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$5 -> com.google.gson.Gson$5:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$FutureTypeAdapter -> com.google.gson.Gson$FutureTypeAdapter:
    com.google.gson.TypeAdapter delegate -> delegate
    void setDelegate(com.google.gson.TypeAdapter) -> setDelegate
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.GsonBuilder -> com.google.gson.GsonBuilder:
    com.google.gson.internal.Excluder excluder -> excluder
    com.google.gson.LongSerializationPolicy longSerializationPolicy -> longSerializationPolicy
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    java.util.Map instanceCreators -> instanceCreators
    java.util.List factories -> factories
    java.util.List hierarchyFactories -> hierarchyFactories
    boolean serializeNulls -> serializeNulls
    java.lang.String datePattern -> datePattern
    int dateStyle -> dateStyle
    int timeStyle -> timeStyle
    boolean complexMapKeySerialization -> complexMapKeySerialization
    boolean serializeSpecialFloatingPointValues -> serializeSpecialFloatingPointValues
    boolean escapeHtmlChars -> escapeHtmlChars
    boolean prettyPrinting -> prettyPrinting
    boolean generateNonExecutableJson -> generateNonExecutableJson
    com.google.gson.GsonBuilder setVersion(double) -> setVersion
    com.google.gson.GsonBuilder excludeFieldsWithModifiers(int[]) -> excludeFieldsWithModifiers
    com.google.gson.GsonBuilder generateNonExecutableJson() -> generateNonExecutableJson
    com.google.gson.GsonBuilder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    com.google.gson.GsonBuilder serializeNulls() -> serializeNulls
    com.google.gson.GsonBuilder enableComplexMapKeySerialization() -> enableComplexMapKeySerialization
    com.google.gson.GsonBuilder disableInnerClassSerialization() -> disableInnerClassSerialization
    com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy) -> setLongSerializationPolicy
    com.google.gson.GsonBuilder setFieldNamingPolicy(com.google.gson.FieldNamingPolicy) -> setFieldNamingPolicy
    com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy) -> setFieldNamingStrategy
    com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[]) -> setExclusionStrategies
    com.google.gson.GsonBuilder addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addSerializationExclusionStrategy
    com.google.gson.GsonBuilder addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addDeserializationExclusionStrategy
    com.google.gson.GsonBuilder setPrettyPrinting() -> setPrettyPrinting
    com.google.gson.GsonBuilder disableHtmlEscaping() -> disableHtmlEscaping
    com.google.gson.GsonBuilder setDateFormat(java.lang.String) -> setDateFormat
    com.google.gson.GsonBuilder setDateFormat(int) -> setDateFormat
    com.google.gson.GsonBuilder setDateFormat(int,int) -> setDateFormat
    com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object) -> registerTypeAdapter
    com.google.gson.GsonBuilder registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory) -> registerTypeAdapterFactory
    com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object) -> registerTypeHierarchyAdapter
    com.google.gson.GsonBuilder serializeSpecialFloatingPointValues() -> serializeSpecialFloatingPointValues
    com.google.gson.Gson create() -> create
    void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List) -> addTypeAdaptersForDate
com.google.gson.InstanceCreator -> com.google.gson.InstanceCreator:
    java.lang.Object createInstance(java.lang.reflect.Type) -> createInstance
com.google.gson.JsonArray -> com.google.gson.JsonArray:
    java.util.List elements -> elements
    com.google.gson.JsonArray deepCopy() -> deepCopy
    void add(com.google.gson.JsonElement) -> add
    void addAll(com.google.gson.JsonArray) -> addAll
    int size() -> size
    java.util.Iterator iterator() -> iterator
    com.google.gson.JsonElement get(int) -> get
    java.lang.Number getAsNumber() -> getAsNumber
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    short getAsShort() -> getAsShort
    boolean getAsBoolean() -> getAsBoolean
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonDeserializationContext -> com.google.gson.JsonDeserializationContext:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.google.gson.JsonDeserializer -> com.google.gson.JsonDeserializer:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.JsonElement -> com.google.gson.JsonElement:
    com.google.gson.JsonElement deepCopy() -> deepCopy
    boolean isJsonArray() -> isJsonArray
    boolean isJsonObject() -> isJsonObject
    boolean isJsonPrimitive() -> isJsonPrimitive
    boolean isJsonNull() -> isJsonNull
    com.google.gson.JsonObject getAsJsonObject() -> getAsJsonObject
    com.google.gson.JsonArray getAsJsonArray() -> getAsJsonArray
    com.google.gson.JsonPrimitive getAsJsonPrimitive() -> getAsJsonPrimitive
    com.google.gson.JsonNull getAsJsonNull() -> getAsJsonNull
    boolean getAsBoolean() -> getAsBoolean
    java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    java.lang.Number getAsNumber() -> getAsNumber
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    short getAsShort() -> getAsShort
    java.lang.String toString() -> toString
com.google.gson.JsonIOException -> com.google.gson.JsonIOException:
    long serialVersionUID -> serialVersionUID
com.google.gson.JsonNull -> com.google.gson.JsonNull:
    com.google.gson.JsonNull INSTANCE -> INSTANCE
    com.google.gson.JsonNull deepCopy() -> deepCopy
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonObject -> com.google.gson.JsonObject:
    com.google.gson.internal.LinkedTreeMap members -> members
    com.google.gson.JsonObject deepCopy() -> deepCopy
    void add(java.lang.String,com.google.gson.JsonElement) -> add
    com.google.gson.JsonElement remove(java.lang.String) -> remove
    void addProperty(java.lang.String,java.lang.String) -> addProperty
    void addProperty(java.lang.String,java.lang.Number) -> addProperty
    void addProperty(java.lang.String,java.lang.Boolean) -> addProperty
    void addProperty(java.lang.String,java.lang.Character) -> addProperty
    com.google.gson.JsonElement createJsonElement(java.lang.Object) -> createJsonElement
    java.util.Set entrySet() -> entrySet
    boolean has(java.lang.String) -> has
    com.google.gson.JsonElement get(java.lang.String) -> get
    com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String) -> getAsJsonPrimitive
    com.google.gson.JsonArray getAsJsonArray(java.lang.String) -> getAsJsonArray
    com.google.gson.JsonObject getAsJsonObject(java.lang.String) -> getAsJsonObject
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonParseException -> com.google.gson.JsonParseException:
    long serialVersionUID -> serialVersionUID
com.google.gson.JsonParser -> com.google.gson.JsonParser:
    com.google.gson.JsonElement parse(java.lang.String) -> parse
    com.google.gson.JsonElement parse(java.io.Reader) -> parse
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
com.google.gson.JsonPrimitive -> com.google.gson.JsonPrimitive:
    java.lang.Class[] PRIMITIVE_TYPES -> PRIMITIVE_TYPES
    java.lang.Object value -> value
    com.google.gson.JsonPrimitive deepCopy() -> deepCopy
    void setValue(java.lang.Object) -> setValue
    boolean isBoolean() -> isBoolean
    java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    boolean getAsBoolean() -> getAsBoolean
    boolean isNumber() -> isNumber
    java.lang.Number getAsNumber() -> getAsNumber
    boolean isString() -> isString
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    short getAsShort() -> getAsShort
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    boolean isPrimitiveOrString(java.lang.Object) -> isPrimitiveOrString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isIntegral(com.google.gson.JsonPrimitive) -> isIntegral
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonSerializationContext -> com.google.gson.JsonSerializationContext:
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.google.gson.JsonSerializer -> com.google.gson.JsonSerializer:
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
com.google.gson.JsonStreamParser -> com.google.gson.JsonStreamParser:
    com.google.gson.stream.JsonReader parser -> parser
    java.lang.Object lock -> lock
    com.google.gson.JsonElement next() -> next
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.gson.JsonSyntaxException -> com.google.gson.JsonSyntaxException:
    long serialVersionUID -> serialVersionUID
com.google.gson.LongSerializationPolicy -> com.google.gson.LongSerializationPolicy:
    com.google.gson.LongSerializationPolicy DEFAULT -> DEFAULT
    com.google.gson.LongSerializationPolicy STRING -> STRING
    com.google.gson.LongSerializationPolicy[] $VALUES -> $VALUES
    com.google.gson.LongSerializationPolicy[] values() -> values
    com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$1 -> com.google.gson.LongSerializationPolicy$1:
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$2 -> com.google.gson.LongSerializationPolicy$2:
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.TreeTypeAdapter -> com.google.gson.TreeTypeAdapter:
    com.google.gson.JsonSerializer serializer -> serializer
    com.google.gson.JsonDeserializer deserializer -> deserializer
    com.google.gson.Gson gson -> gson
    com.google.gson.reflect.TypeToken typeToken -> typeToken
    com.google.gson.TypeAdapterFactory skipPast -> skipPast
    com.google.gson.TypeAdapter delegate -> delegate
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    com.google.gson.TypeAdapter delegate() -> delegate
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactory
    com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactoryWithMatchRawType
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,java.lang.Object) -> newTypeHierarchyFactory
com.google.gson.TreeTypeAdapter$1 -> com.google.gson.TreeTypeAdapter$1:
com.google.gson.TreeTypeAdapter$SingleTypeFactory -> com.google.gson.TreeTypeAdapter$SingleTypeFactory:
    com.google.gson.reflect.TypeToken exactType -> exactType
    boolean matchRawType -> matchRawType
    java.lang.Class hierarchyType -> hierarchyType
    com.google.gson.JsonSerializer serializer -> serializer
    com.google.gson.JsonDeserializer deserializer -> deserializer
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.TypeAdapter -> com.google.gson.TypeAdapter:
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void toJson(java.io.Writer,java.lang.Object) -> toJson
    com.google.gson.TypeAdapter nullSafe() -> nullSafe
    java.lang.String toJson(java.lang.Object) -> toJson
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    java.lang.Object fromJson(java.io.Reader) -> fromJson
    java.lang.Object fromJson(java.lang.String) -> fromJson
    java.lang.Object fromJsonTree(com.google.gson.JsonElement) -> fromJsonTree
com.google.gson.TypeAdapter$1 -> com.google.gson.TypeAdapter$1:
    com.google.gson.TypeAdapter this$0 -> this$0
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
com.google.gson.TypeAdapterFactory -> com.google.gson.TypeAdapterFactory:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.annotations.Expose -> com.google.gson.annotations.Expose:
    boolean serialize() -> serialize
    boolean deserialize() -> deserialize
com.google.gson.annotations.SerializedName -> com.google.gson.annotations.SerializedName:
    java.lang.String value() -> value
com.google.gson.annotations.Since -> com.google.gson.annotations.Since:
    double value() -> value
com.google.gson.annotations.Until -> com.google.gson.annotations.Until:
    double value() -> value
com.google.gson.internal.$Gson$Preconditions -> com.google.gson.internal.$Gson$Preconditions:
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    void checkArgument(boolean) -> checkArgument
com.google.gson.internal.$Gson$Types -> com.google.gson.internal.$Gson$Types:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> EMPTY_TYPE_ARRAY
    java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> newParameterizedTypeWithOwner
    java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> arrayOf
    java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> subtypeOf
    java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> supertypeOf
    java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> canonicalize
    java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> equals
    int hashCodeOrZero(java.lang.Object) -> hashCodeOrZero
    java.lang.String typeToString(java.lang.reflect.Type) -> typeToString
    java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getGenericSupertype
    java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getSupertype
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
    java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> getCollectionElementType
    java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> getMapKeyAndValueTypes
    java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> resolve
    java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> resolveTypeVariable
    int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> declaringClassOf
    void checkNotPrimitive(java.lang.reflect.Type) -> checkNotPrimitive
    void access$000(java.lang.reflect.Type) -> access$000
    int access$100(java.lang.Object) -> access$100
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl:
    java.lang.reflect.Type componentType -> componentType
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl:
    java.lang.reflect.Type ownerType -> ownerType
    java.lang.reflect.Type rawType -> rawType
    java.lang.reflect.Type[] typeArguments -> typeArguments
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl:
    java.lang.reflect.Type upperBound -> upperBound
    java.lang.reflect.Type lowerBound -> lowerBound
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor -> com.google.gson.internal.ConstructorConstructor:
    java.util.Map instanceCreators -> instanceCreators
    com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> get
    com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class) -> newDefaultConstructor
    com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> newDefaultImplementationConstructor
    com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class) -> newUnsafeAllocator
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor$1 -> com.google.gson.internal.ConstructorConstructor$1:
    com.google.gson.InstanceCreator val$typeCreator -> val$typeCreator
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$10 -> com.google.gson.internal.ConstructorConstructor$10:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$11 -> com.google.gson.internal.ConstructorConstructor$11:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$12 -> com.google.gson.internal.ConstructorConstructor$12:
    com.google.gson.internal.UnsafeAllocator unsafeAllocator -> unsafeAllocator
    java.lang.Class val$rawType -> val$rawType
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$2 -> com.google.gson.internal.ConstructorConstructor$2:
    com.google.gson.InstanceCreator val$rawTypeCreator -> val$rawTypeCreator
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$3 -> com.google.gson.internal.ConstructorConstructor$3:
    java.lang.reflect.Constructor val$constructor -> val$constructor
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$4 -> com.google.gson.internal.ConstructorConstructor$4:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$5 -> com.google.gson.internal.ConstructorConstructor$5:
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$6 -> com.google.gson.internal.ConstructorConstructor$6:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$7 -> com.google.gson.internal.ConstructorConstructor$7:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$8 -> com.google.gson.internal.ConstructorConstructor$8:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$9 -> com.google.gson.internal.ConstructorConstructor$9:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.Excluder -> com.google.gson.internal.Excluder:
    double IGNORE_VERSIONS -> IGNORE_VERSIONS
    com.google.gson.internal.Excluder DEFAULT -> DEFAULT
    double version -> version
    int modifiers -> modifiers
    boolean serializeInnerClasses -> serializeInnerClasses
    boolean requireExpose -> requireExpose
    java.util.List serializationStrategies -> serializationStrategies
    java.util.List deserializationStrategies -> deserializationStrategies
    com.google.gson.internal.Excluder clone() -> clone
    com.google.gson.internal.Excluder withVersion(double) -> withVersion
    com.google.gson.internal.Excluder withModifiers(int[]) -> withModifiers
    com.google.gson.internal.Excluder disableInnerClassSerialization() -> disableInnerClassSerialization
    com.google.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean) -> withExclusionStrategy
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    boolean excludeClass(java.lang.Class,boolean) -> excludeClass
    boolean isAnonymousOrLocal(java.lang.Class) -> isAnonymousOrLocal
    boolean isInnerClass(java.lang.Class) -> isInnerClass
    boolean isStatic(java.lang.Class) -> isStatic
    boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> isValidVersion
    boolean isValidSince(com.google.gson.annotations.Since) -> isValidSince
    boolean isValidUntil(com.google.gson.annotations.Until) -> isValidUntil
    java.lang.Object clone() -> clone
com.google.gson.internal.Excluder$1 -> com.google.gson.internal.Excluder$1:
    com.google.gson.TypeAdapter delegate -> delegate
    boolean val$skipDeserialize -> val$skipDeserialize
    boolean val$skipSerialize -> val$skipSerialize
    com.google.gson.Gson val$gson -> val$gson
    com.google.gson.reflect.TypeToken val$type -> val$type
    com.google.gson.internal.Excluder this$0 -> this$0
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    com.google.gson.TypeAdapter delegate() -> delegate
com.google.gson.internal.JsonReaderInternalAccess -> com.google.gson.internal.JsonReaderInternalAccess:
    com.google.gson.internal.JsonReaderInternalAccess INSTANCE -> INSTANCE
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.internal.LazilyParsedNumber -> com.google.gson.internal.LazilyParsedNumber:
    java.lang.String value -> value
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
com.google.gson.internal.LinkedTreeMap -> com.google.gson.internal.LinkedTreeMap:
    java.util.Comparator NATURAL_ORDER -> NATURAL_ORDER
    java.util.Comparator comparator -> comparator
    com.google.gson.internal.LinkedTreeMap$Node root -> root
    int size -> size
    int modCount -> modCount
    com.google.gson.internal.LinkedTreeMap$Node header -> header
    com.google.gson.internal.LinkedTreeMap$EntrySet entrySet -> entrySet
    com.google.gson.internal.LinkedTreeMap$KeySet keySet -> keySet
    boolean $assertionsDisabled -> $assertionsDisabled
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean) -> find
    com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object) -> findByObject
    com.google.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry) -> findByEntry
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    void removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> removeInternal
    com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object) -> removeInternalByKey
    void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> replaceInParent
    void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> rebalance
    void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> rotateLeft
    void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> rotateRight
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.lang.Object writeReplace() -> writeReplace
com.google.gson.internal.LinkedTreeMap$1 -> com.google.gson.internal.LinkedTreeMap$1:
    int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.gson.internal.LinkedTreeMap$EntrySet -> com.google.gson.internal.LinkedTreeMap$EntrySet:
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedTreeMap$EntrySet$1 -> com.google.gson.internal.LinkedTreeMap$EntrySet$1:
    com.google.gson.internal.LinkedTreeMap$EntrySet this$1 -> this$1
    java.util.Map$Entry next() -> next
    java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$KeySet -> com.google.gson.internal.LinkedTreeMap$KeySet:
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedTreeMap$KeySet$1 -> com.google.gson.internal.LinkedTreeMap$KeySet$1:
    com.google.gson.internal.LinkedTreeMap$KeySet this$1 -> this$1
    java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator -> com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator:
    com.google.gson.internal.LinkedTreeMap$Node next -> next
    com.google.gson.internal.LinkedTreeMap$Node lastReturned -> lastReturned
    int expectedModCount -> expectedModCount
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    boolean hasNext() -> hasNext
    com.google.gson.internal.LinkedTreeMap$Node nextNode() -> nextNode
    void remove() -> remove
com.google.gson.internal.LinkedTreeMap$Node -> com.google.gson.internal.LinkedTreeMap$Node:
    com.google.gson.internal.LinkedTreeMap$Node parent -> parent
    com.google.gson.internal.LinkedTreeMap$Node left -> left
    com.google.gson.internal.LinkedTreeMap$Node right -> right
    com.google.gson.internal.LinkedTreeMap$Node next -> next
    com.google.gson.internal.LinkedTreeMap$Node prev -> prev
    java.lang.Object key -> key
    java.lang.Object value -> value
    int height -> height
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.gson.internal.LinkedTreeMap$Node first() -> first
    com.google.gson.internal.LinkedTreeMap$Node last() -> last
com.google.gson.internal.ObjectConstructor -> com.google.gson.internal.ObjectConstructor:
    java.lang.Object construct() -> construct
com.google.gson.internal.Primitives -> com.google.gson.internal.Primitives:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> PRIMITIVE_TO_WRAPPER_TYPE
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> WRAPPER_TO_PRIMITIVE_TYPE
    void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> add
    boolean isPrimitive(java.lang.reflect.Type) -> isPrimitive
    boolean isWrapperType(java.lang.reflect.Type) -> isWrapperType
    java.lang.Class wrap(java.lang.Class) -> wrap
    java.lang.Class unwrap(java.lang.Class) -> unwrap
com.google.gson.internal.Streams -> com.google.gson.internal.Streams:
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
    void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> write
    java.io.Writer writerForAppendable(java.lang.Appendable) -> writerForAppendable
com.google.gson.internal.Streams$1 -> com.google.gson.internal.Streams$1:
com.google.gson.internal.Streams$AppendableWriter -> com.google.gson.internal.Streams$AppendableWriter:
    java.lang.Appendable appendable -> appendable
    com.google.gson.internal.Streams$AppendableWriter$CurrentWrite currentWrite -> currentWrite
    void write(char[],int,int) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite -> com.google.gson.internal.Streams$AppendableWriter$CurrentWrite:
    char[] chars -> chars
    int length() -> length
    char charAt(int) -> charAt
    java.lang.CharSequence subSequence(int,int) -> subSequence
com.google.gson.internal.UnsafeAllocator -> com.google.gson.internal.UnsafeAllocator:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    com.google.gson.internal.UnsafeAllocator create() -> create
com.google.gson.internal.UnsafeAllocator$1 -> com.google.gson.internal.UnsafeAllocator$1:
    java.lang.reflect.Method val$allocateInstance -> val$allocateInstance
    java.lang.Object val$unsafe -> val$unsafe
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$2 -> com.google.gson.internal.UnsafeAllocator$2:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$3 -> com.google.gson.internal.UnsafeAllocator$3:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    int val$constructorId -> val$constructorId
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$4 -> com.google.gson.internal.UnsafeAllocator$4:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.bind.ArrayTypeAdapter -> com.google.gson.internal.bind.ArrayTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.lang.Class componentType -> componentType
    com.google.gson.TypeAdapter componentTypeAdapter -> componentTypeAdapter
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> com.google.gson.internal.bind.ArrayTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> com.google.gson.internal.bind.CollectionTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter:
    com.google.gson.TypeAdapter elementTypeAdapter -> elementTypeAdapter
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    java.util.Collection read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.DateTypeAdapter -> com.google.gson.internal.bind.DateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat localFormat -> localFormat
    java.text.DateFormat iso8601Format -> iso8601Format
    java.text.DateFormat buildIso8601Format() -> buildIso8601Format
    java.util.Date read(com.google.gson.stream.JsonReader) -> read
    java.util.Date deserializeToDate(java.lang.String) -> deserializeToDate
    void write(com.google.gson.stream.JsonWriter,java.util.Date) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.DateTypeAdapter$1 -> com.google.gson.internal.bind.DateTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.JsonTreeReader -> com.google.gson.internal.bind.JsonTreeReader:
    java.io.Reader UNREADABLE_READER -> UNREADABLE_READER
    java.lang.Object SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.util.List stack -> stack
    void beginArray() -> beginArray
    void endArray() -> endArray
    void beginObject() -> beginObject
    void endObject() -> endObject
    boolean hasNext() -> hasNext
    com.google.gson.stream.JsonToken peek() -> peek
    java.lang.Object peekStack() -> peekStack
    java.lang.Object popStack() -> popStack
    void expect(com.google.gson.stream.JsonToken) -> expect
    java.lang.String nextName() -> nextName
    java.lang.String nextString() -> nextString
    boolean nextBoolean() -> nextBoolean
    void nextNull() -> nextNull
    double nextDouble() -> nextDouble
    long nextLong() -> nextLong
    int nextInt() -> nextInt
    void close() -> close
    void skipValue() -> skipValue
    java.lang.String toString() -> toString
    void promoteNameToValue() -> promoteNameToValue
com.google.gson.internal.bind.JsonTreeReader$1 -> com.google.gson.internal.bind.JsonTreeReader$1:
    int read(char[],int,int) -> read
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter -> com.google.gson.internal.bind.JsonTreeWriter:
    java.io.Writer UNWRITABLE_WRITER -> UNWRITABLE_WRITER
    com.google.gson.JsonPrimitive SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.util.List stack -> stack
    java.lang.String pendingName -> pendingName
    com.google.gson.JsonElement product -> product
    com.google.gson.JsonElement get() -> get
    com.google.gson.JsonElement peek() -> peek
    void put(com.google.gson.JsonElement) -> put
    com.google.gson.stream.JsonWriter beginArray() -> beginArray
    com.google.gson.stream.JsonWriter endArray() -> endArray
    com.google.gson.stream.JsonWriter beginObject() -> beginObject
    com.google.gson.stream.JsonWriter endObject() -> endObject
    com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    com.google.gson.stream.JsonWriter nullValue() -> nullValue
    com.google.gson.stream.JsonWriter value(boolean) -> value
    com.google.gson.stream.JsonWriter value(double) -> value
    com.google.gson.stream.JsonWriter value(long) -> value
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter$1 -> com.google.gson.internal.bind.JsonTreeWriter$1:
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.MapTypeAdapterFactory -> com.google.gson.internal.bind.MapTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    boolean complexMapKeySerialization -> complexMapKeySerialization
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type) -> getKeyAdapter
    boolean access$000(com.google.gson.internal.bind.MapTypeAdapterFactory) -> access$000
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter:
    com.google.gson.TypeAdapter keyTypeAdapter -> keyTypeAdapter
    com.google.gson.TypeAdapter valueTypeAdapter -> valueTypeAdapter
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    com.google.gson.internal.bind.MapTypeAdapterFactory this$0 -> this$0
    java.util.Map read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Map) -> write
    java.lang.String keyToString(com.google.gson.JsonElement) -> keyToString
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter -> com.google.gson.internal.bind.ObjectTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    com.google.gson.Gson gson -> gson
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> com.google.gson.internal.bind.ObjectTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.ObjectTypeAdapter$2 -> com.google.gson.internal.bind.ObjectTypeAdapter$2:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    com.google.gson.internal.Excluder excluder -> excluder
    boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    java.lang.String getFieldName(java.lang.reflect.Field) -> getFieldName
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean) -> createBoundField
    java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class) -> getBoundFields
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1:
    com.google.gson.TypeAdapter typeAdapter -> typeAdapter
    com.google.gson.Gson val$context -> val$context
    com.google.gson.reflect.TypeToken val$fieldType -> val$fieldType
    java.lang.reflect.Field val$field -> val$field
    boolean val$isPrimitive -> val$isPrimitive
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> this$0
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> read
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter:
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    java.util.Map boundFields -> boundFields
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField:
    java.lang.String name -> name
    boolean serialized -> serialized
    boolean deserialized -> deserialized
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> read
com.google.gson.internal.bind.SqlDateTypeAdapter -> com.google.gson.internal.bind.SqlDateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    java.sql.Date read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Date) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.SqlDateTypeAdapter$1 -> com.google.gson.internal.bind.SqlDateTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TimeTypeAdapter -> com.google.gson.internal.bind.TimeTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    java.sql.Time read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Time) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TimeTypeAdapter$1 -> com.google.gson.internal.bind.TimeTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:
    com.google.gson.Gson context -> context
    com.google.gson.TypeAdapter delegate -> delegate
    java.lang.reflect.Type type -> type
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> getRuntimeTypeIfMoreSpecific
com.google.gson.internal.bind.TypeAdapters -> com.google.gson.internal.bind.TypeAdapters:
    com.google.gson.TypeAdapter CLASS -> CLASS
    com.google.gson.TypeAdapterFactory CLASS_FACTORY -> CLASS_FACTORY
    com.google.gson.TypeAdapter BIT_SET -> BIT_SET
    com.google.gson.TypeAdapterFactory BIT_SET_FACTORY -> BIT_SET_FACTORY
    com.google.gson.TypeAdapter BOOLEAN -> BOOLEAN
    com.google.gson.TypeAdapter BOOLEAN_AS_STRING -> BOOLEAN_AS_STRING
    com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY -> BOOLEAN_FACTORY
    com.google.gson.TypeAdapter BYTE -> BYTE
    com.google.gson.TypeAdapterFactory BYTE_FACTORY -> BYTE_FACTORY
    com.google.gson.TypeAdapter SHORT -> SHORT
    com.google.gson.TypeAdapterFactory SHORT_FACTORY -> SHORT_FACTORY
    com.google.gson.TypeAdapter INTEGER -> INTEGER
    com.google.gson.TypeAdapterFactory INTEGER_FACTORY -> INTEGER_FACTORY
    com.google.gson.TypeAdapter LONG -> LONG
    com.google.gson.TypeAdapter FLOAT -> FLOAT
    com.google.gson.TypeAdapter DOUBLE -> DOUBLE
    com.google.gson.TypeAdapter NUMBER -> NUMBER
    com.google.gson.TypeAdapterFactory NUMBER_FACTORY -> NUMBER_FACTORY
    com.google.gson.TypeAdapter CHARACTER -> CHARACTER
    com.google.gson.TypeAdapterFactory CHARACTER_FACTORY -> CHARACTER_FACTORY
    com.google.gson.TypeAdapter STRING -> STRING
    com.google.gson.TypeAdapter BIG_DECIMAL -> BIG_DECIMAL
    com.google.gson.TypeAdapter BIG_INTEGER -> BIG_INTEGER
    com.google.gson.TypeAdapterFactory STRING_FACTORY -> STRING_FACTORY
    com.google.gson.TypeAdapter STRING_BUILDER -> STRING_BUILDER
    com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY -> STRING_BUILDER_FACTORY
    com.google.gson.TypeAdapter STRING_BUFFER -> STRING_BUFFER
    com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY -> STRING_BUFFER_FACTORY
    com.google.gson.TypeAdapter URL -> URL
    com.google.gson.TypeAdapterFactory URL_FACTORY -> URL_FACTORY
    com.google.gson.TypeAdapter URI -> URI
    com.google.gson.TypeAdapterFactory URI_FACTORY -> URI_FACTORY
    com.google.gson.TypeAdapter INET_ADDRESS -> INET_ADDRESS
    com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY -> INET_ADDRESS_FACTORY
    com.google.gson.TypeAdapter UUID -> UUID
    com.google.gson.TypeAdapterFactory UUID_FACTORY -> UUID_FACTORY
    com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY -> TIMESTAMP_FACTORY
    com.google.gson.TypeAdapter CALENDAR -> CALENDAR
    com.google.gson.TypeAdapterFactory CALENDAR_FACTORY -> CALENDAR_FACTORY
    com.google.gson.TypeAdapter LOCALE -> LOCALE
    com.google.gson.TypeAdapterFactory LOCALE_FACTORY -> LOCALE_FACTORY
    com.google.gson.TypeAdapter JSON_ELEMENT -> JSON_ELEMENT
    com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY -> JSON_ELEMENT_FACTORY
    com.google.gson.TypeAdapterFactory ENUM_FACTORY -> ENUM_FACTORY
    com.google.gson.TypeAdapterFactory newEnumTypeHierarchyFactory() -> newEnumTypeHierarchyFactory
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactoryForMultipleTypes
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newTypeHierarchyFactory
com.google.gson.internal.bind.TypeAdapters$1 -> com.google.gson.internal.bind.TypeAdapters$1:
    void write(com.google.gson.stream.JsonWriter,java.lang.Class) -> write
    java.lang.Class read(com.google.gson.stream.JsonReader) -> read
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$10 -> com.google.gson.internal.bind.TypeAdapters$10:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$11 -> com.google.gson.internal.bind.TypeAdapters$11:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$12 -> com.google.gson.internal.bind.TypeAdapters$12:
    java.lang.Character read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Character) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$13 -> com.google.gson.internal.bind.TypeAdapters$13:
    java.lang.String read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.String) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$14 -> com.google.gson.internal.bind.TypeAdapters$14:
    java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$15 -> com.google.gson.internal.bind.TypeAdapters$15:
    java.math.BigInteger read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$16 -> com.google.gson.internal.bind.TypeAdapters$16:
    java.lang.StringBuilder read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$17 -> com.google.gson.internal.bind.TypeAdapters$17:
    java.lang.StringBuffer read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$18 -> com.google.gson.internal.bind.TypeAdapters$18:
    java.net.URL read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.URL) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$19 -> com.google.gson.internal.bind.TypeAdapters$19:
    java.net.URI read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.URI) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$2 -> com.google.gson.internal.bind.TypeAdapters$2:
    java.util.BitSet read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.BitSet) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$20 -> com.google.gson.internal.bind.TypeAdapters$20:
    java.net.InetAddress read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.InetAddress) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$21 -> com.google.gson.internal.bind.TypeAdapters$21:
    java.util.UUID read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$22 -> com.google.gson.internal.bind.TypeAdapters$22:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$22$1 -> com.google.gson.internal.bind.TypeAdapters$22$1:
    com.google.gson.TypeAdapter val$dateTypeAdapter -> val$dateTypeAdapter
    com.google.gson.internal.bind.TypeAdapters$22 this$0 -> this$0
    java.sql.Timestamp read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$23 -> com.google.gson.internal.bind.TypeAdapters$23:
    java.lang.String YEAR -> YEAR
    java.lang.String MONTH -> MONTH
    java.lang.String DAY_OF_MONTH -> DAY_OF_MONTH
    java.lang.String HOUR_OF_DAY -> HOUR_OF_DAY
    java.lang.String MINUTE -> MINUTE
    java.lang.String SECOND -> SECOND
    java.util.Calendar read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Calendar) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$24 -> com.google.gson.internal.bind.TypeAdapters$24:
    java.util.Locale read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Locale) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$25 -> com.google.gson.internal.bind.TypeAdapters$25:
    com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$26 -> com.google.gson.internal.bind.TypeAdapters$26:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$27 -> com.google.gson.internal.bind.TypeAdapters$27:
    com.google.gson.reflect.TypeToken val$type -> val$type
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$28 -> com.google.gson.internal.bind.TypeAdapters$28:
    java.lang.Class val$type -> val$type
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$29 -> com.google.gson.internal.bind.TypeAdapters$29:
    java.lang.Class val$unboxed -> val$unboxed
    java.lang.Class val$boxed -> val$boxed
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$3 -> com.google.gson.internal.bind.TypeAdapters$3:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$30 -> com.google.gson.internal.bind.TypeAdapters$30:
    java.lang.Class val$base -> val$base
    java.lang.Class val$sub -> val$sub
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$31 -> com.google.gson.internal.bind.TypeAdapters$31:
    java.lang.Class val$clazz -> val$clazz
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$32 -> com.google.gson.internal.bind.TypeAdapters$32:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
com.google.gson.internal.bind.TypeAdapters$4 -> com.google.gson.internal.bind.TypeAdapters$4:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$5 -> com.google.gson.internal.bind.TypeAdapters$5:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$6 -> com.google.gson.internal.bind.TypeAdapters$6:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$7 -> com.google.gson.internal.bind.TypeAdapters$7:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$8 -> com.google.gson.internal.bind.TypeAdapters$8:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$9 -> com.google.gson.internal.bind.TypeAdapters$9:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter:
    java.util.Map nameToConstant -> nameToConstant
    java.util.Map constantToName -> constantToName
    java.lang.Enum read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Enum) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.reflect.TypeToken -> com.google.gson.reflect.TypeToken:
    java.lang.Class rawType -> rawType
    java.lang.reflect.Type type -> type
    int hashCode -> hashCode
    java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> getSuperclassTypeParameter
    java.lang.Class getRawType() -> getRawType
    java.lang.reflect.Type getType() -> getType
    boolean isAssignableFrom(java.lang.Class) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type) -> isAssignableFrom
    boolean isAssignableFrom(com.google.gson.reflect.TypeToken) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> isAssignableFrom
    boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> typeEquals
    java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[]) -> buildUnexpectedTypeError
    boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map) -> matches
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> get
    com.google.gson.reflect.TypeToken get(java.lang.Class) -> get
com.google.gson.stream.JsonReader -> com.google.gson.stream.JsonReader:
    char[] NON_EXECUTE_PREFIX -> NON_EXECUTE_PREFIX
    long MIN_INCOMPLETE_INTEGER -> MIN_INCOMPLETE_INTEGER
    int PEEKED_NONE -> PEEKED_NONE
    int PEEKED_BEGIN_OBJECT -> PEEKED_BEGIN_OBJECT
    int PEEKED_END_OBJECT -> PEEKED_END_OBJECT
    int PEEKED_BEGIN_ARRAY -> PEEKED_BEGIN_ARRAY
    int PEEKED_END_ARRAY -> PEEKED_END_ARRAY
    int PEEKED_TRUE -> PEEKED_TRUE
    int PEEKED_FALSE -> PEEKED_FALSE
    int PEEKED_NULL -> PEEKED_NULL
    int PEEKED_SINGLE_QUOTED -> PEEKED_SINGLE_QUOTED
    int PEEKED_DOUBLE_QUOTED -> PEEKED_DOUBLE_QUOTED
    int PEEKED_UNQUOTED -> PEEKED_UNQUOTED
    int PEEKED_BUFFERED -> PEEKED_BUFFERED
    int PEEKED_SINGLE_QUOTED_NAME -> PEEKED_SINGLE_QUOTED_NAME
    int PEEKED_DOUBLE_QUOTED_NAME -> PEEKED_DOUBLE_QUOTED_NAME
    int PEEKED_UNQUOTED_NAME -> PEEKED_UNQUOTED_NAME
    int PEEKED_LONG -> PEEKED_LONG
    int PEEKED_NUMBER -> PEEKED_NUMBER
    int PEEKED_EOF -> PEEKED_EOF
    int NUMBER_CHAR_NONE -> NUMBER_CHAR_NONE
    int NUMBER_CHAR_SIGN -> NUMBER_CHAR_SIGN
    int NUMBER_CHAR_DIGIT -> NUMBER_CHAR_DIGIT
    int NUMBER_CHAR_DECIMAL -> NUMBER_CHAR_DECIMAL
    int NUMBER_CHAR_FRACTION_DIGIT -> NUMBER_CHAR_FRACTION_DIGIT
    int NUMBER_CHAR_EXP_E -> NUMBER_CHAR_EXP_E
    int NUMBER_CHAR_EXP_SIGN -> NUMBER_CHAR_EXP_SIGN
    int NUMBER_CHAR_EXP_DIGIT -> NUMBER_CHAR_EXP_DIGIT
    java.io.Reader in -> in
    boolean lenient -> lenient
    char[] buffer -> buffer
    int pos -> pos
    int limit -> limit
    int lineNumber -> lineNumber
    int lineStart -> lineStart
    int peeked -> peeked
    long peekedLong -> peekedLong
    int peekedNumberLength -> peekedNumberLength
    java.lang.String peekedString -> peekedString
    int[] stack -> stack
    int stackSize -> stackSize
    void setLenient(boolean) -> setLenient
    boolean isLenient() -> isLenient
    void beginArray() -> beginArray
    void endArray() -> endArray
    void beginObject() -> beginObject
    void endObject() -> endObject
    boolean hasNext() -> hasNext
    com.google.gson.stream.JsonToken peek() -> peek
    int doPeek() -> doPeek
    int peekKeyword() -> peekKeyword
    int peekNumber() -> peekNumber
    boolean isLiteral(char) -> isLiteral
    java.lang.String nextName() -> nextName
    java.lang.String nextString() -> nextString
    boolean nextBoolean() -> nextBoolean
    void nextNull() -> nextNull
    double nextDouble() -> nextDouble
    long nextLong() -> nextLong
    java.lang.String nextQuotedValue(char) -> nextQuotedValue
    java.lang.String nextUnquotedValue() -> nextUnquotedValue
    void skipQuotedValue(char) -> skipQuotedValue
    void skipUnquotedValue() -> skipUnquotedValue
    int nextInt() -> nextInt
    void close() -> close
    void skipValue() -> skipValue
    void push(int) -> push
    boolean fillBuffer(int) -> fillBuffer
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    int nextNonWhitespace(boolean) -> nextNonWhitespace
    void checkLenient() -> checkLenient
    void skipToEndOfLine() -> skipToEndOfLine
    boolean skipTo(java.lang.String) -> skipTo
    java.lang.String toString() -> toString
    char readEscapeCharacter() -> readEscapeCharacter
    java.io.IOException syntaxError(java.lang.String) -> syntaxError
    void consumeNonExecutePrefix() -> consumeNonExecutePrefix
    int access$000(com.google.gson.stream.JsonReader) -> access$000
    int access$100(com.google.gson.stream.JsonReader) -> access$100
    int access$002(com.google.gson.stream.JsonReader,int) -> access$002
    int access$200(com.google.gson.stream.JsonReader) -> access$200
    int access$300(com.google.gson.stream.JsonReader) -> access$300
com.google.gson.stream.JsonReader$1 -> com.google.gson.stream.JsonReader$1:
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.stream.JsonScope -> com.google.gson.stream.JsonScope:
    int EMPTY_ARRAY -> EMPTY_ARRAY
    int NONEMPTY_ARRAY -> NONEMPTY_ARRAY
    int EMPTY_OBJECT -> EMPTY_OBJECT
    int DANGLING_NAME -> DANGLING_NAME
    int NONEMPTY_OBJECT -> NONEMPTY_OBJECT
    int EMPTY_DOCUMENT -> EMPTY_DOCUMENT
    int NONEMPTY_DOCUMENT -> NONEMPTY_DOCUMENT
    int CLOSED -> CLOSED
com.google.gson.stream.JsonToken -> com.google.gson.stream.JsonToken:
    com.google.gson.stream.JsonToken BEGIN_ARRAY -> BEGIN_ARRAY
    com.google.gson.stream.JsonToken END_ARRAY -> END_ARRAY
    com.google.gson.stream.JsonToken BEGIN_OBJECT -> BEGIN_OBJECT
    com.google.gson.stream.JsonToken END_OBJECT -> END_OBJECT
    com.google.gson.stream.JsonToken NAME -> NAME
    com.google.gson.stream.JsonToken STRING -> STRING
    com.google.gson.stream.JsonToken NUMBER -> NUMBER
    com.google.gson.stream.JsonToken BOOLEAN -> BOOLEAN
    com.google.gson.stream.JsonToken NULL -> NULL
    com.google.gson.stream.JsonToken END_DOCUMENT -> END_DOCUMENT
    com.google.gson.stream.JsonToken[] $VALUES -> $VALUES
    com.google.gson.stream.JsonToken[] values() -> values
    com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonWriter -> com.google.gson.stream.JsonWriter:
    java.lang.String[] REPLACEMENT_CHARS -> REPLACEMENT_CHARS
    java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS -> HTML_SAFE_REPLACEMENT_CHARS
    java.io.Writer out -> out
    int[] stack -> stack
    int stackSize -> stackSize
    java.lang.String indent -> indent
    java.lang.String separator -> separator
    boolean lenient -> lenient
    boolean htmlSafe -> htmlSafe
    java.lang.String deferredName -> deferredName
    boolean serializeNulls -> serializeNulls
    void setIndent(java.lang.String) -> setIndent
    void setLenient(boolean) -> setLenient
    boolean isLenient() -> isLenient
    void setHtmlSafe(boolean) -> setHtmlSafe
    boolean isHtmlSafe() -> isHtmlSafe
    void setSerializeNulls(boolean) -> setSerializeNulls
    boolean getSerializeNulls() -> getSerializeNulls
    com.google.gson.stream.JsonWriter beginArray() -> beginArray
    com.google.gson.stream.JsonWriter endArray() -> endArray
    com.google.gson.stream.JsonWriter beginObject() -> beginObject
    com.google.gson.stream.JsonWriter endObject() -> endObject
    com.google.gson.stream.JsonWriter open(int,java.lang.String) -> open
    com.google.gson.stream.JsonWriter close(int,int,java.lang.String) -> close
    void push(int) -> push
    int peek() -> peek
    void replaceTop(int) -> replaceTop
    com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    void writeDeferredName() -> writeDeferredName
    com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    com.google.gson.stream.JsonWriter nullValue() -> nullValue
    com.google.gson.stream.JsonWriter value(boolean) -> value
    com.google.gson.stream.JsonWriter value(double) -> value
    com.google.gson.stream.JsonWriter value(long) -> value
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    void flush() -> flush
    void close() -> close
    void string(java.lang.String) -> string
    void newline() -> newline
    void beforeName() -> beforeName
    void beforeValue(boolean) -> beforeValue
com.google.gson.stream.MalformedJsonException -> com.google.gson.stream.MalformedJsonException:
    long serialVersionUID -> serialVersionUID
com.google.zxing.BarcodeFormat -> com.google.zxing.BarcodeFormat:
    com.google.zxing.BarcodeFormat AZTEC -> AZTEC
    com.google.zxing.BarcodeFormat CODABAR -> CODABAR
    com.google.zxing.BarcodeFormat CODE_39 -> CODE_39
    com.google.zxing.BarcodeFormat CODE_93 -> CODE_93
    com.google.zxing.BarcodeFormat CODE_128 -> CODE_128
    com.google.zxing.BarcodeFormat DATA_MATRIX -> DATA_MATRIX
    com.google.zxing.BarcodeFormat EAN_8 -> EAN_8
    com.google.zxing.BarcodeFormat EAN_13 -> EAN_13
    com.google.zxing.BarcodeFormat ITF -> ITF
    com.google.zxing.BarcodeFormat MAXICODE -> MAXICODE
    com.google.zxing.BarcodeFormat PDF_417 -> PDF_417
    com.google.zxing.BarcodeFormat QR_CODE -> QR_CODE
    com.google.zxing.BarcodeFormat RSS_14 -> RSS_14
    com.google.zxing.BarcodeFormat RSS_EXPANDED -> RSS_EXPANDED
    com.google.zxing.BarcodeFormat UPC_A -> UPC_A
    com.google.zxing.BarcodeFormat UPC_E -> UPC_E
    com.google.zxing.BarcodeFormat UPC_EAN_EXTENSION -> UPC_EAN_EXTENSION
    com.google.zxing.BarcodeFormat[] $VALUES -> $VALUES
    com.google.zxing.BarcodeFormat[] values() -> values
    com.google.zxing.BarcodeFormat valueOf(java.lang.String) -> valueOf
com.google.zxing.Binarizer -> com.google.zxing.Binarizer:
    com.google.zxing.LuminanceSource source -> source
    com.google.zxing.LuminanceSource getLuminanceSource() -> getLuminanceSource
    com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> getBlackRow
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> createBinarizer
    int getWidth() -> getWidth
    int getHeight() -> getHeight
com.google.zxing.BinaryBitmap -> com.google.zxing.BinaryBitmap:
    com.google.zxing.Binarizer binarizer -> binarizer
    com.google.zxing.common.BitMatrix matrix -> matrix
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> getBlackRow
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    boolean isCropSupported() -> isCropSupported
    com.google.zxing.BinaryBitmap crop(int,int,int,int) -> crop
    boolean isRotateSupported() -> isRotateSupported
    com.google.zxing.BinaryBitmap rotateCounterClockwise() -> rotateCounterClockwise
    com.google.zxing.BinaryBitmap rotateCounterClockwise45() -> rotateCounterClockwise45
com.google.zxing.ChecksumException -> com.google.zxing.ChecksumException:
    com.google.zxing.ChecksumException instance -> instance
    com.google.zxing.ChecksumException getChecksumInstance() -> getChecksumInstance
com.google.zxing.DecodeHintType -> com.google.zxing.DecodeHintType:
    com.google.zxing.DecodeHintType OTHER -> OTHER
    com.google.zxing.DecodeHintType PURE_BARCODE -> PURE_BARCODE
    com.google.zxing.DecodeHintType POSSIBLE_FORMATS -> POSSIBLE_FORMATS
    com.google.zxing.DecodeHintType TRY_HARDER -> TRY_HARDER
    com.google.zxing.DecodeHintType CHARACTER_SET -> CHARACTER_SET
    com.google.zxing.DecodeHintType ALLOWED_LENGTHS -> ALLOWED_LENGTHS
    com.google.zxing.DecodeHintType ASSUME_CODE_39_CHECK_DIGIT -> ASSUME_CODE_39_CHECK_DIGIT
    com.google.zxing.DecodeHintType ASSUME_GS1 -> ASSUME_GS1
    com.google.zxing.DecodeHintType RETURN_CODABAR_START_END -> RETURN_CODABAR_START_END
    com.google.zxing.DecodeHintType NEED_RESULT_POINT_CALLBACK -> NEED_RESULT_POINT_CALLBACK
    java.lang.Class valueType -> valueType
    com.google.zxing.DecodeHintType[] $VALUES -> $VALUES
    com.google.zxing.DecodeHintType[] values() -> values
    com.google.zxing.DecodeHintType valueOf(java.lang.String) -> valueOf
    java.lang.Class getValueType() -> getValueType
com.google.zxing.Dimension -> com.google.zxing.Dimension:
    int width -> width
    int height -> height
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.zxing.EncodeHintType -> com.google.zxing.EncodeHintType:
    com.google.zxing.EncodeHintType ERROR_CORRECTION -> ERROR_CORRECTION
    com.google.zxing.EncodeHintType CHARACTER_SET -> CHARACTER_SET
    com.google.zxing.EncodeHintType DATA_MATRIX_SHAPE -> DATA_MATRIX_SHAPE
    com.google.zxing.EncodeHintType MIN_SIZE -> MIN_SIZE
    com.google.zxing.EncodeHintType MAX_SIZE -> MAX_SIZE
    com.google.zxing.EncodeHintType MARGIN -> MARGIN
    com.google.zxing.EncodeHintType PDF417_COMPACT -> PDF417_COMPACT
    com.google.zxing.EncodeHintType PDF417_COMPACTION -> PDF417_COMPACTION
    com.google.zxing.EncodeHintType PDF417_DIMENSIONS -> PDF417_DIMENSIONS
    com.google.zxing.EncodeHintType AZTEC_LAYERS -> AZTEC_LAYERS
    com.google.zxing.EncodeHintType[] $VALUES -> $VALUES
    com.google.zxing.EncodeHintType[] values() -> values
    com.google.zxing.EncodeHintType valueOf(java.lang.String) -> valueOf
com.google.zxing.FormatException -> com.google.zxing.FormatException:
    com.google.zxing.FormatException instance -> instance
    com.google.zxing.FormatException getFormatInstance() -> getFormatInstance
com.google.zxing.InvertedLuminanceSource -> com.google.zxing.InvertedLuminanceSource:
    com.google.zxing.LuminanceSource delegate -> delegate
    byte[] getRow(int,byte[]) -> getRow
    byte[] getMatrix() -> getMatrix
    boolean isCropSupported() -> isCropSupported
    com.google.zxing.LuminanceSource crop(int,int,int,int) -> crop
    boolean isRotateSupported() -> isRotateSupported
    com.google.zxing.LuminanceSource invert() -> invert
    com.google.zxing.LuminanceSource rotateCounterClockwise() -> rotateCounterClockwise
    com.google.zxing.LuminanceSource rotateCounterClockwise45() -> rotateCounterClockwise45
com.google.zxing.LuminanceSource -> com.google.zxing.LuminanceSource:
    int width -> width
    int height -> height
    byte[] getRow(int,byte[]) -> getRow
    byte[] getMatrix() -> getMatrix
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    boolean isCropSupported() -> isCropSupported
    com.google.zxing.LuminanceSource crop(int,int,int,int) -> crop
    boolean isRotateSupported() -> isRotateSupported
    com.google.zxing.LuminanceSource invert() -> invert
    com.google.zxing.LuminanceSource rotateCounterClockwise() -> rotateCounterClockwise
    com.google.zxing.LuminanceSource rotateCounterClockwise45() -> rotateCounterClockwise45
    java.lang.String toString() -> toString
com.google.zxing.MultiFormatReader -> com.google.zxing.MultiFormatReader:
    java.util.Map hints -> hints
    com.google.zxing.Reader[] readers -> readers
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    com.google.zxing.Result decodeWithState(com.google.zxing.BinaryBitmap) -> decodeWithState
    void setHints(java.util.Map) -> setHints
    void reset() -> reset
    com.google.zxing.Result decodeInternal(com.google.zxing.BinaryBitmap) -> decodeInternal
com.google.zxing.MultiFormatWriter -> com.google.zxing.MultiFormatWriter:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
com.google.zxing.MultiFormatWriter$1 -> com.google.zxing.MultiFormatWriter$1:
    int[] $SwitchMap$com$google$zxing$BarcodeFormat -> $SwitchMap$com$google$zxing$BarcodeFormat
com.google.zxing.NotFoundException -> com.google.zxing.NotFoundException:
    com.google.zxing.NotFoundException instance -> instance
    com.google.zxing.NotFoundException getNotFoundInstance() -> getNotFoundInstance
com.google.zxing.PlanarYUVLuminanceSource -> com.google.zxing.PlanarYUVLuminanceSource:
    int THUMBNAIL_SCALE_FACTOR -> THUMBNAIL_SCALE_FACTOR
    byte[] yuvData -> yuvData
    int dataWidth -> dataWidth
    int dataHeight -> dataHeight
    int left -> left
    int top -> top
    byte[] getRow(int,byte[]) -> getRow
    byte[] getMatrix() -> getMatrix
    boolean isCropSupported() -> isCropSupported
    com.google.zxing.LuminanceSource crop(int,int,int,int) -> crop
    int[] renderThumbnail() -> renderThumbnail
    int getThumbnailWidth() -> getThumbnailWidth
    int getThumbnailHeight() -> getThumbnailHeight
    void reverseHorizontal(int,int) -> reverseHorizontal
com.google.zxing.RGBLuminanceSource -> com.google.zxing.RGBLuminanceSource:
    byte[] luminances -> luminances
    int dataWidth -> dataWidth
    int dataHeight -> dataHeight
    int left -> left
    int top -> top
    byte[] getRow(int,byte[]) -> getRow
    byte[] getMatrix() -> getMatrix
    boolean isCropSupported() -> isCropSupported
    com.google.zxing.LuminanceSource crop(int,int,int,int) -> crop
com.google.zxing.Reader -> com.google.zxing.Reader:
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
com.google.zxing.ReaderException -> com.google.zxing.ReaderException:
    java.lang.Throwable fillInStackTrace() -> fillInStackTrace
com.google.zxing.Result -> com.google.zxing.Result:
    java.lang.String text -> text
    byte[] rawBytes -> rawBytes
    com.google.zxing.ResultPoint[] resultPoints -> resultPoints
    com.google.zxing.BarcodeFormat format -> format
    java.util.Map resultMetadata -> resultMetadata
    long timestamp -> timestamp
    java.lang.String getText() -> getText
    byte[] getRawBytes() -> getRawBytes
    com.google.zxing.ResultPoint[] getResultPoints() -> getResultPoints
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    java.util.Map getResultMetadata() -> getResultMetadata
    void putMetadata(com.google.zxing.ResultMetadataType,java.lang.Object) -> putMetadata
    void putAllMetadata(java.util.Map) -> putAllMetadata
    void addResultPoints(com.google.zxing.ResultPoint[]) -> addResultPoints
    long getTimestamp() -> getTimestamp
    java.lang.String toString() -> toString
com.google.zxing.ResultMetadataType -> com.google.zxing.ResultMetadataType:
    com.google.zxing.ResultMetadataType OTHER -> OTHER
    com.google.zxing.ResultMetadataType ORIENTATION -> ORIENTATION
    com.google.zxing.ResultMetadataType BYTE_SEGMENTS -> BYTE_SEGMENTS
    com.google.zxing.ResultMetadataType ERROR_CORRECTION_LEVEL -> ERROR_CORRECTION_LEVEL
    com.google.zxing.ResultMetadataType ISSUE_NUMBER -> ISSUE_NUMBER
    com.google.zxing.ResultMetadataType SUGGESTED_PRICE -> SUGGESTED_PRICE
    com.google.zxing.ResultMetadataType POSSIBLE_COUNTRY -> POSSIBLE_COUNTRY
    com.google.zxing.ResultMetadataType UPC_EAN_EXTENSION -> UPC_EAN_EXTENSION
    com.google.zxing.ResultMetadataType PDF417_EXTRA_METADATA -> PDF417_EXTRA_METADATA
    com.google.zxing.ResultMetadataType[] $VALUES -> $VALUES
    com.google.zxing.ResultMetadataType[] values() -> values
    com.google.zxing.ResultMetadataType valueOf(java.lang.String) -> valueOf
com.google.zxing.ResultPoint -> com.google.zxing.ResultPoint:
    float x -> x
    float y -> y
    float getX() -> getX
    float getY() -> getY
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void orderBestPatterns(com.google.zxing.ResultPoint[]) -> orderBestPatterns
    float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> distance
    float crossProductZ(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> crossProductZ
com.google.zxing.ResultPointCallback -> com.google.zxing.ResultPointCallback:
    void foundPossibleResultPoint(com.google.zxing.ResultPoint) -> foundPossibleResultPoint
com.google.zxing.Writer -> com.google.zxing.Writer:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
com.google.zxing.WriterException -> com.google.zxing.WriterException:
com.google.zxing.aztec.AztecDetectorResult -> com.google.zxing.aztec.AztecDetectorResult:
    boolean compact -> compact
    int nbDatablocks -> nbDatablocks
    int nbLayers -> nbLayers
    int getNbLayers() -> getNbLayers
    int getNbDatablocks() -> getNbDatablocks
    boolean isCompact() -> isCompact
com.google.zxing.aztec.AztecReader -> com.google.zxing.aztec.AztecReader:
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
com.google.zxing.aztec.AztecWriter -> com.google.zxing.aztec.AztecWriter:
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.nio.charset.Charset,int,int) -> encode
    com.google.zxing.common.BitMatrix renderResult(com.google.zxing.aztec.encoder.AztecCode,int,int) -> renderResult
com.google.zxing.aztec.decoder.Decoder -> com.google.zxing.aztec.decoder.Decoder:
    java.lang.String[] UPPER_TABLE -> UPPER_TABLE
    java.lang.String[] LOWER_TABLE -> LOWER_TABLE
    java.lang.String[] MIXED_TABLE -> MIXED_TABLE
    java.lang.String[] PUNCT_TABLE -> PUNCT_TABLE
    java.lang.String[] DIGIT_TABLE -> DIGIT_TABLE
    com.google.zxing.aztec.AztecDetectorResult ddata -> ddata
    com.google.zxing.common.DecoderResult decode(com.google.zxing.aztec.AztecDetectorResult) -> decode
    java.lang.String highLevelDecode(boolean[]) -> highLevelDecode
    java.lang.String getEncodedData(boolean[]) -> getEncodedData
    com.google.zxing.aztec.decoder.Decoder$Table getTable(char) -> getTable
    java.lang.String getCharacter(com.google.zxing.aztec.decoder.Decoder$Table,int) -> getCharacter
    boolean[] correctBits(boolean[]) -> correctBits
    boolean[] extractBits(com.google.zxing.common.BitMatrix) -> extractBits
    int readCode(boolean[],int,int) -> readCode
    int totalBitsInLayer(int,boolean) -> totalBitsInLayer
com.google.zxing.aztec.decoder.Decoder$1 -> com.google.zxing.aztec.decoder.Decoder$1:
    int[] $SwitchMap$com$google$zxing$aztec$decoder$Decoder$Table -> $SwitchMap$com$google$zxing$aztec$decoder$Decoder$Table
com.google.zxing.aztec.decoder.Decoder$Table -> com.google.zxing.aztec.decoder.Decoder$Table:
    com.google.zxing.aztec.decoder.Decoder$Table UPPER -> UPPER
    com.google.zxing.aztec.decoder.Decoder$Table LOWER -> LOWER
    com.google.zxing.aztec.decoder.Decoder$Table MIXED -> MIXED
    com.google.zxing.aztec.decoder.Decoder$Table DIGIT -> DIGIT
    com.google.zxing.aztec.decoder.Decoder$Table PUNCT -> PUNCT
    com.google.zxing.aztec.decoder.Decoder$Table BINARY -> BINARY
    com.google.zxing.aztec.decoder.Decoder$Table[] $VALUES -> $VALUES
    com.google.zxing.aztec.decoder.Decoder$Table[] values() -> values
    com.google.zxing.aztec.decoder.Decoder$Table valueOf(java.lang.String) -> valueOf
com.google.zxing.aztec.detector.Detector -> com.google.zxing.aztec.detector.Detector:
    com.google.zxing.common.BitMatrix image -> image
    boolean compact -> compact
    int nbLayers -> nbLayers
    int nbDataBlocks -> nbDataBlocks
    int nbCenterLayers -> nbCenterLayers
    int shift -> shift
    int[] EXPECTED_CORNER_BITS -> EXPECTED_CORNER_BITS
    com.google.zxing.aztec.AztecDetectorResult detect() -> detect
    com.google.zxing.aztec.AztecDetectorResult detect(boolean) -> detect
    void extractParameters(com.google.zxing.ResultPoint[]) -> extractParameters
    int getRotation(int[],int) -> getRotation
    int getCorrectedParameterData(long,boolean) -> getCorrectedParameterData
    com.google.zxing.ResultPoint[] getBullsEyeCorners(com.google.zxing.aztec.detector.Detector$Point) -> getBullsEyeCorners
    com.google.zxing.aztec.detector.Detector$Point getMatrixCenter() -> getMatrixCenter
    com.google.zxing.ResultPoint[] getMatrixCornerPoints(com.google.zxing.ResultPoint[]) -> getMatrixCornerPoints
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> sampleGrid
    int sampleLine(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> sampleLine
    boolean isWhiteOrBlackRectangle(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point) -> isWhiteOrBlackRectangle
    int getColor(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point) -> getColor
    com.google.zxing.aztec.detector.Detector$Point getFirstDifferent(com.google.zxing.aztec.detector.Detector$Point,boolean,int,int) -> getFirstDifferent
    com.google.zxing.ResultPoint[] expandSquare(com.google.zxing.ResultPoint[],float,float) -> expandSquare
    boolean isValid(int,int) -> isValid
    boolean isValid(com.google.zxing.ResultPoint) -> isValid
    float distance(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point) -> distance
    float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> distance
    int getDimension() -> getDimension
com.google.zxing.aztec.detector.Detector$Point -> com.google.zxing.aztec.detector.Detector$Point:
    int x -> x
    int y -> y
    com.google.zxing.ResultPoint toResultPoint() -> toResultPoint
    int getX() -> getX
    int getY() -> getY
    java.lang.String toString() -> toString
com.google.zxing.aztec.encoder.AztecCode -> com.google.zxing.aztec.encoder.AztecCode:
    boolean compact -> compact
    int size -> size
    int layers -> layers
    int codeWords -> codeWords
    com.google.zxing.common.BitMatrix matrix -> matrix
    boolean isCompact() -> isCompact
    void setCompact(boolean) -> setCompact
    int getSize() -> getSize
    void setSize(int) -> setSize
    int getLayers() -> getLayers
    void setLayers(int) -> setLayers
    int getCodeWords() -> getCodeWords
    void setCodeWords(int) -> setCodeWords
    com.google.zxing.common.BitMatrix getMatrix() -> getMatrix
    void setMatrix(com.google.zxing.common.BitMatrix) -> setMatrix
com.google.zxing.aztec.encoder.BinaryShiftToken -> com.google.zxing.aztec.encoder.BinaryShiftToken:
    short binaryShiftStart -> binaryShiftStart
    short binaryShiftByteCount -> binaryShiftByteCount
    void appendTo(com.google.zxing.common.BitArray,byte[]) -> appendTo
    java.lang.String toString() -> toString
com.google.zxing.aztec.encoder.Encoder -> com.google.zxing.aztec.encoder.Encoder:
    int DEFAULT_EC_PERCENT -> DEFAULT_EC_PERCENT
    int DEFAULT_AZTEC_LAYERS -> DEFAULT_AZTEC_LAYERS
    int MAX_NB_BITS -> MAX_NB_BITS
    int MAX_NB_BITS_COMPACT -> MAX_NB_BITS_COMPACT
    int[] WORD_SIZE -> WORD_SIZE
    com.google.zxing.aztec.encoder.AztecCode encode(byte[]) -> encode
    com.google.zxing.aztec.encoder.AztecCode encode(byte[],int,int) -> encode
    void drawBullsEye(com.google.zxing.common.BitMatrix,int,int) -> drawBullsEye
    com.google.zxing.common.BitArray generateModeMessage(boolean,int,int) -> generateModeMessage
    void drawModeMessage(com.google.zxing.common.BitMatrix,boolean,int,com.google.zxing.common.BitArray) -> drawModeMessage
    com.google.zxing.common.BitArray generateCheckWords(com.google.zxing.common.BitArray,int,int) -> generateCheckWords
    int[] bitsToWords(com.google.zxing.common.BitArray,int,int) -> bitsToWords
    com.google.zxing.common.reedsolomon.GenericGF getGF(int) -> getGF
    com.google.zxing.common.BitArray stuffBits(com.google.zxing.common.BitArray,int) -> stuffBits
    int totalBitsInLayer(int,boolean) -> totalBitsInLayer
com.google.zxing.aztec.encoder.HighLevelEncoder -> com.google.zxing.aztec.encoder.HighLevelEncoder:
    java.lang.String[] MODE_NAMES -> MODE_NAMES
    int MODE_UPPER -> MODE_UPPER
    int MODE_LOWER -> MODE_LOWER
    int MODE_DIGIT -> MODE_DIGIT
    int MODE_MIXED -> MODE_MIXED
    int MODE_PUNCT -> MODE_PUNCT
    int[][] LATCH_TABLE -> LATCH_TABLE
    int[][] CHAR_MAP -> CHAR_MAP
    int[][] SHIFT_TABLE -> SHIFT_TABLE
    byte[] text -> text
    com.google.zxing.common.BitArray encode() -> encode
    java.util.Collection updateStateListForChar(java.lang.Iterable,int) -> updateStateListForChar
    void updateStateForChar(com.google.zxing.aztec.encoder.State,int,java.util.Collection) -> updateStateForChar
    java.util.Collection updateStateListForPair(java.lang.Iterable,int,int) -> updateStateListForPair
    void updateStateForPair(com.google.zxing.aztec.encoder.State,int,int,java.util.Collection) -> updateStateForPair
    java.util.Collection simplifyStates(java.lang.Iterable) -> simplifyStates
com.google.zxing.aztec.encoder.HighLevelEncoder$1 -> com.google.zxing.aztec.encoder.HighLevelEncoder$1:
    com.google.zxing.aztec.encoder.HighLevelEncoder this$0 -> this$0
    int compare(com.google.zxing.aztec.encoder.State,com.google.zxing.aztec.encoder.State) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.aztec.encoder.SimpleToken -> com.google.zxing.aztec.encoder.SimpleToken:
    short value -> value
    short bitCount -> bitCount
    void appendTo(com.google.zxing.common.BitArray,byte[]) -> appendTo
    java.lang.String toString() -> toString
com.google.zxing.aztec.encoder.State -> com.google.zxing.aztec.encoder.State:
    com.google.zxing.aztec.encoder.State INITIAL_STATE -> INITIAL_STATE
    int mode -> mode
    com.google.zxing.aztec.encoder.Token token -> token
    int binaryShiftByteCount -> binaryShiftByteCount
    int bitCount -> bitCount
    int getMode() -> getMode
    com.google.zxing.aztec.encoder.Token getToken() -> getToken
    int getBinaryShiftByteCount() -> getBinaryShiftByteCount
    int getBitCount() -> getBitCount
    com.google.zxing.aztec.encoder.State latchAndAppend(int,int) -> latchAndAppend
    com.google.zxing.aztec.encoder.State shiftAndAppend(int,int) -> shiftAndAppend
    com.google.zxing.aztec.encoder.State addBinaryShiftChar(int) -> addBinaryShiftChar
    com.google.zxing.aztec.encoder.State endBinaryShift(int) -> endBinaryShift
    boolean isBetterThanOrEqualTo(com.google.zxing.aztec.encoder.State) -> isBetterThanOrEqualTo
    com.google.zxing.common.BitArray toBitArray(byte[]) -> toBitArray
    java.lang.String toString() -> toString
com.google.zxing.aztec.encoder.Token -> com.google.zxing.aztec.encoder.Token:
    com.google.zxing.aztec.encoder.Token EMPTY -> EMPTY
    com.google.zxing.aztec.encoder.Token previous -> previous
    com.google.zxing.aztec.encoder.Token getPrevious() -> getPrevious
    com.google.zxing.aztec.encoder.Token add(int,int) -> add
    com.google.zxing.aztec.encoder.Token addBinaryShift(int,int) -> addBinaryShift
    void appendTo(com.google.zxing.common.BitArray,byte[]) -> appendTo
com.google.zxing.client.result.AbstractDoCoMoResultParser -> com.google.zxing.client.result.AbstractDoCoMoResultParser:
    java.lang.String[] matchDoCoMoPrefixedField(java.lang.String,java.lang.String,boolean) -> matchDoCoMoPrefixedField
    java.lang.String matchSingleDoCoMoPrefixedField(java.lang.String,java.lang.String,boolean) -> matchSingleDoCoMoPrefixedField
com.google.zxing.client.result.AddressBookAUResultParser -> com.google.zxing.client.result.AddressBookAUResultParser:
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String[] matchMultipleValuePrefix(java.lang.String,int,java.lang.String,boolean) -> matchMultipleValuePrefix
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.AddressBookDoCoMoResultParser -> com.google.zxing.client.result.AddressBookDoCoMoResultParser:
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String parseName(java.lang.String) -> parseName
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.AddressBookParsedResult -> com.google.zxing.client.result.AddressBookParsedResult:
    java.lang.String[] names -> names
    java.lang.String[] nicknames -> nicknames
    java.lang.String pronunciation -> pronunciation
    java.lang.String[] phoneNumbers -> phoneNumbers
    java.lang.String[] phoneTypes -> phoneTypes
    java.lang.String[] emails -> emails
    java.lang.String[] emailTypes -> emailTypes
    java.lang.String instantMessenger -> instantMessenger
    java.lang.String note -> note
    java.lang.String[] addresses -> addresses
    java.lang.String[] addressTypes -> addressTypes
    java.lang.String org -> org
    java.lang.String birthday -> birthday
    java.lang.String title -> title
    java.lang.String[] urls -> urls
    java.lang.String[] geo -> geo
    java.lang.String[] getNames() -> getNames
    java.lang.String[] getNicknames() -> getNicknames
    java.lang.String getPronunciation() -> getPronunciation
    java.lang.String[] getPhoneNumbers() -> getPhoneNumbers
    java.lang.String[] getPhoneTypes() -> getPhoneTypes
    java.lang.String[] getEmails() -> getEmails
    java.lang.String[] getEmailTypes() -> getEmailTypes
    java.lang.String getInstantMessenger() -> getInstantMessenger
    java.lang.String getNote() -> getNote
    java.lang.String[] getAddresses() -> getAddresses
    java.lang.String[] getAddressTypes() -> getAddressTypes
    java.lang.String getTitle() -> getTitle
    java.lang.String getOrg() -> getOrg
    java.lang.String[] getURLs() -> getURLs
    java.lang.String getBirthday() -> getBirthday
    java.lang.String[] getGeo() -> getGeo
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.BizcardResultParser -> com.google.zxing.client.result.BizcardResultParser:
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String[] buildPhoneNumbers(java.lang.String,java.lang.String,java.lang.String) -> buildPhoneNumbers
    java.lang.String buildName(java.lang.String,java.lang.String) -> buildName
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.BookmarkDoCoMoResultParser -> com.google.zxing.client.result.BookmarkDoCoMoResultParser:
    com.google.zxing.client.result.URIParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.CalendarParsedResult -> com.google.zxing.client.result.CalendarParsedResult:
    java.util.regex.Pattern RFC2445_DURATION -> RFC2445_DURATION
    long[] RFC2445_DURATION_FIELD_UNITS -> RFC2445_DURATION_FIELD_UNITS
    java.util.regex.Pattern DATE_TIME -> DATE_TIME
    java.text.DateFormat DATE_FORMAT -> DATE_FORMAT
    java.text.DateFormat DATE_TIME_FORMAT -> DATE_TIME_FORMAT
    java.lang.String summary -> summary
    java.util.Date start -> start
    boolean startAllDay -> startAllDay
    java.util.Date end -> end
    boolean endAllDay -> endAllDay
    java.lang.String location -> location
    java.lang.String organizer -> organizer
    java.lang.String[] attendees -> attendees
    java.lang.String description -> description
    double latitude -> latitude
    double longitude -> longitude
    java.lang.String getSummary() -> getSummary
    java.util.Date getStart() -> getStart
    boolean isStartAllDay() -> isStartAllDay
    java.util.Date getEnd() -> getEnd
    boolean isEndAllDay() -> isEndAllDay
    java.lang.String getLocation() -> getLocation
    java.lang.String getOrganizer() -> getOrganizer
    java.lang.String[] getAttendees() -> getAttendees
    java.lang.String getDescription() -> getDescription
    double getLatitude() -> getLatitude
    double getLongitude() -> getLongitude
    java.lang.String getDisplayResult() -> getDisplayResult
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.lang.String format(boolean,java.util.Date) -> format
    long parseDurationMS(java.lang.CharSequence) -> parseDurationMS
com.google.zxing.client.result.EmailAddressParsedResult -> com.google.zxing.client.result.EmailAddressParsedResult:
    java.lang.String emailAddress -> emailAddress
    java.lang.String subject -> subject
    java.lang.String body -> body
    java.lang.String mailtoURI -> mailtoURI
    java.lang.String getEmailAddress() -> getEmailAddress
    java.lang.String getSubject() -> getSubject
    java.lang.String getBody() -> getBody
    java.lang.String getMailtoURI() -> getMailtoURI
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.EmailAddressResultParser -> com.google.zxing.client.result.EmailAddressResultParser:
    com.google.zxing.client.result.EmailAddressParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.EmailDoCoMoResultParser -> com.google.zxing.client.result.EmailDoCoMoResultParser:
    java.util.regex.Pattern ATEXT_ALPHANUMERIC -> ATEXT_ALPHANUMERIC
    com.google.zxing.client.result.EmailAddressParsedResult parse(com.google.zxing.Result) -> parse
    boolean isBasicallyValidEmailAddress(java.lang.String) -> isBasicallyValidEmailAddress
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ExpandedProductParsedResult -> com.google.zxing.client.result.ExpandedProductParsedResult:
    java.lang.String KILOGRAM -> KILOGRAM
    java.lang.String POUND -> POUND
    java.lang.String rawText -> rawText
    java.lang.String productID -> productID
    java.lang.String sscc -> sscc
    java.lang.String lotNumber -> lotNumber
    java.lang.String productionDate -> productionDate
    java.lang.String packagingDate -> packagingDate
    java.lang.String bestBeforeDate -> bestBeforeDate
    java.lang.String expirationDate -> expirationDate
    java.lang.String weight -> weight
    java.lang.String weightType -> weightType
    java.lang.String weightIncrement -> weightIncrement
    java.lang.String price -> price
    java.lang.String priceIncrement -> priceIncrement
    java.lang.String priceCurrency -> priceCurrency
    java.util.Map uncommonAIs -> uncommonAIs
    boolean equals(java.lang.Object) -> equals
    boolean equalsOrNull(java.lang.Object,java.lang.Object) -> equalsOrNull
    int hashCode() -> hashCode
    int hashNotNull(java.lang.Object) -> hashNotNull
    java.lang.String getRawText() -> getRawText
    java.lang.String getProductID() -> getProductID
    java.lang.String getSscc() -> getSscc
    java.lang.String getLotNumber() -> getLotNumber
    java.lang.String getProductionDate() -> getProductionDate
    java.lang.String getPackagingDate() -> getPackagingDate
    java.lang.String getBestBeforeDate() -> getBestBeforeDate
    java.lang.String getExpirationDate() -> getExpirationDate
    java.lang.String getWeight() -> getWeight
    java.lang.String getWeightType() -> getWeightType
    java.lang.String getWeightIncrement() -> getWeightIncrement
    java.lang.String getPrice() -> getPrice
    java.lang.String getPriceIncrement() -> getPriceIncrement
    java.lang.String getPriceCurrency() -> getPriceCurrency
    java.util.Map getUncommonAIs() -> getUncommonAIs
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.ExpandedProductResultParser -> com.google.zxing.client.result.ExpandedProductResultParser:
    com.google.zxing.client.result.ExpandedProductParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String findAIvalue(int,java.lang.String) -> findAIvalue
    java.lang.String findValue(int,java.lang.String) -> findValue
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.GeoParsedResult -> com.google.zxing.client.result.GeoParsedResult:
    double latitude -> latitude
    double longitude -> longitude
    double altitude -> altitude
    java.lang.String query -> query
    java.lang.String getGeoURI() -> getGeoURI
    double getLatitude() -> getLatitude
    double getLongitude() -> getLongitude
    double getAltitude() -> getAltitude
    java.lang.String getQuery() -> getQuery
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.GeoResultParser -> com.google.zxing.client.result.GeoResultParser:
    java.util.regex.Pattern GEO_URL_PATTERN -> GEO_URL_PATTERN
    com.google.zxing.client.result.GeoParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ISBNParsedResult -> com.google.zxing.client.result.ISBNParsedResult:
    java.lang.String isbn -> isbn
    java.lang.String getISBN() -> getISBN
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.ISBNResultParser -> com.google.zxing.client.result.ISBNResultParser:
    com.google.zxing.client.result.ISBNParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ParsedResult -> com.google.zxing.client.result.ParsedResult:
    com.google.zxing.client.result.ParsedResultType type -> type
    com.google.zxing.client.result.ParsedResultType getType() -> getType
    java.lang.String getDisplayResult() -> getDisplayResult
    java.lang.String toString() -> toString
    void maybeAppend(java.lang.String,java.lang.StringBuilder) -> maybeAppend
    void maybeAppend(java.lang.String[],java.lang.StringBuilder) -> maybeAppend
com.google.zxing.client.result.ParsedResultType -> com.google.zxing.client.result.ParsedResultType:
    com.google.zxing.client.result.ParsedResultType ADDRESSBOOK -> ADDRESSBOOK
    com.google.zxing.client.result.ParsedResultType EMAIL_ADDRESS -> EMAIL_ADDRESS
    com.google.zxing.client.result.ParsedResultType PRODUCT -> PRODUCT
    com.google.zxing.client.result.ParsedResultType URI -> URI
    com.google.zxing.client.result.ParsedResultType TEXT -> TEXT
    com.google.zxing.client.result.ParsedResultType GEO -> GEO
    com.google.zxing.client.result.ParsedResultType TEL -> TEL
    com.google.zxing.client.result.ParsedResultType SMS -> SMS
    com.google.zxing.client.result.ParsedResultType CALENDAR -> CALENDAR
    com.google.zxing.client.result.ParsedResultType WIFI -> WIFI
    com.google.zxing.client.result.ParsedResultType ISBN -> ISBN
    com.google.zxing.client.result.ParsedResultType[] $VALUES -> $VALUES
    com.google.zxing.client.result.ParsedResultType[] values() -> values
    com.google.zxing.client.result.ParsedResultType valueOf(java.lang.String) -> valueOf
com.google.zxing.client.result.ProductParsedResult -> com.google.zxing.client.result.ProductParsedResult:
    java.lang.String productID -> productID
    java.lang.String normalizedProductID -> normalizedProductID
    java.lang.String getProductID() -> getProductID
    java.lang.String getNormalizedProductID() -> getNormalizedProductID
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.ProductResultParser -> com.google.zxing.client.result.ProductResultParser:
    com.google.zxing.client.result.ProductParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ResultParser -> com.google.zxing.client.result.ResultParser:
    com.google.zxing.client.result.ResultParser[] PARSERS -> PARSERS
    java.util.regex.Pattern DIGITS -> DIGITS
    java.util.regex.Pattern ALPHANUM -> ALPHANUM
    java.util.regex.Pattern AMPERSAND -> AMPERSAND
    java.util.regex.Pattern EQUALS -> EQUALS
    java.lang.String BYTE_ORDER_MARK -> BYTE_ORDER_MARK
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String getMassagedText(com.google.zxing.Result) -> getMassagedText
    com.google.zxing.client.result.ParsedResult parseResult(com.google.zxing.Result) -> parseResult
    void maybeAppend(java.lang.String,java.lang.StringBuilder) -> maybeAppend
    void maybeAppend(java.lang.String[],java.lang.StringBuilder) -> maybeAppend
    java.lang.String[] maybeWrap(java.lang.String) -> maybeWrap
    java.lang.String unescapeBackslash(java.lang.String) -> unescapeBackslash
    int parseHexDigit(char) -> parseHexDigit
    boolean isStringOfDigits(java.lang.CharSequence,int) -> isStringOfDigits
    boolean isSubstringOfDigits(java.lang.CharSequence,int,int) -> isSubstringOfDigits
    boolean isSubstringOfAlphaNumeric(java.lang.CharSequence,int,int) -> isSubstringOfAlphaNumeric
    java.util.Map parseNameValuePairs(java.lang.String) -> parseNameValuePairs
    void appendKeyValue(java.lang.CharSequence,java.util.Map) -> appendKeyValue
    java.lang.String urlDecode(java.lang.String) -> urlDecode
    java.lang.String[] matchPrefixedField(java.lang.String,java.lang.String,char,boolean) -> matchPrefixedField
    java.lang.String matchSinglePrefixedField(java.lang.String,java.lang.String,char,boolean) -> matchSinglePrefixedField
com.google.zxing.client.result.SMSMMSResultParser -> com.google.zxing.client.result.SMSMMSResultParser:
    com.google.zxing.client.result.SMSParsedResult parse(com.google.zxing.Result) -> parse
    void addNumberVia(java.util.Collection,java.util.Collection,java.lang.String) -> addNumberVia
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.SMSParsedResult -> com.google.zxing.client.result.SMSParsedResult:
    java.lang.String[] numbers -> numbers
    java.lang.String[] vias -> vias
    java.lang.String subject -> subject
    java.lang.String body -> body
    java.lang.String getSMSURI() -> getSMSURI
    java.lang.String[] getNumbers() -> getNumbers
    java.lang.String[] getVias() -> getVias
    java.lang.String getSubject() -> getSubject
    java.lang.String getBody() -> getBody
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.SMSTOMMSTOResultParser -> com.google.zxing.client.result.SMSTOMMSTOResultParser:
    com.google.zxing.client.result.SMSParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.SMTPResultParser -> com.google.zxing.client.result.SMTPResultParser:
    com.google.zxing.client.result.EmailAddressParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.TelParsedResult -> com.google.zxing.client.result.TelParsedResult:
    java.lang.String number -> number
    java.lang.String telURI -> telURI
    java.lang.String title -> title
    java.lang.String getNumber() -> getNumber
    java.lang.String getTelURI() -> getTelURI
    java.lang.String getTitle() -> getTitle
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.TelResultParser -> com.google.zxing.client.result.TelResultParser:
    com.google.zxing.client.result.TelParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.TextParsedResult -> com.google.zxing.client.result.TextParsedResult:
    java.lang.String text -> text
    java.lang.String language -> language
    java.lang.String getText() -> getText
    java.lang.String getLanguage() -> getLanguage
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.URIParsedResult -> com.google.zxing.client.result.URIParsedResult:
    java.util.regex.Pattern USER_IN_HOST -> USER_IN_HOST
    java.lang.String uri -> uri
    java.lang.String title -> title
    java.lang.String getURI() -> getURI
    java.lang.String getTitle() -> getTitle
    boolean isPossiblyMaliciousURI() -> isPossiblyMaliciousURI
    java.lang.String getDisplayResult() -> getDisplayResult
    java.lang.String massageURI(java.lang.String) -> massageURI
    boolean isColonFollowedByPortNumber(java.lang.String,int) -> isColonFollowedByPortNumber
com.google.zxing.client.result.URIResultParser -> com.google.zxing.client.result.URIResultParser:
    java.util.regex.Pattern URL_WITH_PROTOCOL_PATTERN -> URL_WITH_PROTOCOL_PATTERN
    java.util.regex.Pattern URL_WITHOUT_PROTOCOL_PATTERN -> URL_WITHOUT_PROTOCOL_PATTERN
    com.google.zxing.client.result.URIParsedResult parse(com.google.zxing.Result) -> parse
    boolean isBasicallyValidURI(java.lang.String) -> isBasicallyValidURI
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.URLTOResultParser -> com.google.zxing.client.result.URLTOResultParser:
    com.google.zxing.client.result.URIParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.VCardResultParser -> com.google.zxing.client.result.VCardResultParser:
    java.util.regex.Pattern BEGIN_VCARD -> BEGIN_VCARD
    java.util.regex.Pattern VCARD_LIKE_DATE -> VCARD_LIKE_DATE
    java.util.regex.Pattern CR_LF_SPACE_TAB -> CR_LF_SPACE_TAB
    java.util.regex.Pattern NEWLINE_ESCAPE -> NEWLINE_ESCAPE
    java.util.regex.Pattern VCARD_ESCAPES -> VCARD_ESCAPES
    java.util.regex.Pattern EQUALS -> EQUALS
    java.util.regex.Pattern SEMICOLON -> SEMICOLON
    java.util.regex.Pattern UNESCAPED_SEMICOLONS -> UNESCAPED_SEMICOLONS
    java.util.regex.Pattern COMMA -> COMMA
    java.util.regex.Pattern SEMICOLON_OR_COMMA -> SEMICOLON_OR_COMMA
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.util.List matchVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean,boolean) -> matchVCardPrefixedField
    java.lang.String decodeQuotedPrintable(java.lang.CharSequence,java.lang.String) -> decodeQuotedPrintable
    void maybeAppendFragment(java.io.ByteArrayOutputStream,java.lang.String,java.lang.StringBuilder) -> maybeAppendFragment
    java.util.List matchSingleVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean,boolean) -> matchSingleVCardPrefixedField
    java.lang.String toPrimaryValue(java.util.List) -> toPrimaryValue
    java.lang.String[] toPrimaryValues(java.util.Collection) -> toPrimaryValues
    java.lang.String[] toTypes(java.util.Collection) -> toTypes
    boolean isLikeVCardDate(java.lang.CharSequence) -> isLikeVCardDate
    void formatNames(java.lang.Iterable) -> formatNames
    void maybeAppendComponent(java.lang.String[],int,java.lang.StringBuilder) -> maybeAppendComponent
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.VEventResultParser -> com.google.zxing.client.result.VEventResultParser:
    com.google.zxing.client.result.CalendarParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String matchSingleVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean) -> matchSingleVCardPrefixedField
    java.lang.String[] matchVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean) -> matchVCardPrefixedField
    java.lang.String stripMailto(java.lang.String) -> stripMailto
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.WifiParsedResult -> com.google.zxing.client.result.WifiParsedResult:
    java.lang.String ssid -> ssid
    java.lang.String networkEncryption -> networkEncryption
    java.lang.String password -> password
    boolean hidden -> hidden
    java.lang.String getSsid() -> getSsid
    java.lang.String getNetworkEncryption() -> getNetworkEncryption
    java.lang.String getPassword() -> getPassword
    boolean isHidden() -> isHidden
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.WifiResultParser -> com.google.zxing.client.result.WifiResultParser:
    com.google.zxing.client.result.WifiParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.common.BitArray -> com.google.zxing.common.BitArray:
    int[] bits -> bits
    int size -> size
    int getSize() -> getSize
    int getSizeInBytes() -> getSizeInBytes
    void ensureCapacity(int) -> ensureCapacity
    boolean get(int) -> get
    void set(int) -> set
    void flip(int) -> flip
    int getNextSet(int) -> getNextSet
    int getNextUnset(int) -> getNextUnset
    void setBulk(int,int) -> setBulk
    void setRange(int,int) -> setRange
    void clear() -> clear
    boolean isRange(int,int,boolean) -> isRange
    void appendBit(boolean) -> appendBit
    void appendBits(int,int) -> appendBits
    void appendBitArray(com.google.zxing.common.BitArray) -> appendBitArray
    void xor(com.google.zxing.common.BitArray) -> xor
    void toBytes(int,byte[],int,int) -> toBytes
    int[] getBitArray() -> getBitArray
    void reverse() -> reverse
    int[] makeArray(int) -> makeArray
    java.lang.String toString() -> toString
com.google.zxing.common.BitMatrix -> com.google.zxing.common.BitMatrix:
    int width -> width
    int height -> height
    int rowSize -> rowSize
    int[] bits -> bits
    boolean get(int,int) -> get
    void set(int,int) -> set
    void flip(int,int) -> flip
    void clear() -> clear
    void setRegion(int,int,int,int) -> setRegion
    com.google.zxing.common.BitArray getRow(int,com.google.zxing.common.BitArray) -> getRow
    void setRow(int,com.google.zxing.common.BitArray) -> setRow
    int[] getEnclosingRectangle() -> getEnclosingRectangle
    int[] getTopLeftOnBit() -> getTopLeftOnBit
    int[] getBottomRightOnBit() -> getBottomRightOnBit
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.zxing.common.BitSource -> com.google.zxing.common.BitSource:
    byte[] bytes -> bytes
    int byteOffset -> byteOffset
    int bitOffset -> bitOffset
    int getBitOffset() -> getBitOffset
    int getByteOffset() -> getByteOffset
    int readBits(int) -> readBits
    int available() -> available
com.google.zxing.common.CharacterSetECI -> com.google.zxing.common.CharacterSetECI:
    com.google.zxing.common.CharacterSetECI Cp437 -> Cp437
    com.google.zxing.common.CharacterSetECI ISO8859_1 -> ISO8859_1
    com.google.zxing.common.CharacterSetECI ISO8859_2 -> ISO8859_2
    com.google.zxing.common.CharacterSetECI ISO8859_3 -> ISO8859_3
    com.google.zxing.common.CharacterSetECI ISO8859_4 -> ISO8859_4
    com.google.zxing.common.CharacterSetECI ISO8859_5 -> ISO8859_5
    com.google.zxing.common.CharacterSetECI ISO8859_6 -> ISO8859_6
    com.google.zxing.common.CharacterSetECI ISO8859_7 -> ISO8859_7
    com.google.zxing.common.CharacterSetECI ISO8859_8 -> ISO8859_8
    com.google.zxing.common.CharacterSetECI ISO8859_9 -> ISO8859_9
    com.google.zxing.common.CharacterSetECI ISO8859_10 -> ISO8859_10
    com.google.zxing.common.CharacterSetECI ISO8859_11 -> ISO8859_11
    com.google.zxing.common.CharacterSetECI ISO8859_13 -> ISO8859_13
    com.google.zxing.common.CharacterSetECI ISO8859_14 -> ISO8859_14
    com.google.zxing.common.CharacterSetECI ISO8859_15 -> ISO8859_15
    com.google.zxing.common.CharacterSetECI ISO8859_16 -> ISO8859_16
    com.google.zxing.common.CharacterSetECI SJIS -> SJIS
    com.google.zxing.common.CharacterSetECI Cp1250 -> Cp1250
    com.google.zxing.common.CharacterSetECI Cp1251 -> Cp1251
    com.google.zxing.common.CharacterSetECI Cp1252 -> Cp1252
    com.google.zxing.common.CharacterSetECI Cp1256 -> Cp1256
    com.google.zxing.common.CharacterSetECI UnicodeBigUnmarked -> UnicodeBigUnmarked
    com.google.zxing.common.CharacterSetECI UTF8 -> UTF8
    com.google.zxing.common.CharacterSetECI ASCII -> ASCII
    com.google.zxing.common.CharacterSetECI Big5 -> Big5
    com.google.zxing.common.CharacterSetECI GB18030 -> GB18030
    com.google.zxing.common.CharacterSetECI EUC_KR -> EUC_KR
    java.util.Map VALUE_TO_ECI -> VALUE_TO_ECI
    java.util.Map NAME_TO_ECI -> NAME_TO_ECI
    int[] values -> values
    java.lang.String[] otherEncodingNames -> otherEncodingNames
    com.google.zxing.common.CharacterSetECI[] $VALUES -> $VALUES
    com.google.zxing.common.CharacterSetECI[] values() -> values
    com.google.zxing.common.CharacterSetECI valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    com.google.zxing.common.CharacterSetECI getCharacterSetECIByValue(int) -> getCharacterSetECIByValue
    com.google.zxing.common.CharacterSetECI getCharacterSetECIByName(java.lang.String) -> getCharacterSetECIByName
com.google.zxing.common.DecoderResult -> com.google.zxing.common.DecoderResult:
    byte[] rawBytes -> rawBytes
    java.lang.String text -> text
    java.util.List byteSegments -> byteSegments
    java.lang.String ecLevel -> ecLevel
    java.lang.Integer errorsCorrected -> errorsCorrected
    java.lang.Integer erasures -> erasures
    java.lang.Object other -> other
    byte[] getRawBytes() -> getRawBytes
    java.lang.String getText() -> getText
    java.util.List getByteSegments() -> getByteSegments
    java.lang.String getECLevel() -> getECLevel
    java.lang.Integer getErrorsCorrected() -> getErrorsCorrected
    void setErrorsCorrected(java.lang.Integer) -> setErrorsCorrected
    java.lang.Integer getErasures() -> getErasures
    void setErasures(java.lang.Integer) -> setErasures
    java.lang.Object getOther() -> getOther
    void setOther(java.lang.Object) -> setOther
com.google.zxing.common.DefaultGridSampler -> com.google.zxing.common.DefaultGridSampler:
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> sampleGrid
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,com.google.zxing.common.PerspectiveTransform) -> sampleGrid
com.google.zxing.common.DetectorResult -> com.google.zxing.common.DetectorResult:
    com.google.zxing.common.BitMatrix bits -> bits
    com.google.zxing.ResultPoint[] points -> points
    com.google.zxing.common.BitMatrix getBits() -> getBits
    com.google.zxing.ResultPoint[] getPoints() -> getPoints
com.google.zxing.common.GlobalHistogramBinarizer -> com.google.zxing.common.GlobalHistogramBinarizer:
    int LUMINANCE_BITS -> LUMINANCE_BITS
    int LUMINANCE_SHIFT -> LUMINANCE_SHIFT
    int LUMINANCE_BUCKETS -> LUMINANCE_BUCKETS
    byte[] EMPTY -> EMPTY
    byte[] luminances -> luminances
    int[] buckets -> buckets
    com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> getBlackRow
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> createBinarizer
    void initArrays(int) -> initArrays
    int estimateBlackPoint(int[]) -> estimateBlackPoint
com.google.zxing.common.GridSampler -> com.google.zxing.common.GridSampler:
    com.google.zxing.common.GridSampler gridSampler -> gridSampler
    void setGridSampler(com.google.zxing.common.GridSampler) -> setGridSampler
    com.google.zxing.common.GridSampler getInstance() -> getInstance
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> sampleGrid
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,com.google.zxing.common.PerspectiveTransform) -> sampleGrid
    void checkAndNudgePoints(com.google.zxing.common.BitMatrix,float[]) -> checkAndNudgePoints
com.google.zxing.common.HybridBinarizer -> com.google.zxing.common.HybridBinarizer:
    int BLOCK_SIZE_POWER -> BLOCK_SIZE_POWER
    int BLOCK_SIZE -> BLOCK_SIZE
    int BLOCK_SIZE_MASK -> BLOCK_SIZE_MASK
    int MINIMUM_DIMENSION -> MINIMUM_DIMENSION
    int MIN_DYNAMIC_RANGE -> MIN_DYNAMIC_RANGE
    com.google.zxing.common.BitMatrix matrix -> matrix
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> createBinarizer
    void calculateThresholdForBlock(byte[],int,int,int,int,int[][],com.google.zxing.common.BitMatrix) -> calculateThresholdForBlock
    int cap(int,int,int) -> cap
    void thresholdBlock(byte[],int,int,int,int,com.google.zxing.common.BitMatrix) -> thresholdBlock
    int[][] calculateBlackPoints(byte[],int,int,int,int) -> calculateBlackPoints
com.google.zxing.common.PerspectiveTransform -> com.google.zxing.common.PerspectiveTransform:
    float a11 -> a11
    float a12 -> a12
    float a13 -> a13
    float a21 -> a21
    float a22 -> a22
    float a23 -> a23
    float a31 -> a31
    float a32 -> a32
    float a33 -> a33
    com.google.zxing.common.PerspectiveTransform quadrilateralToQuadrilateral(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> quadrilateralToQuadrilateral
    void transformPoints(float[]) -> transformPoints
    void transformPoints(float[],float[]) -> transformPoints
    com.google.zxing.common.PerspectiveTransform squareToQuadrilateral(float,float,float,float,float,float,float,float) -> squareToQuadrilateral
    com.google.zxing.common.PerspectiveTransform quadrilateralToSquare(float,float,float,float,float,float,float,float) -> quadrilateralToSquare
    com.google.zxing.common.PerspectiveTransform buildAdjoint() -> buildAdjoint
    com.google.zxing.common.PerspectiveTransform times(com.google.zxing.common.PerspectiveTransform) -> times
com.google.zxing.common.StringUtils -> com.google.zxing.common.StringUtils:
    java.lang.String PLATFORM_DEFAULT_ENCODING -> PLATFORM_DEFAULT_ENCODING
    java.lang.String SHIFT_JIS -> SHIFT_JIS
    java.lang.String GB2312 -> GB2312
    java.lang.String EUC_JP -> EUC_JP
    java.lang.String UTF8 -> UTF8
    java.lang.String ISO88591 -> ISO88591
    boolean ASSUME_SHIFT_JIS -> ASSUME_SHIFT_JIS
    java.lang.String guessEncoding(byte[],java.util.Map) -> guessEncoding
com.google.zxing.common.detector.MathUtils -> com.google.zxing.common.detector.MathUtils:
    int round(float) -> round
    float distance(float,float,float,float) -> distance
    float distance(int,int,int,int) -> distance
com.google.zxing.common.detector.MonochromeRectangleDetector -> com.google.zxing.common.detector.MonochromeRectangleDetector:
    int MAX_MODULES -> MAX_MODULES
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.ResultPoint[] detect() -> detect
    com.google.zxing.ResultPoint findCornerFromCenter(int,int,int,int,int,int,int,int,int) -> findCornerFromCenter
    int[] blackWhiteRange(int,int,int,int,boolean) -> blackWhiteRange
com.google.zxing.common.detector.WhiteRectangleDetector -> com.google.zxing.common.detector.WhiteRectangleDetector:
    int INIT_SIZE -> INIT_SIZE
    int CORR -> CORR
    com.google.zxing.common.BitMatrix image -> image
    int height -> height
    int width -> width
    int leftInit -> leftInit
    int rightInit -> rightInit
    int downInit -> downInit
    int upInit -> upInit
    com.google.zxing.ResultPoint[] detect() -> detect
    com.google.zxing.ResultPoint getBlackPointOnSegment(float,float,float,float) -> getBlackPointOnSegment
    com.google.zxing.ResultPoint[] centerEdges(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> centerEdges
    boolean containsBlackPoint(int,int,int,boolean) -> containsBlackPoint
com.google.zxing.common.reedsolomon.GenericGF -> com.google.zxing.common.reedsolomon.GenericGF:
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_12 -> AZTEC_DATA_12
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_10 -> AZTEC_DATA_10
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_6 -> AZTEC_DATA_6
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_PARAM -> AZTEC_PARAM
    com.google.zxing.common.reedsolomon.GenericGF QR_CODE_FIELD_256 -> QR_CODE_FIELD_256
    com.google.zxing.common.reedsolomon.GenericGF DATA_MATRIX_FIELD_256 -> DATA_MATRIX_FIELD_256
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_8 -> AZTEC_DATA_8
    com.google.zxing.common.reedsolomon.GenericGF MAXICODE_FIELD_64 -> MAXICODE_FIELD_64
    int INITIALIZATION_THRESHOLD -> INITIALIZATION_THRESHOLD
    int[] expTable -> expTable
    int[] logTable -> logTable
    com.google.zxing.common.reedsolomon.GenericGFPoly zero -> zero
    com.google.zxing.common.reedsolomon.GenericGFPoly one -> one
    int size -> size
    int primitive -> primitive
    int generatorBase -> generatorBase
    boolean initialized -> initialized
    void initialize() -> initialize
    void checkInit() -> checkInit
    com.google.zxing.common.reedsolomon.GenericGFPoly getZero() -> getZero
    com.google.zxing.common.reedsolomon.GenericGFPoly getOne() -> getOne
    com.google.zxing.common.reedsolomon.GenericGFPoly buildMonomial(int,int) -> buildMonomial
    int addOrSubtract(int,int) -> addOrSubtract
    int exp(int) -> exp
    int log(int) -> log
    int inverse(int) -> inverse
    int multiply(int,int) -> multiply
    int getSize() -> getSize
    int getGeneratorBase() -> getGeneratorBase
    java.lang.String toString() -> toString
com.google.zxing.common.reedsolomon.GenericGFPoly -> com.google.zxing.common.reedsolomon.GenericGFPoly:
    com.google.zxing.common.reedsolomon.GenericGF field -> field
    int[] coefficients -> coefficients
    int[] getCoefficients() -> getCoefficients
    int getDegree() -> getDegree
    boolean isZero() -> isZero
    int getCoefficient(int) -> getCoefficient
    int evaluateAt(int) -> evaluateAt
    com.google.zxing.common.reedsolomon.GenericGFPoly addOrSubtract(com.google.zxing.common.reedsolomon.GenericGFPoly) -> addOrSubtract
    com.google.zxing.common.reedsolomon.GenericGFPoly multiply(com.google.zxing.common.reedsolomon.GenericGFPoly) -> multiply
    com.google.zxing.common.reedsolomon.GenericGFPoly multiply(int) -> multiply
    com.google.zxing.common.reedsolomon.GenericGFPoly multiplyByMonomial(int,int) -> multiplyByMonomial
    com.google.zxing.common.reedsolomon.GenericGFPoly[] divide(com.google.zxing.common.reedsolomon.GenericGFPoly) -> divide
    java.lang.String toString() -> toString
com.google.zxing.common.reedsolomon.ReedSolomonDecoder -> com.google.zxing.common.reedsolomon.ReedSolomonDecoder:
    com.google.zxing.common.reedsolomon.GenericGF field -> field
    void decode(int[],int) -> decode
    com.google.zxing.common.reedsolomon.GenericGFPoly[] runEuclideanAlgorithm(com.google.zxing.common.reedsolomon.GenericGFPoly,com.google.zxing.common.reedsolomon.GenericGFPoly,int) -> runEuclideanAlgorithm
    int[] findErrorLocations(com.google.zxing.common.reedsolomon.GenericGFPoly) -> findErrorLocations
    int[] findErrorMagnitudes(com.google.zxing.common.reedsolomon.GenericGFPoly,int[]) -> findErrorMagnitudes
com.google.zxing.common.reedsolomon.ReedSolomonEncoder -> com.google.zxing.common.reedsolomon.ReedSolomonEncoder:
    com.google.zxing.common.reedsolomon.GenericGF field -> field
    java.util.List cachedGenerators -> cachedGenerators
    com.google.zxing.common.reedsolomon.GenericGFPoly buildGenerator(int) -> buildGenerator
    void encode(int[],int) -> encode
com.google.zxing.common.reedsolomon.ReedSolomonException -> com.google.zxing.common.reedsolomon.ReedSolomonException:
com.google.zxing.datamatrix.DataMatrixReader -> com.google.zxing.datamatrix.DataMatrixReader:
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    com.google.zxing.datamatrix.decoder.Decoder decoder -> decoder
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
    com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
    int moduleSize(int[],com.google.zxing.common.BitMatrix) -> moduleSize
com.google.zxing.datamatrix.DataMatrixWriter -> com.google.zxing.datamatrix.DataMatrixWriter:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    com.google.zxing.common.BitMatrix encodeLowLevel(com.google.zxing.datamatrix.encoder.DefaultPlacement,com.google.zxing.datamatrix.encoder.SymbolInfo) -> encodeLowLevel
    com.google.zxing.common.BitMatrix convertByteMatrixToBitMatrix(com.google.zxing.qrcode.encoder.ByteMatrix) -> convertByteMatrixToBitMatrix
com.google.zxing.datamatrix.decoder.BitMatrixParser -> com.google.zxing.datamatrix.decoder.BitMatrixParser:
    com.google.zxing.common.BitMatrix mappingBitMatrix -> mappingBitMatrix
    com.google.zxing.common.BitMatrix readMappingMatrix -> readMappingMatrix
    com.google.zxing.datamatrix.decoder.Version version -> version
    com.google.zxing.datamatrix.decoder.Version getVersion() -> getVersion
    com.google.zxing.datamatrix.decoder.Version readVersion(com.google.zxing.common.BitMatrix) -> readVersion
    byte[] readCodewords() -> readCodewords
    boolean readModule(int,int,int,int) -> readModule
    int readUtah(int,int,int,int) -> readUtah
    int readCorner1(int,int) -> readCorner1
    int readCorner2(int,int) -> readCorner2
    int readCorner3(int,int) -> readCorner3
    int readCorner4(int,int) -> readCorner4
    com.google.zxing.common.BitMatrix extractDataRegion(com.google.zxing.common.BitMatrix) -> extractDataRegion
com.google.zxing.datamatrix.decoder.DataBlock -> com.google.zxing.datamatrix.decoder.DataBlock:
    int numDataCodewords -> numDataCodewords
    byte[] codewords -> codewords
    com.google.zxing.datamatrix.decoder.DataBlock[] getDataBlocks(byte[],com.google.zxing.datamatrix.decoder.Version) -> getDataBlocks
    int getNumDataCodewords() -> getNumDataCodewords
    byte[] getCodewords() -> getCodewords
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser -> com.google.zxing.datamatrix.decoder.DecodedBitStreamParser:
    char[] C40_BASIC_SET_CHARS -> C40_BASIC_SET_CHARS
    char[] C40_SHIFT2_SET_CHARS -> C40_SHIFT2_SET_CHARS
    char[] TEXT_BASIC_SET_CHARS -> TEXT_BASIC_SET_CHARS
    char[] TEXT_SHIFT3_SET_CHARS -> TEXT_SHIFT3_SET_CHARS
    com.google.zxing.common.DecoderResult decode(byte[]) -> decode
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode decodeAsciiSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,java.lang.StringBuilder) -> decodeAsciiSegment
    void decodeC40Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeC40Segment
    void decodeTextSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeTextSegment
    void decodeAnsiX12Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeAnsiX12Segment
    void parseTwoBytes(int,int,int[]) -> parseTwoBytes
    void decodeEdifactSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeEdifactSegment
    void decodeBase256Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder,java.util.Collection) -> decodeBase256Segment
    int unrandomize255State(int,int) -> unrandomize255State
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$1 -> com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$1:
    int[] $SwitchMap$com$google$zxing$datamatrix$decoder$DecodedBitStreamParser$Mode -> $SwitchMap$com$google$zxing$datamatrix$decoder$DecodedBitStreamParser$Mode
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode -> com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode:
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode PAD_ENCODE -> PAD_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode ASCII_ENCODE -> ASCII_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode C40_ENCODE -> C40_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode TEXT_ENCODE -> TEXT_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode ANSIX12_ENCODE -> ANSIX12_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode EDIFACT_ENCODE -> EDIFACT_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode BASE256_ENCODE -> BASE256_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode[] $VALUES -> $VALUES
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode[] values() -> values
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String) -> valueOf
com.google.zxing.datamatrix.decoder.Decoder -> com.google.zxing.datamatrix.decoder.Decoder:
    com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder -> rsDecoder
    com.google.zxing.common.DecoderResult decode(boolean[][]) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> decode
    void correctErrors(byte[],int) -> correctErrors
com.google.zxing.datamatrix.decoder.Version -> com.google.zxing.datamatrix.decoder.Version:
    com.google.zxing.datamatrix.decoder.Version[] VERSIONS -> VERSIONS
    int versionNumber -> versionNumber
    int symbolSizeRows -> symbolSizeRows
    int symbolSizeColumns -> symbolSizeColumns
    int dataRegionSizeRows -> dataRegionSizeRows
    int dataRegionSizeColumns -> dataRegionSizeColumns
    com.google.zxing.datamatrix.decoder.Version$ECBlocks ecBlocks -> ecBlocks
    int totalCodewords -> totalCodewords
    int getVersionNumber() -> getVersionNumber
    int getSymbolSizeRows() -> getSymbolSizeRows
    int getSymbolSizeColumns() -> getSymbolSizeColumns
    int getDataRegionSizeRows() -> getDataRegionSizeRows
    int getDataRegionSizeColumns() -> getDataRegionSizeColumns
    int getTotalCodewords() -> getTotalCodewords
    com.google.zxing.datamatrix.decoder.Version$ECBlocks getECBlocks() -> getECBlocks
    com.google.zxing.datamatrix.decoder.Version getVersionForDimensions(int,int) -> getVersionForDimensions
    java.lang.String toString() -> toString
    com.google.zxing.datamatrix.decoder.Version[] buildVersions() -> buildVersions
com.google.zxing.datamatrix.decoder.Version$1 -> com.google.zxing.datamatrix.decoder.Version$1:
com.google.zxing.datamatrix.decoder.Version$ECB -> com.google.zxing.datamatrix.decoder.Version$ECB:
    int count -> count
    int dataCodewords -> dataCodewords
    int getCount() -> getCount
    int getDataCodewords() -> getDataCodewords
com.google.zxing.datamatrix.decoder.Version$ECBlocks -> com.google.zxing.datamatrix.decoder.Version$ECBlocks:
    int ecCodewords -> ecCodewords
    com.google.zxing.datamatrix.decoder.Version$ECB[] ecBlocks -> ecBlocks
    int getECCodewords() -> getECCodewords
    com.google.zxing.datamatrix.decoder.Version$ECB[] getECBlocks() -> getECBlocks
com.google.zxing.datamatrix.detector.Detector -> com.google.zxing.datamatrix.detector.Detector:
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.common.detector.WhiteRectangleDetector rectangleDetector -> rectangleDetector
    com.google.zxing.common.DetectorResult detect() -> detect
    com.google.zxing.ResultPoint correctTopRightRectangular(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int) -> correctTopRightRectangular
    com.google.zxing.ResultPoint correctTopRight(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> correctTopRight
    boolean isValid(com.google.zxing.ResultPoint) -> isValid
    int distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> distance
    void increment(java.util.Map,com.google.zxing.ResultPoint) -> increment
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int) -> sampleGrid
    com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions transitionsBetween(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> transitionsBetween
com.google.zxing.datamatrix.detector.Detector$1 -> com.google.zxing.datamatrix.detector.Detector$1:
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions -> com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions:
    com.google.zxing.ResultPoint from -> from
    com.google.zxing.ResultPoint to -> to
    int transitions -> transitions
    com.google.zxing.ResultPoint getFrom() -> getFrom
    com.google.zxing.ResultPoint getTo() -> getTo
    int getTransitions() -> getTransitions
    java.lang.String toString() -> toString
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator -> com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator:
    int compare(com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions,com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.datamatrix.encoder.ASCIIEncoder -> com.google.zxing.datamatrix.encoder.ASCIIEncoder:
    int getEncodingMode() -> getEncodingMode
    void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
    char encodeASCIIDigits(char,char) -> encodeASCIIDigits
com.google.zxing.datamatrix.encoder.Base256Encoder -> com.google.zxing.datamatrix.encoder.Base256Encoder:
    int getEncodingMode() -> getEncodingMode
    void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
    char randomize255State(char,int) -> randomize255State
com.google.zxing.datamatrix.encoder.C40Encoder -> com.google.zxing.datamatrix.encoder.C40Encoder:
    int getEncodingMode() -> getEncodingMode
    void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
    int backtrackOneCharacter(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.StringBuilder,java.lang.StringBuilder,int) -> backtrackOneCharacter
    void writeNextTriplet(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.StringBuilder) -> writeNextTriplet
    void handleEOD(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.StringBuilder) -> handleEOD
    int encodeChar(char,java.lang.StringBuilder) -> encodeChar
    java.lang.String encodeToCodewords(java.lang.CharSequence,int) -> encodeToCodewords
com.google.zxing.datamatrix.encoder.DataMatrixSymbolInfo144 -> com.google.zxing.datamatrix.encoder.DataMatrixSymbolInfo144:
    int getInterleavedBlockCount() -> getInterleavedBlockCount
    int getDataLengthForInterleavedBlock(int) -> getDataLengthForInterleavedBlock
com.google.zxing.datamatrix.encoder.DefaultPlacement -> com.google.zxing.datamatrix.encoder.DefaultPlacement:
    java.lang.CharSequence codewords -> codewords
    int numrows -> numrows
    int numcols -> numcols
    byte[] bits -> bits
    int getNumrows() -> getNumrows
    int getNumcols() -> getNumcols
    byte[] getBits() -> getBits
    boolean getBit(int,int) -> getBit
    void setBit(int,int,boolean) -> setBit
    boolean hasBit(int,int) -> hasBit
    void place() -> place
    void module(int,int,int,int) -> module
    void utah(int,int,int) -> utah
    void corner1(int) -> corner1
    void corner2(int) -> corner2
    void corner3(int) -> corner3
    void corner4(int) -> corner4
com.google.zxing.datamatrix.encoder.EdifactEncoder -> com.google.zxing.datamatrix.encoder.EdifactEncoder:
    int getEncodingMode() -> getEncodingMode
    void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
    void handleEOD(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.CharSequence) -> handleEOD
    void encodeChar(char,java.lang.StringBuilder) -> encodeChar
    java.lang.String encodeToCodewords(java.lang.CharSequence,int) -> encodeToCodewords
com.google.zxing.datamatrix.encoder.Encoder -> com.google.zxing.datamatrix.encoder.Encoder:
    int getEncodingMode() -> getEncodingMode
    void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
com.google.zxing.datamatrix.encoder.EncoderContext -> com.google.zxing.datamatrix.encoder.EncoderContext:
    java.lang.String msg -> msg
    com.google.zxing.datamatrix.encoder.SymbolShapeHint shape -> shape
    com.google.zxing.Dimension minSize -> minSize
    com.google.zxing.Dimension maxSize -> maxSize
    java.lang.StringBuilder codewords -> codewords
    int pos -> pos
    int newEncoding -> newEncoding
    com.google.zxing.datamatrix.encoder.SymbolInfo symbolInfo -> symbolInfo
    int skipAtEnd -> skipAtEnd
    void setSymbolShape(com.google.zxing.datamatrix.encoder.SymbolShapeHint) -> setSymbolShape
    void setSizeConstraints(com.google.zxing.Dimension,com.google.zxing.Dimension) -> setSizeConstraints
    java.lang.String getMessage() -> getMessage
    void setSkipAtEnd(int) -> setSkipAtEnd
    char getCurrentChar() -> getCurrentChar
    char getCurrent() -> getCurrent
    java.lang.StringBuilder getCodewords() -> getCodewords
    void writeCodewords(java.lang.String) -> writeCodewords
    void writeCodeword(char) -> writeCodeword
    int getCodewordCount() -> getCodewordCount
    int getNewEncoding() -> getNewEncoding
    void signalEncoderChange(int) -> signalEncoderChange
    void resetEncoderSignal() -> resetEncoderSignal
    boolean hasMoreCharacters() -> hasMoreCharacters
    int getTotalMessageCharCount() -> getTotalMessageCharCount
    int getRemainingCharacters() -> getRemainingCharacters
    com.google.zxing.datamatrix.encoder.SymbolInfo getSymbolInfo() -> getSymbolInfo
    void updateSymbolInfo() -> updateSymbolInfo
    void updateSymbolInfo(int) -> updateSymbolInfo
    void resetSymbolInfo() -> resetSymbolInfo
com.google.zxing.datamatrix.encoder.ErrorCorrection -> com.google.zxing.datamatrix.encoder.ErrorCorrection:
    int[] FACTOR_SETS -> FACTOR_SETS
    int[][] FACTORS -> FACTORS
    int MODULO_VALUE -> MODULO_VALUE
    int[] LOG -> LOG
    int[] ALOG -> ALOG
    java.lang.String encodeECC200(java.lang.String,com.google.zxing.datamatrix.encoder.SymbolInfo) -> encodeECC200
    java.lang.String createECCBlock(java.lang.CharSequence,int) -> createECCBlock
    java.lang.String createECCBlock(java.lang.CharSequence,int,int,int) -> createECCBlock
com.google.zxing.datamatrix.encoder.HighLevelEncoder -> com.google.zxing.datamatrix.encoder.HighLevelEncoder:
    char PAD -> PAD
    char LATCH_TO_C40 -> LATCH_TO_C40
    char LATCH_TO_BASE256 -> LATCH_TO_BASE256
    char UPPER_SHIFT -> UPPER_SHIFT
    char MACRO_05 -> MACRO_05
    char MACRO_06 -> MACRO_06
    char LATCH_TO_ANSIX12 -> LATCH_TO_ANSIX12
    char LATCH_TO_TEXT -> LATCH_TO_TEXT
    char LATCH_TO_EDIFACT -> LATCH_TO_EDIFACT
    char C40_UNLATCH -> C40_UNLATCH
    char X12_UNLATCH -> X12_UNLATCH
    java.lang.String MACRO_05_HEADER -> MACRO_05_HEADER
    java.lang.String MACRO_06_HEADER -> MACRO_06_HEADER
    java.lang.String MACRO_TRAILER -> MACRO_TRAILER
    int ASCII_ENCODATION -> ASCII_ENCODATION
    int C40_ENCODATION -> C40_ENCODATION
    int TEXT_ENCODATION -> TEXT_ENCODATION
    int X12_ENCODATION -> X12_ENCODATION
    int EDIFACT_ENCODATION -> EDIFACT_ENCODATION
    int BASE256_ENCODATION -> BASE256_ENCODATION
    char randomize253State(char,int) -> randomize253State
    java.lang.String encodeHighLevel(java.lang.String) -> encodeHighLevel
    java.lang.String encodeHighLevel(java.lang.String,com.google.zxing.datamatrix.encoder.SymbolShapeHint,com.google.zxing.Dimension,com.google.zxing.Dimension) -> encodeHighLevel
    int lookAheadTest(java.lang.CharSequence,int,int) -> lookAheadTest
    int findMinimums(float[],int[],int,byte[]) -> findMinimums
    int getMinimumCount(byte[]) -> getMinimumCount
    boolean isDigit(char) -> isDigit
    boolean isExtendedASCII(char) -> isExtendedASCII
    boolean isNativeC40(char) -> isNativeC40
    boolean isNativeText(char) -> isNativeText
    boolean isNativeX12(char) -> isNativeX12
    boolean isX12TermSep(char) -> isX12TermSep
    boolean isNativeEDIFACT(char) -> isNativeEDIFACT
    boolean isSpecialB256(char) -> isSpecialB256
    int determineConsecutiveDigitCount(java.lang.CharSequence,int) -> determineConsecutiveDigitCount
    void illegalCharacter(char) -> illegalCharacter
com.google.zxing.datamatrix.encoder.SymbolInfo -> com.google.zxing.datamatrix.encoder.SymbolInfo:
    com.google.zxing.datamatrix.encoder.SymbolInfo[] PROD_SYMBOLS -> PROD_SYMBOLS
    com.google.zxing.datamatrix.encoder.SymbolInfo[] symbols -> symbols
    boolean rectangular -> rectangular
    int dataCapacity -> dataCapacity
    int errorCodewords -> errorCodewords
    int matrixWidth -> matrixWidth
    int matrixHeight -> matrixHeight
    int dataRegions -> dataRegions
    int rsBlockData -> rsBlockData
    int rsBlockError -> rsBlockError
    void overrideSymbolSet(com.google.zxing.datamatrix.encoder.SymbolInfo[]) -> overrideSymbolSet
    com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int) -> lookup
    com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int,com.google.zxing.datamatrix.encoder.SymbolShapeHint) -> lookup
    com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int,boolean,boolean) -> lookup
    com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int,com.google.zxing.datamatrix.encoder.SymbolShapeHint,boolean) -> lookup
    com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int,com.google.zxing.datamatrix.encoder.SymbolShapeHint,com.google.zxing.Dimension,com.google.zxing.Dimension,boolean) -> lookup
    int getHorizontalDataRegions() -> getHorizontalDataRegions
    int getVerticalDataRegions() -> getVerticalDataRegions
    int getSymbolDataWidth() -> getSymbolDataWidth
    int getSymbolDataHeight() -> getSymbolDataHeight
    int getSymbolWidth() -> getSymbolWidth
    int getSymbolHeight() -> getSymbolHeight
    int getCodewordCount() -> getCodewordCount
    int getInterleavedBlockCount() -> getInterleavedBlockCount
    int getDataCapacity() -> getDataCapacity
    int getErrorCodewords() -> getErrorCodewords
    int getDataLengthForInterleavedBlock(int) -> getDataLengthForInterleavedBlock
    int getErrorLengthForInterleavedBlock(int) -> getErrorLengthForInterleavedBlock
    java.lang.String toString() -> toString
com.google.zxing.datamatrix.encoder.SymbolShapeHint -> com.google.zxing.datamatrix.encoder.SymbolShapeHint:
    com.google.zxing.datamatrix.encoder.SymbolShapeHint FORCE_NONE -> FORCE_NONE
    com.google.zxing.datamatrix.encoder.SymbolShapeHint FORCE_SQUARE -> FORCE_SQUARE
    com.google.zxing.datamatrix.encoder.SymbolShapeHint FORCE_RECTANGLE -> FORCE_RECTANGLE
    com.google.zxing.datamatrix.encoder.SymbolShapeHint[] $VALUES -> $VALUES
    com.google.zxing.datamatrix.encoder.SymbolShapeHint[] values() -> values
    com.google.zxing.datamatrix.encoder.SymbolShapeHint valueOf(java.lang.String) -> valueOf
com.google.zxing.datamatrix.encoder.TextEncoder -> com.google.zxing.datamatrix.encoder.TextEncoder:
    int getEncodingMode() -> getEncodingMode
    int encodeChar(char,java.lang.StringBuilder) -> encodeChar
com.google.zxing.datamatrix.encoder.X12Encoder -> com.google.zxing.datamatrix.encoder.X12Encoder:
    int getEncodingMode() -> getEncodingMode
    void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
    int encodeChar(char,java.lang.StringBuilder) -> encodeChar
    void handleEOD(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.StringBuilder) -> handleEOD
com.google.zxing.maxicode.MaxiCodeReader -> com.google.zxing.maxicode.MaxiCodeReader:
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    int MATRIX_WIDTH -> MATRIX_WIDTH
    int MATRIX_HEIGHT -> MATRIX_HEIGHT
    com.google.zxing.maxicode.decoder.Decoder decoder -> decoder
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
    com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
com.google.zxing.maxicode.decoder.BitMatrixParser -> com.google.zxing.maxicode.decoder.BitMatrixParser:
    int[][] BITNR -> BITNR
    com.google.zxing.common.BitMatrix bitMatrix -> bitMatrix
    byte[] readCodewords() -> readCodewords
com.google.zxing.maxicode.decoder.DecodedBitStreamParser -> com.google.zxing.maxicode.decoder.DecodedBitStreamParser:
    char SHIFTA -> SHIFTA
    char SHIFTB -> SHIFTB
    char SHIFTC -> SHIFTC
    char SHIFTD -> SHIFTD
    char SHIFTE -> SHIFTE
    char TWOSHIFTA -> TWOSHIFTA
    char THREESHIFTA -> THREESHIFTA
    char LATCHA -> LATCHA
    char LATCHB -> LATCHB
    char LOCK -> LOCK
    char ECI -> ECI
    char NS -> NS
    char PAD -> PAD
    char FS -> FS
    char GS -> GS
    char RS -> RS
    java.text.NumberFormat NINE_DIGITS -> NINE_DIGITS
    java.text.NumberFormat THREE_DIGITS -> THREE_DIGITS
    java.lang.String[] SETS -> SETS
    com.google.zxing.common.DecoderResult decode(byte[],int) -> decode
    int getBit(int,byte[]) -> getBit
    int getInt(byte[],byte[]) -> getInt
    int getCountry(byte[]) -> getCountry
    int getServiceClass(byte[]) -> getServiceClass
    int getPostCode2Length(byte[]) -> getPostCode2Length
    int getPostCode2(byte[]) -> getPostCode2
    java.lang.String getPostCode3(byte[]) -> getPostCode3
    java.lang.String getMessage(byte[],int,int) -> getMessage
com.google.zxing.maxicode.decoder.Decoder -> com.google.zxing.maxicode.decoder.Decoder:
    int ALL -> ALL
    int EVEN -> EVEN
    int ODD -> ODD
    com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder -> rsDecoder
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,java.util.Map) -> decode
    void correctErrors(byte[],int,int,int,int) -> correctErrors
com.google.zxing.multi.ByQuadrantReader -> com.google.zxing.multi.ByQuadrantReader:
    com.google.zxing.Reader delegate -> delegate
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
com.google.zxing.multi.GenericMultipleBarcodeReader -> com.google.zxing.multi.GenericMultipleBarcodeReader:
    int MIN_DIMENSION_TO_RECUR -> MIN_DIMENSION_TO_RECUR
    int MAX_DEPTH -> MAX_DEPTH
    com.google.zxing.Reader delegate -> delegate
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map) -> decodeMultiple
    void doDecodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map,java.util.List,int,int,int) -> doDecodeMultiple
    com.google.zxing.Result translateResultPoints(com.google.zxing.Result,int,int) -> translateResultPoints
com.google.zxing.multi.MultipleBarcodeReader -> com.google.zxing.multi.MultipleBarcodeReader:
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map) -> decodeMultiple
com.google.zxing.multi.qrcode.QRCodeMultiReader -> com.google.zxing.multi.qrcode.QRCodeMultiReader:
    com.google.zxing.Result[] EMPTY_RESULT_ARRAY -> EMPTY_RESULT_ARRAY
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map) -> decodeMultiple
com.google.zxing.multi.qrcode.detector.MultiDetector -> com.google.zxing.multi.qrcode.detector.MultiDetector:
    com.google.zxing.common.DetectorResult[] EMPTY_DETECTOR_RESULTS -> EMPTY_DETECTOR_RESULTS
    com.google.zxing.common.DetectorResult[] detectMulti(java.util.Map) -> detectMulti
com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder -> com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder:
    com.google.zxing.qrcode.detector.FinderPatternInfo[] EMPTY_RESULT_ARRAY -> EMPTY_RESULT_ARRAY
    float MAX_MODULE_COUNT_PER_EDGE -> MAX_MODULE_COUNT_PER_EDGE
    float MIN_MODULE_COUNT_PER_EDGE -> MIN_MODULE_COUNT_PER_EDGE
    float DIFF_MODSIZE_CUTOFF_PERCENT -> DIFF_MODSIZE_CUTOFF_PERCENT
    float DIFF_MODSIZE_CUTOFF -> DIFF_MODSIZE_CUTOFF
    com.google.zxing.qrcode.detector.FinderPattern[][] selectMutipleBestPatterns() -> selectMutipleBestPatterns
    com.google.zxing.qrcode.detector.FinderPatternInfo[] findMulti(java.util.Map) -> findMulti
com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$1 -> com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$1:
com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$ModuleSizeComparator -> com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$ModuleSizeComparator:
    int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.oned.CodaBarReader -> com.google.zxing.oned.CodaBarReader:
    int MAX_ACCEPTABLE -> MAX_ACCEPTABLE
    int PADDING -> PADDING
    java.lang.String ALPHABET_STRING -> ALPHABET_STRING
    char[] ALPHABET -> ALPHABET
    int[] CHARACTER_ENCODINGS -> CHARACTER_ENCODINGS
    int MIN_CHARACTER_LENGTH -> MIN_CHARACTER_LENGTH
    char[] STARTEND_ENCODING -> STARTEND_ENCODING
    java.lang.StringBuilder decodeRowResult -> decodeRowResult
    int[] counters -> counters
    int counterLength -> counterLength
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void validatePattern(int) -> validatePattern
    void setCounters(com.google.zxing.common.BitArray) -> setCounters
    void counterAppend(int) -> counterAppend
    int findStartPattern() -> findStartPattern
    boolean arrayContains(char[],char) -> arrayContains
    int toNarrowWidePattern(int) -> toNarrowWidePattern
com.google.zxing.oned.CodaBarWriter -> com.google.zxing.oned.CodaBarWriter:
    char[] START_END_CHARS -> START_END_CHARS
    char[] ALT_START_END_CHARS -> ALT_START_END_CHARS
    boolean[] encode(java.lang.String) -> encode
com.google.zxing.oned.Code128Reader -> com.google.zxing.oned.Code128Reader:
    int[][] CODE_PATTERNS -> CODE_PATTERNS
    int MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    int MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int CODE_SHIFT -> CODE_SHIFT
    int CODE_CODE_C -> CODE_CODE_C
    int CODE_CODE_B -> CODE_CODE_B
    int CODE_CODE_A -> CODE_CODE_A
    int CODE_FNC_1 -> CODE_FNC_1
    int CODE_FNC_2 -> CODE_FNC_2
    int CODE_FNC_3 -> CODE_FNC_3
    int CODE_FNC_4_A -> CODE_FNC_4_A
    int CODE_FNC_4_B -> CODE_FNC_4_B
    int CODE_START_A -> CODE_START_A
    int CODE_START_B -> CODE_START_B
    int CODE_START_C -> CODE_START_C
    int CODE_STOP -> CODE_STOP
    int[] findStartPattern(com.google.zxing.common.BitArray) -> findStartPattern
    int decodeCode(com.google.zxing.common.BitArray,int[],int) -> decodeCode
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
com.google.zxing.oned.Code128Writer -> com.google.zxing.oned.Code128Writer:
    int CODE_START_B -> CODE_START_B
    int CODE_START_C -> CODE_START_C
    int CODE_CODE_B -> CODE_CODE_B
    int CODE_CODE_C -> CODE_CODE_C
    int CODE_STOP -> CODE_STOP
    char ESCAPE_FNC_1 -> ESCAPE_FNC_1
    char ESCAPE_FNC_2 -> ESCAPE_FNC_2
    char ESCAPE_FNC_3 -> ESCAPE_FNC_3
    char ESCAPE_FNC_4 -> ESCAPE_FNC_4
    int CODE_FNC_1 -> CODE_FNC_1
    int CODE_FNC_2 -> CODE_FNC_2
    int CODE_FNC_3 -> CODE_FNC_3
    int CODE_FNC_4_B -> CODE_FNC_4_B
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    boolean[] encode(java.lang.String) -> encode
    boolean isDigits(java.lang.CharSequence,int,int) -> isDigits
com.google.zxing.oned.Code39Reader -> com.google.zxing.oned.Code39Reader:
    java.lang.String ALPHABET_STRING -> ALPHABET_STRING
    char[] ALPHABET -> ALPHABET
    int[] CHARACTER_ENCODINGS -> CHARACTER_ENCODINGS
    int ASTERISK_ENCODING -> ASTERISK_ENCODING
    boolean usingCheckDigit -> usingCheckDigit
    boolean extendedMode -> extendedMode
    java.lang.StringBuilder decodeRowResult -> decodeRowResult
    int[] counters -> counters
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    int[] findAsteriskPattern(com.google.zxing.common.BitArray,int[]) -> findAsteriskPattern
    int toNarrowWidePattern(int[]) -> toNarrowWidePattern
    char patternToChar(int) -> patternToChar
    java.lang.String decodeExtended(java.lang.CharSequence) -> decodeExtended
com.google.zxing.oned.Code39Writer -> com.google.zxing.oned.Code39Writer:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    boolean[] encode(java.lang.String) -> encode
    void toIntArray(int,int[]) -> toIntArray
com.google.zxing.oned.Code93Reader -> com.google.zxing.oned.Code93Reader:
    java.lang.String ALPHABET_STRING -> ALPHABET_STRING
    char[] ALPHABET -> ALPHABET
    int[] CHARACTER_ENCODINGS -> CHARACTER_ENCODINGS
    int ASTERISK_ENCODING -> ASTERISK_ENCODING
    java.lang.StringBuilder decodeRowResult -> decodeRowResult
    int[] counters -> counters
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    int[] findAsteriskPattern(com.google.zxing.common.BitArray) -> findAsteriskPattern
    int toPattern(int[]) -> toPattern
    char patternToChar(int) -> patternToChar
    java.lang.String decodeExtended(java.lang.CharSequence) -> decodeExtended
    void checkChecksums(java.lang.CharSequence) -> checkChecksums
    void checkOneChecksum(java.lang.CharSequence,int,int) -> checkOneChecksum
com.google.zxing.oned.EAN13Reader -> com.google.zxing.oned.EAN13Reader:
    int[] FIRST_DIGIT_ENCODINGS -> FIRST_DIGIT_ENCODINGS
    int[] decodeMiddleCounters -> decodeMiddleCounters
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    void determineFirstDigit(java.lang.StringBuilder,int) -> determineFirstDigit
com.google.zxing.oned.EAN13Writer -> com.google.zxing.oned.EAN13Writer:
    int CODE_WIDTH -> CODE_WIDTH
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    boolean[] encode(java.lang.String) -> encode
com.google.zxing.oned.EAN8Reader -> com.google.zxing.oned.EAN8Reader:
    int[] decodeMiddleCounters -> decodeMiddleCounters
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
com.google.zxing.oned.EAN8Writer -> com.google.zxing.oned.EAN8Writer:
    int CODE_WIDTH -> CODE_WIDTH
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    boolean[] encode(java.lang.String) -> encode
com.google.zxing.oned.EANManufacturerOrgSupport -> com.google.zxing.oned.EANManufacturerOrgSupport:
    java.util.List ranges -> ranges
    java.util.List countryIdentifiers -> countryIdentifiers
    java.lang.String lookupCountryIdentifier(java.lang.String) -> lookupCountryIdentifier
    void add(int[],java.lang.String) -> add
    void initIfNeeded() -> initIfNeeded
com.google.zxing.oned.ITFReader -> com.google.zxing.oned.ITFReader:
    int MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    int MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int W -> W
    int N -> N
    int[] DEFAULT_ALLOWED_LENGTHS -> DEFAULT_ALLOWED_LENGTHS
    int narrowLineWidth -> narrowLineWidth
    int[] START_PATTERN -> START_PATTERN
    int[] END_PATTERN_REVERSED -> END_PATTERN_REVERSED
    int[][] PATTERNS -> PATTERNS
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void decodeMiddle(com.google.zxing.common.BitArray,int,int,java.lang.StringBuilder) -> decodeMiddle
    int[] decodeStart(com.google.zxing.common.BitArray) -> decodeStart
    void validateQuietZone(com.google.zxing.common.BitArray,int) -> validateQuietZone
    int skipWhiteSpace(com.google.zxing.common.BitArray) -> skipWhiteSpace
    int[] decodeEnd(com.google.zxing.common.BitArray) -> decodeEnd
    int[] findGuardPattern(com.google.zxing.common.BitArray,int,int[]) -> findGuardPattern
    int decodeDigit(int[]) -> decodeDigit
com.google.zxing.oned.ITFWriter -> com.google.zxing.oned.ITFWriter:
    int[] START_PATTERN -> START_PATTERN
    int[] END_PATTERN -> END_PATTERN
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    boolean[] encode(java.lang.String) -> encode
com.google.zxing.oned.MultiFormatOneDReader -> com.google.zxing.oned.MultiFormatOneDReader:
    com.google.zxing.oned.OneDReader[] readers -> readers
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void reset() -> reset
com.google.zxing.oned.MultiFormatUPCEANReader -> com.google.zxing.oned.MultiFormatUPCEANReader:
    com.google.zxing.oned.UPCEANReader[] readers -> readers
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void reset() -> reset
com.google.zxing.oned.OneDReader -> com.google.zxing.oned.OneDReader:
    int INTEGER_MATH_SHIFT -> INTEGER_MATH_SHIFT
    int PATTERN_MATCH_RESULT_SCALE_FACTOR -> PATTERN_MATCH_RESULT_SCALE_FACTOR
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
    com.google.zxing.Result doDecode(com.google.zxing.BinaryBitmap,java.util.Map) -> doDecode
    void recordPattern(com.google.zxing.common.BitArray,int,int[]) -> recordPattern
    void recordPatternInReverse(com.google.zxing.common.BitArray,int,int[]) -> recordPatternInReverse
    int patternMatchVariance(int[],int[],int) -> patternMatchVariance
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
com.google.zxing.oned.OneDimensionalCodeWriter -> com.google.zxing.oned.OneDimensionalCodeWriter:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    com.google.zxing.common.BitMatrix renderResult(boolean[],int,int,int) -> renderResult
    int appendPattern(boolean[],int,int[],boolean) -> appendPattern
    int getDefaultMargin() -> getDefaultMargin
    boolean[] encode(java.lang.String) -> encode
com.google.zxing.oned.UPCAReader -> com.google.zxing.oned.UPCAReader:
    com.google.zxing.oned.UPCEANReader ean13Reader -> ean13Reader
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[],java.util.Map) -> decodeRow
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    com.google.zxing.Result maybeReturnResult(com.google.zxing.Result) -> maybeReturnResult
com.google.zxing.oned.UPCAWriter -> com.google.zxing.oned.UPCAWriter:
    com.google.zxing.oned.EAN13Writer subWriter -> subWriter
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    java.lang.String preencode(java.lang.String) -> preencode
com.google.zxing.oned.UPCEANExtension2Support -> com.google.zxing.oned.UPCEANExtension2Support:
    int[] decodeMiddleCounters -> decodeMiddleCounters
    java.lang.StringBuilder decodeRowStringBuffer -> decodeRowStringBuffer
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[]) -> decodeRow
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    java.util.Map parseExtensionString(java.lang.String) -> parseExtensionString
com.google.zxing.oned.UPCEANExtension5Support -> com.google.zxing.oned.UPCEANExtension5Support:
    int[] CHECK_DIGIT_ENCODINGS -> CHECK_DIGIT_ENCODINGS
    int[] decodeMiddleCounters -> decodeMiddleCounters
    java.lang.StringBuilder decodeRowStringBuffer -> decodeRowStringBuffer
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[]) -> decodeRow
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    int extensionChecksum(java.lang.CharSequence) -> extensionChecksum
    int determineCheckDigit(int) -> determineCheckDigit
    java.util.Map parseExtensionString(java.lang.String) -> parseExtensionString
    java.lang.String parseExtension5String(java.lang.String) -> parseExtension5String
com.google.zxing.oned.UPCEANExtensionSupport -> com.google.zxing.oned.UPCEANExtensionSupport:
    int[] EXTENSION_START_PATTERN -> EXTENSION_START_PATTERN
    com.google.zxing.oned.UPCEANExtension2Support twoSupport -> twoSupport
    com.google.zxing.oned.UPCEANExtension5Support fiveSupport -> fiveSupport
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int) -> decodeRow
com.google.zxing.oned.UPCEANReader -> com.google.zxing.oned.UPCEANReader:
    int MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    int MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int[] START_END_PATTERN -> START_END_PATTERN
    int[] MIDDLE_PATTERN -> MIDDLE_PATTERN
    int[][] L_PATTERNS -> L_PATTERNS
    int[][] L_AND_G_PATTERNS -> L_AND_G_PATTERNS
    java.lang.StringBuilder decodeRowStringBuffer -> decodeRowStringBuffer
    com.google.zxing.oned.UPCEANExtensionSupport extensionReader -> extensionReader
    com.google.zxing.oned.EANManufacturerOrgSupport eanManSupport -> eanManSupport
    int[] findStartGuardPattern(com.google.zxing.common.BitArray) -> findStartGuardPattern
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[],java.util.Map) -> decodeRow
    boolean checkChecksum(java.lang.String) -> checkChecksum
    boolean checkStandardUPCEANChecksum(java.lang.CharSequence) -> checkStandardUPCEANChecksum
    int[] decodeEnd(com.google.zxing.common.BitArray,int) -> decodeEnd
    int[] findGuardPattern(com.google.zxing.common.BitArray,int,boolean,int[]) -> findGuardPattern
    int[] findGuardPattern(com.google.zxing.common.BitArray,int,boolean,int[],int[]) -> findGuardPattern
    int decodeDigit(com.google.zxing.common.BitArray,int[],int,int[][]) -> decodeDigit
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
com.google.zxing.oned.UPCEANWriter -> com.google.zxing.oned.UPCEANWriter:
    int getDefaultMargin() -> getDefaultMargin
com.google.zxing.oned.UPCEReader -> com.google.zxing.oned.UPCEReader:
    int[] MIDDLE_END_PATTERN -> MIDDLE_END_PATTERN
    int[][] NUMSYS_AND_CHECK_DIGIT_PATTERNS -> NUMSYS_AND_CHECK_DIGIT_PATTERNS
    int[] decodeMiddleCounters -> decodeMiddleCounters
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    int[] decodeEnd(com.google.zxing.common.BitArray,int) -> decodeEnd
    boolean checkChecksum(java.lang.String) -> checkChecksum
    void determineNumSysAndCheckDigit(java.lang.StringBuilder,int) -> determineNumSysAndCheckDigit
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    java.lang.String convertUPCEtoUPCA(java.lang.String) -> convertUPCEtoUPCA
com.google.zxing.oned.rss.AbstractRSSReader -> com.google.zxing.oned.rss.AbstractRSSReader:
    int MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    int MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    float MIN_FINDER_PATTERN_RATIO -> MIN_FINDER_PATTERN_RATIO
    float MAX_FINDER_PATTERN_RATIO -> MAX_FINDER_PATTERN_RATIO
    int[] decodeFinderCounters -> decodeFinderCounters
    int[] dataCharacterCounters -> dataCharacterCounters
    float[] oddRoundingErrors -> oddRoundingErrors
    float[] evenRoundingErrors -> evenRoundingErrors
    int[] oddCounts -> oddCounts
    int[] evenCounts -> evenCounts
    int[] getDecodeFinderCounters() -> getDecodeFinderCounters
    int[] getDataCharacterCounters() -> getDataCharacterCounters
    float[] getOddRoundingErrors() -> getOddRoundingErrors
    float[] getEvenRoundingErrors() -> getEvenRoundingErrors
    int[] getOddCounts() -> getOddCounts
    int[] getEvenCounts() -> getEvenCounts
    int parseFinderValue(int[],int[][]) -> parseFinderValue
    int count(int[]) -> count
    void increment(int[],float[]) -> increment
    void decrement(int[],float[]) -> decrement
    boolean isFinderPattern(int[]) -> isFinderPattern
com.google.zxing.oned.rss.DataCharacter -> com.google.zxing.oned.rss.DataCharacter:
    int value -> value
    int checksumPortion -> checksumPortion
    int getValue() -> getValue
    int getChecksumPortion() -> getChecksumPortion
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.zxing.oned.rss.FinderPattern -> com.google.zxing.oned.rss.FinderPattern:
    int value -> value
    int[] startEnd -> startEnd
    com.google.zxing.ResultPoint[] resultPoints -> resultPoints
    int getValue() -> getValue
    int[] getStartEnd() -> getStartEnd
    com.google.zxing.ResultPoint[] getResultPoints() -> getResultPoints
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.zxing.oned.rss.Pair -> com.google.zxing.oned.rss.Pair:
    com.google.zxing.oned.rss.FinderPattern finderPattern -> finderPattern
    int count -> count
    com.google.zxing.oned.rss.FinderPattern getFinderPattern() -> getFinderPattern
    int getCount() -> getCount
    void incrementCount() -> incrementCount
com.google.zxing.oned.rss.RSS14Reader -> com.google.zxing.oned.rss.RSS14Reader:
    int[] OUTSIDE_EVEN_TOTAL_SUBSET -> OUTSIDE_EVEN_TOTAL_SUBSET
    int[] INSIDE_ODD_TOTAL_SUBSET -> INSIDE_ODD_TOTAL_SUBSET
    int[] OUTSIDE_GSUM -> OUTSIDE_GSUM
    int[] INSIDE_GSUM -> INSIDE_GSUM
    int[] OUTSIDE_ODD_WIDEST -> OUTSIDE_ODD_WIDEST
    int[] INSIDE_ODD_WIDEST -> INSIDE_ODD_WIDEST
    int[][] FINDER_PATTERNS -> FINDER_PATTERNS
    java.util.List possibleLeftPairs -> possibleLeftPairs
    java.util.List possibleRightPairs -> possibleRightPairs
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void addOrTally(java.util.Collection,com.google.zxing.oned.rss.Pair) -> addOrTally
    void reset() -> reset
    com.google.zxing.Result constructResult(com.google.zxing.oned.rss.Pair,com.google.zxing.oned.rss.Pair) -> constructResult
    boolean checkChecksum(com.google.zxing.oned.rss.Pair,com.google.zxing.oned.rss.Pair) -> checkChecksum
    com.google.zxing.oned.rss.Pair decodePair(com.google.zxing.common.BitArray,boolean,int,java.util.Map) -> decodePair
    com.google.zxing.oned.rss.DataCharacter decodeDataCharacter(com.google.zxing.common.BitArray,com.google.zxing.oned.rss.FinderPattern,boolean) -> decodeDataCharacter
    int[] findFinderPattern(com.google.zxing.common.BitArray,int,boolean) -> findFinderPattern
    com.google.zxing.oned.rss.FinderPattern parseFoundFinderPattern(com.google.zxing.common.BitArray,int,boolean,int[]) -> parseFoundFinderPattern
    void adjustOddEvenCounts(boolean,int) -> adjustOddEvenCounts
com.google.zxing.oned.rss.RSSUtils -> com.google.zxing.oned.rss.RSSUtils:
    int getRSSvalue(int[],int,boolean) -> getRSSvalue
    int combins(int,int) -> combins
com.google.zxing.oned.rss.expanded.BitArrayBuilder -> com.google.zxing.oned.rss.expanded.BitArrayBuilder:
    com.google.zxing.common.BitArray buildBitArray(java.util.List) -> buildBitArray
com.google.zxing.oned.rss.expanded.ExpandedPair -> com.google.zxing.oned.rss.expanded.ExpandedPair:
    boolean mayBeLast -> mayBeLast
    com.google.zxing.oned.rss.DataCharacter leftChar -> leftChar
    com.google.zxing.oned.rss.DataCharacter rightChar -> rightChar
    com.google.zxing.oned.rss.FinderPattern finderPattern -> finderPattern
    boolean mayBeLast() -> mayBeLast
    com.google.zxing.oned.rss.DataCharacter getLeftChar() -> getLeftChar
    com.google.zxing.oned.rss.DataCharacter getRightChar() -> getRightChar
    com.google.zxing.oned.rss.FinderPattern getFinderPattern() -> getFinderPattern
    boolean mustBeLast() -> mustBeLast
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    boolean equalsOrNull(java.lang.Object,java.lang.Object) -> equalsOrNull
    int hashCode() -> hashCode
    int hashNotNull(java.lang.Object) -> hashNotNull
com.google.zxing.oned.rss.expanded.ExpandedRow -> com.google.zxing.oned.rss.expanded.ExpandedRow:
    java.util.List pairs -> pairs
    int rowNumber -> rowNumber
    boolean wasReversed -> wasReversed
    java.util.List getPairs() -> getPairs
    int getRowNumber() -> getRowNumber
    boolean isReversed() -> isReversed
    boolean isEquivalent(java.util.List) -> isEquivalent
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.zxing.oned.rss.expanded.RSSExpandedReader -> com.google.zxing.oned.rss.expanded.RSSExpandedReader:
    int[] SYMBOL_WIDEST -> SYMBOL_WIDEST
    int[] EVEN_TOTAL_SUBSET -> EVEN_TOTAL_SUBSET
    int[] GSUM -> GSUM
    int[][] FINDER_PATTERNS -> FINDER_PATTERNS
    int[][] WEIGHTS -> WEIGHTS
    int FINDER_PAT_A -> FINDER_PAT_A
    int FINDER_PAT_B -> FINDER_PAT_B
    int FINDER_PAT_C -> FINDER_PAT_C
    int FINDER_PAT_D -> FINDER_PAT_D
    int FINDER_PAT_E -> FINDER_PAT_E
    int FINDER_PAT_F -> FINDER_PAT_F
    int[][] FINDER_PATTERN_SEQUENCES -> FINDER_PATTERN_SEQUENCES
    int MAX_PAIRS -> MAX_PAIRS
    java.util.List pairs -> pairs
    java.util.List rows -> rows
    int[] startEnd -> startEnd
    boolean startFromEven -> startFromEven
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void reset() -> reset
    java.util.List decodeRow2pairs(int,com.google.zxing.common.BitArray) -> decodeRow2pairs
    java.util.List checkRows(boolean) -> checkRows
    java.util.List checkRows(java.util.List,int) -> checkRows
    boolean isValidSequence(java.util.List) -> isValidSequence
    void storeRow(int,boolean) -> storeRow
    void removePartialRows(java.util.List,java.util.List) -> removePartialRows
    boolean isPartialRow(java.lang.Iterable,java.lang.Iterable) -> isPartialRow
    java.util.List getRows() -> getRows
    com.google.zxing.Result constructResult(java.util.List) -> constructResult
    boolean checkChecksum() -> checkChecksum
    int getNextSecondBar(com.google.zxing.common.BitArray,int) -> getNextSecondBar
    com.google.zxing.oned.rss.expanded.ExpandedPair retrieveNextPair(com.google.zxing.common.BitArray,java.util.List,int) -> retrieveNextPair
    void findNextPair(com.google.zxing.common.BitArray,java.util.List,int) -> findNextPair
    void reverseCounters(int[]) -> reverseCounters
    com.google.zxing.oned.rss.FinderPattern parseFoundFinderPattern(com.google.zxing.common.BitArray,int,boolean) -> parseFoundFinderPattern
    com.google.zxing.oned.rss.DataCharacter decodeDataCharacter(com.google.zxing.common.BitArray,com.google.zxing.oned.rss.FinderPattern,boolean,boolean) -> decodeDataCharacter
    boolean isNotA1left(com.google.zxing.oned.rss.FinderPattern,boolean,boolean) -> isNotA1left
    void adjustOddEvenCounts(int) -> adjustOddEvenCounts
com.google.zxing.oned.rss.expanded.decoders.AI013103decoder -> com.google.zxing.oned.rss.expanded.decoders.AI013103decoder:
    void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder:
    void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AI01392xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01392xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int LAST_DIGIT_SIZE -> LAST_DIGIT_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI01393xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01393xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int LAST_DIGIT_SIZE -> LAST_DIGIT_SIZE
    int FIRST_THREE_DIGITS_SIZE -> FIRST_THREE_DIGITS_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int WEIGHT_SIZE -> WEIGHT_SIZE
    int DATE_SIZE -> DATE_SIZE
    java.lang.String dateCode -> dateCode
    java.lang.String firstAIdigits -> firstAIdigits
    java.lang.String parseInformation() -> parseInformation
    void encodeCompressedDate(java.lang.StringBuilder,int) -> encodeCompressedDate
    void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int WEIGHT_SIZE -> WEIGHT_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI01AndOtherAIs -> com.google.zxing.oned.rss.expanded.decoders.AI01AndOtherAIs:
    int HEADER_SIZE -> HEADER_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI01decoder -> com.google.zxing.oned.rss.expanded.decoders.AI01decoder:
    int GTIN_SIZE -> GTIN_SIZE
    void encodeCompressedGtin(java.lang.StringBuilder,int) -> encodeCompressedGtin
    void encodeCompressedGtinWithoutAI(java.lang.StringBuilder,int,int) -> encodeCompressedGtinWithoutAI
    void appendCheckDigit(java.lang.StringBuilder,int) -> appendCheckDigit
com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder:
    void encodeCompressedWeight(java.lang.StringBuilder,int,int) -> encodeCompressedWeight
    void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder -> com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder:
    com.google.zxing.common.BitArray information -> information
    com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder generalDecoder -> generalDecoder
    com.google.zxing.common.BitArray getInformation() -> getInformation
    com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder getGeneralDecoder() -> getGeneralDecoder
    java.lang.String parseInformation() -> parseInformation
    com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder createDecoder(com.google.zxing.common.BitArray) -> createDecoder
com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoder -> com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult -> com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult:
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation decodedInformation -> decodedInformation
    boolean finished -> finished
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation getDecodedInformation() -> getDecodedInformation
    boolean isFinished() -> isFinished
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState -> com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState:
    int position -> position
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State encoding -> encoding
    int getPosition() -> getPosition
    void setPosition(int) -> setPosition
    void incrementPosition(int) -> incrementPosition
    boolean isAlpha() -> isAlpha
    boolean isNumeric() -> isNumeric
    boolean isIsoIec646() -> isIsoIec646
    void setNumeric() -> setNumeric
    void setAlpha() -> setAlpha
    void setIsoIec646() -> setIsoIec646
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State -> com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State:
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State NUMERIC -> NUMERIC
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State ALPHA -> ALPHA
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State ISO_IEC_646 -> ISO_IEC_646
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State[] $VALUES -> $VALUES
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State[] values() -> values
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State valueOf(java.lang.String) -> valueOf
com.google.zxing.oned.rss.expanded.decoders.DecodedChar -> com.google.zxing.oned.rss.expanded.decoders.DecodedChar:
    char value -> value
    char FNC1 -> FNC1
    char getValue() -> getValue
    boolean isFNC1() -> isFNC1
com.google.zxing.oned.rss.expanded.decoders.DecodedInformation -> com.google.zxing.oned.rss.expanded.decoders.DecodedInformation:
    java.lang.String newString -> newString
    int remainingValue -> remainingValue
    boolean remaining -> remaining
    java.lang.String getNewString() -> getNewString
    boolean isRemaining() -> isRemaining
    int getRemainingValue() -> getRemainingValue
com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric -> com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric:
    int firstDigit -> firstDigit
    int secondDigit -> secondDigit
    int FNC1 -> FNC1
    int getFirstDigit() -> getFirstDigit
    int getSecondDigit() -> getSecondDigit
    int getValue() -> getValue
    boolean isFirstDigitFNC1() -> isFirstDigitFNC1
    boolean isSecondDigitFNC1() -> isSecondDigitFNC1
    boolean isAnyFNC1() -> isAnyFNC1
com.google.zxing.oned.rss.expanded.decoders.DecodedObject -> com.google.zxing.oned.rss.expanded.decoders.DecodedObject:
    int newPosition -> newPosition
    int getNewPosition() -> getNewPosition
com.google.zxing.oned.rss.expanded.decoders.FieldParser -> com.google.zxing.oned.rss.expanded.decoders.FieldParser:
    java.lang.Object VARIABLE_LENGTH -> VARIABLE_LENGTH
    java.lang.Object[][] TWO_DIGIT_DATA_LENGTH -> TWO_DIGIT_DATA_LENGTH
    java.lang.Object[][] THREE_DIGIT_DATA_LENGTH -> THREE_DIGIT_DATA_LENGTH
    java.lang.Object[][] THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH -> THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH
    java.lang.Object[][] FOUR_DIGIT_DATA_LENGTH -> FOUR_DIGIT_DATA_LENGTH
    java.lang.String parseFieldsInGeneralPurpose(java.lang.String) -> parseFieldsInGeneralPurpose
    java.lang.String processFixedAI(int,int,java.lang.String) -> processFixedAI
    java.lang.String processVariableAI(int,int,java.lang.String) -> processVariableAI
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder -> com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder:
    com.google.zxing.common.BitArray information -> information
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState current -> current
    java.lang.StringBuilder buffer -> buffer
    java.lang.String decodeAllCodes(java.lang.StringBuilder,int) -> decodeAllCodes
    boolean isStillNumeric(int) -> isStillNumeric
    com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric decodeNumeric(int) -> decodeNumeric
    int extractNumericValueFromBitArray(int,int) -> extractNumericValueFromBitArray
    int extractNumericValueFromBitArray(com.google.zxing.common.BitArray,int,int) -> extractNumericValueFromBitArray
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation decodeGeneralPurposeField(int,java.lang.String) -> decodeGeneralPurposeField
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation parseBlocks() -> parseBlocks
    com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseNumericBlock() -> parseNumericBlock
    com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseIsoIec646Block() -> parseIsoIec646Block
    com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseAlphaBlock() -> parseAlphaBlock
    boolean isStillIsoIec646(int) -> isStillIsoIec646
    com.google.zxing.oned.rss.expanded.decoders.DecodedChar decodeIsoIec646(int) -> decodeIsoIec646
    boolean isStillAlpha(int) -> isStillAlpha
    com.google.zxing.oned.rss.expanded.decoders.DecodedChar decodeAlphanumeric(int) -> decodeAlphanumeric
    boolean isAlphaTo646ToAlphaLatch(int) -> isAlphaTo646ToAlphaLatch
    boolean isAlphaOr646ToNumericLatch(int) -> isAlphaOr646ToNumericLatch
    boolean isNumericToAlphaNumericLatch(int) -> isNumericToAlphaNumericLatch
com.google.zxing.pdf417.PDF417Common -> com.google.zxing.pdf417.PDF417Common:
    int NUMBER_OF_CODEWORDS -> NUMBER_OF_CODEWORDS
    int MAX_CODEWORDS_IN_BARCODE -> MAX_CODEWORDS_IN_BARCODE
    int MIN_ROWS_IN_BARCODE -> MIN_ROWS_IN_BARCODE
    int MAX_ROWS_IN_BARCODE -> MAX_ROWS_IN_BARCODE
    int MODULES_IN_CODEWORD -> MODULES_IN_CODEWORD
    int MODULES_IN_STOP_PATTERN -> MODULES_IN_STOP_PATTERN
    int BARS_IN_MODULE -> BARS_IN_MODULE
    int[] EMPTY_INT_ARRAY -> EMPTY_INT_ARRAY
    int[] SYMBOL_TABLE -> SYMBOL_TABLE
    int[] CODEWORD_TABLE -> CODEWORD_TABLE
    int getBitCountSum(int[]) -> getBitCountSum
    int[] toIntArray(java.util.Collection) -> toIntArray
    int getCodeword(long) -> getCodeword
    int findCodewordIndex(long) -> findCodewordIndex
com.google.zxing.pdf417.PDF417Reader -> com.google.zxing.pdf417.PDF417Reader:
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map) -> decodeMultiple
    com.google.zxing.Result[] decode(com.google.zxing.BinaryBitmap,java.util.Map,boolean) -> decode
    int getMaxWidth(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> getMaxWidth
    int getMinWidth(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> getMinWidth
    int getMaxCodewordWidth(com.google.zxing.ResultPoint[]) -> getMaxCodewordWidth
    int getMinCodewordWidth(com.google.zxing.ResultPoint[]) -> getMinCodewordWidth
    void reset() -> reset
com.google.zxing.pdf417.PDF417ResultMetadata -> com.google.zxing.pdf417.PDF417ResultMetadata:
    int segmentIndex -> segmentIndex
    java.lang.String fileId -> fileId
    int[] optionalData -> optionalData
    boolean lastSegment -> lastSegment
    int getSegmentIndex() -> getSegmentIndex
    void setSegmentIndex(int) -> setSegmentIndex
    java.lang.String getFileId() -> getFileId
    void setFileId(java.lang.String) -> setFileId
    int[] getOptionalData() -> getOptionalData
    void setOptionalData(int[]) -> setOptionalData
    boolean isLastSegment() -> isLastSegment
    void setLastSegment(boolean) -> setLastSegment
com.google.zxing.pdf417.PDF417Writer -> com.google.zxing.pdf417.PDF417Writer:
    int WHITE_SPACE -> WHITE_SPACE
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix bitMatrixFromEncoder(com.google.zxing.pdf417.encoder.PDF417,java.lang.String,int,int,int) -> bitMatrixFromEncoder
    com.google.zxing.common.BitMatrix bitMatrixFrombitArray(byte[][],int) -> bitMatrixFrombitArray
    byte[][] rotateArray(byte[][]) -> rotateArray
com.google.zxing.pdf417.decoder.BarcodeMetadata -> com.google.zxing.pdf417.decoder.BarcodeMetadata:
    int columnCount -> columnCount
    int errorCorrectionLevel -> errorCorrectionLevel
    int rowCountUpperPart -> rowCountUpperPart
    int rowCountLowerPart -> rowCountLowerPart
    int rowCount -> rowCount
    int getColumnCount() -> getColumnCount
    int getErrorCorrectionLevel() -> getErrorCorrectionLevel
    int getRowCount() -> getRowCount
    int getRowCountUpperPart() -> getRowCountUpperPart
    int getRowCountLowerPart() -> getRowCountLowerPart
com.google.zxing.pdf417.decoder.BarcodeValue -> com.google.zxing.pdf417.decoder.BarcodeValue:
    java.util.Map values -> values
    void setValue(int) -> setValue
    int[] getValue() -> getValue
    java.lang.Integer getConfidence(int) -> getConfidence
com.google.zxing.pdf417.decoder.BoundingBox -> com.google.zxing.pdf417.decoder.BoundingBox:
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.ResultPoint topLeft -> topLeft
    com.google.zxing.ResultPoint bottomLeft -> bottomLeft
    com.google.zxing.ResultPoint topRight -> topRight
    com.google.zxing.ResultPoint bottomRight -> bottomRight
    int minX -> minX
    int maxX -> maxX
    int minY -> minY
    int maxY -> maxY
    void init(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> init
    com.google.zxing.pdf417.decoder.BoundingBox merge(com.google.zxing.pdf417.decoder.BoundingBox,com.google.zxing.pdf417.decoder.BoundingBox) -> merge
    com.google.zxing.pdf417.decoder.BoundingBox addMissingRows(int,int,boolean) -> addMissingRows
    void calculateMinMaxValues() -> calculateMinMaxValues
    int getMinX() -> getMinX
    int getMaxX() -> getMaxX
    int getMinY() -> getMinY
    int getMaxY() -> getMaxY
    com.google.zxing.ResultPoint getTopLeft() -> getTopLeft
    com.google.zxing.ResultPoint getTopRight() -> getTopRight
    com.google.zxing.ResultPoint getBottomLeft() -> getBottomLeft
    com.google.zxing.ResultPoint getBottomRight() -> getBottomRight
com.google.zxing.pdf417.decoder.Codeword -> com.google.zxing.pdf417.decoder.Codeword:
    int BARCODE_ROW_UNKNOWN -> BARCODE_ROW_UNKNOWN
    int startX -> startX
    int endX -> endX
    int bucket -> bucket
    int value -> value
    int rowNumber -> rowNumber
    boolean hasValidRowNumber() -> hasValidRowNumber
    boolean isValidRowNumber(int) -> isValidRowNumber
    void setRowNumberAsRowIndicatorColumn() -> setRowNumberAsRowIndicatorColumn
    int getWidth() -> getWidth
    int getStartX() -> getStartX
    int getEndX() -> getEndX
    int getBucket() -> getBucket
    int getValue() -> getValue
    int getRowNumber() -> getRowNumber
    void setRowNumber(int) -> setRowNumber
    java.lang.String toString() -> toString
com.google.zxing.pdf417.decoder.DecodedBitStreamParser -> com.google.zxing.pdf417.decoder.DecodedBitStreamParser:
    int TEXT_COMPACTION_MODE_LATCH -> TEXT_COMPACTION_MODE_LATCH
    int BYTE_COMPACTION_MODE_LATCH -> BYTE_COMPACTION_MODE_LATCH
    int NUMERIC_COMPACTION_MODE_LATCH -> NUMERIC_COMPACTION_MODE_LATCH
    int BYTE_COMPACTION_MODE_LATCH_6 -> BYTE_COMPACTION_MODE_LATCH_6
    int BEGIN_MACRO_PDF417_CONTROL_BLOCK -> BEGIN_MACRO_PDF417_CONTROL_BLOCK
    int BEGIN_MACRO_PDF417_OPTIONAL_FIELD -> BEGIN_MACRO_PDF417_OPTIONAL_FIELD
    int MACRO_PDF417_TERMINATOR -> MACRO_PDF417_TERMINATOR
    int MODE_SHIFT_TO_BYTE_COMPACTION_MODE -> MODE_SHIFT_TO_BYTE_COMPACTION_MODE
    int MAX_NUMERIC_CODEWORDS -> MAX_NUMERIC_CODEWORDS
    int PL -> PL
    int LL -> LL
    int AS -> AS
    int ML -> ML
    int AL -> AL
    int PS -> PS
    int PAL -> PAL
    char[] PUNCT_CHARS -> PUNCT_CHARS
    char[] MIXED_CHARS -> MIXED_CHARS
    java.math.BigInteger[] EXP900 -> EXP900
    int NUMBER_OF_SEQUENCE_CODEWORDS -> NUMBER_OF_SEQUENCE_CODEWORDS
    com.google.zxing.common.DecoderResult decode(int[],java.lang.String) -> decode
    int decodeMacroBlock(int[],int,com.google.zxing.pdf417.PDF417ResultMetadata) -> decodeMacroBlock
    int textCompaction(int[],int,java.lang.StringBuilder) -> textCompaction
    void decodeTextCompaction(int[],int[],int,java.lang.StringBuilder) -> decodeTextCompaction
    int byteCompaction(int,int[],int,java.lang.StringBuilder) -> byteCompaction
    int numericCompaction(int[],int,java.lang.StringBuilder) -> numericCompaction
    java.lang.String decodeBase900toBase10(int[],int) -> decodeBase900toBase10
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$1 -> com.google.zxing.pdf417.decoder.DecodedBitStreamParser$1:
    int[] $SwitchMap$com$google$zxing$pdf417$decoder$DecodedBitStreamParser$Mode -> $SwitchMap$com$google$zxing$pdf417$decoder$DecodedBitStreamParser$Mode
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode -> com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode:
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode ALPHA -> ALPHA
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode LOWER -> LOWER
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode MIXED -> MIXED
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode PUNCT -> PUNCT
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode ALPHA_SHIFT -> ALPHA_SHIFT
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode PUNCT_SHIFT -> PUNCT_SHIFT
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode[] $VALUES -> $VALUES
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode[] values() -> values
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String) -> valueOf
com.google.zxing.pdf417.decoder.DetectionResult -> com.google.zxing.pdf417.decoder.DetectionResult:
    int ADJUST_ROW_NUMBER_SKIP -> ADJUST_ROW_NUMBER_SKIP
    com.google.zxing.pdf417.decoder.BarcodeMetadata barcodeMetadata -> barcodeMetadata
    com.google.zxing.pdf417.decoder.DetectionResultColumn[] detectionResultColumns -> detectionResultColumns
    com.google.zxing.pdf417.decoder.BoundingBox boundingBox -> boundingBox
    int barcodeColumnCount -> barcodeColumnCount
    com.google.zxing.pdf417.decoder.DetectionResultColumn[] getDetectionResultColumns() -> getDetectionResultColumns
    void adjustIndicatorColumnRowNumbers(com.google.zxing.pdf417.decoder.DetectionResultColumn) -> adjustIndicatorColumnRowNumbers
    int adjustRowNumbers() -> adjustRowNumbers
    int adjustRowNumbersByRow() -> adjustRowNumbersByRow
    void adjustRowNumbersFromBothRI() -> adjustRowNumbersFromBothRI
    int adjustRowNumbersFromRRI() -> adjustRowNumbersFromRRI
    int adjustRowNumbersFromLRI() -> adjustRowNumbersFromLRI
    int adjustRowNumberIfValid(int,int,com.google.zxing.pdf417.decoder.Codeword) -> adjustRowNumberIfValid
    void adjustRowNumbers(int,int,com.google.zxing.pdf417.decoder.Codeword[]) -> adjustRowNumbers
    boolean adjustRowNumber(com.google.zxing.pdf417.decoder.Codeword,com.google.zxing.pdf417.decoder.Codeword) -> adjustRowNumber
    int getBarcodeColumnCount() -> getBarcodeColumnCount
    int getBarcodeRowCount() -> getBarcodeRowCount
    int getBarcodeECLevel() -> getBarcodeECLevel
    void setBoundingBox(com.google.zxing.pdf417.decoder.BoundingBox) -> setBoundingBox
    com.google.zxing.pdf417.decoder.BoundingBox getBoundingBox() -> getBoundingBox
    void setDetectionResultColumn(int,com.google.zxing.pdf417.decoder.DetectionResultColumn) -> setDetectionResultColumn
    com.google.zxing.pdf417.decoder.DetectionResultColumn getDetectionResultColumn(int) -> getDetectionResultColumn
    java.lang.String toString() -> toString
com.google.zxing.pdf417.decoder.DetectionResultColumn -> com.google.zxing.pdf417.decoder.DetectionResultColumn:
    int MAX_NEARBY_DISTANCE -> MAX_NEARBY_DISTANCE
    com.google.zxing.pdf417.decoder.BoundingBox boundingBox -> boundingBox
    com.google.zxing.pdf417.decoder.Codeword[] codewords -> codewords
    com.google.zxing.pdf417.decoder.Codeword getCodewordNearby(int) -> getCodewordNearby
    int imageRowToCodewordIndex(int) -> imageRowToCodewordIndex
    void setCodeword(int,com.google.zxing.pdf417.decoder.Codeword) -> setCodeword
    com.google.zxing.pdf417.decoder.Codeword getCodeword(int) -> getCodeword
    com.google.zxing.pdf417.decoder.BoundingBox getBoundingBox() -> getBoundingBox
    com.google.zxing.pdf417.decoder.Codeword[] getCodewords() -> getCodewords
    java.lang.String toString() -> toString
com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn -> com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn:
    boolean isLeft -> isLeft
    void setRowNumbers() -> setRowNumbers
    int adjustCompleteIndicatorColumnRowNumbers(com.google.zxing.pdf417.decoder.BarcodeMetadata) -> adjustCompleteIndicatorColumnRowNumbers
    int[] getRowHeights() -> getRowHeights
    int adjustIncompleteIndicatorColumnRowNumbers(com.google.zxing.pdf417.decoder.BarcodeMetadata) -> adjustIncompleteIndicatorColumnRowNumbers
    com.google.zxing.pdf417.decoder.BarcodeMetadata getBarcodeMetadata() -> getBarcodeMetadata
    void removeIncorrectCodewords(com.google.zxing.pdf417.decoder.Codeword[],com.google.zxing.pdf417.decoder.BarcodeMetadata) -> removeIncorrectCodewords
    boolean isLeft() -> isLeft
    java.lang.String toString() -> toString
com.google.zxing.pdf417.decoder.PDF417CodewordDecoder -> com.google.zxing.pdf417.decoder.PDF417CodewordDecoder:
    float[][] RATIOS_TABLE -> RATIOS_TABLE
    int getDecodedValue(int[]) -> getDecodedValue
    int[] sampleBitCounts(int[]) -> sampleBitCounts
    int getDecodedCodewordValue(int[]) -> getDecodedCodewordValue
    int getBitValue(int[]) -> getBitValue
    int getClosestDecodedValue(int[]) -> getClosestDecodedValue
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder -> com.google.zxing.pdf417.decoder.PDF417ScanningDecoder:
    int CODEWORD_SKEW_SIZE -> CODEWORD_SKEW_SIZE
    int MAX_ERRORS -> MAX_ERRORS
    int MAX_EC_CODEWORDS -> MAX_EC_CODEWORDS
    com.google.zxing.pdf417.decoder.ec.ErrorCorrection errorCorrection -> errorCorrection
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int) -> decode
    com.google.zxing.pdf417.decoder.DetectionResult merge(com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn,com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn) -> merge
    com.google.zxing.pdf417.decoder.BoundingBox adjustBoundingBox(com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn) -> adjustBoundingBox
    int getMax(int[]) -> getMax
    com.google.zxing.pdf417.decoder.BarcodeMetadata getBarcodeMetadata(com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn,com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn) -> getBarcodeMetadata
    com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn getRowIndicatorColumn(com.google.zxing.common.BitMatrix,com.google.zxing.pdf417.decoder.BoundingBox,com.google.zxing.ResultPoint,boolean,int,int) -> getRowIndicatorColumn
    void adjustCodewordCount(com.google.zxing.pdf417.decoder.DetectionResult,com.google.zxing.pdf417.decoder.BarcodeValue[][]) -> adjustCodewordCount
    com.google.zxing.common.DecoderResult createDecoderResult(com.google.zxing.pdf417.decoder.DetectionResult) -> createDecoderResult
    com.google.zxing.common.DecoderResult createDecoderResultFromAmbiguousValues(int,int[],int[],int[],int[][]) -> createDecoderResultFromAmbiguousValues
    com.google.zxing.pdf417.decoder.BarcodeValue[][] createBarcodeMatrix(com.google.zxing.pdf417.decoder.DetectionResult) -> createBarcodeMatrix
    boolean isValidBarcodeColumn(com.google.zxing.pdf417.decoder.DetectionResult,int) -> isValidBarcodeColumn
    int getStartColumn(com.google.zxing.pdf417.decoder.DetectionResult,int,int,boolean) -> getStartColumn
    com.google.zxing.pdf417.decoder.Codeword detectCodeword(com.google.zxing.common.BitMatrix,int,int,boolean,int,int,int,int) -> detectCodeword
    int[] getModuleBitCount(com.google.zxing.common.BitMatrix,int,int,boolean,int,int) -> getModuleBitCount
    int getNumberOfECCodeWords(int) -> getNumberOfECCodeWords
    int adjustCodewordStartColumn(com.google.zxing.common.BitMatrix,int,int,boolean,int,int) -> adjustCodewordStartColumn
    boolean checkCodewordSkew(int,int,int) -> checkCodewordSkew
    com.google.zxing.common.DecoderResult decodeCodewords(int[],int,int[]) -> decodeCodewords
    int correctErrors(int[],int[],int) -> correctErrors
    void verifyCodewordCount(int[],int) -> verifyCodewordCount
    int[] getBitCountForCodeword(int) -> getBitCountForCodeword
    int getCodewordBucketNumber(int) -> getCodewordBucketNumber
    int getCodewordBucketNumber(int[]) -> getCodewordBucketNumber
    java.lang.String toString(com.google.zxing.pdf417.decoder.BarcodeValue[][]) -> toString
com.google.zxing.pdf417.decoder.ec.ErrorCorrection -> com.google.zxing.pdf417.decoder.ec.ErrorCorrection:
    com.google.zxing.pdf417.decoder.ec.ModulusGF field -> field
    int decode(int[],int,int[]) -> decode
    com.google.zxing.pdf417.decoder.ec.ModulusPoly[] runEuclideanAlgorithm(com.google.zxing.pdf417.decoder.ec.ModulusPoly,com.google.zxing.pdf417.decoder.ec.ModulusPoly,int) -> runEuclideanAlgorithm
    int[] findErrorLocations(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> findErrorLocations
    int[] findErrorMagnitudes(com.google.zxing.pdf417.decoder.ec.ModulusPoly,com.google.zxing.pdf417.decoder.ec.ModulusPoly,int[]) -> findErrorMagnitudes
com.google.zxing.pdf417.decoder.ec.ModulusGF -> com.google.zxing.pdf417.decoder.ec.ModulusGF:
    com.google.zxing.pdf417.decoder.ec.ModulusGF PDF417_GF -> PDF417_GF
    int[] expTable -> expTable
    int[] logTable -> logTable
    com.google.zxing.pdf417.decoder.ec.ModulusPoly zero -> zero
    com.google.zxing.pdf417.decoder.ec.ModulusPoly one -> one
    int modulus -> modulus
    com.google.zxing.pdf417.decoder.ec.ModulusPoly getZero() -> getZero
    com.google.zxing.pdf417.decoder.ec.ModulusPoly getOne() -> getOne
    com.google.zxing.pdf417.decoder.ec.ModulusPoly buildMonomial(int,int) -> buildMonomial
    int add(int,int) -> add
    int subtract(int,int) -> subtract
    int exp(int) -> exp
    int log(int) -> log
    int inverse(int) -> inverse
    int multiply(int,int) -> multiply
    int getSize() -> getSize
com.google.zxing.pdf417.decoder.ec.ModulusPoly -> com.google.zxing.pdf417.decoder.ec.ModulusPoly:
    com.google.zxing.pdf417.decoder.ec.ModulusGF field -> field
    int[] coefficients -> coefficients
    int[] getCoefficients() -> getCoefficients
    int getDegree() -> getDegree
    boolean isZero() -> isZero
    int getCoefficient(int) -> getCoefficient
    int evaluateAt(int) -> evaluateAt
    com.google.zxing.pdf417.decoder.ec.ModulusPoly add(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> add
    com.google.zxing.pdf417.decoder.ec.ModulusPoly subtract(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> subtract
    com.google.zxing.pdf417.decoder.ec.ModulusPoly multiply(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> multiply
    com.google.zxing.pdf417.decoder.ec.ModulusPoly negative() -> negative
    com.google.zxing.pdf417.decoder.ec.ModulusPoly multiply(int) -> multiply
    com.google.zxing.pdf417.decoder.ec.ModulusPoly multiplyByMonomial(int,int) -> multiplyByMonomial
    com.google.zxing.pdf417.decoder.ec.ModulusPoly[] divide(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> divide
    java.lang.String toString() -> toString
com.google.zxing.pdf417.detector.Detector -> com.google.zxing.pdf417.detector.Detector:
    int[] INDEXES_START_PATTERN -> INDEXES_START_PATTERN
    int[] INDEXES_STOP_PATTERN -> INDEXES_STOP_PATTERN
    int INTEGER_MATH_SHIFT -> INTEGER_MATH_SHIFT
    int PATTERN_MATCH_RESULT_SCALE_FACTOR -> PATTERN_MATCH_RESULT_SCALE_FACTOR
    int MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    int MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int[] START_PATTERN -> START_PATTERN
    int[] STOP_PATTERN -> STOP_PATTERN
    int MAX_PIXEL_DRIFT -> MAX_PIXEL_DRIFT
    int MAX_PATTERN_DRIFT -> MAX_PATTERN_DRIFT
    int SKIPPED_ROW_COUNT_MAX -> SKIPPED_ROW_COUNT_MAX
    int ROW_STEP -> ROW_STEP
    int BARCODE_MIN_HEIGHT -> BARCODE_MIN_HEIGHT
    com.google.zxing.pdf417.detector.PDF417DetectorResult detect(com.google.zxing.BinaryBitmap,java.util.Map,boolean) -> detect
    java.util.List detect(boolean,com.google.zxing.common.BitMatrix) -> detect
    void rotate180(com.google.zxing.common.BitMatrix) -> rotate180
    com.google.zxing.common.BitArray mirror(com.google.zxing.common.BitArray,com.google.zxing.common.BitArray) -> mirror
    com.google.zxing.ResultPoint[] findVertices(com.google.zxing.common.BitMatrix,int,int) -> findVertices
    void copyToResult(com.google.zxing.ResultPoint[],com.google.zxing.ResultPoint[],int[]) -> copyToResult
    com.google.zxing.ResultPoint[] findRowsWithPattern(com.google.zxing.common.BitMatrix,int,int,int,int,int[]) -> findRowsWithPattern
    int[] findGuardPattern(com.google.zxing.common.BitMatrix,int,int,int,boolean,int[],int[]) -> findGuardPattern
    int patternMatchVariance(int[],int[],int) -> patternMatchVariance
com.google.zxing.pdf417.detector.PDF417DetectorResult -> com.google.zxing.pdf417.detector.PDF417DetectorResult:
    com.google.zxing.common.BitMatrix bits -> bits
    java.util.List points -> points
    com.google.zxing.common.BitMatrix getBits() -> getBits
    java.util.List getPoints() -> getPoints
com.google.zxing.pdf417.encoder.BarcodeMatrix -> com.google.zxing.pdf417.encoder.BarcodeMatrix:
    com.google.zxing.pdf417.encoder.BarcodeRow[] matrix -> matrix
    int currentRow -> currentRow
    int height -> height
    int width -> width
    void set(int,int,byte) -> set
    void startRow() -> startRow
    com.google.zxing.pdf417.encoder.BarcodeRow getCurrentRow() -> getCurrentRow
    byte[][] getMatrix() -> getMatrix
    byte[][] getScaledMatrix(int,int) -> getScaledMatrix
com.google.zxing.pdf417.encoder.BarcodeRow -> com.google.zxing.pdf417.encoder.BarcodeRow:
    byte[] row -> row
    int currentLocation -> currentLocation
    void set(int,byte) -> set
    void set(int,boolean) -> set
    void addBar(boolean,int) -> addBar
    byte[] getScaledRow(int) -> getScaledRow
com.google.zxing.pdf417.encoder.Compaction -> com.google.zxing.pdf417.encoder.Compaction:
    com.google.zxing.pdf417.encoder.Compaction AUTO -> AUTO
    com.google.zxing.pdf417.encoder.Compaction TEXT -> TEXT
    com.google.zxing.pdf417.encoder.Compaction BYTE -> BYTE
    com.google.zxing.pdf417.encoder.Compaction NUMERIC -> NUMERIC
    com.google.zxing.pdf417.encoder.Compaction[] $VALUES -> $VALUES
    com.google.zxing.pdf417.encoder.Compaction[] values() -> values
    com.google.zxing.pdf417.encoder.Compaction valueOf(java.lang.String) -> valueOf
com.google.zxing.pdf417.encoder.Dimensions -> com.google.zxing.pdf417.encoder.Dimensions:
    int minCols -> minCols
    int maxCols -> maxCols
    int minRows -> minRows
    int maxRows -> maxRows
    int getMinCols() -> getMinCols
    int getMaxCols() -> getMaxCols
    int getMinRows() -> getMinRows
    int getMaxRows() -> getMaxRows
com.google.zxing.pdf417.encoder.PDF417 -> com.google.zxing.pdf417.encoder.PDF417:
    int START_PATTERN -> START_PATTERN
    int STOP_PATTERN -> STOP_PATTERN
    int[][] CODEWORD_TABLE -> CODEWORD_TABLE
    float PREFERRED_RATIO -> PREFERRED_RATIO
    float DEFAULT_MODULE_WIDTH -> DEFAULT_MODULE_WIDTH
    float HEIGHT -> HEIGHT
    com.google.zxing.pdf417.encoder.BarcodeMatrix barcodeMatrix -> barcodeMatrix
    boolean compact -> compact
    com.google.zxing.pdf417.encoder.Compaction compaction -> compaction
    int minCols -> minCols
    int maxCols -> maxCols
    int maxRows -> maxRows
    int minRows -> minRows
    com.google.zxing.pdf417.encoder.BarcodeMatrix getBarcodeMatrix() -> getBarcodeMatrix
    int calculateNumberOfRows(int,int,int) -> calculateNumberOfRows
    int getNumberOfPadCodewords(int,int,int,int) -> getNumberOfPadCodewords
    void encodeChar(int,int,com.google.zxing.pdf417.encoder.BarcodeRow) -> encodeChar
    void encodeLowLevel(java.lang.CharSequence,int,int,int,com.google.zxing.pdf417.encoder.BarcodeMatrix) -> encodeLowLevel
    void generateBarcodeLogic(java.lang.String,int) -> generateBarcodeLogic
    int[] determineDimensions(int,int) -> determineDimensions
    void setDimensions(int,int,int,int) -> setDimensions
    void setCompaction(com.google.zxing.pdf417.encoder.Compaction) -> setCompaction
    void setCompact(boolean) -> setCompact
com.google.zxing.pdf417.encoder.PDF417ErrorCorrection -> com.google.zxing.pdf417.encoder.PDF417ErrorCorrection:
    int[][] EC_COEFFICIENTS -> EC_COEFFICIENTS
    int getErrorCorrectionCodewordCount(int) -> getErrorCorrectionCodewordCount
    int getRecommendedMinimumErrorCorrectionLevel(int) -> getRecommendedMinimumErrorCorrectionLevel
    java.lang.String generateErrorCorrection(java.lang.CharSequence,int) -> generateErrorCorrection
com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder -> com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder:
    int TEXT_COMPACTION -> TEXT_COMPACTION
    int BYTE_COMPACTION -> BYTE_COMPACTION
    int NUMERIC_COMPACTION -> NUMERIC_COMPACTION
    int SUBMODE_ALPHA -> SUBMODE_ALPHA
    int SUBMODE_LOWER -> SUBMODE_LOWER
    int SUBMODE_MIXED -> SUBMODE_MIXED
    int SUBMODE_PUNCTUATION -> SUBMODE_PUNCTUATION
    int LATCH_TO_TEXT -> LATCH_TO_TEXT
    int LATCH_TO_BYTE_PADDED -> LATCH_TO_BYTE_PADDED
    int LATCH_TO_NUMERIC -> LATCH_TO_NUMERIC
    int SHIFT_TO_BYTE -> SHIFT_TO_BYTE
    int LATCH_TO_BYTE -> LATCH_TO_BYTE
    byte[] TEXT_MIXED_RAW -> TEXT_MIXED_RAW
    byte[] TEXT_PUNCTUATION_RAW -> TEXT_PUNCTUATION_RAW
    byte[] MIXED -> MIXED
    byte[] PUNCTUATION -> PUNCTUATION
    byte[] getBytesForMessage(java.lang.String) -> getBytesForMessage
    java.lang.String encodeHighLevel(java.lang.String,com.google.zxing.pdf417.encoder.Compaction) -> encodeHighLevel
    int encodeText(java.lang.CharSequence,int,int,java.lang.StringBuilder,int) -> encodeText
    void encodeBinary(byte[],int,int,int,java.lang.StringBuilder) -> encodeBinary
    void encodeNumeric(java.lang.String,int,int,java.lang.StringBuilder) -> encodeNumeric
    boolean isDigit(char) -> isDigit
    boolean isAlphaUpper(char) -> isAlphaUpper
    boolean isAlphaLower(char) -> isAlphaLower
    boolean isMixed(char) -> isMixed
    boolean isPunctuation(char) -> isPunctuation
    boolean isText(char) -> isText
    int determineConsecutiveDigitCount(java.lang.CharSequence,int) -> determineConsecutiveDigitCount
    int determineConsecutiveTextCount(java.lang.CharSequence,int) -> determineConsecutiveTextCount
    int determineConsecutiveBinaryCount(java.lang.CharSequence,byte[],int) -> determineConsecutiveBinaryCount
com.google.zxing.qrcode.QRCodeReader -> com.google.zxing.qrcode.QRCodeReader:
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    com.google.zxing.qrcode.decoder.Decoder decoder -> decoder
    com.google.zxing.qrcode.decoder.Decoder getDecoder() -> getDecoder
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
    com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
    float moduleSize(int[],com.google.zxing.common.BitMatrix) -> moduleSize
com.google.zxing.qrcode.QRCodeWriter -> com.google.zxing.qrcode.QRCodeWriter:
    int QUIET_ZONE_SIZE -> QUIET_ZONE_SIZE
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    com.google.zxing.common.BitMatrix renderResult(com.google.zxing.qrcode.encoder.QRCode,int,int,int) -> renderResult
com.google.zxing.qrcode.decoder.BitMatrixParser -> com.google.zxing.qrcode.decoder.BitMatrixParser:
    com.google.zxing.common.BitMatrix bitMatrix -> bitMatrix
    com.google.zxing.qrcode.decoder.Version parsedVersion -> parsedVersion
    com.google.zxing.qrcode.decoder.FormatInformation parsedFormatInfo -> parsedFormatInfo
    boolean mirror -> mirror
    com.google.zxing.qrcode.decoder.FormatInformation readFormatInformation() -> readFormatInformation
    com.google.zxing.qrcode.decoder.Version readVersion() -> readVersion
    int copyBit(int,int,int) -> copyBit
    byte[] readCodewords() -> readCodewords
    void remask() -> remask
    void setMirror(boolean) -> setMirror
    void mirror() -> mirror
com.google.zxing.qrcode.decoder.DataBlock -> com.google.zxing.qrcode.decoder.DataBlock:
    int numDataCodewords -> numDataCodewords
    byte[] codewords -> codewords
    com.google.zxing.qrcode.decoder.DataBlock[] getDataBlocks(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> getDataBlocks
    int getNumDataCodewords() -> getNumDataCodewords
    byte[] getCodewords() -> getCodewords
com.google.zxing.qrcode.decoder.DataMask -> com.google.zxing.qrcode.decoder.DataMask:
    com.google.zxing.qrcode.decoder.DataMask[] DATA_MASKS -> DATA_MASKS
    void unmaskBitMatrix(com.google.zxing.common.BitMatrix,int) -> unmaskBitMatrix
    boolean isMasked(int,int) -> isMasked
    com.google.zxing.qrcode.decoder.DataMask forReference(int) -> forReference
com.google.zxing.qrcode.decoder.DataMask$1 -> com.google.zxing.qrcode.decoder.DataMask$1:
com.google.zxing.qrcode.decoder.DataMask$DataMask000 -> com.google.zxing.qrcode.decoder.DataMask$DataMask000:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask001 -> com.google.zxing.qrcode.decoder.DataMask$DataMask001:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask010 -> com.google.zxing.qrcode.decoder.DataMask$DataMask010:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask011 -> com.google.zxing.qrcode.decoder.DataMask$DataMask011:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask100 -> com.google.zxing.qrcode.decoder.DataMask$DataMask100:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask101 -> com.google.zxing.qrcode.decoder.DataMask$DataMask101:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask110 -> com.google.zxing.qrcode.decoder.DataMask$DataMask110:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask111 -> com.google.zxing.qrcode.decoder.DataMask$DataMask111:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DecodedBitStreamParser -> com.google.zxing.qrcode.decoder.DecodedBitStreamParser:
    char[] ALPHANUMERIC_CHARS -> ALPHANUMERIC_CHARS
    int GB2312_SUBSET -> GB2312_SUBSET
    com.google.zxing.common.DecoderResult decode(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,java.util.Map) -> decode
    void decodeHanziSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> decodeHanziSegment
    void decodeKanjiSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> decodeKanjiSegment
    void decodeByteSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int,com.google.zxing.common.CharacterSetECI,java.util.Collection,java.util.Map) -> decodeByteSegment
    char toAlphaNumericChar(int) -> toAlphaNumericChar
    void decodeAlphanumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int,boolean) -> decodeAlphanumericSegment
    void decodeNumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> decodeNumericSegment
    int parseECIValue(com.google.zxing.common.BitSource) -> parseECIValue
com.google.zxing.qrcode.decoder.Decoder -> com.google.zxing.qrcode.decoder.Decoder:
    com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder -> rsDecoder
    com.google.zxing.common.DecoderResult decode(boolean[][]) -> decode
    com.google.zxing.common.DecoderResult decode(boolean[][],java.util.Map) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,java.util.Map) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.qrcode.decoder.BitMatrixParser,java.util.Map) -> decode
    void correctErrors(byte[],int) -> correctErrors
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel -> com.google.zxing.qrcode.decoder.ErrorCorrectionLevel:
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel L -> L
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel M -> M
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel Q -> Q
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel H -> H
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] FOR_BITS -> FOR_BITS
    int bits -> bits
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] $VALUES -> $VALUES
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] values() -> values
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel valueOf(java.lang.String) -> valueOf
    int getBits() -> getBits
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel forBits(int) -> forBits
com.google.zxing.qrcode.decoder.FormatInformation -> com.google.zxing.qrcode.decoder.FormatInformation:
    int FORMAT_INFO_MASK_QR -> FORMAT_INFO_MASK_QR
    int[][] FORMAT_INFO_DECODE_LOOKUP -> FORMAT_INFO_DECODE_LOOKUP
    int[] BITS_SET_IN_HALF_BYTE -> BITS_SET_IN_HALF_BYTE
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel errorCorrectionLevel -> errorCorrectionLevel
    byte dataMask -> dataMask
    int numBitsDiffering(int,int) -> numBitsDiffering
    com.google.zxing.qrcode.decoder.FormatInformation decodeFormatInformation(int,int) -> decodeFormatInformation
    com.google.zxing.qrcode.decoder.FormatInformation doDecodeFormatInformation(int,int) -> doDecodeFormatInformation
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel getErrorCorrectionLevel() -> getErrorCorrectionLevel
    byte getDataMask() -> getDataMask
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.zxing.qrcode.decoder.Mode -> com.google.zxing.qrcode.decoder.Mode:
    com.google.zxing.qrcode.decoder.Mode TERMINATOR -> TERMINATOR
    com.google.zxing.qrcode.decoder.Mode NUMERIC -> NUMERIC
    com.google.zxing.qrcode.decoder.Mode ALPHANUMERIC -> ALPHANUMERIC
    com.google.zxing.qrcode.decoder.Mode STRUCTURED_APPEND -> STRUCTURED_APPEND
    com.google.zxing.qrcode.decoder.Mode BYTE -> BYTE
    com.google.zxing.qrcode.decoder.Mode ECI -> ECI
    com.google.zxing.qrcode.decoder.Mode KANJI -> KANJI
    com.google.zxing.qrcode.decoder.Mode FNC1_FIRST_POSITION -> FNC1_FIRST_POSITION
    com.google.zxing.qrcode.decoder.Mode FNC1_SECOND_POSITION -> FNC1_SECOND_POSITION
    com.google.zxing.qrcode.decoder.Mode HANZI -> HANZI
    int[] characterCountBitsForVersions -> characterCountBitsForVersions
    int bits -> bits
    com.google.zxing.qrcode.decoder.Mode[] $VALUES -> $VALUES
    com.google.zxing.qrcode.decoder.Mode[] values() -> values
    com.google.zxing.qrcode.decoder.Mode valueOf(java.lang.String) -> valueOf
    com.google.zxing.qrcode.decoder.Mode forBits(int) -> forBits
    int getCharacterCountBits(com.google.zxing.qrcode.decoder.Version) -> getCharacterCountBits
    int getBits() -> getBits
com.google.zxing.qrcode.decoder.QRCodeDecoderMetaData -> com.google.zxing.qrcode.decoder.QRCodeDecoderMetaData:
    boolean mirrored -> mirrored
    boolean isMirrored() -> isMirrored
    void applyMirroredCorrection(com.google.zxing.ResultPoint[]) -> applyMirroredCorrection
com.google.zxing.qrcode.decoder.Version -> com.google.zxing.qrcode.decoder.Version:
    int[] VERSION_DECODE_INFO -> VERSION_DECODE_INFO
    com.google.zxing.qrcode.decoder.Version[] VERSIONS -> VERSIONS
    int versionNumber -> versionNumber
    int[] alignmentPatternCenters -> alignmentPatternCenters
    com.google.zxing.qrcode.decoder.Version$ECBlocks[] ecBlocks -> ecBlocks
    int totalCodewords -> totalCodewords
    int getVersionNumber() -> getVersionNumber
    int[] getAlignmentPatternCenters() -> getAlignmentPatternCenters
    int getTotalCodewords() -> getTotalCodewords
    int getDimensionForVersion() -> getDimensionForVersion
    com.google.zxing.qrcode.decoder.Version$ECBlocks getECBlocksForLevel(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> getECBlocksForLevel
    com.google.zxing.qrcode.decoder.Version getProvisionalVersionForDimension(int) -> getProvisionalVersionForDimension
    com.google.zxing.qrcode.decoder.Version getVersionForNumber(int) -> getVersionForNumber
    com.google.zxing.qrcode.decoder.Version decodeVersionInformation(int) -> decodeVersionInformation
    com.google.zxing.common.BitMatrix buildFunctionPattern() -> buildFunctionPattern
    java.lang.String toString() -> toString
    com.google.zxing.qrcode.decoder.Version[] buildVersions() -> buildVersions
com.google.zxing.qrcode.decoder.Version$ECB -> com.google.zxing.qrcode.decoder.Version$ECB:
    int count -> count
    int dataCodewords -> dataCodewords
    int getCount() -> getCount
    int getDataCodewords() -> getDataCodewords
com.google.zxing.qrcode.decoder.Version$ECBlocks -> com.google.zxing.qrcode.decoder.Version$ECBlocks:
    int ecCodewordsPerBlock -> ecCodewordsPerBlock
    com.google.zxing.qrcode.decoder.Version$ECB[] ecBlocks -> ecBlocks
    int getECCodewordsPerBlock() -> getECCodewordsPerBlock
    int getNumBlocks() -> getNumBlocks
    int getTotalECCodewords() -> getTotalECCodewords
    com.google.zxing.qrcode.decoder.Version$ECB[] getECBlocks() -> getECBlocks
com.google.zxing.qrcode.detector.AlignmentPattern -> com.google.zxing.qrcode.detector.AlignmentPattern:
    float estimatedModuleSize -> estimatedModuleSize
    boolean aboutEquals(float,float,float) -> aboutEquals
    com.google.zxing.qrcode.detector.AlignmentPattern combineEstimate(float,float,float) -> combineEstimate
com.google.zxing.qrcode.detector.AlignmentPatternFinder -> com.google.zxing.qrcode.detector.AlignmentPatternFinder:
    com.google.zxing.common.BitMatrix image -> image
    java.util.List possibleCenters -> possibleCenters
    int startX -> startX
    int startY -> startY
    int width -> width
    int height -> height
    float moduleSize -> moduleSize
    int[] crossCheckStateCount -> crossCheckStateCount
    com.google.zxing.ResultPointCallback resultPointCallback -> resultPointCallback
    com.google.zxing.qrcode.detector.AlignmentPattern find() -> find
    float centerFromEnd(int[],int) -> centerFromEnd
    boolean foundPatternCross(int[]) -> foundPatternCross
    float crossCheckVertical(int,int,int,int) -> crossCheckVertical
    com.google.zxing.qrcode.detector.AlignmentPattern handlePossibleCenter(int[],int,int) -> handlePossibleCenter
com.google.zxing.qrcode.detector.Detector -> com.google.zxing.qrcode.detector.Detector:
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.ResultPointCallback resultPointCallback -> resultPointCallback
    com.google.zxing.common.BitMatrix getImage() -> getImage
    com.google.zxing.ResultPointCallback getResultPointCallback() -> getResultPointCallback
    com.google.zxing.common.DetectorResult detect() -> detect
    com.google.zxing.common.DetectorResult detect(java.util.Map) -> detect
    com.google.zxing.common.DetectorResult processFinderPatternInfo(com.google.zxing.qrcode.detector.FinderPatternInfo) -> processFinderPatternInfo
    com.google.zxing.common.PerspectiveTransform createTransform(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> createTransform
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.common.PerspectiveTransform,int) -> sampleGrid
    int computeDimension(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,float) -> computeDimension
    float calculateModuleSize(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> calculateModuleSize
    float calculateModuleSizeOneWay(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> calculateModuleSizeOneWay
    float sizeOfBlackWhiteBlackRunBothWays(int,int,int,int) -> sizeOfBlackWhiteBlackRunBothWays
    float sizeOfBlackWhiteBlackRun(int,int,int,int) -> sizeOfBlackWhiteBlackRun
    com.google.zxing.qrcode.detector.AlignmentPattern findAlignmentInRegion(float,int,int,float) -> findAlignmentInRegion
com.google.zxing.qrcode.detector.FinderPattern -> com.google.zxing.qrcode.detector.FinderPattern:
    float estimatedModuleSize -> estimatedModuleSize
    int count -> count
    float getEstimatedModuleSize() -> getEstimatedModuleSize
    int getCount() -> getCount
    boolean aboutEquals(float,float,float) -> aboutEquals
    com.google.zxing.qrcode.detector.FinderPattern combineEstimate(float,float,float) -> combineEstimate
com.google.zxing.qrcode.detector.FinderPatternFinder -> com.google.zxing.qrcode.detector.FinderPatternFinder:
    int CENTER_QUORUM -> CENTER_QUORUM
    int MIN_SKIP -> MIN_SKIP
    int MAX_MODULES -> MAX_MODULES
    int INTEGER_MATH_SHIFT -> INTEGER_MATH_SHIFT
    com.google.zxing.common.BitMatrix image -> image
    java.util.List possibleCenters -> possibleCenters
    boolean hasSkipped -> hasSkipped
    int[] crossCheckStateCount -> crossCheckStateCount
    com.google.zxing.ResultPointCallback resultPointCallback -> resultPointCallback
    com.google.zxing.common.BitMatrix getImage() -> getImage
    java.util.List getPossibleCenters() -> getPossibleCenters
    com.google.zxing.qrcode.detector.FinderPatternInfo find(java.util.Map) -> find
    float centerFromEnd(int[],int) -> centerFromEnd
    boolean foundPatternCross(int[]) -> foundPatternCross
    int[] getCrossCheckStateCount() -> getCrossCheckStateCount
    float crossCheckVertical(int,int,int,int) -> crossCheckVertical
    float crossCheckHorizontal(int,int,int,int) -> crossCheckHorizontal
    boolean handlePossibleCenter(int[],int,int) -> handlePossibleCenter
    int findRowSkip() -> findRowSkip
    boolean haveMultiplyConfirmedCenters() -> haveMultiplyConfirmedCenters
    com.google.zxing.qrcode.detector.FinderPattern[] selectBestPatterns() -> selectBestPatterns
com.google.zxing.qrcode.detector.FinderPatternFinder$1 -> com.google.zxing.qrcode.detector.FinderPatternFinder$1:
com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator -> com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator:
    float average -> average
    int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator -> com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator:
    float average -> average
    int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.qrcode.detector.FinderPatternInfo -> com.google.zxing.qrcode.detector.FinderPatternInfo:
    com.google.zxing.qrcode.detector.FinderPattern bottomLeft -> bottomLeft
    com.google.zxing.qrcode.detector.FinderPattern topLeft -> topLeft
    com.google.zxing.qrcode.detector.FinderPattern topRight -> topRight
    com.google.zxing.qrcode.detector.FinderPattern getBottomLeft() -> getBottomLeft
    com.google.zxing.qrcode.detector.FinderPattern getTopLeft() -> getTopLeft
    com.google.zxing.qrcode.detector.FinderPattern getTopRight() -> getTopRight
com.google.zxing.qrcode.encoder.BlockPair -> com.google.zxing.qrcode.encoder.BlockPair:
    byte[] dataBytes -> dataBytes
    byte[] errorCorrectionBytes -> errorCorrectionBytes
    byte[] getDataBytes() -> getDataBytes
    byte[] getErrorCorrectionBytes() -> getErrorCorrectionBytes
com.google.zxing.qrcode.encoder.ByteMatrix -> com.google.zxing.qrcode.encoder.ByteMatrix:
    byte[][] bytes -> bytes
    int width -> width
    int height -> height
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    byte get(int,int) -> get
    byte[][] getArray() -> getArray
    void set(int,int,byte) -> set
    void set(int,int,int) -> set
    void set(int,int,boolean) -> set
    void clear(byte) -> clear
    java.lang.String toString() -> toString
com.google.zxing.qrcode.encoder.Encoder -> com.google.zxing.qrcode.encoder.Encoder:
    int[] ALPHANUMERIC_TABLE -> ALPHANUMERIC_TABLE
    java.lang.String DEFAULT_BYTE_MODE_ENCODING -> DEFAULT_BYTE_MODE_ENCODING
    int calculateMaskPenalty(com.google.zxing.qrcode.encoder.ByteMatrix) -> calculateMaskPenalty
    com.google.zxing.qrcode.encoder.QRCode encode(java.lang.String,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> encode
    com.google.zxing.qrcode.encoder.QRCode encode(java.lang.String,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,java.util.Map) -> encode
    int getAlphanumericCode(int) -> getAlphanumericCode
    com.google.zxing.qrcode.decoder.Mode chooseMode(java.lang.String) -> chooseMode
    com.google.zxing.qrcode.decoder.Mode chooseMode(java.lang.String,java.lang.String) -> chooseMode
    boolean isOnlyDoubleByteKanji(java.lang.String) -> isOnlyDoubleByteKanji
    int chooseMaskPattern(com.google.zxing.common.BitArray,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.encoder.ByteMatrix) -> chooseMaskPattern
    com.google.zxing.qrcode.decoder.Version chooseVersion(int,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> chooseVersion
    void terminateBits(int,com.google.zxing.common.BitArray) -> terminateBits
    void getNumDataBytesAndNumECBytesForBlockID(int,int,int,int,int[],int[]) -> getNumDataBytesAndNumECBytesForBlockID
    com.google.zxing.common.BitArray interleaveWithECBytes(com.google.zxing.common.BitArray,int,int,int) -> interleaveWithECBytes
    byte[] generateECBytes(byte[],int) -> generateECBytes
    void appendModeInfo(com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray) -> appendModeInfo
    void appendLengthInfo(int,com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray) -> appendLengthInfo
    void appendBytes(java.lang.String,com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray,java.lang.String) -> appendBytes
    void appendNumericBytes(java.lang.CharSequence,com.google.zxing.common.BitArray) -> appendNumericBytes
    void appendAlphanumericBytes(java.lang.CharSequence,com.google.zxing.common.BitArray) -> appendAlphanumericBytes
    void append8BitBytes(java.lang.String,com.google.zxing.common.BitArray,java.lang.String) -> append8BitBytes
    void appendKanjiBytes(java.lang.String,com.google.zxing.common.BitArray) -> appendKanjiBytes
    void appendECI(com.google.zxing.common.CharacterSetECI,com.google.zxing.common.BitArray) -> appendECI
com.google.zxing.qrcode.encoder.Encoder$1 -> com.google.zxing.qrcode.encoder.Encoder$1:
    int[] $SwitchMap$com$google$zxing$qrcode$decoder$Mode -> $SwitchMap$com$google$zxing$qrcode$decoder$Mode
com.google.zxing.qrcode.encoder.MaskUtil -> com.google.zxing.qrcode.encoder.MaskUtil:
    int N1 -> N1
    int N2 -> N2
    int N3 -> N3
    int N4 -> N4
    int applyMaskPenaltyRule1(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule1
    int applyMaskPenaltyRule2(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule2
    int applyMaskPenaltyRule3(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule3
    boolean isWhiteHorizontal(byte[],int,int) -> isWhiteHorizontal
    boolean isWhiteVertical(byte[][],int,int,int) -> isWhiteVertical
    int applyMaskPenaltyRule4(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule4
    boolean getDataMaskBit(int,int,int) -> getDataMaskBit
    int applyMaskPenaltyRule1Internal(com.google.zxing.qrcode.encoder.ByteMatrix,boolean) -> applyMaskPenaltyRule1Internal
com.google.zxing.qrcode.encoder.MatrixUtil -> com.google.zxing.qrcode.encoder.MatrixUtil:
    int[][] POSITION_DETECTION_PATTERN -> POSITION_DETECTION_PATTERN
    int[][] POSITION_ADJUSTMENT_PATTERN -> POSITION_ADJUSTMENT_PATTERN
    int[][] POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE -> POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE
    int[][] TYPE_INFO_COORDINATES -> TYPE_INFO_COORDINATES
    int VERSION_INFO_POLY -> VERSION_INFO_POLY
    int TYPE_INFO_POLY -> TYPE_INFO_POLY
    int TYPE_INFO_MASK_PATTERN -> TYPE_INFO_MASK_PATTERN
    void clearMatrix(com.google.zxing.qrcode.encoder.ByteMatrix) -> clearMatrix
    void buildMatrix(com.google.zxing.common.BitArray,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,com.google.zxing.qrcode.decoder.Version,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> buildMatrix
    void embedBasicPatterns(com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedBasicPatterns
    void embedTypeInfo(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedTypeInfo
    void maybeEmbedVersionInfo(com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.encoder.ByteMatrix) -> maybeEmbedVersionInfo
    void embedDataBits(com.google.zxing.common.BitArray,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedDataBits
    int findMSBSet(int) -> findMSBSet
    int calculateBCHCode(int,int) -> calculateBCHCode
    void makeTypeInfoBits(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,com.google.zxing.common.BitArray) -> makeTypeInfoBits
    void makeVersionInfoBits(com.google.zxing.qrcode.decoder.Version,com.google.zxing.common.BitArray) -> makeVersionInfoBits
    boolean isEmpty(int) -> isEmpty
    void embedTimingPatterns(com.google.zxing.qrcode.encoder.ByteMatrix) -> embedTimingPatterns
    void embedDarkDotAtLeftBottomCorner(com.google.zxing.qrcode.encoder.ByteMatrix) -> embedDarkDotAtLeftBottomCorner
    void embedHorizontalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedHorizontalSeparationPattern
    void embedVerticalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedVerticalSeparationPattern
    void embedPositionAdjustmentPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedPositionAdjustmentPattern
    void embedPositionDetectionPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedPositionDetectionPattern
    void embedPositionDetectionPatternsAndSeparators(com.google.zxing.qrcode.encoder.ByteMatrix) -> embedPositionDetectionPatternsAndSeparators
    void maybeEmbedPositionAdjustmentPatterns(com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.encoder.ByteMatrix) -> maybeEmbedPositionAdjustmentPatterns
com.google.zxing.qrcode.encoder.QRCode -> com.google.zxing.qrcode.encoder.QRCode:
    int NUM_MASK_PATTERNS -> NUM_MASK_PATTERNS
    com.google.zxing.qrcode.decoder.Mode mode -> mode
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel ecLevel -> ecLevel
    com.google.zxing.qrcode.decoder.Version version -> version
    int maskPattern -> maskPattern
    com.google.zxing.qrcode.encoder.ByteMatrix matrix -> matrix
    com.google.zxing.qrcode.decoder.Mode getMode() -> getMode
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel getECLevel() -> getECLevel
    com.google.zxing.qrcode.decoder.Version getVersion() -> getVersion
    int getMaskPattern() -> getMaskPattern
    com.google.zxing.qrcode.encoder.ByteMatrix getMatrix() -> getMatrix
    java.lang.String toString() -> toString
    void setMode(com.google.zxing.qrcode.decoder.Mode) -> setMode
    void setECLevel(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> setECLevel
    void setVersion(com.google.zxing.qrcode.decoder.Version) -> setVersion
    void setMaskPattern(int) -> setMaskPattern
    void setMatrix(com.google.zxing.qrcode.encoder.ByteMatrix) -> setMatrix
    boolean isValidMaskPattern(int) -> isValidMaskPattern
com.handmark.pulltorefresh.library.ILoadingLayout -> com.handmark.pulltorefresh.library.ILoadingLayout:
    void setLastUpdatedLabel(java.lang.CharSequence) -> setLastUpdatedLabel
    void setLoadingDrawable(android.graphics.drawable.Drawable) -> setLoadingDrawable
    void setPullLabel(java.lang.CharSequence) -> setPullLabel
    void setRefreshingLabel(java.lang.CharSequence) -> setRefreshingLabel
    void setReleaseLabel(java.lang.CharSequence) -> setReleaseLabel
    void setTextTypeface(android.graphics.Typeface) -> setTextTypeface
com.handmark.pulltorefresh.library.IPullToRefresh -> com.handmark.pulltorefresh.library.IPullToRefresh:
    boolean demo() -> demo
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode getCurrentMode() -> getCurrentMode
    boolean getFilterTouchEvents() -> getFilterTouchEvents
    com.handmark.pulltorefresh.library.ILoadingLayout getLoadingLayoutProxy() -> getLoadingLayoutProxy
    com.handmark.pulltorefresh.library.ILoadingLayout getLoadingLayoutProxy(boolean,boolean) -> getLoadingLayoutProxy
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode getMode() -> getMode
    android.view.View getRefreshableView() -> getRefreshableView
    boolean getShowViewWhileRefreshing() -> getShowViewWhileRefreshing
    com.handmark.pulltorefresh.library.PullToRefreshBase$State getState() -> getState
    boolean isPullToRefreshEnabled() -> isPullToRefreshEnabled
    boolean isPullToRefreshOverScrollEnabled() -> isPullToRefreshOverScrollEnabled
    boolean isRefreshing() -> isRefreshing
    boolean isScrollingWhileRefreshingEnabled() -> isScrollingWhileRefreshingEnabled
    void onRefreshComplete() -> onRefreshComplete
    void setFilterTouchEvents(boolean) -> setFilterTouchEvents
    void setMode(com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> setMode
    void setOnPullEventListener(com.handmark.pulltorefresh.library.PullToRefreshBase$OnPullEventListener) -> setOnPullEventListener
    void setOnRefreshListener(com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener) -> setOnRefreshListener
    void setOnRefreshListener(com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener2) -> setOnRefreshListener
    void setPullToRefreshOverScrollEnabled(boolean) -> setPullToRefreshOverScrollEnabled
    void setRefreshing() -> setRefreshing
    void setRefreshing(boolean) -> setRefreshing
    void setScrollAnimationInterpolator(android.view.animation.Interpolator) -> setScrollAnimationInterpolator
    void setScrollingWhileRefreshingEnabled(boolean) -> setScrollingWhileRefreshingEnabled
    void setShowViewWhileRefreshing(boolean) -> setShowViewWhileRefreshing
com.handmark.pulltorefresh.library.LoadingLayoutProxy -> com.handmark.pulltorefresh.library.LoadingLayoutProxy:
    java.util.HashSet mLoadingLayouts -> a
    void addLayout(com.handmark.pulltorefresh.library.internal.LoadingLayout) -> addLayout
    void setLastUpdatedLabel(java.lang.CharSequence) -> setLastUpdatedLabel
    void setLoadingDrawable(android.graphics.drawable.Drawable) -> setLoadingDrawable
    void setRefreshingLabel(java.lang.CharSequence) -> setRefreshingLabel
    void setPullLabel(java.lang.CharSequence) -> setPullLabel
    void setReleaseLabel(java.lang.CharSequence) -> setReleaseLabel
    void setTextTypeface(android.graphics.Typeface) -> setTextTypeface
com.handmark.pulltorefresh.library.OverscrollHelper -> com.handmark.pulltorefresh.library.OverscrollHelper:
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation -> a
    void overScrollBy(com.handmark.pulltorefresh.library.PullToRefreshBase,int,int,int,int,boolean) -> overScrollBy
    void overScrollBy(com.handmark.pulltorefresh.library.PullToRefreshBase,int,int,int,int,int,boolean) -> overScrollBy
    void overScrollBy(com.handmark.pulltorefresh.library.PullToRefreshBase,int,int,int,int,int,int,float,boolean) -> overScrollBy
    boolean isAndroidOverScrollEnabled(android.view.View) -> a
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation() -> a
com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase -> com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase:
    boolean mLastItemVisible -> b
    android.widget.AbsListView$OnScrollListener mOnScrollListener -> c
    com.handmark.pulltorefresh.library.PullToRefreshBase$OnLastItemVisibleListener mOnLastItemVisibleListener -> d
    android.view.View mEmptyView -> e
    com.handmark.pulltorefresh.library.internal.IndicatorLayout mIndicatorIvTop -> f
    com.handmark.pulltorefresh.library.internal.IndicatorLayout mIndicatorIvBottom -> g
    boolean mShowIndicator -> h
    boolean mScrollEmptyView -> i
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> j
    android.widget.FrameLayout$LayoutParams convertEmptyViewLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    boolean getShowIndicator() -> getShowIndicator
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setEmptyView(android.view.View) -> setEmptyView
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void setOnLastItemVisibleListener(com.handmark.pulltorefresh.library.PullToRefreshBase$OnLastItemVisibleListener) -> setOnLastItemVisibleListener
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void setScrollEmptyView(boolean) -> setScrollEmptyView
    void setShowIndicator(boolean) -> setShowIndicator
    void onPullToRefresh() -> onPullToRefresh
    void onRefreshing(boolean) -> onRefreshing
    void onReleaseToRefresh() -> onReleaseToRefresh
    void onReset() -> onReset
    void handleStyledAttributes(android.content.res.TypedArray) -> handleStyledAttributes
    boolean isReadyForPullStart() -> isReadyForPullStart
    boolean isReadyForPullEnd() -> isReadyForPullEnd
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    void updateUIForMode() -> updateUIForMode
    void addIndicatorViews() -> e
    boolean getShowIndicatorInternal() -> getShowIndicatorInternal
    boolean isFirstItemVisible() -> f
    boolean isLastItemVisible() -> g
    void removeIndicatorViews() -> h
    void updateIndicatorViewsVisibility() -> i
    boolean isHeaderShown() -> isHeaderShown
    boolean isFooterShown() -> isFooterShown
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode() -> a
com.handmark.pulltorefresh.library.PullToRefreshBase -> com.handmark.pulltorefresh.library.PullToRefreshBase:
    int SMOOTH_SCROLL_DURATION_MS -> SMOOTH_SCROLL_DURATION_MS
    int SMOOTH_SCROLL_LONG_DURATION_MS -> SMOOTH_SCROLL_LONG_DURATION_MS
    int mTouchSlop -> b
    float mLastMotionX -> c
    float mLastMotionY -> d
    float mInitialMotionX -> e
    float mInitialMotionY -> f
    boolean mIsBeingDragged -> g
    com.handmark.pulltorefresh.library.PullToRefreshBase$State mState -> h
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode mMode -> i
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode mCurrentMode -> j
    android.view.View mRefreshableView -> a
    android.widget.FrameLayout mRefreshableViewWrapper -> k
    boolean mShowViewWhileRefreshing -> l
    boolean mScrollingWhileRefreshingEnabled -> m
    boolean mFilterTouchEvents -> n
    boolean mOverScrollEnabled -> o
    boolean mLayoutVisibilityChangesEnabled -> p
    android.view.animation.Interpolator mScrollAnimationInterpolator -> q
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle mLoadingAnimationStyle -> r
    com.handmark.pulltorefresh.library.internal.LoadingLayout mHeaderLayout -> s
    com.handmark.pulltorefresh.library.internal.LoadingLayout mFooterLayout -> t
    com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener mOnRefreshListener -> u
    com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener2 mOnRefreshListener2 -> v
    com.handmark.pulltorefresh.library.PullToRefreshBase$OnPullEventListener mOnPullEventListener -> w
    com.handmark.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable mCurrentSmoothScrollRunnable -> x
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation -> y
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$State -> z
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> A
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean demo() -> demo
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode getCurrentMode() -> getCurrentMode
    boolean getFilterTouchEvents() -> getFilterTouchEvents
    com.handmark.pulltorefresh.library.ILoadingLayout getLoadingLayoutProxy() -> getLoadingLayoutProxy
    com.handmark.pulltorefresh.library.ILoadingLayout getLoadingLayoutProxy(boolean,boolean) -> getLoadingLayoutProxy
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode getMode() -> getMode
    android.view.View getRefreshableView() -> getRefreshableView
    boolean getShowViewWhileRefreshing() -> getShowViewWhileRefreshing
    com.handmark.pulltorefresh.library.PullToRefreshBase$State getState() -> getState
    boolean isDisableScrollingWhileRefreshing() -> isDisableScrollingWhileRefreshing
    boolean isPullToRefreshEnabled() -> isPullToRefreshEnabled
    boolean isPullToRefreshOverScrollEnabled() -> isPullToRefreshOverScrollEnabled
    boolean isRefreshing() -> isRefreshing
    boolean isScrollingWhileRefreshingEnabled() -> isScrollingWhileRefreshingEnabled
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onRefreshComplete() -> onRefreshComplete
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setScrollingWhileRefreshingEnabled(boolean) -> setScrollingWhileRefreshingEnabled
    void setDisableScrollingWhileRefreshing(boolean) -> setDisableScrollingWhileRefreshing
    void setFilterTouchEvents(boolean) -> setFilterTouchEvents
    void setLastUpdatedLabel(java.lang.CharSequence) -> setLastUpdatedLabel
    void setLoadingDrawable(android.graphics.drawable.Drawable) -> setLoadingDrawable
    void setLoadingDrawable(android.graphics.drawable.Drawable,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> setLoadingDrawable
    void setLongClickable(boolean) -> setLongClickable
    void setMode(com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> setMode
    void setOnPullEventListener(com.handmark.pulltorefresh.library.PullToRefreshBase$OnPullEventListener) -> setOnPullEventListener
    void setOnRefreshListener(com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener) -> setOnRefreshListener
    void setOnRefreshListener(com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener2) -> setOnRefreshListener
    void setPullLabel(java.lang.CharSequence) -> setPullLabel
    void setPullLabel(java.lang.CharSequence,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> setPullLabel
    void setPullToRefreshEnabled(boolean) -> setPullToRefreshEnabled
    void setPullToRefreshOverScrollEnabled(boolean) -> setPullToRefreshOverScrollEnabled
    void setRefreshing() -> setRefreshing
    void setRefreshing(boolean) -> setRefreshing
    void setRefreshingLabel(java.lang.CharSequence) -> setRefreshingLabel
    void setRefreshingLabel(java.lang.CharSequence,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> setRefreshingLabel
    void setReleaseLabel(java.lang.CharSequence) -> setReleaseLabel
    void setReleaseLabel(java.lang.CharSequence,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> setReleaseLabel
    void setScrollAnimationInterpolator(android.view.animation.Interpolator) -> setScrollAnimationInterpolator
    void setShowViewWhileRefreshing(boolean) -> setShowViewWhileRefreshing
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> getPullToRefreshScrollDirection
    void setState(com.handmark.pulltorefresh.library.PullToRefreshBase$State,boolean[]) -> a
    void addViewInternal(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addViewInternal
    void addViewInternal(android.view.View,android.view.ViewGroup$LayoutParams) -> addViewInternal
    com.handmark.pulltorefresh.library.internal.LoadingLayout createLoadingLayout(android.content.Context,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode,android.content.res.TypedArray) -> createLoadingLayout
    com.handmark.pulltorefresh.library.LoadingLayoutProxy createLoadingLayoutProxy(boolean,boolean) -> createLoadingLayoutProxy
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> createRefreshableView
    void disableLoadingLayoutVisibilityChanges() -> disableLoadingLayoutVisibilityChanges
    com.handmark.pulltorefresh.library.internal.LoadingLayout getFooterLayout() -> getFooterLayout
    int getFooterSize() -> getFooterSize
    com.handmark.pulltorefresh.library.internal.LoadingLayout getHeaderLayout() -> getHeaderLayout
    int getHeaderSize() -> getHeaderSize
    int getPullToRefreshScrollDuration() -> getPullToRefreshScrollDuration
    int getPullToRefreshScrollDurationLonger() -> getPullToRefreshScrollDurationLonger
    android.widget.FrameLayout getRefreshableViewWrapper() -> getRefreshableViewWrapper
    void handleStyledAttributes(android.content.res.TypedArray) -> handleStyledAttributes
    boolean isReadyForPullEnd() -> isReadyForPullEnd
    boolean isReadyForPullStart() -> isReadyForPullStart
    void onPtrRestoreInstanceState(android.os.Bundle) -> onPtrRestoreInstanceState
    void onPtrSaveInstanceState(android.os.Bundle) -> onPtrSaveInstanceState
    void onPullToRefresh() -> onPullToRefresh
    void onRefreshing(boolean) -> onRefreshing
    void onReleaseToRefresh() -> onReleaseToRefresh
    void onReset() -> onReset
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void refreshLoadingViewsSize() -> refreshLoadingViewsSize
    void refreshRefreshableViewSize(int,int) -> refreshRefreshableViewSize
    void setHeaderScroll(int) -> setHeaderScroll
    void smoothScrollTo(int) -> smoothScrollTo
    void smoothScrollTo(int,com.handmark.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener) -> smoothScrollTo
    void smoothScrollToLonger(int) -> smoothScrollToLonger
    void updateUIForMode() -> updateUIForMode
    void addRefreshableView(android.content.Context,android.view.View) -> a
    void callRefreshListener() -> a
    void init(android.content.Context,android.util.AttributeSet) -> a
    boolean isReadyForPull() -> e
    void pullEvent() -> f
    android.widget.LinearLayout$LayoutParams getLoadingLayoutLayoutParams() -> getLoadingLayoutLayoutParams
    int getMaximumPullScroll() -> getMaximumPullScroll
    void smoothScrollTo(int,long) -> a
    void smoothScrollTo(int,long,long,com.handmark.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener) -> a
    void smoothScrollToAndBack(int) -> a
    android.view.animation.Interpolator access$0(com.handmark.pulltorefresh.library.PullToRefreshBase) -> a
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation() -> b
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$State() -> c
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode() -> d
    void access$4(com.handmark.pulltorefresh.library.PullToRefreshBase) -> b
    void access$5(com.handmark.pulltorefresh.library.PullToRefreshBase,int,long,long,com.handmark.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener) -> a
com.handmark.pulltorefresh.library.PullToRefreshBase$1 -> abe:
    com.handmark.pulltorefresh.library.PullToRefreshBase this$0 -> a
    void onSmoothScrollFinished() -> a
com.handmark.pulltorefresh.library.PullToRefreshBase$2 -> abf:
    com.handmark.pulltorefresh.library.PullToRefreshBase this$0 -> a
    void run() -> run
com.handmark.pulltorefresh.library.PullToRefreshBase$3 -> abg:
    com.handmark.pulltorefresh.library.PullToRefreshBase this$0 -> a
    void onSmoothScrollFinished() -> a
com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle -> com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle:
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle ROTATE -> ROTATE
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle FLIP -> FLIP
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$AnimationStyle -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle[] ENUM$VALUES -> b
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle getDefault() -> getDefault
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle mapIntToValue(int) -> mapIntToValue
    com.handmark.pulltorefresh.library.internal.LoadingLayout createLoadingLayout(android.content.Context,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode,com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation,android.content.res.TypedArray) -> createLoadingLayout
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle[] values() -> values
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle valueOf(java.lang.String) -> valueOf
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$AnimationStyle() -> $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$AnimationStyle
com.handmark.pulltorefresh.library.PullToRefreshBase$Mode -> com.handmark.pulltorefresh.library.PullToRefreshBase$Mode:
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode DISABLED -> DISABLED
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode PULL_FROM_START -> PULL_FROM_START
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode PULL_FROM_END -> PULL_FROM_END
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode BOTH -> BOTH
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode MANUAL_REFRESH_ONLY -> MANUAL_REFRESH_ONLY
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode PULL_DOWN_TO_REFRESH -> PULL_DOWN_TO_REFRESH
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode PULL_UP_TO_REFRESH -> PULL_UP_TO_REFRESH
    int mIntValue -> mIntValue
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode[] ENUM$VALUES -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode mapIntToValue(int) -> mapIntToValue
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode getDefault() -> getDefault
    boolean permitsPullToRefresh() -> permitsPullToRefresh
    boolean showHeaderLoadingLayout() -> showHeaderLoadingLayout
    boolean showFooterLoadingLayout() -> showFooterLoadingLayout
    int getIntValue() -> getIntValue
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode[] values() -> values
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode valueOf(java.lang.String) -> valueOf
com.handmark.pulltorefresh.library.PullToRefreshBase$OnLastItemVisibleListener -> com.handmark.pulltorefresh.library.PullToRefreshBase$OnLastItemVisibleListener:
    void onLastItemVisible() -> onLastItemVisible
com.handmark.pulltorefresh.library.PullToRefreshBase$OnPullEventListener -> com.handmark.pulltorefresh.library.PullToRefreshBase$OnPullEventListener:
    void onPullEvent(com.handmark.pulltorefresh.library.PullToRefreshBase,com.handmark.pulltorefresh.library.PullToRefreshBase$State,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> onPullEvent
com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener -> com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener:
    void onRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onRefresh
com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener2 -> com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener2:
    void onPullDownToRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onPullDownToRefresh
    void onPullUpToRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> onPullUpToRefresh
com.handmark.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener -> abh:
    void onSmoothScrollFinished() -> a
com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation -> com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation:
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation VERTICAL -> VERTICAL
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation HORIZONTAL -> HORIZONTAL
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation[] ENUM$VALUES -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation[] values() -> values
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation valueOf(java.lang.String) -> valueOf
com.handmark.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable -> abi:
    android.view.animation.Interpolator mInterpolator -> b
    int mScrollToY -> c
    int mScrollFromY -> d
    long mDuration -> e
    com.handmark.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener mListener -> f
    boolean mContinueRunning -> g
    long mStartTime -> h
    int mCurrentY -> i
    com.handmark.pulltorefresh.library.PullToRefreshBase this$0 -> a
    void run() -> run
    void stop() -> a
com.handmark.pulltorefresh.library.PullToRefreshBase$State -> com.handmark.pulltorefresh.library.PullToRefreshBase$State:
    com.handmark.pulltorefresh.library.PullToRefreshBase$State RESET -> RESET
    com.handmark.pulltorefresh.library.PullToRefreshBase$State PULL_TO_REFRESH -> PULL_TO_REFRESH
    com.handmark.pulltorefresh.library.PullToRefreshBase$State RELEASE_TO_REFRESH -> RELEASE_TO_REFRESH
    com.handmark.pulltorefresh.library.PullToRefreshBase$State REFRESHING -> REFRESHING
    com.handmark.pulltorefresh.library.PullToRefreshBase$State MANUAL_REFRESHING -> MANUAL_REFRESHING
    com.handmark.pulltorefresh.library.PullToRefreshBase$State OVERSCROLLING -> OVERSCROLLING
    int mIntValue -> mIntValue
    com.handmark.pulltorefresh.library.PullToRefreshBase$State[] ENUM$VALUES -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$State mapIntToValue(int) -> mapIntToValue
    int getIntValue() -> getIntValue
    com.handmark.pulltorefresh.library.PullToRefreshBase$State[] values() -> values
    com.handmark.pulltorefresh.library.PullToRefreshBase$State valueOf(java.lang.String) -> valueOf
com.handmark.pulltorefresh.library.PullToRefreshExpandableListView -> com.handmark.pulltorefresh.library.PullToRefreshExpandableListView:
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> getPullToRefreshScrollDirection
    android.widget.ExpandableListView createRefreshableView(android.content.Context,android.util.AttributeSet) -> createRefreshableView
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> createRefreshableView
com.handmark.pulltorefresh.library.PullToRefreshExpandableListView$InternalExpandableListView -> abj:
    com.handmark.pulltorefresh.library.PullToRefreshExpandableListView this$0 -> a
    void setEmptyView(android.view.View) -> setEmptyView
    void setEmptyViewInternal(android.view.View) -> setEmptyViewInternal
com.handmark.pulltorefresh.library.PullToRefreshExpandableListView$InternalExpandableListViewSDK9 -> abk:
    com.handmark.pulltorefresh.library.PullToRefreshExpandableListView this$0 -> b
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
com.handmark.pulltorefresh.library.PullToRefreshListView -> com.handmark.pulltorefresh.library.PullToRefreshListView:
    com.handmark.pulltorefresh.library.internal.LoadingLayout mHeaderLoadingView -> b
    com.handmark.pulltorefresh.library.internal.LoadingLayout mFooterLoadingView -> c
    android.widget.FrameLayout mLvFooterLoadingFrame -> d
    boolean mListViewExtrasEnabled -> e
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> f
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> getPullToRefreshScrollDirection
    void onRefreshing(boolean) -> onRefreshing
    void onReset() -> onReset
    com.handmark.pulltorefresh.library.LoadingLayoutProxy createLoadingLayoutProxy(boolean,boolean) -> createLoadingLayoutProxy
    android.widget.ListView createListView(android.content.Context,android.util.AttributeSet) -> createListView
    android.widget.ListView createRefreshableView(android.content.Context,android.util.AttributeSet) -> createRefreshableView
    void handleStyledAttributes(android.content.res.TypedArray) -> handleStyledAttributes
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> createRefreshableView
    android.widget.FrameLayout access$1(com.handmark.pulltorefresh.library.PullToRefreshListView) -> a
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode() -> e
com.handmark.pulltorefresh.library.PullToRefreshListView$InternalListView -> com.handmark.pulltorefresh.library.PullToRefreshListView$InternalListView:
    boolean mAddedLvFooter -> b
    com.handmark.pulltorefresh.library.PullToRefreshListView this$0 -> a
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setEmptyView(android.view.View) -> setEmptyView
    void setEmptyViewInternal(android.view.View) -> setEmptyViewInternal
com.handmark.pulltorefresh.library.PullToRefreshListView$InternalListViewSDK9 -> abl:
    com.handmark.pulltorefresh.library.PullToRefreshListView this$0 -> b
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
com.handmark.pulltorefresh.library.internal.EmptyViewMethodAccessor -> com.handmark.pulltorefresh.library.internal.EmptyViewMethodAccessor:
    void setEmptyViewInternal(android.view.View) -> setEmptyViewInternal
    void setEmptyView(android.view.View) -> setEmptyView
com.handmark.pulltorefresh.library.internal.FlipLoadingLayout -> com.handmark.pulltorefresh.library.internal.FlipLoadingLayout:
    android.view.animation.Animation mRotateAnimation -> b
    android.view.animation.Animation mResetRotateAnimation -> c
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> d
    void onLoadingDrawableSet(android.graphics.drawable.Drawable) -> onLoadingDrawableSet
    void onPullImpl(float) -> onPullImpl
    void pullToRefreshImpl() -> pullToRefreshImpl
    void refreshingImpl() -> refreshingImpl
    void releaseToRefreshImpl() -> releaseToRefreshImpl
    void resetImpl() -> resetImpl
    int getDefaultDrawableResId() -> getDefaultDrawableResId
    float getDrawableRotationAngle() -> getDrawableRotationAngle
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode() -> a
com.handmark.pulltorefresh.library.internal.IndicatorLayout -> com.handmark.pulltorefresh.library.internal.IndicatorLayout:
    android.view.animation.Animation mInAnim -> a
    android.view.animation.Animation mOutAnim -> b
    android.widget.ImageView mArrowImageView -> c
    android.view.animation.Animation mRotateAnimation -> d
    android.view.animation.Animation mResetRotateAnimation -> e
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> f
    boolean isVisible() -> isVisible
    void hide() -> hide
    void show() -> show
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void releaseToRefresh() -> releaseToRefresh
    void pullToRefresh() -> pullToRefresh
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode() -> a
com.handmark.pulltorefresh.library.internal.LoadingLayout -> com.handmark.pulltorefresh.library.internal.LoadingLayout:
    android.view.animation.Interpolator ANIMATION_INTERPOLATOR -> a
    android.widget.FrameLayout mInnerLayout -> b
    android.widget.ImageView mHeaderImage -> mHeaderImage
    android.widget.ProgressBar mHeaderProgress -> mHeaderProgress
    boolean mUseIntrinsicAnimation -> c
    android.widget.TextView mHeaderText -> d
    android.widget.TextView mSubHeaderText -> e
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode mMode -> mMode
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation mScrollDirection -> mScrollDirection
    java.lang.CharSequence mPullLabel -> f
    java.lang.CharSequence mRefreshingLabel -> g
    java.lang.CharSequence mReleaseLabel -> h
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation -> i
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> j
    void setHeight(int) -> setHeight
    void setWidth(int) -> setWidth
    int getContentSize() -> getContentSize
    void hideAllViews() -> hideAllViews
    void onPull(float) -> onPull
    void pullToRefresh() -> pullToRefresh
    void refreshing() -> refreshing
    void releaseToRefresh() -> releaseToRefresh
    void reset() -> reset
    void setLastUpdatedLabel(java.lang.CharSequence) -> setLastUpdatedLabel
    void setLoadingDrawable(android.graphics.drawable.Drawable) -> setLoadingDrawable
    void setPullLabel(java.lang.CharSequence) -> setPullLabel
    void setRefreshingLabel(java.lang.CharSequence) -> setRefreshingLabel
    void setReleaseLabel(java.lang.CharSequence) -> setReleaseLabel
    void setTextTypeface(android.graphics.Typeface) -> setTextTypeface
    void showInvisibleViews() -> showInvisibleViews
    int getDefaultDrawableResId() -> getDefaultDrawableResId
    void onLoadingDrawableSet(android.graphics.drawable.Drawable) -> onLoadingDrawableSet
    void onPullImpl(float) -> onPullImpl
    void pullToRefreshImpl() -> pullToRefreshImpl
    void refreshingImpl() -> refreshingImpl
    void releaseToRefreshImpl() -> releaseToRefreshImpl
    void resetImpl() -> resetImpl
    void setSubHeaderText(java.lang.CharSequence) -> setSubHeaderText
    void setSubTextAppearance(int) -> setSubTextAppearance
    void setSubTextColor(android.content.res.ColorStateList) -> setSubTextColor
    void setTextAppearance(int) -> setTextAppearance
    void setTextColor(android.content.res.ColorStateList) -> setTextColor
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation() -> b
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode() -> c
com.handmark.pulltorefresh.library.internal.RotateLoadingLayout -> com.handmark.pulltorefresh.library.internal.RotateLoadingLayout:
    android.view.animation.Animation mRotateAnimation -> b
    android.graphics.Matrix mHeaderImageMatrix -> c
    float mRotationPivotX -> d
    float mRotationPivotY -> e
    boolean mRotateDrawableWhilePulling -> f
    void onLoadingDrawableSet(android.graphics.drawable.Drawable) -> onLoadingDrawableSet
    void onPullImpl(float) -> onPullImpl
    void refreshingImpl() -> refreshingImpl
    void resetImpl() -> resetImpl
    void resetImageRotation() -> a
    void pullToRefreshImpl() -> pullToRefreshImpl
    void releaseToRefreshImpl() -> releaseToRefreshImpl
    int getDefaultDrawableResId() -> getDefaultDrawableResId
com.handmark.pulltorefresh.library.internal.Utils -> com.handmark.pulltorefresh.library.internal.Utils:
    void warnDeprecation(java.lang.String,java.lang.String) -> warnDeprecation
com.handmark.pulltorefresh.library.internal.ViewCompat -> com.handmark.pulltorefresh.library.internal.ViewCompat:
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    void setLayerType(android.view.View,int) -> setLayerType
com.handmark.pulltorefresh.library.internal.ViewCompat$SDK11 -> abm:
    void setLayerType(android.view.View,int) -> a
com.handmark.pulltorefresh.library.internal.ViewCompat$SDK15 -> abn:
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setBackground(android.view.View,android.graphics.drawable.Drawable) -> a
com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder -> com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder:
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer mTrans -> a
    android.view.animation.Interpolator lin -> b
    void initTransformer() -> a
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer zoom(int,int,int,int,int,int) -> zoom
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer zoom(int,int,int,int,int,int,android.view.animation.Interpolator) -> zoom
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer rotate(int,int,int,int) -> rotate
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer rotate(int,int,int,int,android.view.animation.Interpolator) -> rotate
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer translate(int,int,int,int) -> translate
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer translate(int,int,int,int,android.view.animation.Interpolator) -> translate
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer concatTransformer(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer) -> concatTransformer
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer access$0(com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder) -> a
com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$1 -> abo:
    float getInterpolation(float) -> getInterpolation
com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$2 -> abp:
    com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder this$0 -> a
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$3 -> abq:
    com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder this$0 -> a
    android.view.animation.Interpolator val$interp -> b
    int val$openedX -> c
    int val$closedX -> d
    int val$openedY -> e
    int val$closedY -> f
    int val$px -> g
    int val$py -> h
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$4 -> abr:
    com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder this$0 -> a
    android.view.animation.Interpolator val$interp -> b
    int val$openedDeg -> c
    int val$closedDeg -> d
    int val$px -> e
    int val$py -> f
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$5 -> abs:
    com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder this$0 -> a
    android.view.animation.Interpolator val$interp -> b
    int val$openedX -> c
    int val$closedX -> d
    int val$openedY -> e
    int val$closedY -> f
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$6 -> abt:
    com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder this$0 -> a
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer val$t -> b
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove -> com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove:
    android.view.animation.Interpolator sInterpolator -> a
    android.view.View mContent -> b
    int mCurItem -> c
    android.widget.Scroller mScroller -> d
    boolean mScrollingCacheEnabled -> e
    boolean mScrolling -> f
    boolean mIsBeingDragged -> g
    boolean mIsUnableToDrag -> h
    int mTouchSlop -> i
    float mInitialMotionX -> j
    float mLastMotionX -> k
    float mLastMotionY -> l
    int mActivePointerId -> mActivePointerId
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> m
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> n
    com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind mViewBehind -> o
    boolean mEnabled -> p
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener mOnPageChangeListener -> q
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener mInternalPageChangeListener -> r
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnClosedListener mClosedListener -> s
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenedListener mOpenedListener -> t
    java.util.List mIgnoredViews -> u
    int mTouchMode -> mTouchMode
    boolean mQuickReturn -> v
    float mScrollX -> w
    void initCustomViewAbove() -> a
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void setOnPageChangeListener(com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener) -> setOnPageChangeListener
    void setOnOpenedListener(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenedListener) -> setOnOpenedListener
    void setOnClosedListener(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnClosedListener) -> setOnClosedListener
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener setInternalPageChangeListener(com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener) -> a
    void addIgnoredView(android.view.View) -> addIgnoredView
    void removeIgnoredView(android.view.View) -> removeIgnoredView
    void clearIgnoredViews() -> clearIgnoredViews
    float distanceInfluenceForSnapDuration(float) -> a
    int getDestScrollX(int) -> getDestScrollX
    int getLeftBound() -> getLeftBound
    int getRightBound() -> getRightBound
    int getContentLeft() -> getContentLeft
    boolean isMenuOpen() -> isMenuOpen
    boolean isInIgnoredView(android.view.MotionEvent) -> a
    int getBehindWidth() -> getBehindWidth
    int getChildWidth(int) -> getChildWidth
    boolean isSlidingEnabled() -> isSlidingEnabled
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    void smoothScrollTo(int,int,int) -> a
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setCustomViewBehind(com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind) -> setCustomViewBehind
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setAboveOffset(int) -> setAboveOffset
    void computeScroll() -> computeScroll
    void pageScrolled(int) -> a
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll() -> d
    void setTouchMode(int) -> setTouchMode
    int getTouchMode() -> getTouchMode
    boolean thisTouchAllowed(android.view.MotionEvent) -> b
    boolean thisSlideAllowed(float) -> b
    int getPointerIndex(android.view.MotionEvent,int) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void determineDrag(android.view.MotionEvent) -> c
    void scrollTo(int,int) -> scrollTo
    int determineTargetPage(float,int,int) -> a
    float getPercentOpen() -> getPercentOpen
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> d
    void startDrag() -> e
    void endDrag() -> f
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    boolean pageLeft() -> b
    boolean pageRight() -> c
    com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind access$0(com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove) -> a
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$1 -> abu:
    float getInterpolation(float) -> getInterpolation
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$2 -> abv:
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove this$0 -> a
    void onPageSelected(int) -> onPageSelected
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener -> com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$SimpleOnPageChangeListener -> com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind -> com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind:
    int mTouchMode -> a
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove mViewAbove -> b
    android.view.View mContent -> c
    android.view.View mSecondaryContent -> d
    int mMarginThreshold -> e
    int mWidthOffset -> f
    int mScreenWidth -> g
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer mTransformer -> h
    boolean mChildrenEnabled -> i
    int mMode -> j
    boolean mFadeEnabled -> k
    android.graphics.Paint mFadePaint -> l
    float mScrollScale -> m
    android.graphics.drawable.Drawable mShadowDrawable -> n
    android.graphics.drawable.Drawable mSecondaryShadowDrawable -> o
    int mShadowWidth -> p
    float mFadeDegree -> q
    boolean mSelectorEnabled -> r
    android.graphics.Bitmap mSelectorDrawable -> s
    android.view.View mSelectedView -> t
    void setCustomViewAbove(com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove) -> setCustomViewAbove
    void setCanvasTransformer(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer) -> setCanvasTransformer
    void setWidthOffset(int) -> setWidthOffset
    void setMarginThreshold(int) -> setMarginThreshold
    int getMarginThreshold() -> getMarginThreshold
    int getBehindWidth() -> getBehindWidth
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setSecondaryContent(android.view.View) -> setSecondaryContent
    android.view.View getSecondaryContent() -> getSecondaryContent
    void setChildrenEnabled(boolean) -> setChildrenEnabled
    void scrollTo(int,int) -> scrollTo
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void setMode(int) -> setMode
    int getMode() -> getMode
    void setScrollScale(float) -> setScrollScale
    float getScrollScale() -> getScrollScale
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setSecondaryShadowDrawable(android.graphics.drawable.Drawable) -> setSecondaryShadowDrawable
    void setShadowWidth(int) -> setShadowWidth
    void setFadeEnabled(boolean) -> setFadeEnabled
    void setFadeDegree(float) -> setFadeDegree
    int getMenuPage(int) -> getMenuPage
    void scrollBehindTo(android.view.View,int,int) -> scrollBehindTo
    int getMenuLeft(android.view.View,int) -> getMenuLeft
    int getAbsLeftBound(android.view.View) -> getAbsLeftBound
    int getAbsRightBound(android.view.View) -> getAbsRightBound
    boolean marginTouchAllowed(android.view.View,int) -> marginTouchAllowed
    void setTouchMode(int) -> setTouchMode
    boolean menuOpenTouchAllowed(android.view.View,int,float) -> menuOpenTouchAllowed
    boolean menuTouchInQuickReturn(android.view.View,int,float) -> menuTouchInQuickReturn
    boolean menuClosedSlideAllowed(float) -> menuClosedSlideAllowed
    boolean menuOpenSlideAllowed(float) -> menuOpenSlideAllowed
    void drawShadow(android.view.View,android.graphics.Canvas) -> drawShadow
    void drawFade(android.view.View,android.graphics.Canvas,float) -> drawFade
    void drawSelector(android.view.View,android.graphics.Canvas,float) -> drawSelector
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    int getSelectorTop() -> getSelectorTop
    void setSelectorBitmap(android.graphics.Bitmap) -> setSelectorBitmap
com.jeremyfeinstein.slidingmenu.lib.MenuInterface -> com.jeremyfeinstein.slidingmenu.lib.MenuInterface:
    void scrollBehindTo(int,int,com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind,float) -> scrollBehindTo
    int getMenuLeft(com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind,android.view.View) -> getMenuLeft
    int getAbsLeftBound(com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind,android.view.View) -> getAbsLeftBound
    int getAbsRightBound(com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind,android.view.View) -> getAbsRightBound
    boolean marginTouchAllowed(android.view.View,int,int) -> marginTouchAllowed
    boolean menuOpenTouchAllowed(android.view.View,int,int) -> menuOpenTouchAllowed
    boolean menuTouchInQuickReturn(android.view.View,int,int) -> menuTouchInQuickReturn
    boolean menuClosedSlideAllowed(int) -> menuClosedSlideAllowed
    boolean menuOpenSlideAllowed(int) -> menuOpenSlideAllowed
    void drawShadow(android.graphics.Canvas,android.graphics.drawable.Drawable,int) -> drawShadow
    void drawFade(android.graphics.Canvas,int,com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind,android.view.View) -> drawFade
    void drawSelector(android.view.View,android.graphics.Canvas,float) -> drawSelector
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu:
    java.lang.String TAG -> a
    int SLIDING_WINDOW -> SLIDING_WINDOW
    int SLIDING_CONTENT -> SLIDING_CONTENT
    boolean mActionbarOverlay -> b
    int TOUCHMODE_MARGIN -> TOUCHMODE_MARGIN
    int TOUCHMODE_FULLSCREEN -> TOUCHMODE_FULLSCREEN
    int TOUCHMODE_NONE -> TOUCHMODE_NONE
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int LEFT_RIGHT -> LEFT_RIGHT
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove mViewAbove -> c
    com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind mViewBehind -> d
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener mOpenListener -> e
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener mSecondaryOpenListner -> f
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnCloseListener mCloseListener -> g
    void attachToActivity(android.app.Activity,int) -> attachToActivity
    void attachToActivity(android.app.Activity,int,boolean) -> attachToActivity
    void setContent(int) -> setContent
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setMenu(int) -> setMenu
    void setMenu(android.view.View) -> setMenu
    android.view.View getMenu() -> getMenu
    void setSecondaryMenu(int) -> setSecondaryMenu
    void setSecondaryMenu(android.view.View) -> setSecondaryMenu
    android.view.View getSecondaryMenu() -> getSecondaryMenu
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    boolean isSlidingEnabled() -> isSlidingEnabled
    void setMode(int) -> setMode
    int getMode() -> getMode
    void setStatic(boolean) -> setStatic
    void showMenu() -> showMenu
    void showMenu(boolean) -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void showSecondaryMenu(boolean) -> showSecondaryMenu
    void showContent() -> showContent
    void showContent(boolean) -> showContent
    void toggle() -> toggle
    void toggle(boolean) -> toggle
    boolean isMenuShowing() -> isMenuShowing
    boolean isSecondaryMenuShowing() -> isSecondaryMenuShowing
    int getBehindOffset() -> getBehindOffset
    void setBehindOffset(int) -> setBehindOffset
    void setBehindOffsetRes(int) -> setBehindOffsetRes
    void setAboveOffset(int) -> setAboveOffset
    void setAboveOffsetRes(int) -> setAboveOffsetRes
    void setBehindWidth(int) -> setBehindWidth
    void setBehindWidthRes(int) -> setBehindWidthRes
    float getBehindScrollScale() -> getBehindScrollScale
    int getTouchmodeMarginThreshold() -> getTouchmodeMarginThreshold
    void setTouchmodeMarginThreshold(int) -> setTouchmodeMarginThreshold
    void setBehindScrollScale(float) -> setBehindScrollScale
    void setBehindCanvasTransformer(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer) -> setBehindCanvasTransformer
    int getTouchModeAbove() -> getTouchModeAbove
    void setTouchModeAbove(int) -> setTouchModeAbove
    void setTouchModeBehind(int) -> setTouchModeBehind
    void setShadowDrawable(int) -> setShadowDrawable
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setSecondaryShadowDrawable(int) -> setSecondaryShadowDrawable
    void setSecondaryShadowDrawable(android.graphics.drawable.Drawable) -> setSecondaryShadowDrawable
    void setShadowWidthRes(int) -> setShadowWidthRes
    void setShadowWidth(int) -> setShadowWidth
    void setFadeEnabled(boolean) -> setFadeEnabled
    void setFadeDegree(float) -> setFadeDegree
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    void setSelectorDrawable(int) -> setSelectorDrawable
    void setSelectorBitmap(android.graphics.Bitmap) -> setSelectorBitmap
    void addIgnoredView(android.view.View) -> addIgnoredView
    void removeIgnoredView(android.view.View) -> removeIgnoredView
    void clearIgnoredViews() -> clearIgnoredViews
    void setOnOpenListener(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener) -> setOnOpenListener
    void setSecondaryOnOpenListner(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener) -> setSecondaryOnOpenListner
    void setOnCloseListener(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnCloseListener) -> setOnCloseListener
    void setOnOpenedListener(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenedListener) -> setOnOpenedListener
    void setOnClosedListener(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnClosedListener) -> setOnClosedListener
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    void manageLayers(float) -> manageLayers
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener access$0(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu) -> a
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener access$1(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu) -> b
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnCloseListener access$2(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu) -> c
    java.lang.String access$3() -> a
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$1 -> abw:
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu this$0 -> a
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$2 -> abx:
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu this$0 -> a
    int val$layerType -> b
    void run() -> run
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer:
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnCloseListener -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnCloseListener:
    void onClose() -> onClose
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnClosedListener -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnClosedListener:
    void onClosed() -> onClosed
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener:
    void onOpen() -> onOpen
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenedListener -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenedListener:
    void onOpened() -> onOpened
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$SavedState -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$SavedState:
    int mItem -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getItem() -> getItem
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$SavedState$1 -> aby:
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$SavedState createFromParcel(android.os.Parcel) -> a
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivity -> com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivity:
    com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper mHelper -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityBase -> com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityBase:
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(int) -> setBehindContentView
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper -> com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper:
    android.app.Activity mActivity -> a
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu mSlidingMenu -> b
    android.view.View mViewAbove -> c
    android.view.View mViewBehind -> d
    boolean mBroadcasting -> e
    boolean mOnPostCreateCalled -> f
    boolean mEnableSlide -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void registerAboveContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> registerAboveContentView
    void setContentView(android.view.View) -> setContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu access$0(com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper) -> a
com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper$1 -> abz:
    com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper this$0 -> a
    boolean val$open -> b
    boolean val$secondary -> c
    void run() -> run
com.jeremyfeinstein.slidingmenu.lib.app.SlidingFragmentActivity -> com.jeremyfeinstein.slidingmenu.lib.app.SlidingFragmentActivity:
    com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper mHelper -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.jeremyfeinstein.slidingmenu.lib.app.SlidingListActivity -> com.jeremyfeinstein.slidingmenu.lib.app.SlidingListActivity:
    com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper mHelper -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.jeremyfeinstein.slidingmenu.lib.app.SlidingPreferenceActivity -> com.jeremyfeinstein.slidingmenu.lib.app.SlidingPreferenceActivity:
    com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper mHelper -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.zxing.camera.AutoFocusManager -> aca:
    java.lang.String TAG -> a
    java.util.Collection FOCUS_MODES_CALLING_AF -> b
    boolean active -> c
    boolean useAutoFocus -> d
    android.hardware.Camera camera -> e
    com.zxing.camera.AutoFocusManager$AutoFocusTask outstandingTask -> f
    com.zxing.executor.AsyncTaskExecInterface taskExec -> g
    void onAutoFocus(boolean,android.hardware.Camera) -> onAutoFocus
    void start() -> a
    void stop() -> b
    boolean access$0(com.zxing.camera.AutoFocusManager) -> a
com.zxing.camera.AutoFocusManager$AutoFocusTask -> acb:
    com.zxing.camera.AutoFocusManager this$0 -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.zxing.camera.CameraConfigurationManager -> acc:
    android.content.Context context -> a
    android.graphics.Point screenResolution -> b
    android.graphics.Point cameraResolution -> c
    void initFromCameraParameters(android.hardware.Camera) -> a
    void setDesiredCameraParameters(android.hardware.Camera,boolean) -> a
    android.graphics.Point getCameraResolution() -> a
    android.graphics.Point getScreenResolution() -> b
    void setTorch(android.hardware.Camera,boolean) -> b
    void initializeTorch(android.hardware.Camera$Parameters,android.content.SharedPreferences,boolean) -> a
    void doSetTorch(android.hardware.Camera$Parameters,boolean,boolean) -> a
    android.graphics.Point findBestPreviewSizeValue(android.hardware.Camera$Parameters,android.graphics.Point) -> a
    java.lang.String findSettableValue(java.util.Collection,java.lang.String[]) -> a
com.zxing.camera.CameraConfigurationManager$1 -> acd:
    com.zxing.camera.CameraConfigurationManager this$0 -> a
    int compare(android.hardware.Camera$Size,android.hardware.Camera$Size) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.zxing.camera.CameraManager -> com.zxing.camera.CameraManager:
    java.lang.String TAG -> a
    android.content.Context context -> b
    com.zxing.camera.CameraConfigurationManager configManager -> c
    android.hardware.Camera camera -> d
    com.zxing.camera.AutoFocusManager autoFocusManager -> e
    android.graphics.Rect framingRect -> f
    android.graphics.Rect framingRectInPreview -> g
    boolean initialized -> h
    boolean previewing -> i
    int requestedFramingRectWidth -> j
    int requestedFramingRectHeight -> k
    com.zxing.camera.PreviewCallback previewCallback -> l
    void openDriver(android.view.SurfaceHolder) -> openDriver
    boolean isOpen() -> isOpen
    void closeDriver() -> closeDriver
    void startPreview() -> startPreview
    void stopPreview() -> stopPreview
    void setTorch(boolean) -> setTorch
    void requestPreviewFrame(android.os.Handler,int) -> requestPreviewFrame
    android.graphics.Rect getFramingRect() -> getFramingRect
    int findDesiredDimensionInRange(int,int,int) -> a
    android.graphics.Rect getFramingRectInPreview() -> getFramingRectInPreview
    void setManualFramingRect(int,int) -> setManualFramingRect
    com.google.zxing.PlanarYUVLuminanceSource buildLuminanceSource(byte[],int,int) -> buildLuminanceSource
com.zxing.camera.DefaultOpenCameraInterface -> ace:
    android.hardware.Camera open() -> open
com.zxing.camera.GingerbreadOpenCameraInterface -> com.zxing.camera.GingerbreadOpenCameraInterface:
    android.hardware.Camera open() -> open
com.zxing.camera.OpenCameraInterface -> com.zxing.camera.OpenCameraInterface:
    android.hardware.Camera open() -> open
com.zxing.camera.OpenCameraManager -> com.zxing.camera.OpenCameraManager:
com.zxing.camera.PreviewCallback -> acf:
    java.lang.String TAG -> a
    com.zxing.camera.CameraConfigurationManager configManager -> b
    android.os.Handler previewHandler -> c
    int previewMessage -> d
    void setHandler(android.os.Handler,int) -> a
    void onPreviewFrame(byte[],android.hardware.Camera) -> onPreviewFrame
com.zxing.decoding.AsyncTaskExecInterface -> com.zxing.decoding.AsyncTaskExecInterface:
    void execute(android.os.AsyncTask,java.lang.Object[]) -> execute
com.zxing.decoding.AsyncTaskExecManager -> com.zxing.decoding.AsyncTaskExecManager:
com.zxing.decoding.CaptureActivityHandler -> com.zxing.decoding.CaptureActivityHandler:
    java.lang.String TAG -> a
    com.dahuatech.app.ui.barcode.CaptureActivity activity -> b
    com.zxing.decoding.DecodeThread decodeThread -> c
    com.zxing.decoding.CaptureActivityHandler$State state -> d
    com.zxing.camera.CameraManager cameraManager -> e
    void handleMessage(android.os.Message) -> handleMessage
    void quitSynchronously() -> quitSynchronously
    void restartPreviewAndDecode() -> a
    void setDecodeFormats(java.util.Vector) -> setDecodeFormats
com.zxing.decoding.CaptureActivityHandler$State -> acg:
    com.zxing.decoding.CaptureActivityHandler$State PREVIEW -> PREVIEW
    com.zxing.decoding.CaptureActivityHandler$State SUCCESS -> SUCCESS
    com.zxing.decoding.CaptureActivityHandler$State DONE -> DONE
    com.zxing.decoding.CaptureActivityHandler$State[] ENUM$VALUES -> a
    com.zxing.decoding.CaptureActivityHandler$State[] values() -> values
    com.zxing.decoding.CaptureActivityHandler$State valueOf(java.lang.String) -> valueOf
com.zxing.decoding.DecodeHandler -> ach:
    java.lang.String TAG -> a
    com.dahuatech.app.ui.barcode.CaptureActivity activity -> b
    com.google.zxing.MultiFormatReader multiFormatReader -> c
    boolean running -> d
    void handleMessage(android.os.Message) -> handleMessage
    void decode(byte[],int,int) -> a
    void bundleThumbnail(com.google.zxing.PlanarYUVLuminanceSource,android.os.Bundle) -> a
    void setHints(java.util.Hashtable) -> a
com.zxing.decoding.DecodeThread -> com.zxing.decoding.DecodeThread:
    java.lang.String BARCODE_BITMAP -> BARCODE_BITMAP
    java.lang.String BARCODE_SCALED_FACTOR -> BARCODE_SCALED_FACTOR
    com.dahuatech.app.ui.barcode.CaptureActivity activity -> d
    java.util.Hashtable hints -> e
    android.os.Handler handler -> f
    java.util.concurrent.CountDownLatch handlerInitLatch -> g
    java.util.Collection PRODUCT_FORMATS -> a
    java.util.Collection ONE_D_FORMATS -> ONE_D_FORMATS
    java.util.Collection QR_CODE_FORMATS -> b
    java.util.Collection DATA_MATRIX_FORMATS -> c
    android.os.Handler getHandler() -> a
    void run() -> run
    void setDecodeFormats(java.util.Vector) -> setDecodeFormats
com.zxing.decoding.DefaultAsyncTaskExecInterface -> com.zxing.decoding.DefaultAsyncTaskExecInterface:
    void execute(android.os.AsyncTask,java.lang.Object[]) -> execute
com.zxing.decoding.FinishListener -> com.zxing.decoding.FinishListener:
    android.app.Activity activityToFinish -> a
    void onCancel(android.content.DialogInterface) -> onCancel
    void onClick(android.content.DialogInterface,int) -> onClick
    void run() -> a
com.zxing.decoding.InactivityTimer -> com.zxing.decoding.InactivityTimer:
    java.lang.String TAG -> a
    android.app.Activity activity -> b
    com.zxing.decoding.AsyncTaskExecInterface taskExec -> c
    android.content.BroadcastReceiver powerStatusReceiver -> d
    com.zxing.decoding.InactivityTimer$InactivityAsyncTask inactivityTask -> e
    void onActivity() -> onActivity
    void onPause() -> onPause
    void onResume() -> onResume
    void cancel() -> b
    void shutdown() -> shutdown
    void access$0(com.zxing.decoding.InactivityTimer) -> a
    java.lang.String access$1() -> a
    android.app.Activity access$2(com.zxing.decoding.InactivityTimer) -> b
com.zxing.decoding.InactivityTimer$InactivityAsyncTask -> aci:
    com.zxing.decoding.InactivityTimer this$0 -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.zxing.decoding.InactivityTimer$PowerStatusReceiver -> acj:
    com.zxing.decoding.InactivityTimer this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.zxing.decoding.PlatformSupportManager -> com.zxing.decoding.PlatformSupportManager:
    java.lang.String TAG -> a
    java.lang.Class managedInterface -> b
    java.lang.Object defaultImplementation -> c
    java.util.SortedMap implementations -> d
    void addImplementationClass(int,java.lang.String) -> addImplementationClass
    java.lang.Object build() -> build
com.zxing.executor.AsyncTaskExecInterface -> com.zxing.executor.AsyncTaskExecInterface:
    void execute(android.os.AsyncTask,java.lang.Object[]) -> execute
com.zxing.executor.AsyncTaskExecManager -> com.zxing.executor.AsyncTaskExecManager:
com.zxing.executor.DefaultAsyncTaskExecInterface -> com.zxing.executor.DefaultAsyncTaskExecInterface:
    void execute(android.os.AsyncTask,java.lang.Object[]) -> execute
com.zxing.executor.PlatformSupportManager -> com.zxing.executor.PlatformSupportManager:
    java.lang.String TAG -> a
    java.lang.Class managedInterface -> b
    java.lang.Object defaultImplementation -> c
    java.util.SortedMap implementations -> d
    void addImplementationClass(int,java.lang.String) -> addImplementationClass
    java.lang.Object build() -> build
com.zxing.executor.ResultHandler -> com.zxing.executor.ResultHandler:
    java.lang.String TAG -> a
    com.google.zxing.client.result.ParsedResult result -> b
    android.app.Activity activity -> c
    com.google.zxing.Result rawResult -> d
    com.google.zxing.client.result.ParsedResult getResult() -> getResult
    void handleDeal(int) -> handleDeal
    java.lang.CharSequence getDisplayContents() -> getDisplayContents
    int getDisplayTitle() -> getDisplayTitle
    com.google.zxing.client.result.ParsedResultType getType() -> getType
    void openURL(java.lang.String) -> a
    void webSearch(java.lang.String) -> b
    void rawLaunchIntent(android.content.Intent) -> a
    void launchIntent(android.content.Intent) -> b
com.zxing.executor.ResultHandlerFactory -> com.zxing.executor.ResultHandlerFactory:
    int[] $SWITCH_TABLE$com$google$zxing$client$result$ParsedResultType -> a
    com.zxing.executor.ResultHandler makeResultHandler(com.dahuatech.app.ui.barcode.CaptureActivity,com.google.zxing.Result) -> makeResultHandler
    com.google.zxing.client.result.ParsedResult parseResult(com.google.zxing.Result) -> a
    int[] $SWITCH_TABLE$com$google$zxing$client$result$ParsedResultType() -> a
com.zxing.executor.TextResultHandler -> com.zxing.executor.TextResultHandler:
    void handleDeal(int) -> handleDeal
    int getDisplayTitle() -> getDisplayTitle
com.zxing.executor.URIResultHandler -> com.zxing.executor.URIResultHandler:
    java.lang.String[] SECURE_PROTOCOLS -> a
    void handleDeal(int) -> handleDeal
    int getDisplayTitle() -> getDisplayTitle
com.zxing.view.ViewfinderResultPointCallback -> com.zxing.view.ViewfinderResultPointCallback:
    com.zxing.view.ViewfinderView viewfinderView -> a
    void foundPossibleResultPoint(com.google.zxing.ResultPoint) -> foundPossibleResultPoint
com.zxing.view.ViewfinderView -> com.zxing.view.ViewfinderView:
    int ScreenRate -> a
    float density -> b
    android.graphics.Paint paint -> c
    int slideTop -> d
    boolean isFirst -> e
    com.zxing.camera.CameraManager cameraManager -> f
    android.graphics.Bitmap resultBitmap -> g
    int maskColor -> h
    int resultColor -> i
    int resultPointColor -> j
    java.util.List possibleResultPoints -> k
    java.util.List lastPossibleResultPoints -> l
    void setCameraManager(com.zxing.camera.CameraManager) -> setCameraManager
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawViewfinder() -> drawViewfinder
    void drawResultBitmap(android.graphics.Bitmap) -> drawResultBitmap
    void addPossibleResultPoint(com.google.zxing.ResultPoint) -> addPossibleResultPoint
